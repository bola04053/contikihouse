                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8804 (Aug  6 2013) (Linux)
                                      4 ; This file was generated Mon Aug 25 04:16:30 2014
                                      5 ;--------------------------------------------------------
                                      6 	.module ctimer
                                      7 	.optsdcc -mmcs51 --model-huge
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _list_remove
                                     13 	.globl _list_add
                                     14 	.globl _list_head
                                     15 	.globl _list_init
                                     16 	.globl _etimer_stop
                                     17 	.globl _etimer_expired
                                     18 	.globl _etimer_restart
                                     19 	.globl _etimer_reset
                                     20 	.globl _etimer_set
                                     21 	.globl _process_start
                                     22 	.globl _ACTIVE
                                     23 	.globl _TX_BYTE
                                     24 	.globl _RX_BYTE
                                     25 	.globl _ERR
                                     26 	.globl _FE
                                     27 	.globl _SLAVE
                                     28 	.globl _RE
                                     29 	.globl _MODE
                                     30 	.globl _T3OVFIF
                                     31 	.globl _T3CH0IF
                                     32 	.globl _T3CH1IF
                                     33 	.globl _T4OVFIF
                                     34 	.globl _T4CH0IF
                                     35 	.globl _T4CH1IF
                                     36 	.globl _OVFIM
                                     37 	.globl _B_0
                                     38 	.globl _B_1
                                     39 	.globl _B_2
                                     40 	.globl _B_3
                                     41 	.globl _B_4
                                     42 	.globl _B_5
                                     43 	.globl _B_6
                                     44 	.globl _B_7
                                     45 	.globl _P2IF
                                     46 	.globl _UTX0IF
                                     47 	.globl _UTX1IF
                                     48 	.globl _P1IF
                                     49 	.globl _WDTIF
                                     50 	.globl _ACC_0
                                     51 	.globl _ACC_1
                                     52 	.globl _ACC_2
                                     53 	.globl _ACC_3
                                     54 	.globl _ACC_4
                                     55 	.globl _ACC_5
                                     56 	.globl _ACC_6
                                     57 	.globl _ACC_7
                                     58 	.globl _P
                                     59 	.globl _F1
                                     60 	.globl _OV
                                     61 	.globl _RS0
                                     62 	.globl _RS1
                                     63 	.globl _F0
                                     64 	.globl _AC
                                     65 	.globl _CY
                                     66 	.globl _DMAIF
                                     67 	.globl _T1IF
                                     68 	.globl _T2IF
                                     69 	.globl _T3IF
                                     70 	.globl _T4IF
                                     71 	.globl _P0IF
                                     72 	.globl _STIF
                                     73 	.globl _DMAIE
                                     74 	.globl _T1IE
                                     75 	.globl _T2IE
                                     76 	.globl _T3IE
                                     77 	.globl _T4IE
                                     78 	.globl _P0IE
                                     79 	.globl _RFERRIE
                                     80 	.globl _ADCIE
                                     81 	.globl _URX0IE
                                     82 	.globl _URX1IE
                                     83 	.globl _ENCIE
                                     84 	.globl _STIE
                                     85 	.globl _EA
                                     86 	.globl _P2_0
                                     87 	.globl _P2_1
                                     88 	.globl _P2_2
                                     89 	.globl _P2_3
                                     90 	.globl _P2_4
                                     91 	.globl _P2_5
                                     92 	.globl _P2_6
                                     93 	.globl _P2_7
                                     94 	.globl _ENCIF_0
                                     95 	.globl _ENCIF_1
                                     96 	.globl _P1_0
                                     97 	.globl _P1_1
                                     98 	.globl _P1_2
                                     99 	.globl _P1_3
                                    100 	.globl _P1_4
                                    101 	.globl _P1_5
                                    102 	.globl _P1_6
                                    103 	.globl _P1_7
                                    104 	.globl _IT0
                                    105 	.globl _RFERRIF
                                    106 	.globl _IT1
                                    107 	.globl _URX0IF
                                    108 	.globl _ADCIF
                                    109 	.globl _URX1IF
                                    110 	.globl _P0_0
                                    111 	.globl _P0_1
                                    112 	.globl _P0_2
                                    113 	.globl _P0_3
                                    114 	.globl _P0_4
                                    115 	.globl _P0_5
                                    116 	.globl _P0_6
                                    117 	.globl _P0_7
                                    118 	.globl _WDCTL
                                    119 	.globl _U1GCR
                                    120 	.globl _U1UCR
                                    121 	.globl _U1BAUD
                                    122 	.globl _U1DBUF
                                    123 	.globl _U1CSR
                                    124 	.globl _U0GCR
                                    125 	.globl _U0UCR
                                    126 	.globl _U0BAUD
                                    127 	.globl _U0DBUF
                                    128 	.globl _U0CSR
                                    129 	.globl _TIMIF
                                    130 	.globl _T4CC1
                                    131 	.globl _T4CCTL1
                                    132 	.globl _T4CC0
                                    133 	.globl _T4CCTL0
                                    134 	.globl _T4CTL
                                    135 	.globl _T4CNT
                                    136 	.globl _T3CC1
                                    137 	.globl _T3CCTL1
                                    138 	.globl _T3CC0
                                    139 	.globl _T3CCTL0
                                    140 	.globl _T3CTL
                                    141 	.globl _T3CNT
                                    142 	.globl _T2MSEL
                                    143 	.globl _T2IRQM
                                    144 	.globl _T2MOVF2
                                    145 	.globl _T2MOVF1
                                    146 	.globl _T2MOVF0
                                    147 	.globl _T2M1
                                    148 	.globl _T2M0
                                    149 	.globl _T2IRQF
                                    150 	.globl _T2EVTCFG
                                    151 	.globl _T2CTRL
                                    152 	.globl _T1STAT
                                    153 	.globl _T1CCTL2
                                    154 	.globl _T1CCTL1
                                    155 	.globl _T1CCTL0
                                    156 	.globl _T1CTL
                                    157 	.globl _T1CNTH
                                    158 	.globl _T1CNTL
                                    159 	.globl _T1CC2H
                                    160 	.globl _T1CC2L
                                    161 	.globl _T1CC1H
                                    162 	.globl _T1CC1L
                                    163 	.globl _T1CC0H
                                    164 	.globl _T1CC0L
                                    165 	.globl _CLKCONSTA
                                    166 	.globl _CLKCONCMD
                                    167 	.globl _SLEEPSTA
                                    168 	.globl _SLEEPCMD
                                    169 	.globl _STLOAD
                                    170 	.globl _ST2
                                    171 	.globl _ST1
                                    172 	.globl _ST0
                                    173 	.globl _RFERRF
                                    174 	.globl _RFIRQF0
                                    175 	.globl _RFST
                                    176 	.globl _RFD
                                    177 	.globl _RFIRQF1
                                    178 	.globl _PSBANK
                                    179 	.globl _FMAP
                                    180 	.globl _MEMCTR
                                    181 	.globl __XPAGE
                                    182 	.globl _MPAGE
                                    183 	.globl _PMUX
                                    184 	.globl _P2DIR
                                    185 	.globl _P1DIR
                                    186 	.globl _P0DIR
                                    187 	.globl _P2INP
                                    188 	.globl _P1INP
                                    189 	.globl _P2SEL
                                    190 	.globl _P1SEL
                                    191 	.globl _P0SEL
                                    192 	.globl _APCFG
                                    193 	.globl _PERCFG
                                    194 	.globl _P0INP
                                    195 	.globl _P2IEN
                                    196 	.globl _P1IEN
                                    197 	.globl _P0IEN
                                    198 	.globl _PICTL
                                    199 	.globl _P2IFG
                                    200 	.globl _P1IFG
                                    201 	.globl _P0IFG
                                    202 	.globl _DMAREQ
                                    203 	.globl _DMAARM
                                    204 	.globl _DMA0CFGH
                                    205 	.globl _DMA0CFGL
                                    206 	.globl _DMA1CFGH
                                    207 	.globl _DMA1CFGL
                                    208 	.globl _DMAIRQ
                                    209 	.globl _ENCCS
                                    210 	.globl _ENCDO
                                    211 	.globl _ENCDI
                                    212 	.globl _RNDH
                                    213 	.globl _RNDL
                                    214 	.globl _ADCH
                                    215 	.globl _ADCL
                                    216 	.globl _ADCCON3
                                    217 	.globl _ADCCON2
                                    218 	.globl _ADCCON1
                                    219 	.globl _B
                                    220 	.globl _IRCON2
                                    221 	.globl _ACC
                                    222 	.globl _PSW
                                    223 	.globl _IRCON
                                    224 	.globl _IP1
                                    225 	.globl _IEN1
                                    226 	.globl _IP0
                                    227 	.globl _IEN0
                                    228 	.globl _P2
                                    229 	.globl _S1CON
                                    230 	.globl _IEN2
                                    231 	.globl _S0CON
                                    232 	.globl _DPS
                                    233 	.globl _P1
                                    234 	.globl _TCON
                                    235 	.globl _PCON
                                    236 	.globl _DPH1
                                    237 	.globl _DPL1
                                    238 	.globl _DPH0
                                    239 	.globl _DPL0
                                    240 	.globl _SP
                                    241 	.globl _P0
                                    242 	.globl _ctimer_process
                                    243 	.globl _X_IEEE_ADDR
                                    244 	.globl _X_INFOPAGE
                                    245 	.globl _X_P2DIR
                                    246 	.globl _X_P1DIR
                                    247 	.globl _X_P0DIR
                                    248 	.globl _X_U1GCR
                                    249 	.globl _X_U1UCR
                                    250 	.globl _X_U1BAUD
                                    251 	.globl _X_U1DBUF
                                    252 	.globl _X_U1CSR
                                    253 	.globl _X_P2INP
                                    254 	.globl _X_P1INP
                                    255 	.globl _X_P2SEL
                                    256 	.globl _X_P1SEL
                                    257 	.globl _X_P0SEL
                                    258 	.globl _X_APCFG
                                    259 	.globl _X_PERCFG
                                    260 	.globl _X_T4CC1
                                    261 	.globl _X_T4CCTL1
                                    262 	.globl _X_T4CC0
                                    263 	.globl _X_T4CCTL0
                                    264 	.globl _X_T4CTL
                                    265 	.globl _X_T4CNT
                                    266 	.globl _X_RFIRQF0
                                    267 	.globl _X_T1CCTL2
                                    268 	.globl _X_T1CCTL1
                                    269 	.globl _X_T1CCTL0
                                    270 	.globl _X_T1CTL
                                    271 	.globl _X_T1CNTH
                                    272 	.globl _X_T1CNTL
                                    273 	.globl _X_RFST
                                    274 	.globl _X_T1CC2H
                                    275 	.globl _X_T1CC2L
                                    276 	.globl _X_T1CC1H
                                    277 	.globl _X_T1CC1L
                                    278 	.globl _X_T1CC0H
                                    279 	.globl _X_T1CC0L
                                    280 	.globl _X_RFD
                                    281 	.globl _X_TIMIF
                                    282 	.globl _X_DMAREQ
                                    283 	.globl _X_DMAARM
                                    284 	.globl _X_DMA0CFGH
                                    285 	.globl _X_DMA0CFGL
                                    286 	.globl _X_DMA1CFGH
                                    287 	.globl _X_DMA1CFGL
                                    288 	.globl _X_DMAIRQ
                                    289 	.globl _X_T3CC1
                                    290 	.globl _X_T3CCTL1
                                    291 	.globl _X_T3CC0
                                    292 	.globl _X_T3CCTL0
                                    293 	.globl _X_T3CTL
                                    294 	.globl _X_T3CNT
                                    295 	.globl _X_WDCTL
                                    296 	.globl _X_MEMCTR
                                    297 	.globl _X_CLKCONCMD
                                    298 	.globl _X_U0GCR
                                    299 	.globl _X_U0UCR
                                    300 	.globl _X_T2MSEL
                                    301 	.globl _X_U0BAUD
                                    302 	.globl _X_U0DBUF
                                    303 	.globl _X_RFERRF
                                    304 	.globl _X_SLEEPCMD
                                    305 	.globl _X_RNDH
                                    306 	.globl _X_RNDL
                                    307 	.globl _X_ADCH
                                    308 	.globl _X_ADCL
                                    309 	.globl _X_ADCCON3
                                    310 	.globl _X_ADCCON2
                                    311 	.globl _X_ADCCON1
                                    312 	.globl _X_ENCCS
                                    313 	.globl _X_ENCDO
                                    314 	.globl _X_ENCDI
                                    315 	.globl _X_T1STAT
                                    316 	.globl _X_PMUX
                                    317 	.globl _X_STLOAD
                                    318 	.globl _X_P2IEN
                                    319 	.globl _X_P0IEN
                                    320 	.globl _X_T2IRQM
                                    321 	.globl _X_T2MOVF2
                                    322 	.globl _X_T2MOVF1
                                    323 	.globl _X_T2MOVF0
                                    324 	.globl _X_T2M1
                                    325 	.globl _X_T2M0
                                    326 	.globl _X_T2IRQF
                                    327 	.globl _X_P2
                                    328 	.globl _X_PSBANK
                                    329 	.globl _X_FMAP
                                    330 	.globl _X_CLKCONSTA
                                    331 	.globl _X_SLEEPSTA
                                    332 	.globl _X_T2EVTCFG
                                    333 	.globl _X_ST2
                                    334 	.globl _X_ST1
                                    335 	.globl _X_ST0
                                    336 	.globl _X_T2CTRL
                                    337 	.globl _X__XPAGE
                                    338 	.globl _X_MPAGE
                                    339 	.globl _X_RFIRQF1
                                    340 	.globl _X_P1
                                    341 	.globl _X_P0INP
                                    342 	.globl _X_P1IEN
                                    343 	.globl _X_PICTL
                                    344 	.globl _X_P2IFG
                                    345 	.globl _X_P1IFG
                                    346 	.globl _X_P0IFG
                                    347 	.globl _X_U0CSR
                                    348 	.globl _X_P0
                                    349 	.globl _USBF5
                                    350 	.globl _USBF4
                                    351 	.globl _USBF3
                                    352 	.globl _USBF2
                                    353 	.globl _USBF1
                                    354 	.globl _USBF0
                                    355 	.globl _USBCNTH
                                    356 	.globl _USBCNTL
                                    357 	.globl _USBCNT0
                                    358 	.globl _USBCSOH
                                    359 	.globl _USBCSOL
                                    360 	.globl _USBMAXO
                                    361 	.globl _USBCSIH
                                    362 	.globl _USBCSIL
                                    363 	.globl _USBCS0
                                    364 	.globl _USBMAXI
                                    365 	.globl _USBCTRL
                                    366 	.globl _USBINDEX
                                    367 	.globl _USBFRMH
                                    368 	.globl _USBFRML
                                    369 	.globl _USBCIE
                                    370 	.globl _USBOIE
                                    371 	.globl _USBIIE
                                    372 	.globl _USBCIF
                                    373 	.globl _USBOIF
                                    374 	.globl _USBIIF
                                    375 	.globl _USBPOW
                                    376 	.globl _USBADDR
                                    377 	.globl _CSPT
                                    378 	.globl _CSPZ
                                    379 	.globl _CSPY
                                    380 	.globl _CSPX
                                    381 	.globl _CSPSTAT
                                    382 	.globl _CSPCTRL
                                    383 	.globl _CSPPROG23
                                    384 	.globl _CSPPROG22
                                    385 	.globl _CSPPROG21
                                    386 	.globl _CSPPROG20
                                    387 	.globl _CSPPROG19
                                    388 	.globl _CSPPROG18
                                    389 	.globl _CSPPROG17
                                    390 	.globl _CSPPROG16
                                    391 	.globl _CSPPROG15
                                    392 	.globl _CSPPROG14
                                    393 	.globl _CSPPROG13
                                    394 	.globl _CSPPROG12
                                    395 	.globl _CSPPROG11
                                    396 	.globl _CSPPROG10
                                    397 	.globl _CSPPROG9
                                    398 	.globl _CSPPROG8
                                    399 	.globl _CSPPROG7
                                    400 	.globl _CSPPROG6
                                    401 	.globl _CSPPROG5
                                    402 	.globl _CSPPROG4
                                    403 	.globl _CSPPROG3
                                    404 	.globl _CSPPROG2
                                    405 	.globl _CSPPROG1
                                    406 	.globl _CSPPROG0
                                    407 	.globl _RFC_OBS_CTRL2
                                    408 	.globl _RFC_OBS_CTRL1
                                    409 	.globl _RFC_OBS_CTRL0
                                    410 	.globl _TXFILTCFG
                                    411 	.globl _PTEST1
                                    412 	.globl _PTEST0
                                    413 	.globl _ATEST
                                    414 	.globl _DACTEST2
                                    415 	.globl _DACTEST1
                                    416 	.globl _DACTEST0
                                    417 	.globl _MDMTEST1
                                    418 	.globl _MDMTEST0
                                    419 	.globl _ADCTEST2
                                    420 	.globl _ADCTEST1
                                    421 	.globl _ADCTEST0
                                    422 	.globl _AGCCTRL3
                                    423 	.globl _AGCCTRL2
                                    424 	.globl _AGCCTRL1
                                    425 	.globl _AGCCTRL0
                                    426 	.globl _FSCAL3
                                    427 	.globl _FSCAL2
                                    428 	.globl _FSCAL1
                                    429 	.globl _FSCAL0
                                    430 	.globl _FSCTRL
                                    431 	.globl _RXCTRL
                                    432 	.globl _FREQEST
                                    433 	.globl _MDMCTRL1
                                    434 	.globl _MDMCTRL0
                                    435 	.globl _RFRND
                                    436 	.globl _RFERRM
                                    437 	.globl _RFIRQM1
                                    438 	.globl _RFIRQM0
                                    439 	.globl _TXLAST_PTR
                                    440 	.globl _TXFIRST_PTR
                                    441 	.globl _RXP1_PTR
                                    442 	.globl _RXLAST_PTR
                                    443 	.globl _RXFIRST_PTR
                                    444 	.globl _TXFIFOCNT
                                    445 	.globl _RXFIFOCNT
                                    446 	.globl _RXFIRST
                                    447 	.globl _RSSISTAT
                                    448 	.globl _RSSI
                                    449 	.globl _CCACTRL1
                                    450 	.globl _CCACTRL0
                                    451 	.globl _FSMCTRL
                                    452 	.globl _FIFOPCTRL
                                    453 	.globl _FSMSTAT1
                                    454 	.globl _FSMSTAT0
                                    455 	.globl _TXCTRL
                                    456 	.globl _TXPOWER
                                    457 	.globl _FREQCTRL
                                    458 	.globl _FREQTUNE
                                    459 	.globl _RXMASKCLR
                                    460 	.globl _RXMASKSET
                                    461 	.globl _RXENABLE
                                    462 	.globl _FRMCTRL1
                                    463 	.globl _FRMCTRL0
                                    464 	.globl _SRCEXTEN2
                                    465 	.globl _SRCEXTEN1
                                    466 	.globl _SRCEXTEN0
                                    467 	.globl _SRCSHORTEN2
                                    468 	.globl _SRCSHORTEN1
                                    469 	.globl _SRCSHORTEN0
                                    470 	.globl _SRCMATCH
                                    471 	.globl _FRMFILT1
                                    472 	.globl _FRMFILT0
                                    473 	.globl _SHORT_ADDR1
                                    474 	.globl _SHORT_ADDR0
                                    475 	.globl _PAN_ID1
                                    476 	.globl _PAN_ID0
                                    477 	.globl _EXT_ADDR7
                                    478 	.globl _EXT_ADDR6
                                    479 	.globl _EXT_ADDR5
                                    480 	.globl _EXT_ADDR4
                                    481 	.globl _EXT_ADDR3
                                    482 	.globl _EXT_ADDR2
                                    483 	.globl _EXT_ADDR1
                                    484 	.globl _EXT_ADDR0
                                    485 	.globl _SRCSHORTPENDEN2
                                    486 	.globl _SRCSHORTPENDEN1
                                    487 	.globl _SRCSHORTPENDEN0
                                    488 	.globl _SRCEXTPENDEN2
                                    489 	.globl _SRCEXTPENDEN1
                                    490 	.globl _SRCEXTPENDEN0
                                    491 	.globl _SRCRESINDEX
                                    492 	.globl _SRCRESMASK2
                                    493 	.globl _SRCRESMASK1
                                    494 	.globl _SRCRESMASK0
                                    495 	.globl _SRC_ADDR_TABLE
                                    496 	.globl _TXFIFO
                                    497 	.globl _RXFIFO
                                    498 	.globl _RFCORE_RAM
                                    499 	.globl _CMPCTL
                                    500 	.globl _OPAMPS
                                    501 	.globl _OPAMPC
                                    502 	.globl _STCV2
                                    503 	.globl _STCV1
                                    504 	.globl _STCV0
                                    505 	.globl _STCS
                                    506 	.globl _STCC
                                    507 	.globl _T1CC4H
                                    508 	.globl _T1CC4L
                                    509 	.globl _T1CC3H
                                    510 	.globl _T1CC3L
                                    511 	.globl _XX_T1CC2H
                                    512 	.globl _XX_T1CC2L
                                    513 	.globl _XX_T1CC1H
                                    514 	.globl _XX_T1CC1L
                                    515 	.globl _XX_T1CC0H
                                    516 	.globl _XX_T1CC0L
                                    517 	.globl _T1CCTL4
                                    518 	.globl _T1CCTL3
                                    519 	.globl _XX_T1CCTL2
                                    520 	.globl _XX_T1CCTL1
                                    521 	.globl _XX_T1CCTL0
                                    522 	.globl _CLD
                                    523 	.globl _IRCTL
                                    524 	.globl _CHIPINFO1
                                    525 	.globl _CHIPINFO0
                                    526 	.globl _FWDATA
                                    527 	.globl _FADDRH
                                    528 	.globl _FADDRL
                                    529 	.globl _FCTL
                                    530 	.globl _IVCTRL
                                    531 	.globl _BATTMON
                                    532 	.globl _SRCRC
                                    533 	.globl _DBGDATA
                                    534 	.globl _TESTREG0
                                    535 	.globl _CHIPID
                                    536 	.globl _CHVER
                                    537 	.globl _OBSSEL5
                                    538 	.globl _OBSSEL4
                                    539 	.globl _OBSSEL3
                                    540 	.globl _OBSSEL2
                                    541 	.globl _OBSSEL1
                                    542 	.globl _OBSSEL0
                                    543 	.globl _I2CIO
                                    544 	.globl _I2CWC
                                    545 	.globl _I2CADDR
                                    546 	.globl _I2CDATA
                                    547 	.globl _I2CSTAT
                                    548 	.globl _I2CCFG
                                    549 	.globl _OPAMPMC
                                    550 	.globl _MONMUX
                                    551 	.globl _ctimer_init
                                    552 	.globl _ctimer_set
                                    553 	.globl _ctimer_reset
                                    554 	.globl _ctimer_restart
                                    555 	.globl _ctimer_stop
                                    556 	.globl _ctimer_expired
                                    557 ;--------------------------------------------------------
                                    558 ; special function registers
                                    559 ;--------------------------------------------------------
                                    560 	.area RSEG    (ABS,DATA)
      000000                        561 	.org 0x0000
                           000080   562 _P0	=	0x0080
                           000081   563 _SP	=	0x0081
                           000082   564 _DPL0	=	0x0082
                           000083   565 _DPH0	=	0x0083
                           000084   566 _DPL1	=	0x0084
                           000085   567 _DPH1	=	0x0085
                           000087   568 _PCON	=	0x0087
                           000088   569 _TCON	=	0x0088
                           000090   570 _P1	=	0x0090
                           000092   571 _DPS	=	0x0092
                           000098   572 _S0CON	=	0x0098
                           00009A   573 _IEN2	=	0x009a
                           00009B   574 _S1CON	=	0x009b
                           0000A0   575 _P2	=	0x00a0
                           0000A8   576 _IEN0	=	0x00a8
                           0000A9   577 _IP0	=	0x00a9
                           0000B8   578 _IEN1	=	0x00b8
                           0000B9   579 _IP1	=	0x00b9
                           0000C0   580 _IRCON	=	0x00c0
                           0000D0   581 _PSW	=	0x00d0
                           0000E0   582 _ACC	=	0x00e0
                           0000E8   583 _IRCON2	=	0x00e8
                           0000F0   584 _B	=	0x00f0
                           0000B4   585 _ADCCON1	=	0x00b4
                           0000B5   586 _ADCCON2	=	0x00b5
                           0000B6   587 _ADCCON3	=	0x00b6
                           0000BA   588 _ADCL	=	0x00ba
                           0000BB   589 _ADCH	=	0x00bb
                           0000BC   590 _RNDL	=	0x00bc
                           0000BD   591 _RNDH	=	0x00bd
                           0000B1   592 _ENCDI	=	0x00b1
                           0000B2   593 _ENCDO	=	0x00b2
                           0000B3   594 _ENCCS	=	0x00b3
                           0000D1   595 _DMAIRQ	=	0x00d1
                           0000D2   596 _DMA1CFGL	=	0x00d2
                           0000D3   597 _DMA1CFGH	=	0x00d3
                           0000D4   598 _DMA0CFGL	=	0x00d4
                           0000D5   599 _DMA0CFGH	=	0x00d5
                           0000D6   600 _DMAARM	=	0x00d6
                           0000D7   601 _DMAREQ	=	0x00d7
                           000089   602 _P0IFG	=	0x0089
                           00008A   603 _P1IFG	=	0x008a
                           00008B   604 _P2IFG	=	0x008b
                           00008C   605 _PICTL	=	0x008c
                           0000AB   606 _P0IEN	=	0x00ab
                           00008D   607 _P1IEN	=	0x008d
                           0000AC   608 _P2IEN	=	0x00ac
                           00008F   609 _P0INP	=	0x008f
                           0000F1   610 _PERCFG	=	0x00f1
                           0000F2   611 _APCFG	=	0x00f2
                           0000F3   612 _P0SEL	=	0x00f3
                           0000F4   613 _P1SEL	=	0x00f4
                           0000F5   614 _P2SEL	=	0x00f5
                           0000F6   615 _P1INP	=	0x00f6
                           0000F7   616 _P2INP	=	0x00f7
                           0000FD   617 _P0DIR	=	0x00fd
                           0000FE   618 _P1DIR	=	0x00fe
                           0000FF   619 _P2DIR	=	0x00ff
                           0000AE   620 _PMUX	=	0x00ae
                           000093   621 _MPAGE	=	0x0093
                           000093   622 __XPAGE	=	0x0093
                           0000C7   623 _MEMCTR	=	0x00c7
                           00009F   624 _FMAP	=	0x009f
                           00009F   625 _PSBANK	=	0x009f
                           000091   626 _RFIRQF1	=	0x0091
                           0000D9   627 _RFD	=	0x00d9
                           0000E1   628 _RFST	=	0x00e1
                           0000E9   629 _RFIRQF0	=	0x00e9
                           0000BF   630 _RFERRF	=	0x00bf
                           000095   631 _ST0	=	0x0095
                           000096   632 _ST1	=	0x0096
                           000097   633 _ST2	=	0x0097
                           0000AD   634 _STLOAD	=	0x00ad
                           0000BE   635 _SLEEPCMD	=	0x00be
                           00009D   636 _SLEEPSTA	=	0x009d
                           0000C6   637 _CLKCONCMD	=	0x00c6
                           00009E   638 _CLKCONSTA	=	0x009e
                           0000DA   639 _T1CC0L	=	0x00da
                           0000DB   640 _T1CC0H	=	0x00db
                           0000DC   641 _T1CC1L	=	0x00dc
                           0000DD   642 _T1CC1H	=	0x00dd
                           0000DE   643 _T1CC2L	=	0x00de
                           0000DF   644 _T1CC2H	=	0x00df
                           0000E2   645 _T1CNTL	=	0x00e2
                           0000E3   646 _T1CNTH	=	0x00e3
                           0000E4   647 _T1CTL	=	0x00e4
                           0000E5   648 _T1CCTL0	=	0x00e5
                           0000E6   649 _T1CCTL1	=	0x00e6
                           0000E7   650 _T1CCTL2	=	0x00e7
                           0000AF   651 _T1STAT	=	0x00af
                           000094   652 _T2CTRL	=	0x0094
                           00009C   653 _T2EVTCFG	=	0x009c
                           0000A1   654 _T2IRQF	=	0x00a1
                           0000A2   655 _T2M0	=	0x00a2
                           0000A3   656 _T2M1	=	0x00a3
                           0000A4   657 _T2MOVF0	=	0x00a4
                           0000A5   658 _T2MOVF1	=	0x00a5
                           0000A6   659 _T2MOVF2	=	0x00a6
                           0000A7   660 _T2IRQM	=	0x00a7
                           0000C3   661 _T2MSEL	=	0x00c3
                           0000CA   662 _T3CNT	=	0x00ca
                           0000CB   663 _T3CTL	=	0x00cb
                           0000CC   664 _T3CCTL0	=	0x00cc
                           0000CD   665 _T3CC0	=	0x00cd
                           0000CE   666 _T3CCTL1	=	0x00ce
                           0000CF   667 _T3CC1	=	0x00cf
                           0000EA   668 _T4CNT	=	0x00ea
                           0000EB   669 _T4CTL	=	0x00eb
                           0000EC   670 _T4CCTL0	=	0x00ec
                           0000ED   671 _T4CC0	=	0x00ed
                           0000EE   672 _T4CCTL1	=	0x00ee
                           0000EF   673 _T4CC1	=	0x00ef
                           0000D8   674 _TIMIF	=	0x00d8
                           000086   675 _U0CSR	=	0x0086
                           0000C1   676 _U0DBUF	=	0x00c1
                           0000C2   677 _U0BAUD	=	0x00c2
                           0000C4   678 _U0UCR	=	0x00c4
                           0000C5   679 _U0GCR	=	0x00c5
                           0000F8   680 _U1CSR	=	0x00f8
                           0000F9   681 _U1DBUF	=	0x00f9
                           0000FA   682 _U1BAUD	=	0x00fa
                           0000FB   683 _U1UCR	=	0x00fb
                           0000FC   684 _U1GCR	=	0x00fc
                           0000C9   685 _WDCTL	=	0x00c9
                                    686 ;--------------------------------------------------------
                                    687 ; special function bits
                                    688 ;--------------------------------------------------------
                                    689 	.area RSEG    (ABS,DATA)
      000000                        690 	.org 0x0000
                           000087   691 _P0_7	=	0x0087
                           000086   692 _P0_6	=	0x0086
                           000085   693 _P0_5	=	0x0085
                           000084   694 _P0_4	=	0x0084
                           000083   695 _P0_3	=	0x0083
                           000082   696 _P0_2	=	0x0082
                           000081   697 _P0_1	=	0x0081
                           000080   698 _P0_0	=	0x0080
                           00008F   699 _URX1IF	=	0x008f
                           00008D   700 _ADCIF	=	0x008d
                           00008B   701 _URX0IF	=	0x008b
                           00008A   702 _IT1	=	0x008a
                           000089   703 _RFERRIF	=	0x0089
                           000088   704 _IT0	=	0x0088
                           000097   705 _P1_7	=	0x0097
                           000096   706 _P1_6	=	0x0096
                           000095   707 _P1_5	=	0x0095
                           000094   708 _P1_4	=	0x0094
                           000093   709 _P1_3	=	0x0093
                           000092   710 _P1_2	=	0x0092
                           000091   711 _P1_1	=	0x0091
                           000090   712 _P1_0	=	0x0090
                           000099   713 _ENCIF_1	=	0x0099
                           000098   714 _ENCIF_0	=	0x0098
                           0000A7   715 _P2_7	=	0x00a7
                           0000A6   716 _P2_6	=	0x00a6
                           0000A5   717 _P2_5	=	0x00a5
                           0000A4   718 _P2_4	=	0x00a4
                           0000A3   719 _P2_3	=	0x00a3
                           0000A2   720 _P2_2	=	0x00a2
                           0000A1   721 _P2_1	=	0x00a1
                           0000A0   722 _P2_0	=	0x00a0
                           0000AF   723 _EA	=	0x00af
                           0000AD   724 _STIE	=	0x00ad
                           0000AC   725 _ENCIE	=	0x00ac
                           0000AB   726 _URX1IE	=	0x00ab
                           0000AA   727 _URX0IE	=	0x00aa
                           0000A9   728 _ADCIE	=	0x00a9
                           0000A8   729 _RFERRIE	=	0x00a8
                           0000BD   730 _P0IE	=	0x00bd
                           0000BC   731 _T4IE	=	0x00bc
                           0000BB   732 _T3IE	=	0x00bb
                           0000BA   733 _T2IE	=	0x00ba
                           0000B9   734 _T1IE	=	0x00b9
                           0000B8   735 _DMAIE	=	0x00b8
                           0000C7   736 _STIF	=	0x00c7
                           0000C5   737 _P0IF	=	0x00c5
                           0000C4   738 _T4IF	=	0x00c4
                           0000C3   739 _T3IF	=	0x00c3
                           0000C2   740 _T2IF	=	0x00c2
                           0000C1   741 _T1IF	=	0x00c1
                           0000C0   742 _DMAIF	=	0x00c0
                           0000D7   743 _CY	=	0x00d7
                           0000D6   744 _AC	=	0x00d6
                           0000D5   745 _F0	=	0x00d5
                           0000D4   746 _RS1	=	0x00d4
                           0000D3   747 _RS0	=	0x00d3
                           0000D2   748 _OV	=	0x00d2
                           0000D1   749 _F1	=	0x00d1
                           0000D0   750 _P	=	0x00d0
                           0000E7   751 _ACC_7	=	0x00e7
                           0000E6   752 _ACC_6	=	0x00e6
                           0000E5   753 _ACC_5	=	0x00e5
                           0000E4   754 _ACC_4	=	0x00e4
                           0000E3   755 _ACC_3	=	0x00e3
                           0000E2   756 _ACC_2	=	0x00e2
                           0000E1   757 _ACC_1	=	0x00e1
                           0000E0   758 _ACC_0	=	0x00e0
                           0000EC   759 _WDTIF	=	0x00ec
                           0000EB   760 _P1IF	=	0x00eb
                           0000EA   761 _UTX1IF	=	0x00ea
                           0000E9   762 _UTX0IF	=	0x00e9
                           0000E8   763 _P2IF	=	0x00e8
                           0000F7   764 _B_7	=	0x00f7
                           0000F6   765 _B_6	=	0x00f6
                           0000F5   766 _B_5	=	0x00f5
                           0000F4   767 _B_4	=	0x00f4
                           0000F3   768 _B_3	=	0x00f3
                           0000F2   769 _B_2	=	0x00f2
                           0000F1   770 _B_1	=	0x00f1
                           0000F0   771 _B_0	=	0x00f0
                           0000DE   772 _OVFIM	=	0x00de
                           0000DD   773 _T4CH1IF	=	0x00dd
                           0000DC   774 _T4CH0IF	=	0x00dc
                           0000DB   775 _T4OVFIF	=	0x00db
                           0000DA   776 _T3CH1IF	=	0x00da
                           0000D9   777 _T3CH0IF	=	0x00d9
                           0000D8   778 _T3OVFIF	=	0x00d8
                           0000FF   779 _MODE	=	0x00ff
                           0000FE   780 _RE	=	0x00fe
                           0000FD   781 _SLAVE	=	0x00fd
                           0000FC   782 _FE	=	0x00fc
                           0000FB   783 _ERR	=	0x00fb
                           0000FA   784 _RX_BYTE	=	0x00fa
                           0000F9   785 _TX_BYTE	=	0x00f9
                           0000F8   786 _ACTIVE	=	0x00f8
                                    787 ;--------------------------------------------------------
                                    788 ; overlayable register banks
                                    789 ;--------------------------------------------------------
                                    790 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        791 	.ds 8
                                    792 ;--------------------------------------------------------
                                    793 ; internal ram data
                                    794 ;--------------------------------------------------------
                                    795 	.area DSEG    (DATA)
                                    796 ;--------------------------------------------------------
                                    797 ; overlayable items in internal ram 
                                    798 ;--------------------------------------------------------
                                    799 ;--------------------------------------------------------
                                    800 ; indirectly addressable internal ram data
                                    801 ;--------------------------------------------------------
                                    802 	.area ISEG    (DATA)
                                    803 ;--------------------------------------------------------
                                    804 ; absolute internal ram data
                                    805 ;--------------------------------------------------------
                                    806 	.area IABS    (ABS,DATA)
                                    807 	.area IABS    (ABS,DATA)
                                    808 ;--------------------------------------------------------
                                    809 ; bit data
                                    810 ;--------------------------------------------------------
                                    811 	.area BSEG    (BIT)
                                    812 ;--------------------------------------------------------
                                    813 ; paged external ram data
                                    814 ;--------------------------------------------------------
                                    815 	.area PSEG    (PAG,XDATA)
                                    816 ;--------------------------------------------------------
                                    817 ; external ram data
                                    818 ;--------------------------------------------------------
                                    819 	.area XSEG    (XDATA)
                           0061A6   820 _MONMUX	=	0x61a6
                           0061A6   821 _OPAMPMC	=	0x61a6
                           006230   822 _I2CCFG	=	0x6230
                           006231   823 _I2CSTAT	=	0x6231
                           006232   824 _I2CDATA	=	0x6232
                           006233   825 _I2CADDR	=	0x6233
                           006234   826 _I2CWC	=	0x6234
                           006235   827 _I2CIO	=	0x6235
                           006243   828 _OBSSEL0	=	0x6243
                           006244   829 _OBSSEL1	=	0x6244
                           006245   830 _OBSSEL2	=	0x6245
                           006246   831 _OBSSEL3	=	0x6246
                           006247   832 _OBSSEL4	=	0x6247
                           006248   833 _OBSSEL5	=	0x6248
                           006249   834 _CHVER	=	0x6249
                           00624A   835 _CHIPID	=	0x624a
                           00624B   836 _TESTREG0	=	0x624b
                           006260   837 _DBGDATA	=	0x6260
                           006262   838 _SRCRC	=	0x6262
                           006264   839 _BATTMON	=	0x6264
                           006265   840 _IVCTRL	=	0x6265
                           006270   841 _FCTL	=	0x6270
                           006271   842 _FADDRL	=	0x6271
                           006272   843 _FADDRH	=	0x6272
                           006273   844 _FWDATA	=	0x6273
                           006276   845 _CHIPINFO0	=	0x6276
                           006277   846 _CHIPINFO1	=	0x6277
                           006281   847 _IRCTL	=	0x6281
                           006290   848 _CLD	=	0x6290
                           0062A0   849 _XX_T1CCTL0	=	0x62a0
                           0062A1   850 _XX_T1CCTL1	=	0x62a1
                           0062A2   851 _XX_T1CCTL2	=	0x62a2
                           0062A3   852 _T1CCTL3	=	0x62a3
                           0062A4   853 _T1CCTL4	=	0x62a4
                           0062A6   854 _XX_T1CC0L	=	0x62a6
                           0062A7   855 _XX_T1CC0H	=	0x62a7
                           0062A8   856 _XX_T1CC1L	=	0x62a8
                           0062A9   857 _XX_T1CC1H	=	0x62a9
                           0062AA   858 _XX_T1CC2L	=	0x62aa
                           0062AB   859 _XX_T1CC2H	=	0x62ab
                           0062AC   860 _T1CC3L	=	0x62ac
                           0062AD   861 _T1CC3H	=	0x62ad
                           0062AE   862 _T1CC4L	=	0x62ae
                           0062AF   863 _T1CC4H	=	0x62af
                           0062B0   864 _STCC	=	0x62b0
                           0062B1   865 _STCS	=	0x62b1
                           0062B2   866 _STCV0	=	0x62b2
                           0062B3   867 _STCV1	=	0x62b3
                           0062B4   868 _STCV2	=	0x62b4
                           0062C0   869 _OPAMPC	=	0x62c0
                           0062C1   870 _OPAMPS	=	0x62c1
                           0062D0   871 _CMPCTL	=	0x62d0
                           006000   872 _RFCORE_RAM	=	0x6000
                           006000   873 _RXFIFO	=	0x6000
                           006080   874 _TXFIFO	=	0x6080
                           006100   875 _SRC_ADDR_TABLE	=	0x6100
                           006160   876 _SRCRESMASK0	=	0x6160
                           006161   877 _SRCRESMASK1	=	0x6161
                           006162   878 _SRCRESMASK2	=	0x6162
                           006163   879 _SRCRESINDEX	=	0x6163
                           006164   880 _SRCEXTPENDEN0	=	0x6164
                           006165   881 _SRCEXTPENDEN1	=	0x6165
                           006166   882 _SRCEXTPENDEN2	=	0x6166
                           006167   883 _SRCSHORTPENDEN0	=	0x6167
                           006168   884 _SRCSHORTPENDEN1	=	0x6168
                           006169   885 _SRCSHORTPENDEN2	=	0x6169
                           00616A   886 _EXT_ADDR0	=	0x616a
                           00616B   887 _EXT_ADDR1	=	0x616b
                           00616C   888 _EXT_ADDR2	=	0x616c
                           00616D   889 _EXT_ADDR3	=	0x616d
                           00616E   890 _EXT_ADDR4	=	0x616e
                           00616F   891 _EXT_ADDR5	=	0x616f
                           006170   892 _EXT_ADDR6	=	0x6170
                           006171   893 _EXT_ADDR7	=	0x6171
                           006172   894 _PAN_ID0	=	0x6172
                           006173   895 _PAN_ID1	=	0x6173
                           006174   896 _SHORT_ADDR0	=	0x6174
                           006175   897 _SHORT_ADDR1	=	0x6175
                           006180   898 _FRMFILT0	=	0x6180
                           006181   899 _FRMFILT1	=	0x6181
                           006182   900 _SRCMATCH	=	0x6182
                           006183   901 _SRCSHORTEN0	=	0x6183
                           006184   902 _SRCSHORTEN1	=	0x6184
                           006185   903 _SRCSHORTEN2	=	0x6185
                           006186   904 _SRCEXTEN0	=	0x6186
                           006187   905 _SRCEXTEN1	=	0x6187
                           006188   906 _SRCEXTEN2	=	0x6188
                           006189   907 _FRMCTRL0	=	0x6189
                           00618A   908 _FRMCTRL1	=	0x618a
                           00618B   909 _RXENABLE	=	0x618b
                           00618C   910 _RXMASKSET	=	0x618c
                           00618D   911 _RXMASKCLR	=	0x618d
                           00618E   912 _FREQTUNE	=	0x618e
                           00618F   913 _FREQCTRL	=	0x618f
                           006190   914 _TXPOWER	=	0x6190
                           006191   915 _TXCTRL	=	0x6191
                           006192   916 _FSMSTAT0	=	0x6192
                           006193   917 _FSMSTAT1	=	0x6193
                           006194   918 _FIFOPCTRL	=	0x6194
                           006195   919 _FSMCTRL	=	0x6195
                           006196   920 _CCACTRL0	=	0x6196
                           006197   921 _CCACTRL1	=	0x6197
                           006198   922 _RSSI	=	0x6198
                           006199   923 _RSSISTAT	=	0x6199
                           00619A   924 _RXFIRST	=	0x619a
                           00619B   925 _RXFIFOCNT	=	0x619b
                           00619C   926 _TXFIFOCNT	=	0x619c
                           00619D   927 _RXFIRST_PTR	=	0x619d
                           00619E   928 _RXLAST_PTR	=	0x619e
                           00619F   929 _RXP1_PTR	=	0x619f
                           0061A1   930 _TXFIRST_PTR	=	0x61a1
                           0061A2   931 _TXLAST_PTR	=	0x61a2
                           0061A3   932 _RFIRQM0	=	0x61a3
                           0061A4   933 _RFIRQM1	=	0x61a4
                           0061A5   934 _RFERRM	=	0x61a5
                           0061A7   935 _RFRND	=	0x61a7
                           0061A8   936 _MDMCTRL0	=	0x61a8
                           0061A9   937 _MDMCTRL1	=	0x61a9
                           0061AA   938 _FREQEST	=	0x61aa
                           0061AB   939 _RXCTRL	=	0x61ab
                           0061AC   940 _FSCTRL	=	0x61ac
                           0061AD   941 _FSCAL0	=	0x61ad
                           0061AE   942 _FSCAL1	=	0x61ae
                           0061AF   943 _FSCAL2	=	0x61af
                           0061B0   944 _FSCAL3	=	0x61b0
                           0061B1   945 _AGCCTRL0	=	0x61b1
                           0061B2   946 _AGCCTRL1	=	0x61b2
                           0061B3   947 _AGCCTRL2	=	0x61b3
                           0061B4   948 _AGCCTRL3	=	0x61b4
                           0061B5   949 _ADCTEST0	=	0x61b5
                           0061B6   950 _ADCTEST1	=	0x61b6
                           0061B7   951 _ADCTEST2	=	0x61b7
                           0061B8   952 _MDMTEST0	=	0x61b8
                           0061B9   953 _MDMTEST1	=	0x61b9
                           0061BA   954 _DACTEST0	=	0x61ba
                           0061BB   955 _DACTEST1	=	0x61bb
                           0061BC   956 _DACTEST2	=	0x61bc
                           0061BD   957 _ATEST	=	0x61bd
                           0061BE   958 _PTEST0	=	0x61be
                           0061BF   959 _PTEST1	=	0x61bf
                           0061FA   960 _TXFILTCFG	=	0x61fa
                           0061EB   961 _RFC_OBS_CTRL0	=	0x61eb
                           0061EC   962 _RFC_OBS_CTRL1	=	0x61ec
                           0061ED   963 _RFC_OBS_CTRL2	=	0x61ed
                           0061C0   964 _CSPPROG0	=	0x61c0
                           0061C1   965 _CSPPROG1	=	0x61c1
                           0061C2   966 _CSPPROG2	=	0x61c2
                           0061C3   967 _CSPPROG3	=	0x61c3
                           0061C4   968 _CSPPROG4	=	0x61c4
                           0061C5   969 _CSPPROG5	=	0x61c5
                           0061C6   970 _CSPPROG6	=	0x61c6
                           0061C7   971 _CSPPROG7	=	0x61c7
                           0061C8   972 _CSPPROG8	=	0x61c8
                           0061C9   973 _CSPPROG9	=	0x61c9
                           0061CA   974 _CSPPROG10	=	0x61ca
                           0061CB   975 _CSPPROG11	=	0x61cb
                           0061CC   976 _CSPPROG12	=	0x61cc
                           0061CD   977 _CSPPROG13	=	0x61cd
                           0061CE   978 _CSPPROG14	=	0x61ce
                           0061CF   979 _CSPPROG15	=	0x61cf
                           0061D0   980 _CSPPROG16	=	0x61d0
                           0061D1   981 _CSPPROG17	=	0x61d1
                           0061D2   982 _CSPPROG18	=	0x61d2
                           0061D3   983 _CSPPROG19	=	0x61d3
                           0061D4   984 _CSPPROG20	=	0x61d4
                           0061D5   985 _CSPPROG21	=	0x61d5
                           0061D6   986 _CSPPROG22	=	0x61d6
                           0061D7   987 _CSPPROG23	=	0x61d7
                           0061E0   988 _CSPCTRL	=	0x61e0
                           0061E1   989 _CSPSTAT	=	0x61e1
                           0061E2   990 _CSPX	=	0x61e2
                           0061E3   991 _CSPY	=	0x61e3
                           0061E4   992 _CSPZ	=	0x61e4
                           0061E5   993 _CSPT	=	0x61e5
                           006200   994 _USBADDR	=	0x6200
                           006201   995 _USBPOW	=	0x6201
                           006202   996 _USBIIF	=	0x6202
                           006204   997 _USBOIF	=	0x6204
                           006206   998 _USBCIF	=	0x6206
                           006207   999 _USBIIE	=	0x6207
                           006209  1000 _USBOIE	=	0x6209
                           00620B  1001 _USBCIE	=	0x620b
                           00620C  1002 _USBFRML	=	0x620c
                           00620D  1003 _USBFRMH	=	0x620d
                           00620E  1004 _USBINDEX	=	0x620e
                           00620F  1005 _USBCTRL	=	0x620f
                           006210  1006 _USBMAXI	=	0x6210
                           006211  1007 _USBCS0	=	0x6211
                           006211  1008 _USBCSIL	=	0x6211
                           006212  1009 _USBCSIH	=	0x6212
                           006213  1010 _USBMAXO	=	0x6213
                           006214  1011 _USBCSOL	=	0x6214
                           006215  1012 _USBCSOH	=	0x6215
                           006216  1013 _USBCNT0	=	0x6216
                           006216  1014 _USBCNTL	=	0x6216
                           006217  1015 _USBCNTH	=	0x6217
                           006220  1016 _USBF0	=	0x6220
                           006222  1017 _USBF1	=	0x6222
                           006224  1018 _USBF2	=	0x6224
                           006226  1019 _USBF3	=	0x6226
                           006228  1020 _USBF4	=	0x6228
                           00622A  1021 _USBF5	=	0x622a
                           007080  1022 _X_P0	=	0x7080
                           007086  1023 _X_U0CSR	=	0x7086
                           007089  1024 _X_P0IFG	=	0x7089
                           00708A  1025 _X_P1IFG	=	0x708a
                           00708B  1026 _X_P2IFG	=	0x708b
                           00708C  1027 _X_PICTL	=	0x708c
                           00708D  1028 _X_P1IEN	=	0x708d
                           00708F  1029 _X_P0INP	=	0x708f
                           007090  1030 _X_P1	=	0x7090
                           007091  1031 _X_RFIRQF1	=	0x7091
                           007093  1032 _X_MPAGE	=	0x7093
                           007093  1033 _X__XPAGE	=	0x7093
                           007094  1034 _X_T2CTRL	=	0x7094
                           007095  1035 _X_ST0	=	0x7095
                           007096  1036 _X_ST1	=	0x7096
                           007097  1037 _X_ST2	=	0x7097
                           00709C  1038 _X_T2EVTCFG	=	0x709c
                           00709D  1039 _X_SLEEPSTA	=	0x709d
                           00709E  1040 _X_CLKCONSTA	=	0x709e
                           00709F  1041 _X_FMAP	=	0x709f
                           00709F  1042 _X_PSBANK	=	0x709f
                           0070A0  1043 _X_P2	=	0x70a0
                           0070A1  1044 _X_T2IRQF	=	0x70a1
                           0070A2  1045 _X_T2M0	=	0x70a2
                           0070A3  1046 _X_T2M1	=	0x70a3
                           0070A4  1047 _X_T2MOVF0	=	0x70a4
                           0070A5  1048 _X_T2MOVF1	=	0x70a5
                           0070A6  1049 _X_T2MOVF2	=	0x70a6
                           0070A7  1050 _X_T2IRQM	=	0x70a7
                           0070AB  1051 _X_P0IEN	=	0x70ab
                           0070AC  1052 _X_P2IEN	=	0x70ac
                           0070AD  1053 _X_STLOAD	=	0x70ad
                           0070AE  1054 _X_PMUX	=	0x70ae
                           0070AF  1055 _X_T1STAT	=	0x70af
                           0070B1  1056 _X_ENCDI	=	0x70b1
                           0070B2  1057 _X_ENCDO	=	0x70b2
                           0070B3  1058 _X_ENCCS	=	0x70b3
                           0070B4  1059 _X_ADCCON1	=	0x70b4
                           0070B5  1060 _X_ADCCON2	=	0x70b5
                           0070B6  1061 _X_ADCCON3	=	0x70b6
                           0070BA  1062 _X_ADCL	=	0x70ba
                           0070BB  1063 _X_ADCH	=	0x70bb
                           0070BC  1064 _X_RNDL	=	0x70bc
                           0070BD  1065 _X_RNDH	=	0x70bd
                           0070BE  1066 _X_SLEEPCMD	=	0x70be
                           0070BF  1067 _X_RFERRF	=	0x70bf
                           0070C1  1068 _X_U0DBUF	=	0x70c1
                           0070C2  1069 _X_U0BAUD	=	0x70c2
                           0070C3  1070 _X_T2MSEL	=	0x70c3
                           0070C4  1071 _X_U0UCR	=	0x70c4
                           0070C5  1072 _X_U0GCR	=	0x70c5
                           0070C6  1073 _X_CLKCONCMD	=	0x70c6
                           0070C7  1074 _X_MEMCTR	=	0x70c7
                           0070C9  1075 _X_WDCTL	=	0x70c9
                           0070CA  1076 _X_T3CNT	=	0x70ca
                           0070CB  1077 _X_T3CTL	=	0x70cb
                           0070CC  1078 _X_T3CCTL0	=	0x70cc
                           0070CD  1079 _X_T3CC0	=	0x70cd
                           0070CE  1080 _X_T3CCTL1	=	0x70ce
                           0070CF  1081 _X_T3CC1	=	0x70cf
                           0070D1  1082 _X_DMAIRQ	=	0x70d1
                           0070D2  1083 _X_DMA1CFGL	=	0x70d2
                           0070D3  1084 _X_DMA1CFGH	=	0x70d3
                           0070D4  1085 _X_DMA0CFGL	=	0x70d4
                           0070D5  1086 _X_DMA0CFGH	=	0x70d5
                           0070D6  1087 _X_DMAARM	=	0x70d6
                           0070D7  1088 _X_DMAREQ	=	0x70d7
                           0070D8  1089 _X_TIMIF	=	0x70d8
                           0070D9  1090 _X_RFD	=	0x70d9
                           0070DA  1091 _X_T1CC0L	=	0x70da
                           0070DB  1092 _X_T1CC0H	=	0x70db
                           0070DC  1093 _X_T1CC1L	=	0x70dc
                           0070DD  1094 _X_T1CC1H	=	0x70dd
                           0070DE  1095 _X_T1CC2L	=	0x70de
                           0070DF  1096 _X_T1CC2H	=	0x70df
                           0070E1  1097 _X_RFST	=	0x70e1
                           0070E2  1098 _X_T1CNTL	=	0x70e2
                           0070E3  1099 _X_T1CNTH	=	0x70e3
                           0070E4  1100 _X_T1CTL	=	0x70e4
                           0070E5  1101 _X_T1CCTL0	=	0x70e5
                           0070E6  1102 _X_T1CCTL1	=	0x70e6
                           0070E7  1103 _X_T1CCTL2	=	0x70e7
                           0070E9  1104 _X_RFIRQF0	=	0x70e9
                           0070EA  1105 _X_T4CNT	=	0x70ea
                           0070EB  1106 _X_T4CTL	=	0x70eb
                           0070EC  1107 _X_T4CCTL0	=	0x70ec
                           0070ED  1108 _X_T4CC0	=	0x70ed
                           0070EE  1109 _X_T4CCTL1	=	0x70ee
                           0070EF  1110 _X_T4CC1	=	0x70ef
                           0070F1  1111 _X_PERCFG	=	0x70f1
                           0070F2  1112 _X_APCFG	=	0x70f2
                           0070F3  1113 _X_P0SEL	=	0x70f3
                           0070F4  1114 _X_P1SEL	=	0x70f4
                           0070F5  1115 _X_P2SEL	=	0x70f5
                           0070F6  1116 _X_P1INP	=	0x70f6
                           0070F7  1117 _X_P2INP	=	0x70f7
                           0070F8  1118 _X_U1CSR	=	0x70f8
                           0070F9  1119 _X_U1DBUF	=	0x70f9
                           0070FA  1120 _X_U1BAUD	=	0x70fa
                           0070FB  1121 _X_U1UCR	=	0x70fb
                           0070FC  1122 _X_U1GCR	=	0x70fc
                           0070FD  1123 _X_P0DIR	=	0x70fd
                           0070FE  1124 _X_P1DIR	=	0x70fe
                           0070FF  1125 _X_P2DIR	=	0x70ff
                           007800  1126 _X_INFOPAGE	=	0x7800
                           00780C  1127 _X_IEEE_ADDR	=	0x780c
      000000                       1128 _initialized:
      000000                       1129 	.ds 1
                                   1130 ;--------------------------------------------------------
                                   1131 ; absolute external ram data
                                   1132 ;--------------------------------------------------------
                                   1133 	.area XABS    (ABS,XDATA)
                                   1134 ;--------------------------------------------------------
                                   1135 ; external initialized ram data
                                   1136 ;--------------------------------------------------------
                                   1137 	.area XISEG   (XDATA)
      000000                       1138 _ctimer_list_list:
      000000                       1139 	.ds 3
      000003                       1140 _ctimer_list:
      000003                       1141 	.ds 3
      000006                       1142 _ctimer_process::
      000006                       1143 	.ds 10
                                   1144 	.area HOME    (CODE)
                                   1145 	.area GSINIT0 (CODE)
                                   1146 	.area GSINIT1 (CODE)
                                   1147 	.area GSINIT2 (CODE)
                                   1148 	.area GSINIT3 (CODE)
                                   1149 	.area GSINIT4 (CODE)
                                   1150 	.area GSINIT5 (CODE)
                                   1151 	.area GSINIT  (CODE)
                                   1152 	.area GSFINAL (CODE)
                                   1153 	.area CSEG    (CODE)
                                   1154 ;--------------------------------------------------------
                                   1155 ; global & static initialisations
                                   1156 ;--------------------------------------------------------
                                   1157 	.area HOME    (CODE)
                                   1158 	.area GSINIT  (CODE)
                                   1159 	.area GSFINAL (CODE)
                                   1160 	.area GSINIT  (CODE)
                                   1161 ;--------------------------------------------------------
                                   1162 ; Home
                                   1163 ;--------------------------------------------------------
                                   1164 	.area HOME    (CODE)
                                   1165 	.area HOME    (CODE)
                                   1166 ;--------------------------------------------------------
                                   1167 ; code
                                   1168 ;--------------------------------------------------------
                                   1169 	.area BANK1   (CODE)
                                   1170 ;------------------------------------------------------------
                                   1171 ;Allocation info for local variables in function 'process_thread_ctimer_process'
                                   1172 ;------------------------------------------------------------
                                   1173 ;ev                        Allocated to stack - sp -12
                                   1174 ;data                      Allocated to stack - sp -15
                                   1175 ;process_pt                Allocated to registers r5 r6 r7 
                                   1176 ;c                         Allocated to stack - sp -5
                                   1177 ;PT_YIELD_FLAG             Allocated to registers r4 
                                   1178 ;tmp_current               Allocated to stack - sp -2
                                   1179 ;sloc0                     Allocated to stack - sp -8
                                   1180 ;------------------------------------------------------------
                                   1181 ;	../../../../core/sys/ctimer.c:63: PROCESS_THREAD(ctimer_process, ev, data)
                                   1182 ;	-----------------------------------------
                                   1183 ;	 function process_thread_ctimer_process
                                   1184 ;	-----------------------------------------
      000000                       1185 _process_thread_ctimer_process:
                           000007  1186 	ar7 = 0x07
                           000006  1187 	ar6 = 0x06
                           000005  1188 	ar5 = 0x05
                           000004  1189 	ar4 = 0x04
                           000003  1190 	ar3 = 0x03
                           000002  1191 	ar2 = 0x02
                           000001  1192 	ar1 = 0x01
                           000000  1193 	ar0 = 0x00
      000000 E5 81            [12] 1194 	mov	a,sp
      000002 24 09            [12] 1195 	add	a,#0x09
      000004 F5 81            [12] 1196 	mov	sp,a
                                   1197 ;	../../../../core/sys/ctimer.c:66: PROCESS_BEGIN();
      000006 AD 82            [24] 1198 	mov	r5,dpl
      000008 AE 83            [24] 1199 	mov	r6,dph
      00000A AF F0            [24] 1200 	mov	r7,b
      00000C 7C 01            [12] 1201 	mov	r4,#0x01
      00000E 12r00r00         [24] 1202 	lcall	__gptrget
      000011 FA               [12] 1203 	mov	r2,a
      000012 A3               [24] 1204 	inc	dptr
      000013 12r00r00         [24] 1205 	lcall	__gptrget
      000016 FB               [12] 1206 	mov	r3,a
      000017 BA 00 05         [24] 1207 	cjne	r2,#0x00,00157$
      00001A BB 00 02         [24] 1208 	cjne	r3,#0x00,00157$
      00001D 80 0C            [24] 1209 	sjmp	00101$
      00001F                       1210 00157$:
      00001F BA 4A 06         [24] 1211 	cjne	r2,#0x4A,00158$
      000022 BB 00 03         [24] 1212 	cjne	r3,#0x00,00158$
      000025 02r01r27         [24] 1213 	ljmp	00103$
      000028                       1214 00158$:
      000028 02r03r1D         [24] 1215 	ljmp	00118$
      00002B                       1216 00101$:
                                   1217 ;	../../../../core/sys/ctimer.c:68: for(c = list_head(ctimer_list); c != NULL; c = c->next) {
      00002B C0 05            [24] 1218 	push	ar5
      00002D C0 06            [24] 1219 	push	ar6
      00002F C0 07            [24] 1220 	push	ar7
      000031 90r00r03         [24] 1221 	mov	dptr,#_ctimer_list
      000034 E0               [24] 1222 	movx	a,@dptr
      000035 FA               [12] 1223 	mov	r2,a
      000036 A3               [24] 1224 	inc	dptr
      000037 E0               [24] 1225 	movx	a,@dptr
      000038 FB               [12] 1226 	mov	r3,a
      000039 A3               [24] 1227 	inc	dptr
      00003A E0               [24] 1228 	movx	a,@dptr
      00003B FF               [12] 1229 	mov	r7,a
      00003C 8A 82            [24] 1230 	mov	dpl,r2
      00003E 8B 83            [24] 1231 	mov	dph,r3
      000040 8F F0            [24] 1232 	mov	b,r7
      000042 78r00            [12] 1233 	mov	r0,#_list_head
      000044 79s00            [12] 1234 	mov	r1,#(_list_head >> 8)
      000046 7As00            [12] 1235 	mov	r2,#(_list_head >> 16)
      000048 12r00r00         [24] 1236 	lcall	__sdcc_banked_call
      00004B AD 82            [24] 1237 	mov	r5,dpl
      00004D AE 83            [24] 1238 	mov	r6,dph
      00004F AF F0            [24] 1239 	mov	r7,b
      000051 E5 81            [12] 1240 	mov	a,sp
      000053 24 F8            [12] 1241 	add	a,#0xf8
      000055 F8               [12] 1242 	mov	r0,a
      000056 A6 05            [24] 1243 	mov	@r0,ar5
      000058 08               [12] 1244 	inc	r0
      000059 A6 06            [24] 1245 	mov	@r0,ar6
      00005B 08               [12] 1246 	inc	r0
      00005C A6 07            [24] 1247 	mov	@r0,ar7
                                   1248 ;	../../../../core/sys/ctimer.c:87: PROCESS_END();
      00005E D0 07            [24] 1249 	pop	ar7
      000060 D0 06            [24] 1250 	pop	ar6
      000062 D0 05            [24] 1251 	pop	ar5
                                   1252 ;	../../../../core/sys/ctimer.c:68: for(c = list_head(ctimer_list); c != NULL; c = c->next) {
      000064                       1253 00120$:
      000064 E5 81            [12] 1254 	mov	a,sp
      000066 24 FB            [12] 1255 	add	a,#0xfb
      000068 F8               [12] 1256 	mov	r0,a
      000069 E4               [12] 1257 	clr	a
      00006A C0 E0            [24] 1258 	push	acc
      00006C E4               [12] 1259 	clr	a
      00006D C0 E0            [24] 1260 	push	acc
      00006F E4               [12] 1261 	clr	a
      000070 C0 E0            [24] 1262 	push	acc
      000072 86 82            [24] 1263 	mov	dpl,@r0
      000074 08               [12] 1264 	inc	r0
      000075 86 83            [24] 1265 	mov	dph,@r0
      000077 08               [12] 1266 	inc	r0
      000078 86 F0            [24] 1267 	mov	b,@r0
      00007A 12r00r00         [24] 1268 	lcall	___gptr_cmp
      00007D 15 81            [12] 1269 	dec	sp
      00007F 15 81            [12] 1270 	dec	sp
      000081 15 81            [12] 1271 	dec	sp
      000083 70 03            [24] 1272 	jnz	00159$
      000085 02r01r0F         [24] 1273 	ljmp	00102$
      000088                       1274 00159$:
                                   1275 ;	../../../../core/sys/ctimer.c:69: etimer_set(&c->etimer, c->etimer.timer.interval);
      000088 C0 05            [24] 1276 	push	ar5
      00008A C0 06            [24] 1277 	push	ar6
      00008C C0 07            [24] 1278 	push	ar7
      00008E E5 81            [12] 1279 	mov	a,sp
      000090 24 F8            [12] 1280 	add	a,#0xf8
      000092 F8               [12] 1281 	mov	r0,a
      000093 74 03            [12] 1282 	mov	a,#0x03
      000095 26               [12] 1283 	add	a,@r0
      000096 FA               [12] 1284 	mov	r2,a
      000097 E4               [12] 1285 	clr	a
      000098 08               [12] 1286 	inc	r0
      000099 36               [12] 1287 	addc	a,@r0
      00009A FB               [12] 1288 	mov	r3,a
      00009B 08               [12] 1289 	inc	r0
      00009C 86 07            [24] 1290 	mov	ar7,@r0
      00009E 74 02            [12] 1291 	mov	a,#0x02
      0000A0 2A               [12] 1292 	add	a,r2
      0000A1 FA               [12] 1293 	mov	r2,a
      0000A2 E4               [12] 1294 	clr	a
      0000A3 3B               [12] 1295 	addc	a,r3
      0000A4 FB               [12] 1296 	mov	r3,a
      0000A5 8A 82            [24] 1297 	mov	dpl,r2
      0000A7 8B 83            [24] 1298 	mov	dph,r3
      0000A9 8F F0            [24] 1299 	mov	b,r7
      0000AB 12r00r00         [24] 1300 	lcall	__gptrget
      0000AE FA               [12] 1301 	mov	r2,a
      0000AF A3               [24] 1302 	inc	dptr
      0000B0 12r00r00         [24] 1303 	lcall	__gptrget
      0000B3 FB               [12] 1304 	mov	r3,a
      0000B4 E5 81            [12] 1305 	mov	a,sp
      0000B6 24 F8            [12] 1306 	add	a,#0xf8
      0000B8 F8               [12] 1307 	mov	r0,a
      0000B9 74 03            [12] 1308 	mov	a,#0x03
      0000BB 26               [12] 1309 	add	a,@r0
      0000BC FD               [12] 1310 	mov	r5,a
      0000BD E4               [12] 1311 	clr	a
      0000BE 08               [12] 1312 	inc	r0
      0000BF 36               [12] 1313 	addc	a,@r0
      0000C0 FE               [12] 1314 	mov	r6,a
      0000C1 08               [12] 1315 	inc	r0
      0000C2 86 07            [24] 1316 	mov	ar7,@r0
      0000C4 C0 07            [24] 1317 	push	ar7
      0000C6 C0 06            [24] 1318 	push	ar6
      0000C8 C0 05            [24] 1319 	push	ar5
      0000CA C0 02            [24] 1320 	push	ar2
      0000CC C0 03            [24] 1321 	push	ar3
      0000CE 8D 82            [24] 1322 	mov	dpl,r5
      0000D0 8E 83            [24] 1323 	mov	dph,r6
      0000D2 8F F0            [24] 1324 	mov	b,r7
      0000D4 78r00            [12] 1325 	mov	r0,#_etimer_set
      0000D6 79s00            [12] 1326 	mov	r1,#(_etimer_set >> 8)
      0000D8 7As00            [12] 1327 	mov	r2,#(_etimer_set >> 16)
      0000DA 12r00r00         [24] 1328 	lcall	__sdcc_banked_call
      0000DD 15 81            [12] 1329 	dec	sp
      0000DF 15 81            [12] 1330 	dec	sp
      0000E1 D0 05            [24] 1331 	pop	ar5
      0000E3 D0 06            [24] 1332 	pop	ar6
      0000E5 D0 07            [24] 1333 	pop	ar7
                                   1334 ;	../../../../core/sys/ctimer.c:68: for(c = list_head(ctimer_list); c != NULL; c = c->next) {
      0000E7 E5 81            [12] 1335 	mov	a,sp
      0000E9 24 F8            [12] 1336 	add	a,#0xf8
      0000EB F8               [12] 1337 	mov	r0,a
      0000EC 86 82            [24] 1338 	mov	dpl,@r0
      0000EE 08               [12] 1339 	inc	r0
      0000EF 86 83            [24] 1340 	mov	dph,@r0
      0000F1 08               [12] 1341 	inc	r0
      0000F2 86 F0            [24] 1342 	mov	b,@r0
      0000F4 12r00r00         [24] 1343 	lcall	__gptrget
      0000F7 18               [12] 1344 	dec	r0
      0000F8 18               [12] 1345 	dec	r0
      0000F9 F6               [12] 1346 	mov	@r0,a
      0000FA A3               [24] 1347 	inc	dptr
      0000FB 12r00r00         [24] 1348 	lcall	__gptrget
      0000FE 08               [12] 1349 	inc	r0
      0000FF F6               [12] 1350 	mov	@r0,a
      000100 A3               [24] 1351 	inc	dptr
      000101 12r00r00         [24] 1352 	lcall	__gptrget
      000104 08               [12] 1353 	inc	r0
      000105 F6               [12] 1354 	mov	@r0,a
      000106 D0 07            [24] 1355 	pop	ar7
      000108 D0 06            [24] 1356 	pop	ar6
      00010A D0 05            [24] 1357 	pop	ar5
      00010C 02r00r64         [24] 1358 	ljmp	00120$
      00010F                       1359 00102$:
                                   1360 ;	../../../../core/sys/ctimer.c:71: initialized = 1;
      00010F 90r00r00         [24] 1361 	mov	dptr,#_initialized
      000112 74 01            [12] 1362 	mov	a,#0x01
      000114 F0               [24] 1363 	movx	@dptr,a
                                   1364 ;	../../../../core/sys/ctimer.c:73: while(1) {
      000115                       1365 00116$:
                                   1366 ;	../../../../core/sys/ctimer.c:74: PROCESS_YIELD_UNTIL(ev == PROCESS_EVENT_TIMER);
      000115 7C 00            [12] 1367 	mov	r4,#0x00
      000117 8D 82            [24] 1368 	mov	dpl,r5
      000119 8E 83            [24] 1369 	mov	dph,r6
      00011B 8F F0            [24] 1370 	mov	b,r7
      00011D 74 4A            [12] 1371 	mov	a,#0x4A
      00011F 12r00r00         [24] 1372 	lcall	__gptrput
      000122 A3               [24] 1373 	inc	dptr
      000123 E4               [12] 1374 	clr	a
      000124 12r00r00         [24] 1375 	lcall	__gptrput
      000127                       1376 00103$:
      000127 EC               [12] 1377 	mov	a,r4
      000128 60 0A            [24] 1378 	jz	00104$
      00012A E5 81            [12] 1379 	mov	a,sp
      00012C 24 F4            [12] 1380 	add	a,#0xf4
      00012E F8               [12] 1381 	mov	r0,a
      00012F B6 88 02         [24] 1382 	cjne	@r0,#0x88,00161$
      000132 80 06            [24] 1383 	sjmp	00108$
      000134                       1384 00161$:
      000134                       1385 00104$:
      000134 75 82 01         [24] 1386 	mov	dpl,#0x01
      000137 02r03r2F         [24] 1387 	ljmp	00125$
      00013A                       1388 00108$:
                                   1389 ;	../../../../core/sys/ctimer.c:75: for(c = list_head(ctimer_list); c != NULL; c = c->next) {
      00013A 90r00r03         [24] 1390 	mov	dptr,#_ctimer_list
      00013D E0               [24] 1391 	movx	a,@dptr
      00013E FA               [12] 1392 	mov	r2,a
      00013F A3               [24] 1393 	inc	dptr
      000140 E0               [24] 1394 	movx	a,@dptr
      000141 FB               [12] 1395 	mov	r3,a
      000142 A3               [24] 1396 	inc	dptr
      000143 E0               [24] 1397 	movx	a,@dptr
      000144 FC               [12] 1398 	mov	r4,a
      000145 8A 82            [24] 1399 	mov	dpl,r2
      000147 8B 83            [24] 1400 	mov	dph,r3
      000149 8C F0            [24] 1401 	mov	b,r4
      00014B C0 07            [24] 1402 	push	ar7
      00014D C0 06            [24] 1403 	push	ar6
      00014F C0 05            [24] 1404 	push	ar5
      000151 78r00            [12] 1405 	mov	r0,#_list_head
      000153 79s00            [12] 1406 	mov	r1,#(_list_head >> 8)
      000155 7As00            [12] 1407 	mov	r2,#(_list_head >> 16)
      000157 12r00r00         [24] 1408 	lcall	__sdcc_banked_call
      00015A AA 82            [24] 1409 	mov	r2,dpl
      00015C AB 83            [24] 1410 	mov	r3,dph
      00015E AC F0            [24] 1411 	mov	r4,b
      000160 D0 05            [24] 1412 	pop	ar5
      000162 D0 06            [24] 1413 	pop	ar6
      000164 D0 07            [24] 1414 	pop	ar7
      000166 E5 81            [12] 1415 	mov	a,sp
      000168 24 FB            [12] 1416 	add	a,#0xfb
      00016A F8               [12] 1417 	mov	r0,a
      00016B A6 02            [24] 1418 	mov	@r0,ar2
      00016D 08               [12] 1419 	inc	r0
      00016E A6 03            [24] 1420 	mov	@r0,ar3
      000170 08               [12] 1421 	inc	r0
      000171 A6 04            [24] 1422 	mov	@r0,ar4
      000173                       1423 00123$:
      000173 E5 81            [12] 1424 	mov	a,sp
      000175 24 FB            [12] 1425 	add	a,#0xfb
      000177 F8               [12] 1426 	mov	r0,a
      000178 E4               [12] 1427 	clr	a
      000179 C0 E0            [24] 1428 	push	acc
      00017B E4               [12] 1429 	clr	a
      00017C C0 E0            [24] 1430 	push	acc
      00017E E4               [12] 1431 	clr	a
      00017F C0 E0            [24] 1432 	push	acc
      000181 86 82            [24] 1433 	mov	dpl,@r0
      000183 08               [12] 1434 	inc	r0
      000184 86 83            [24] 1435 	mov	dph,@r0
      000186 08               [12] 1436 	inc	r0
      000187 86 F0            [24] 1437 	mov	b,@r0
      000189 12r00r00         [24] 1438 	lcall	___gptr_cmp
      00018C 15 81            [12] 1439 	dec	sp
      00018E 15 81            [12] 1440 	dec	sp
      000190 15 81            [12] 1441 	dec	sp
      000192 60 81            [24] 1442 	jz	00116$
                                   1443 ;	../../../../core/sys/ctimer.c:76: if(&c->etimer == data) {
      000194 C0 05            [24] 1444 	push	ar5
      000196 C0 06            [24] 1445 	push	ar6
      000198 C0 07            [24] 1446 	push	ar7
      00019A E5 81            [12] 1447 	mov	a,sp
      00019C 24 F8            [12] 1448 	add	a,#0xf8
      00019E F8               [12] 1449 	mov	r0,a
      00019F 74 03            [12] 1450 	mov	a,#0x03
      0001A1 26               [12] 1451 	add	a,@r0
      0001A2 FA               [12] 1452 	mov	r2,a
      0001A3 E4               [12] 1453 	clr	a
      0001A4 08               [12] 1454 	inc	r0
      0001A5 36               [12] 1455 	addc	a,@r0
      0001A6 FB               [12] 1456 	mov	r3,a
      0001A7 08               [12] 1457 	inc	r0
      0001A8 86 04            [24] 1458 	mov	ar4,@r0
      0001AA E5 81            [12] 1459 	mov	a,sp
      0001AC 24 EE            [12] 1460 	add	a,#0xee
      0001AE F8               [12] 1461 	mov	r0,a
      0001AF 86 05            [24] 1462 	mov	ar5,@r0
      0001B1 08               [12] 1463 	inc	r0
      0001B2 86 06            [24] 1464 	mov	ar6,@r0
      0001B4 08               [12] 1465 	inc	r0
      0001B5 86 07            [24] 1466 	mov	ar7,@r0
      0001B7 C0 05            [24] 1467 	push	ar5
      0001B9 C0 06            [24] 1468 	push	ar6
      0001BB C0 07            [24] 1469 	push	ar7
      0001BD 8A 82            [24] 1470 	mov	dpl,r2
      0001BF 8B 83            [24] 1471 	mov	dph,r3
      0001C1 8C F0            [24] 1472 	mov	b,r4
      0001C3 12r00r00         [24] 1473 	lcall	___gptr_cmp
      0001C6 15 81            [12] 1474 	dec	sp
      0001C8 15 81            [12] 1475 	dec	sp
      0001CA 15 81            [12] 1476 	dec	sp
      0001CC 60 09            [24] 1477 	jz	00164$
      0001CE D0 07            [24] 1478 	pop	ar7
      0001D0 D0 06            [24] 1479 	pop	ar6
      0001D2 D0 05            [24] 1480 	pop	ar5
      0001D4 02r02rFB         [24] 1481 	ljmp	00124$
      0001D7                       1482 00164$:
                                   1483 ;	../../../../core/sys/ctimer.c:77: list_remove(ctimer_list, c);
      0001D7 E5 81            [12] 1484 	mov	a,sp
      0001D9 24 F8            [12] 1485 	add	a,#0xf8
      0001DB F8               [12] 1486 	mov	r0,a
      0001DC 86 02            [24] 1487 	mov	ar2,@r0
      0001DE 08               [12] 1488 	inc	r0
      0001DF 86 03            [24] 1489 	mov	ar3,@r0
      0001E1 08               [12] 1490 	inc	r0
      0001E2 86 04            [24] 1491 	mov	ar4,@r0
      0001E4 90r00r03         [24] 1492 	mov	dptr,#_ctimer_list
      0001E7 E0               [24] 1493 	movx	a,@dptr
      0001E8 FD               [12] 1494 	mov	r5,a
      0001E9 A3               [24] 1495 	inc	dptr
      0001EA E0               [24] 1496 	movx	a,@dptr
      0001EB FE               [12] 1497 	mov	r6,a
      0001EC A3               [24] 1498 	inc	dptr
      0001ED E0               [24] 1499 	movx	a,@dptr
      0001EE FF               [12] 1500 	mov	r7,a
      0001EF C0 07            [24] 1501 	push	ar7
      0001F1 C0 06            [24] 1502 	push	ar6
      0001F3 C0 05            [24] 1503 	push	ar5
      0001F5 C0 02            [24] 1504 	push	ar2
      0001F7 C0 03            [24] 1505 	push	ar3
      0001F9 C0 04            [24] 1506 	push	ar4
      0001FB 8D 82            [24] 1507 	mov	dpl,r5
      0001FD 8E 83            [24] 1508 	mov	dph,r6
      0001FF 8F F0            [24] 1509 	mov	b,r7
      000201 78r00            [12] 1510 	mov	r0,#_list_remove
      000203 79s00            [12] 1511 	mov	r1,#(_list_remove >> 8)
      000205 7As00            [12] 1512 	mov	r2,#(_list_remove >> 16)
      000207 12r00r00         [24] 1513 	lcall	__sdcc_banked_call
      00020A 15 81            [12] 1514 	dec	sp
      00020C 15 81            [12] 1515 	dec	sp
      00020E 15 81            [12] 1516 	dec	sp
      000210 D0 05            [24] 1517 	pop	ar5
      000212 D0 06            [24] 1518 	pop	ar6
      000214 D0 07            [24] 1519 	pop	ar7
                                   1520 ;	../../../../core/sys/ctimer.c:78: PROCESS_CONTEXT_BEGIN(c->p);
      000216 90r00r00         [24] 1521 	mov	dptr,#_process_current
      000219 E0               [24] 1522 	movx	a,@dptr
      00021A FD               [12] 1523 	mov	r5,a
      00021B A3               [24] 1524 	inc	dptr
      00021C E0               [24] 1525 	movx	a,@dptr
      00021D FE               [12] 1526 	mov	r6,a
      00021E A3               [24] 1527 	inc	dptr
      00021F E0               [24] 1528 	movx	a,@dptr
      000220 FF               [12] 1529 	mov	r7,a
      000221 E5 81            [12] 1530 	mov	a,sp
      000223 24 FB            [12] 1531 	add	a,#0xfb
      000225 F8               [12] 1532 	mov	r0,a
      000226 A6 05            [24] 1533 	mov	@r0,ar5
      000228 08               [12] 1534 	inc	r0
      000229 A6 06            [24] 1535 	mov	@r0,ar6
      00022B 08               [12] 1536 	inc	r0
      00022C A6 07            [24] 1537 	mov	@r0,ar7
      00022E E5 81            [12] 1538 	mov	a,sp
      000230 24 F8            [12] 1539 	add	a,#0xf8
      000232 F8               [12] 1540 	mov	r0,a
      000233 74 0D            [12] 1541 	mov	a,#0x0D
      000235 26               [12] 1542 	add	a,@r0
      000236 FD               [12] 1543 	mov	r5,a
      000237 E4               [12] 1544 	clr	a
      000238 08               [12] 1545 	inc	r0
      000239 36               [12] 1546 	addc	a,@r0
      00023A FE               [12] 1547 	mov	r6,a
      00023B 08               [12] 1548 	inc	r0
      00023C 86 07            [24] 1549 	mov	ar7,@r0
      00023E 8D 82            [24] 1550 	mov	dpl,r5
      000240 8E 83            [24] 1551 	mov	dph,r6
      000242 8F F0            [24] 1552 	mov	b,r7
      000244 12r00r00         [24] 1553 	lcall	__gptrget
      000247 FD               [12] 1554 	mov	r5,a
      000248 A3               [24] 1555 	inc	dptr
      000249 12r00r00         [24] 1556 	lcall	__gptrget
      00024C FE               [12] 1557 	mov	r6,a
      00024D A3               [24] 1558 	inc	dptr
      00024E 12r00r00         [24] 1559 	lcall	__gptrget
      000251 FF               [12] 1560 	mov	r7,a
      000252 90r00r00         [24] 1561 	mov	dptr,#_process_current
      000255 ED               [12] 1562 	mov	a,r5
      000256 F0               [24] 1563 	movx	@dptr,a
      000257 EE               [12] 1564 	mov	a,r6
      000258 A3               [24] 1565 	inc	dptr
      000259 F0               [24] 1566 	movx	@dptr,a
      00025A EF               [12] 1567 	mov	a,r7
      00025B A3               [24] 1568 	inc	dptr
      00025C F0               [24] 1569 	movx	@dptr,a
                                   1570 ;	../../../../core/sys/ctimer.c:79: if(c->f != NULL) {
      00025D E5 81            [12] 1571 	mov	a,sp
      00025F 24 F8            [12] 1572 	add	a,#0xf8
      000261 F8               [12] 1573 	mov	r0,a
      000262 74 10            [12] 1574 	mov	a,#0x10
      000264 26               [12] 1575 	add	a,@r0
      000265 FD               [12] 1576 	mov	r5,a
      000266 E4               [12] 1577 	clr	a
      000267 08               [12] 1578 	inc	r0
      000268 36               [12] 1579 	addc	a,@r0
      000269 FE               [12] 1580 	mov	r6,a
      00026A 08               [12] 1581 	inc	r0
      00026B 86 07            [24] 1582 	mov	ar7,@r0
      00026D 8D 82            [24] 1583 	mov	dpl,r5
      00026F 8E 83            [24] 1584 	mov	dph,r6
      000271 8F F0            [24] 1585 	mov	b,r7
      000273 E5 81            [12] 1586 	mov	a,sp
      000275 24 F5            [12] 1587 	add	a,#0xf5
      000277 F8               [12] 1588 	mov	r0,a
      000278 12r00r00         [24] 1589 	lcall	__gptrget
      00027B F6               [12] 1590 	mov	@r0,a
      00027C A3               [24] 1591 	inc	dptr
      00027D 12r00r00         [24] 1592 	lcall	__gptrget
      000280 08               [12] 1593 	inc	r0
      000281 F6               [12] 1594 	mov	@r0,a
      000282 A3               [24] 1595 	inc	dptr
      000283 12r00r00         [24] 1596 	lcall	__gptrget
      000286 08               [12] 1597 	inc	r0
      000287 F6               [12] 1598 	mov	@r0,a
      000288 D0 07            [24] 1599 	pop	ar7
      00028A D0 06            [24] 1600 	pop	ar6
      00028C D0 05            [24] 1601 	pop	ar5
      00028E E5 81            [12] 1602 	mov	a,sp
      000290 24 F8            [12] 1603 	add	a,#0xf8
      000292 F8               [12] 1604 	mov	r0,a
      000293 E6               [12] 1605 	mov	a,@r0
      000294 08               [12] 1606 	inc	r0
      000295 46               [12] 1607 	orl	a,@r0
      000296 60 4F            [24] 1608 	jz	00111$
                                   1609 ;	../../../../core/sys/ctimer.c:80: c->f(c->ptr);
      000298 E5 81            [12] 1610 	mov	a,sp
      00029A 24 FB            [12] 1611 	add	a,#0xfb
      00029C F8               [12] 1612 	mov	r0,a
      00029D 74 13            [12] 1613 	mov	a,#0x13
      00029F 26               [12] 1614 	add	a,@r0
      0002A0 FA               [12] 1615 	mov	r2,a
      0002A1 E4               [12] 1616 	clr	a
      0002A2 08               [12] 1617 	inc	r0
      0002A3 36               [12] 1618 	addc	a,@r0
      0002A4 FB               [12] 1619 	mov	r3,a
      0002A5 08               [12] 1620 	inc	r0
      0002A6 86 04            [24] 1621 	mov	ar4,@r0
      0002A8 8A 82            [24] 1622 	mov	dpl,r2
      0002AA 8B 83            [24] 1623 	mov	dph,r3
      0002AC 8C F0            [24] 1624 	mov	b,r4
      0002AE 12r00r00         [24] 1625 	lcall	__gptrget
      0002B1 FA               [12] 1626 	mov	r2,a
      0002B2 A3               [24] 1627 	inc	dptr
      0002B3 12r00r00         [24] 1628 	lcall	__gptrget
      0002B6 FB               [12] 1629 	mov	r3,a
      0002B7 A3               [24] 1630 	inc	dptr
      0002B8 12r00r00         [24] 1631 	lcall	__gptrget
      0002BB FC               [12] 1632 	mov	r4,a
      0002BC C0 07            [24] 1633 	push	ar7
      0002BE C0 06            [24] 1634 	push	ar6
      0002C0 C0 05            [24] 1635 	push	ar5
      0002C2 E5 81            [12] 1636 	mov	a,sp
      0002C4 24 F5            [12] 1637 	add	a,#0xf5
      0002C6 F8               [12] 1638 	mov	r0,a
      0002C7 E6               [12] 1639 	mov	a,@r0
      0002C8 C0 E0            [24] 1640 	push	acc
      0002CA 08               [12] 1641 	inc	r0
      0002CB E6               [12] 1642 	mov	a,@r0
      0002CC C0 E0            [24] 1643 	push	acc
      0002CE 08               [12] 1644 	inc	r0
      0002CF E6               [12] 1645 	mov	a,@r0
      0002D0 C0 E0            [24] 1646 	push	acc
      0002D2 8A 82            [24] 1647 	mov	dpl,r2
      0002D4 8B 83            [24] 1648 	mov	dph,r3
      0002D6 8C F0            [24] 1649 	mov	b,r4
      0002D8 D0 02            [24] 1650 	pop	ar2
      0002DA D0 01            [24] 1651 	pop	ar1
      0002DC D0 00            [24] 1652 	pop	ar0
      0002DE 12r00r00         [24] 1653 	lcall	__sdcc_banked_call
      0002E1 D0 05            [24] 1654 	pop	ar5
      0002E3 D0 06            [24] 1655 	pop	ar6
      0002E5 D0 07            [24] 1656 	pop	ar7
      0002E7                       1657 00111$:
                                   1658 ;	../../../../core/sys/ctimer.c:82: PROCESS_CONTEXT_END(c->p);
      0002E7 A8 81            [24] 1659 	mov	r0,sp
      0002E9 18               [12] 1660 	dec	r0
      0002EA 18               [12] 1661 	dec	r0
      0002EB 90r00r00         [24] 1662 	mov	dptr,#_process_current
      0002EE E6               [12] 1663 	mov	a,@r0
      0002EF F0               [24] 1664 	movx	@dptr,a
      0002F0 08               [12] 1665 	inc	r0
      0002F1 E6               [12] 1666 	mov	a,@r0
      0002F2 A3               [24] 1667 	inc	dptr
      0002F3 F0               [24] 1668 	movx	@dptr,a
      0002F4 08               [12] 1669 	inc	r0
      0002F5 E6               [12] 1670 	mov	a,@r0
      0002F6 A3               [24] 1671 	inc	dptr
      0002F7 F0               [24] 1672 	movx	@dptr,a
                                   1673 ;	../../../../core/sys/ctimer.c:83: break;
      0002F8 02r01r15         [24] 1674 	ljmp	00116$
      0002FB                       1675 00124$:
                                   1676 ;	../../../../core/sys/ctimer.c:75: for(c = list_head(ctimer_list); c != NULL; c = c->next) {
      0002FB E5 81            [12] 1677 	mov	a,sp
      0002FD 24 FB            [12] 1678 	add	a,#0xfb
      0002FF F8               [12] 1679 	mov	r0,a
      000300 86 82            [24] 1680 	mov	dpl,@r0
      000302 08               [12] 1681 	inc	r0
      000303 86 83            [24] 1682 	mov	dph,@r0
      000305 08               [12] 1683 	inc	r0
      000306 86 F0            [24] 1684 	mov	b,@r0
      000308 12r00r00         [24] 1685 	lcall	__gptrget
      00030B 18               [12] 1686 	dec	r0
      00030C 18               [12] 1687 	dec	r0
      00030D F6               [12] 1688 	mov	@r0,a
      00030E A3               [24] 1689 	inc	dptr
      00030F 12r00r00         [24] 1690 	lcall	__gptrget
      000312 08               [12] 1691 	inc	r0
      000313 F6               [12] 1692 	mov	@r0,a
      000314 A3               [24] 1693 	inc	dptr
      000315 12r00r00         [24] 1694 	lcall	__gptrget
      000318 08               [12] 1695 	inc	r0
      000319 F6               [12] 1696 	mov	@r0,a
      00031A 02r01r73         [24] 1697 	ljmp	00123$
                                   1698 ;	../../../../core/sys/ctimer.c:87: PROCESS_END();
      00031D                       1699 00118$:
      00031D 8D 82            [24] 1700 	mov	dpl,r5
      00031F 8E 83            [24] 1701 	mov	dph,r6
      000321 8F F0            [24] 1702 	mov	b,r7
      000323 E4               [12] 1703 	clr	a
      000324 12r00r00         [24] 1704 	lcall	__gptrput
      000327 A3               [24] 1705 	inc	dptr
      000328 E4               [12] 1706 	clr	a
      000329 12r00r00         [24] 1707 	lcall	__gptrput
      00032C 75 82 03         [24] 1708 	mov	dpl,#0x03
      00032F                       1709 00125$:
      00032F E5 81            [12] 1710 	mov	a,sp
      000331 24 F7            [12] 1711 	add	a,#0xF7
      000333 F5 81            [12] 1712 	mov	sp,a
      000335 02r00r00         [24] 1713 	ljmp	__sdcc_banked_ret
                                   1714 ;------------------------------------------------------------
                                   1715 ;Allocation info for local variables in function 'ctimer_init'
                                   1716 ;------------------------------------------------------------
                                   1717 ;	../../../../core/sys/ctimer.c:91: ctimer_init(void)
                                   1718 ;	-----------------------------------------
                                   1719 ;	 function ctimer_init
                                   1720 ;	-----------------------------------------
      000338                       1721 _ctimer_init:
                                   1722 ;	../../../../core/sys/ctimer.c:93: initialized = 0;
      000338 90r00r00         [24] 1723 	mov	dptr,#_initialized
      00033B E4               [12] 1724 	clr	a
      00033C F0               [24] 1725 	movx	@dptr,a
                                   1726 ;	../../../../core/sys/ctimer.c:94: list_init(ctimer_list);
      00033D 90r00r03         [24] 1727 	mov	dptr,#_ctimer_list
      000340 E0               [24] 1728 	movx	a,@dptr
      000341 FD               [12] 1729 	mov	r5,a
      000342 A3               [24] 1730 	inc	dptr
      000343 E0               [24] 1731 	movx	a,@dptr
      000344 FE               [12] 1732 	mov	r6,a
      000345 A3               [24] 1733 	inc	dptr
      000346 E0               [24] 1734 	movx	a,@dptr
      000347 FF               [12] 1735 	mov	r7,a
      000348 8D 82            [24] 1736 	mov	dpl,r5
      00034A 8E 83            [24] 1737 	mov	dph,r6
      00034C 8F F0            [24] 1738 	mov	b,r7
      00034E 78r00            [12] 1739 	mov	r0,#_list_init
      000350 79s00            [12] 1740 	mov	r1,#(_list_init >> 8)
      000352 7As00            [12] 1741 	mov	r2,#(_list_init >> 16)
      000354 12r00r00         [24] 1742 	lcall	__sdcc_banked_call
                                   1743 ;	../../../../core/sys/ctimer.c:95: process_start(&ctimer_process, NULL);
      000357 E4               [12] 1744 	clr	a
      000358 C0 E0            [24] 1745 	push	acc
      00035A C0 E0            [24] 1746 	push	acc
      00035C C0 E0            [24] 1747 	push	acc
      00035E 90r00r06         [24] 1748 	mov	dptr,#_ctimer_process
      000361 75 F0 00         [24] 1749 	mov	b,#0x00
      000364 78r00            [12] 1750 	mov	r0,#_process_start
      000366 79s00            [12] 1751 	mov	r1,#(_process_start >> 8)
      000368 7As00            [12] 1752 	mov	r2,#(_process_start >> 16)
      00036A 12r00r00         [24] 1753 	lcall	__sdcc_banked_call
      00036D 15 81            [12] 1754 	dec	sp
      00036F 15 81            [12] 1755 	dec	sp
      000371 15 81            [12] 1756 	dec	sp
      000373 02r00r00         [24] 1757 	ljmp	__sdcc_banked_ret
                                   1758 ;------------------------------------------------------------
                                   1759 ;Allocation info for local variables in function 'ctimer_set'
                                   1760 ;------------------------------------------------------------
                                   1761 ;t                         Allocated to stack - sp -7
                                   1762 ;f                         Allocated to stack - sp -10
                                   1763 ;ptr                       Allocated to stack - sp -13
                                   1764 ;c                         Allocated to stack - sp -2
                                   1765 ;tmp_current               Allocated to registers r5 r6 r7 
                                   1766 ;------------------------------------------------------------
                                   1767 ;	../../../../core/sys/ctimer.c:99: ctimer_set(struct ctimer *c, clock_time_t t,
                                   1768 ;	-----------------------------------------
                                   1769 ;	 function ctimer_set
                                   1770 ;	-----------------------------------------
      000376                       1771 _ctimer_set:
      000376 C0 82            [24] 1772 	push	dpl
      000378 C0 83            [24] 1773 	push	dph
      00037A C0 F0            [24] 1774 	push	b
                                   1775 ;	../../../../core/sys/ctimer.c:103: c->p = PROCESS_CURRENT();
      00037C A8 81            [24] 1776 	mov	r0,sp
      00037E 18               [12] 1777 	dec	r0
      00037F 18               [12] 1778 	dec	r0
      000380 74 0D            [12] 1779 	mov	a,#0x0D
      000382 26               [12] 1780 	add	a,@r0
      000383 FA               [12] 1781 	mov	r2,a
      000384 E4               [12] 1782 	clr	a
      000385 08               [12] 1783 	inc	r0
      000386 36               [12] 1784 	addc	a,@r0
      000387 FB               [12] 1785 	mov	r3,a
      000388 08               [12] 1786 	inc	r0
      000389 86 04            [24] 1787 	mov	ar4,@r0
      00038B 90r00r00         [24] 1788 	mov	dptr,#_process_current
      00038E E0               [24] 1789 	movx	a,@dptr
      00038F FD               [12] 1790 	mov	r5,a
      000390 A3               [24] 1791 	inc	dptr
      000391 E0               [24] 1792 	movx	a,@dptr
      000392 FE               [12] 1793 	mov	r6,a
      000393 A3               [24] 1794 	inc	dptr
      000394 E0               [24] 1795 	movx	a,@dptr
      000395 FF               [12] 1796 	mov	r7,a
      000396 8A 82            [24] 1797 	mov	dpl,r2
      000398 8B 83            [24] 1798 	mov	dph,r3
      00039A 8C F0            [24] 1799 	mov	b,r4
      00039C ED               [12] 1800 	mov	a,r5
      00039D 12r00r00         [24] 1801 	lcall	__gptrput
      0003A0 A3               [24] 1802 	inc	dptr
      0003A1 EE               [12] 1803 	mov	a,r6
      0003A2 12r00r00         [24] 1804 	lcall	__gptrput
      0003A5 A3               [24] 1805 	inc	dptr
      0003A6 EF               [12] 1806 	mov	a,r7
      0003A7 12r00r00         [24] 1807 	lcall	__gptrput
                                   1808 ;	../../../../core/sys/ctimer.c:104: c->f = f;
      0003AA A8 81            [24] 1809 	mov	r0,sp
      0003AC 18               [12] 1810 	dec	r0
      0003AD 18               [12] 1811 	dec	r0
      0003AE 74 10            [12] 1812 	mov	a,#0x10
      0003B0 26               [12] 1813 	add	a,@r0
      0003B1 FD               [12] 1814 	mov	r5,a
      0003B2 E4               [12] 1815 	clr	a
      0003B3 08               [12] 1816 	inc	r0
      0003B4 36               [12] 1817 	addc	a,@r0
      0003B5 FE               [12] 1818 	mov	r6,a
      0003B6 08               [12] 1819 	inc	r0
      0003B7 86 07            [24] 1820 	mov	ar7,@r0
      0003B9 8D 82            [24] 1821 	mov	dpl,r5
      0003BB 8E 83            [24] 1822 	mov	dph,r6
      0003BD 8F F0            [24] 1823 	mov	b,r7
      0003BF E5 81            [12] 1824 	mov	a,sp
      0003C1 24 F6            [12] 1825 	add	a,#0xf6
      0003C3 F8               [12] 1826 	mov	r0,a
      0003C4 E6               [12] 1827 	mov	a,@r0
      0003C5 12r00r00         [24] 1828 	lcall	__gptrput
      0003C8 A3               [24] 1829 	inc	dptr
      0003C9 08               [12] 1830 	inc	r0
      0003CA E6               [12] 1831 	mov	a,@r0
      0003CB 12r00r00         [24] 1832 	lcall	__gptrput
      0003CE A3               [24] 1833 	inc	dptr
      0003CF 08               [12] 1834 	inc	r0
      0003D0 E6               [12] 1835 	mov	a,@r0
      0003D1 12r00r00         [24] 1836 	lcall	__gptrput
                                   1837 ;	../../../../core/sys/ctimer.c:105: c->ptr = ptr;
      0003D4 A8 81            [24] 1838 	mov	r0,sp
      0003D6 18               [12] 1839 	dec	r0
      0003D7 18               [12] 1840 	dec	r0
      0003D8 74 13            [12] 1841 	mov	a,#0x13
      0003DA 26               [12] 1842 	add	a,@r0
      0003DB FD               [12] 1843 	mov	r5,a
      0003DC E4               [12] 1844 	clr	a
      0003DD 08               [12] 1845 	inc	r0
      0003DE 36               [12] 1846 	addc	a,@r0
      0003DF FE               [12] 1847 	mov	r6,a
      0003E0 08               [12] 1848 	inc	r0
      0003E1 86 07            [24] 1849 	mov	ar7,@r0
      0003E3 8D 82            [24] 1850 	mov	dpl,r5
      0003E5 8E 83            [24] 1851 	mov	dph,r6
      0003E7 8F F0            [24] 1852 	mov	b,r7
      0003E9 E5 81            [12] 1853 	mov	a,sp
      0003EB 24 F3            [12] 1854 	add	a,#0xf3
      0003ED F8               [12] 1855 	mov	r0,a
      0003EE E6               [12] 1856 	mov	a,@r0
      0003EF 12r00r00         [24] 1857 	lcall	__gptrput
      0003F2 A3               [24] 1858 	inc	dptr
      0003F3 08               [12] 1859 	inc	r0
      0003F4 E6               [12] 1860 	mov	a,@r0
      0003F5 12r00r00         [24] 1861 	lcall	__gptrput
      0003F8 A3               [24] 1862 	inc	dptr
      0003F9 08               [12] 1863 	inc	r0
      0003FA E6               [12] 1864 	mov	a,@r0
      0003FB 12r00r00         [24] 1865 	lcall	__gptrput
                                   1866 ;	../../../../core/sys/ctimer.c:106: if(initialized) {
      0003FE 90r00r00         [24] 1867 	mov	dptr,#_initialized
      000401 E0               [24] 1868 	movx	a,@dptr
      000402 FF               [12] 1869 	mov	r7,a
      000403 60 5F            [24] 1870 	jz	00102$
                                   1871 ;	../../../../core/sys/ctimer.c:107: PROCESS_CONTEXT_BEGIN(&ctimer_process);
      000405 90r00r00         [24] 1872 	mov	dptr,#_process_current
      000408 E0               [24] 1873 	movx	a,@dptr
      000409 FD               [12] 1874 	mov	r5,a
      00040A A3               [24] 1875 	inc	dptr
      00040B E0               [24] 1876 	movx	a,@dptr
      00040C FE               [12] 1877 	mov	r6,a
      00040D A3               [24] 1878 	inc	dptr
      00040E E0               [24] 1879 	movx	a,@dptr
      00040F FF               [12] 1880 	mov	r7,a
      000410 90r00r00         [24] 1881 	mov	dptr,#_process_current
      000413 74r06            [12] 1882 	mov	a,#_ctimer_process
      000415 F0               [24] 1883 	movx	@dptr,a
      000416 74s00            [12] 1884 	mov	a,#(_ctimer_process >> 8)
      000418 A3               [24] 1885 	inc	dptr
      000419 F0               [24] 1886 	movx	@dptr,a
      00041A E4               [12] 1887 	clr	a
      00041B A3               [24] 1888 	inc	dptr
      00041C F0               [24] 1889 	movx	@dptr,a
                                   1890 ;	../../../../core/sys/ctimer.c:108: etimer_set(&c->etimer, t);
      00041D A8 81            [24] 1891 	mov	r0,sp
      00041F 18               [12] 1892 	dec	r0
      000420 18               [12] 1893 	dec	r0
      000421 74 03            [12] 1894 	mov	a,#0x03
      000423 26               [12] 1895 	add	a,@r0
      000424 FA               [12] 1896 	mov	r2,a
      000425 E4               [12] 1897 	clr	a
      000426 08               [12] 1898 	inc	r0
      000427 36               [12] 1899 	addc	a,@r0
      000428 FB               [12] 1900 	mov	r3,a
      000429 08               [12] 1901 	inc	r0
      00042A 86 04            [24] 1902 	mov	ar4,@r0
      00042C C0 07            [24] 1903 	push	ar7
      00042E C0 06            [24] 1904 	push	ar6
      000430 C0 05            [24] 1905 	push	ar5
      000432 E5 81            [12] 1906 	mov	a,sp
      000434 24 F6            [12] 1907 	add	a,#0xf6
      000436 F8               [12] 1908 	mov	r0,a
      000437 E6               [12] 1909 	mov	a,@r0
      000438 C0 E0            [24] 1910 	push	acc
      00043A 08               [12] 1911 	inc	r0
      00043B E6               [12] 1912 	mov	a,@r0
      00043C C0 E0            [24] 1913 	push	acc
      00043E 8A 82            [24] 1914 	mov	dpl,r2
      000440 8B 83            [24] 1915 	mov	dph,r3
      000442 8C F0            [24] 1916 	mov	b,r4
      000444 78r00            [12] 1917 	mov	r0,#_etimer_set
      000446 79s00            [12] 1918 	mov	r1,#(_etimer_set >> 8)
      000448 7As00            [12] 1919 	mov	r2,#(_etimer_set >> 16)
      00044A 12r00r00         [24] 1920 	lcall	__sdcc_banked_call
      00044D 15 81            [12] 1921 	dec	sp
      00044F 15 81            [12] 1922 	dec	sp
      000451 D0 05            [24] 1923 	pop	ar5
      000453 D0 06            [24] 1924 	pop	ar6
      000455 D0 07            [24] 1925 	pop	ar7
                                   1926 ;	../../../../core/sys/ctimer.c:109: PROCESS_CONTEXT_END(&ctimer_process);
      000457 90r00r00         [24] 1927 	mov	dptr,#_process_current
      00045A ED               [12] 1928 	mov	a,r5
      00045B F0               [24] 1929 	movx	@dptr,a
      00045C EE               [12] 1930 	mov	a,r6
      00045D A3               [24] 1931 	inc	dptr
      00045E F0               [24] 1932 	movx	@dptr,a
      00045F EF               [12] 1933 	mov	a,r7
      000460 A3               [24] 1934 	inc	dptr
      000461 F0               [24] 1935 	movx	@dptr,a
      000462 80 2B            [24] 1936 	sjmp	00103$
      000464                       1937 00102$:
                                   1938 ;	../../../../core/sys/ctimer.c:111: c->etimer.timer.interval = t;
      000464 A8 81            [24] 1939 	mov	r0,sp
      000466 18               [12] 1940 	dec	r0
      000467 18               [12] 1941 	dec	r0
      000468 74 03            [12] 1942 	mov	a,#0x03
      00046A 26               [12] 1943 	add	a,@r0
      00046B FD               [12] 1944 	mov	r5,a
      00046C E4               [12] 1945 	clr	a
      00046D 08               [12] 1946 	inc	r0
      00046E 36               [12] 1947 	addc	a,@r0
      00046F FE               [12] 1948 	mov	r6,a
      000470 08               [12] 1949 	inc	r0
      000471 86 07            [24] 1950 	mov	ar7,@r0
      000473 74 02            [12] 1951 	mov	a,#0x02
      000475 2D               [12] 1952 	add	a,r5
      000476 FD               [12] 1953 	mov	r5,a
      000477 E4               [12] 1954 	clr	a
      000478 3E               [12] 1955 	addc	a,r6
      000479 FE               [12] 1956 	mov	r6,a
      00047A 8D 82            [24] 1957 	mov	dpl,r5
      00047C 8E 83            [24] 1958 	mov	dph,r6
      00047E 8F F0            [24] 1959 	mov	b,r7
      000480 E5 81            [12] 1960 	mov	a,sp
      000482 24 F9            [12] 1961 	add	a,#0xf9
      000484 F8               [12] 1962 	mov	r0,a
      000485 E6               [12] 1963 	mov	a,@r0
      000486 12r00r00         [24] 1964 	lcall	__gptrput
      000489 A3               [24] 1965 	inc	dptr
      00048A 08               [12] 1966 	inc	r0
      00048B E6               [12] 1967 	mov	a,@r0
      00048C 12r00r00         [24] 1968 	lcall	__gptrput
      00048F                       1969 00103$:
                                   1970 ;	../../../../core/sys/ctimer.c:114: list_remove(ctimer_list, c);
      00048F A8 81            [24] 1971 	mov	r0,sp
      000491 18               [12] 1972 	dec	r0
      000492 18               [12] 1973 	dec	r0
      000493 86 05            [24] 1974 	mov	ar5,@r0
      000495 08               [12] 1975 	inc	r0
      000496 86 06            [24] 1976 	mov	ar6,@r0
      000498 08               [12] 1977 	inc	r0
      000499 86 07            [24] 1978 	mov	ar7,@r0
      00049B 90r00r03         [24] 1979 	mov	dptr,#_ctimer_list
      00049E E0               [24] 1980 	movx	a,@dptr
      00049F FA               [12] 1981 	mov	r2,a
      0004A0 A3               [24] 1982 	inc	dptr
      0004A1 E0               [24] 1983 	movx	a,@dptr
      0004A2 FB               [12] 1984 	mov	r3,a
      0004A3 A3               [24] 1985 	inc	dptr
      0004A4 E0               [24] 1986 	movx	a,@dptr
      0004A5 FC               [12] 1987 	mov	r4,a
      0004A6 C0 05            [24] 1988 	push	ar5
      0004A8 C0 06            [24] 1989 	push	ar6
      0004AA C0 07            [24] 1990 	push	ar7
      0004AC 8A 82            [24] 1991 	mov	dpl,r2
      0004AE 8B 83            [24] 1992 	mov	dph,r3
      0004B0 8C F0            [24] 1993 	mov	b,r4
      0004B2 78r00            [12] 1994 	mov	r0,#_list_remove
      0004B4 79s00            [12] 1995 	mov	r1,#(_list_remove >> 8)
      0004B6 7As00            [12] 1996 	mov	r2,#(_list_remove >> 16)
      0004B8 12r00r00         [24] 1997 	lcall	__sdcc_banked_call
      0004BB 15 81            [12] 1998 	dec	sp
      0004BD 15 81            [12] 1999 	dec	sp
      0004BF 15 81            [12] 2000 	dec	sp
                                   2001 ;	../../../../core/sys/ctimer.c:115: list_add(ctimer_list, c);
      0004C1 A8 81            [24] 2002 	mov	r0,sp
      0004C3 18               [12] 2003 	dec	r0
      0004C4 18               [12] 2004 	dec	r0
      0004C5 86 05            [24] 2005 	mov	ar5,@r0
      0004C7 08               [12] 2006 	inc	r0
      0004C8 86 06            [24] 2007 	mov	ar6,@r0
      0004CA 08               [12] 2008 	inc	r0
      0004CB 86 07            [24] 2009 	mov	ar7,@r0
      0004CD 90r00r03         [24] 2010 	mov	dptr,#_ctimer_list
      0004D0 E0               [24] 2011 	movx	a,@dptr
      0004D1 FA               [12] 2012 	mov	r2,a
      0004D2 A3               [24] 2013 	inc	dptr
      0004D3 E0               [24] 2014 	movx	a,@dptr
      0004D4 FB               [12] 2015 	mov	r3,a
      0004D5 A3               [24] 2016 	inc	dptr
      0004D6 E0               [24] 2017 	movx	a,@dptr
      0004D7 FC               [12] 2018 	mov	r4,a
      0004D8 C0 05            [24] 2019 	push	ar5
      0004DA C0 06            [24] 2020 	push	ar6
      0004DC C0 07            [24] 2021 	push	ar7
      0004DE 8A 82            [24] 2022 	mov	dpl,r2
      0004E0 8B 83            [24] 2023 	mov	dph,r3
      0004E2 8C F0            [24] 2024 	mov	b,r4
      0004E4 78r00            [12] 2025 	mov	r0,#_list_add
      0004E6 79s00            [12] 2026 	mov	r1,#(_list_add >> 8)
      0004E8 7As00            [12] 2027 	mov	r2,#(_list_add >> 16)
      0004EA 12r00r00         [24] 2028 	lcall	__sdcc_banked_call
      0004ED 15 81            [12] 2029 	dec	sp
      0004EF 15 81            [12] 2030 	dec	sp
      0004F1 15 81            [12] 2031 	dec	sp
      0004F3 15 81            [12] 2032 	dec	sp
      0004F5 15 81            [12] 2033 	dec	sp
      0004F7 15 81            [12] 2034 	dec	sp
      0004F9 02r00r00         [24] 2035 	ljmp	__sdcc_banked_ret
                                   2036 ;------------------------------------------------------------
                                   2037 ;Allocation info for local variables in function 'ctimer_reset'
                                   2038 ;------------------------------------------------------------
                                   2039 ;c                         Allocated to stack - sp -2
                                   2040 ;tmp_current               Allocated to registers r7 r6 r5 
                                   2041 ;------------------------------------------------------------
                                   2042 ;	../../../../core/sys/ctimer.c:119: ctimer_reset(struct ctimer *c)
                                   2043 ;	-----------------------------------------
                                   2044 ;	 function ctimer_reset
                                   2045 ;	-----------------------------------------
      0004FC                       2046 _ctimer_reset:
      0004FC C0 82            [24] 2047 	push	dpl
      0004FE C0 83            [24] 2048 	push	dph
      000500 C0 F0            [24] 2049 	push	b
                                   2050 ;	../../../../core/sys/ctimer.c:121: if(initialized) {
      000502 90r00r00         [24] 2051 	mov	dptr,#_initialized
      000505 E0               [24] 2052 	movx	a,@dptr
      000506 FC               [12] 2053 	mov	r4,a
      000507 60 53            [24] 2054 	jz	00102$
                                   2055 ;	../../../../core/sys/ctimer.c:122: PROCESS_CONTEXT_BEGIN(&ctimer_process);
      000509 90r00r00         [24] 2056 	mov	dptr,#_process_current
      00050C E0               [24] 2057 	movx	a,@dptr
      00050D FA               [12] 2058 	mov	r2,a
      00050E A3               [24] 2059 	inc	dptr
      00050F E0               [24] 2060 	movx	a,@dptr
      000510 FB               [12] 2061 	mov	r3,a
      000511 A3               [24] 2062 	inc	dptr
      000512 E0               [24] 2063 	movx	a,@dptr
      000513 FC               [12] 2064 	mov	r4,a
      000514 8A 07            [24] 2065 	mov	ar7,r2
      000516 8B 06            [24] 2066 	mov	ar6,r3
      000518 8C 05            [24] 2067 	mov	ar5,r4
      00051A 90r00r00         [24] 2068 	mov	dptr,#_process_current
      00051D 74r06            [12] 2069 	mov	a,#_ctimer_process
      00051F F0               [24] 2070 	movx	@dptr,a
      000520 74s00            [12] 2071 	mov	a,#(_ctimer_process >> 8)
      000522 A3               [24] 2072 	inc	dptr
      000523 F0               [24] 2073 	movx	@dptr,a
      000524 E4               [12] 2074 	clr	a
      000525 A3               [24] 2075 	inc	dptr
      000526 F0               [24] 2076 	movx	@dptr,a
                                   2077 ;	../../../../core/sys/ctimer.c:123: etimer_reset(&c->etimer);
      000527 A8 81            [24] 2078 	mov	r0,sp
      000529 18               [12] 2079 	dec	r0
      00052A 18               [12] 2080 	dec	r0
      00052B 74 03            [12] 2081 	mov	a,#0x03
      00052D 26               [12] 2082 	add	a,@r0
      00052E FA               [12] 2083 	mov	r2,a
      00052F E4               [12] 2084 	clr	a
      000530 08               [12] 2085 	inc	r0
      000531 36               [12] 2086 	addc	a,@r0
      000532 FB               [12] 2087 	mov	r3,a
      000533 08               [12] 2088 	inc	r0
      000534 86 04            [24] 2089 	mov	ar4,@r0
      000536 8A 82            [24] 2090 	mov	dpl,r2
      000538 8B 83            [24] 2091 	mov	dph,r3
      00053A 8C F0            [24] 2092 	mov	b,r4
      00053C C0 07            [24] 2093 	push	ar7
      00053E C0 06            [24] 2094 	push	ar6
      000540 C0 05            [24] 2095 	push	ar5
      000542 78r00            [12] 2096 	mov	r0,#_etimer_reset
      000544 79s00            [12] 2097 	mov	r1,#(_etimer_reset >> 8)
      000546 7As00            [12] 2098 	mov	r2,#(_etimer_reset >> 16)
      000548 12r00r00         [24] 2099 	lcall	__sdcc_banked_call
      00054B D0 05            [24] 2100 	pop	ar5
      00054D D0 06            [24] 2101 	pop	ar6
      00054F D0 07            [24] 2102 	pop	ar7
                                   2103 ;	../../../../core/sys/ctimer.c:124: PROCESS_CONTEXT_END(&ctimer_process);
      000551 90r00r00         [24] 2104 	mov	dptr,#_process_current
      000554 EF               [12] 2105 	mov	a,r7
      000555 F0               [24] 2106 	movx	@dptr,a
      000556 EE               [12] 2107 	mov	a,r6
      000557 A3               [24] 2108 	inc	dptr
      000558 F0               [24] 2109 	movx	@dptr,a
      000559 ED               [12] 2110 	mov	a,r5
      00055A A3               [24] 2111 	inc	dptr
      00055B F0               [24] 2112 	movx	@dptr,a
      00055C                       2113 00102$:
                                   2114 ;	../../../../core/sys/ctimer.c:127: list_remove(ctimer_list, c);
      00055C A8 81            [24] 2115 	mov	r0,sp
      00055E 18               [12] 2116 	dec	r0
      00055F 18               [12] 2117 	dec	r0
      000560 86 02            [24] 2118 	mov	ar2,@r0
      000562 08               [12] 2119 	inc	r0
      000563 86 03            [24] 2120 	mov	ar3,@r0
      000565 08               [12] 2121 	inc	r0
      000566 86 04            [24] 2122 	mov	ar4,@r0
      000568 90r00r03         [24] 2123 	mov	dptr,#_ctimer_list
      00056B E0               [24] 2124 	movx	a,@dptr
      00056C FD               [12] 2125 	mov	r5,a
      00056D A3               [24] 2126 	inc	dptr
      00056E E0               [24] 2127 	movx	a,@dptr
      00056F FE               [12] 2128 	mov	r6,a
      000570 A3               [24] 2129 	inc	dptr
      000571 E0               [24] 2130 	movx	a,@dptr
      000572 FF               [12] 2131 	mov	r7,a
      000573 C0 02            [24] 2132 	push	ar2
      000575 C0 03            [24] 2133 	push	ar3
      000577 C0 04            [24] 2134 	push	ar4
      000579 8D 82            [24] 2135 	mov	dpl,r5
      00057B 8E 83            [24] 2136 	mov	dph,r6
      00057D 8F F0            [24] 2137 	mov	b,r7
      00057F 78r00            [12] 2138 	mov	r0,#_list_remove
      000581 79s00            [12] 2139 	mov	r1,#(_list_remove >> 8)
      000583 7As00            [12] 2140 	mov	r2,#(_list_remove >> 16)
      000585 12r00r00         [24] 2141 	lcall	__sdcc_banked_call
      000588 15 81            [12] 2142 	dec	sp
      00058A 15 81            [12] 2143 	dec	sp
      00058C 15 81            [12] 2144 	dec	sp
                                   2145 ;	../../../../core/sys/ctimer.c:128: list_add(ctimer_list, c);
      00058E A8 81            [24] 2146 	mov	r0,sp
      000590 18               [12] 2147 	dec	r0
      000591 18               [12] 2148 	dec	r0
      000592 86 05            [24] 2149 	mov	ar5,@r0
      000594 08               [12] 2150 	inc	r0
      000595 86 06            [24] 2151 	mov	ar6,@r0
      000597 08               [12] 2152 	inc	r0
      000598 86 07            [24] 2153 	mov	ar7,@r0
      00059A 90r00r03         [24] 2154 	mov	dptr,#_ctimer_list
      00059D E0               [24] 2155 	movx	a,@dptr
      00059E FA               [12] 2156 	mov	r2,a
      00059F A3               [24] 2157 	inc	dptr
      0005A0 E0               [24] 2158 	movx	a,@dptr
      0005A1 FB               [12] 2159 	mov	r3,a
      0005A2 A3               [24] 2160 	inc	dptr
      0005A3 E0               [24] 2161 	movx	a,@dptr
      0005A4 FC               [12] 2162 	mov	r4,a
      0005A5 C0 05            [24] 2163 	push	ar5
      0005A7 C0 06            [24] 2164 	push	ar6
      0005A9 C0 07            [24] 2165 	push	ar7
      0005AB 8A 82            [24] 2166 	mov	dpl,r2
      0005AD 8B 83            [24] 2167 	mov	dph,r3
      0005AF 8C F0            [24] 2168 	mov	b,r4
      0005B1 78r00            [12] 2169 	mov	r0,#_list_add
      0005B3 79s00            [12] 2170 	mov	r1,#(_list_add >> 8)
      0005B5 7As00            [12] 2171 	mov	r2,#(_list_add >> 16)
      0005B7 12r00r00         [24] 2172 	lcall	__sdcc_banked_call
      0005BA 15 81            [12] 2173 	dec	sp
      0005BC 15 81            [12] 2174 	dec	sp
      0005BE 15 81            [12] 2175 	dec	sp
      0005C0 15 81            [12] 2176 	dec	sp
      0005C2 15 81            [12] 2177 	dec	sp
      0005C4 15 81            [12] 2178 	dec	sp
      0005C6 02r00r00         [24] 2179 	ljmp	__sdcc_banked_ret
                                   2180 ;------------------------------------------------------------
                                   2181 ;Allocation info for local variables in function 'ctimer_restart'
                                   2182 ;------------------------------------------------------------
                                   2183 ;c                         Allocated to stack - sp -2
                                   2184 ;tmp_current               Allocated to registers r7 r6 r5 
                                   2185 ;------------------------------------------------------------
                                   2186 ;	../../../../core/sys/ctimer.c:132: ctimer_restart(struct ctimer *c)
                                   2187 ;	-----------------------------------------
                                   2188 ;	 function ctimer_restart
                                   2189 ;	-----------------------------------------
      0005C9                       2190 _ctimer_restart:
      0005C9 C0 82            [24] 2191 	push	dpl
      0005CB C0 83            [24] 2192 	push	dph
      0005CD C0 F0            [24] 2193 	push	b
                                   2194 ;	../../../../core/sys/ctimer.c:134: if(initialized) {
      0005CF 90r00r00         [24] 2195 	mov	dptr,#_initialized
      0005D2 E0               [24] 2196 	movx	a,@dptr
      0005D3 FC               [12] 2197 	mov	r4,a
      0005D4 60 53            [24] 2198 	jz	00102$
                                   2199 ;	../../../../core/sys/ctimer.c:135: PROCESS_CONTEXT_BEGIN(&ctimer_process);
      0005D6 90r00r00         [24] 2200 	mov	dptr,#_process_current
      0005D9 E0               [24] 2201 	movx	a,@dptr
      0005DA FA               [12] 2202 	mov	r2,a
      0005DB A3               [24] 2203 	inc	dptr
      0005DC E0               [24] 2204 	movx	a,@dptr
      0005DD FB               [12] 2205 	mov	r3,a
      0005DE A3               [24] 2206 	inc	dptr
      0005DF E0               [24] 2207 	movx	a,@dptr
      0005E0 FC               [12] 2208 	mov	r4,a
      0005E1 8A 07            [24] 2209 	mov	ar7,r2
      0005E3 8B 06            [24] 2210 	mov	ar6,r3
      0005E5 8C 05            [24] 2211 	mov	ar5,r4
      0005E7 90r00r00         [24] 2212 	mov	dptr,#_process_current
      0005EA 74r06            [12] 2213 	mov	a,#_ctimer_process
      0005EC F0               [24] 2214 	movx	@dptr,a
      0005ED 74s00            [12] 2215 	mov	a,#(_ctimer_process >> 8)
      0005EF A3               [24] 2216 	inc	dptr
      0005F0 F0               [24] 2217 	movx	@dptr,a
      0005F1 E4               [12] 2218 	clr	a
      0005F2 A3               [24] 2219 	inc	dptr
      0005F3 F0               [24] 2220 	movx	@dptr,a
                                   2221 ;	../../../../core/sys/ctimer.c:136: etimer_restart(&c->etimer);
      0005F4 A8 81            [24] 2222 	mov	r0,sp
      0005F6 18               [12] 2223 	dec	r0
      0005F7 18               [12] 2224 	dec	r0
      0005F8 74 03            [12] 2225 	mov	a,#0x03
      0005FA 26               [12] 2226 	add	a,@r0
      0005FB FA               [12] 2227 	mov	r2,a
      0005FC E4               [12] 2228 	clr	a
      0005FD 08               [12] 2229 	inc	r0
      0005FE 36               [12] 2230 	addc	a,@r0
      0005FF FB               [12] 2231 	mov	r3,a
      000600 08               [12] 2232 	inc	r0
      000601 86 04            [24] 2233 	mov	ar4,@r0
      000603 8A 82            [24] 2234 	mov	dpl,r2
      000605 8B 83            [24] 2235 	mov	dph,r3
      000607 8C F0            [24] 2236 	mov	b,r4
      000609 C0 07            [24] 2237 	push	ar7
      00060B C0 06            [24] 2238 	push	ar6
      00060D C0 05            [24] 2239 	push	ar5
      00060F 78r00            [12] 2240 	mov	r0,#_etimer_restart
      000611 79s00            [12] 2241 	mov	r1,#(_etimer_restart >> 8)
      000613 7As00            [12] 2242 	mov	r2,#(_etimer_restart >> 16)
      000615 12r00r00         [24] 2243 	lcall	__sdcc_banked_call
      000618 D0 05            [24] 2244 	pop	ar5
      00061A D0 06            [24] 2245 	pop	ar6
      00061C D0 07            [24] 2246 	pop	ar7
                                   2247 ;	../../../../core/sys/ctimer.c:137: PROCESS_CONTEXT_END(&ctimer_process);
      00061E 90r00r00         [24] 2248 	mov	dptr,#_process_current
      000621 EF               [12] 2249 	mov	a,r7
      000622 F0               [24] 2250 	movx	@dptr,a
      000623 EE               [12] 2251 	mov	a,r6
      000624 A3               [24] 2252 	inc	dptr
      000625 F0               [24] 2253 	movx	@dptr,a
      000626 ED               [12] 2254 	mov	a,r5
      000627 A3               [24] 2255 	inc	dptr
      000628 F0               [24] 2256 	movx	@dptr,a
      000629                       2257 00102$:
                                   2258 ;	../../../../core/sys/ctimer.c:140: list_remove(ctimer_list, c);
      000629 A8 81            [24] 2259 	mov	r0,sp
      00062B 18               [12] 2260 	dec	r0
      00062C 18               [12] 2261 	dec	r0
      00062D 86 02            [24] 2262 	mov	ar2,@r0
      00062F 08               [12] 2263 	inc	r0
      000630 86 03            [24] 2264 	mov	ar3,@r0
      000632 08               [12] 2265 	inc	r0
      000633 86 04            [24] 2266 	mov	ar4,@r0
      000635 90r00r03         [24] 2267 	mov	dptr,#_ctimer_list
      000638 E0               [24] 2268 	movx	a,@dptr
      000639 FD               [12] 2269 	mov	r5,a
      00063A A3               [24] 2270 	inc	dptr
      00063B E0               [24] 2271 	movx	a,@dptr
      00063C FE               [12] 2272 	mov	r6,a
      00063D A3               [24] 2273 	inc	dptr
      00063E E0               [24] 2274 	movx	a,@dptr
      00063F FF               [12] 2275 	mov	r7,a
      000640 C0 02            [24] 2276 	push	ar2
      000642 C0 03            [24] 2277 	push	ar3
      000644 C0 04            [24] 2278 	push	ar4
      000646 8D 82            [24] 2279 	mov	dpl,r5
      000648 8E 83            [24] 2280 	mov	dph,r6
      00064A 8F F0            [24] 2281 	mov	b,r7
      00064C 78r00            [12] 2282 	mov	r0,#_list_remove
      00064E 79s00            [12] 2283 	mov	r1,#(_list_remove >> 8)
      000650 7As00            [12] 2284 	mov	r2,#(_list_remove >> 16)
      000652 12r00r00         [24] 2285 	lcall	__sdcc_banked_call
      000655 15 81            [12] 2286 	dec	sp
      000657 15 81            [12] 2287 	dec	sp
      000659 15 81            [12] 2288 	dec	sp
                                   2289 ;	../../../../core/sys/ctimer.c:141: list_add(ctimer_list, c);
      00065B A8 81            [24] 2290 	mov	r0,sp
      00065D 18               [12] 2291 	dec	r0
      00065E 18               [12] 2292 	dec	r0
      00065F 86 05            [24] 2293 	mov	ar5,@r0
      000661 08               [12] 2294 	inc	r0
      000662 86 06            [24] 2295 	mov	ar6,@r0
      000664 08               [12] 2296 	inc	r0
      000665 86 07            [24] 2297 	mov	ar7,@r0
      000667 90r00r03         [24] 2298 	mov	dptr,#_ctimer_list
      00066A E0               [24] 2299 	movx	a,@dptr
      00066B FA               [12] 2300 	mov	r2,a
      00066C A3               [24] 2301 	inc	dptr
      00066D E0               [24] 2302 	movx	a,@dptr
      00066E FB               [12] 2303 	mov	r3,a
      00066F A3               [24] 2304 	inc	dptr
      000670 E0               [24] 2305 	movx	a,@dptr
      000671 FC               [12] 2306 	mov	r4,a
      000672 C0 05            [24] 2307 	push	ar5
      000674 C0 06            [24] 2308 	push	ar6
      000676 C0 07            [24] 2309 	push	ar7
      000678 8A 82            [24] 2310 	mov	dpl,r2
      00067A 8B 83            [24] 2311 	mov	dph,r3
      00067C 8C F0            [24] 2312 	mov	b,r4
      00067E 78r00            [12] 2313 	mov	r0,#_list_add
      000680 79s00            [12] 2314 	mov	r1,#(_list_add >> 8)
      000682 7As00            [12] 2315 	mov	r2,#(_list_add >> 16)
      000684 12r00r00         [24] 2316 	lcall	__sdcc_banked_call
      000687 15 81            [12] 2317 	dec	sp
      000689 15 81            [12] 2318 	dec	sp
      00068B 15 81            [12] 2319 	dec	sp
      00068D 15 81            [12] 2320 	dec	sp
      00068F 15 81            [12] 2321 	dec	sp
      000691 15 81            [12] 2322 	dec	sp
      000693 02r00r00         [24] 2323 	ljmp	__sdcc_banked_ret
                                   2324 ;------------------------------------------------------------
                                   2325 ;Allocation info for local variables in function 'ctimer_stop'
                                   2326 ;------------------------------------------------------------
                                   2327 ;c                         Allocated to registers r5 r6 r7 
                                   2328 ;sloc0                     Allocated to stack - sp -2
                                   2329 ;------------------------------------------------------------
                                   2330 ;	../../../../core/sys/ctimer.c:145: ctimer_stop(struct ctimer *c)
                                   2331 ;	-----------------------------------------
                                   2332 ;	 function ctimer_stop
                                   2333 ;	-----------------------------------------
      000696                       2334 _ctimer_stop:
      000696 05 81            [12] 2335 	inc	sp
      000698 05 81            [12] 2336 	inc	sp
      00069A 05 81            [12] 2337 	inc	sp
      00069C AD 82            [24] 2338 	mov	r5,dpl
      00069E AE 83            [24] 2339 	mov	r6,dph
      0006A0 AF F0            [24] 2340 	mov	r7,b
                                   2341 ;	../../../../core/sys/ctimer.c:147: if(initialized) {
      0006A2 90r00r00         [24] 2342 	mov	dptr,#_initialized
      0006A5 E0               [24] 2343 	movx	a,@dptr
      0006A6 FC               [12] 2344 	mov	r4,a
      0006A7 60 26            [24] 2345 	jz	00102$
                                   2346 ;	../../../../core/sys/ctimer.c:148: etimer_stop(&c->etimer);
      0006A9 74 03            [12] 2347 	mov	a,#0x03
      0006AB 2D               [12] 2348 	add	a,r5
      0006AC FA               [12] 2349 	mov	r2,a
      0006AD E4               [12] 2350 	clr	a
      0006AE 3E               [12] 2351 	addc	a,r6
      0006AF FB               [12] 2352 	mov	r3,a
      0006B0 8F 04            [24] 2353 	mov	ar4,r7
      0006B2 8A 82            [24] 2354 	mov	dpl,r2
      0006B4 8B 83            [24] 2355 	mov	dph,r3
      0006B6 8C F0            [24] 2356 	mov	b,r4
      0006B8 C0 07            [24] 2357 	push	ar7
      0006BA C0 06            [24] 2358 	push	ar6
      0006BC C0 05            [24] 2359 	push	ar5
      0006BE 78r00            [12] 2360 	mov	r0,#_etimer_stop
      0006C0 79s00            [12] 2361 	mov	r1,#(_etimer_stop >> 8)
      0006C2 7As00            [12] 2362 	mov	r2,#(_etimer_stop >> 16)
      0006C4 12r00r00         [24] 2363 	lcall	__sdcc_banked_call
      0006C7 D0 05            [24] 2364 	pop	ar5
      0006C9 D0 06            [24] 2365 	pop	ar6
      0006CB D0 07            [24] 2366 	pop	ar7
      0006CD 80 5B            [24] 2367 	sjmp	00103$
      0006CF                       2368 00102$:
                                   2369 ;	../../../../core/sys/ctimer.c:150: c->etimer.next = NULL;
      0006CF 74 03            [12] 2370 	mov	a,#0x03
      0006D1 2D               [12] 2371 	add	a,r5
      0006D2 FA               [12] 2372 	mov	r2,a
      0006D3 E4               [12] 2373 	clr	a
      0006D4 3E               [12] 2374 	addc	a,r6
      0006D5 FB               [12] 2375 	mov	r3,a
      0006D6 8F 04            [24] 2376 	mov	ar4,r7
      0006D8 C0 05            [24] 2377 	push	ar5
      0006DA C0 06            [24] 2378 	push	ar6
      0006DC C0 07            [24] 2379 	push	ar7
      0006DE E5 81            [12] 2380 	mov	a,sp
      0006E0 24 FB            [12] 2381 	add	a,#0xfb
      0006E2 F8               [12] 2382 	mov	r0,a
      0006E3 74 04            [12] 2383 	mov	a,#0x04
      0006E5 2A               [12] 2384 	add	a,r2
      0006E6 F6               [12] 2385 	mov	@r0,a
      0006E7 E4               [12] 2386 	clr	a
      0006E8 3B               [12] 2387 	addc	a,r3
      0006E9 08               [12] 2388 	inc	r0
      0006EA F6               [12] 2389 	mov	@r0,a
      0006EB 08               [12] 2390 	inc	r0
      0006EC A6 04            [24] 2391 	mov	@r0,ar4
      0006EE E5 81            [12] 2392 	mov	a,sp
      0006F0 24 FB            [12] 2393 	add	a,#0xfb
      0006F2 F8               [12] 2394 	mov	r0,a
      0006F3 86 82            [24] 2395 	mov	dpl,@r0
      0006F5 08               [12] 2396 	inc	r0
      0006F6 86 83            [24] 2397 	mov	dph,@r0
      0006F8 08               [12] 2398 	inc	r0
      0006F9 86 F0            [24] 2399 	mov	b,@r0
      0006FB E4               [12] 2400 	clr	a
      0006FC 12r00r00         [24] 2401 	lcall	__gptrput
      0006FF A3               [24] 2402 	inc	dptr
      000700 E4               [12] 2403 	clr	a
      000701 12r00r00         [24] 2404 	lcall	__gptrput
      000704 A3               [24] 2405 	inc	dptr
      000705 E4               [12] 2406 	clr	a
      000706 12r00r00         [24] 2407 	lcall	__gptrput
                                   2408 ;	../../../../core/sys/ctimer.c:151: c->etimer.p = PROCESS_NONE;
      000709 74 07            [12] 2409 	mov	a,#0x07
      00070B 2A               [12] 2410 	add	a,r2
      00070C FA               [12] 2411 	mov	r2,a
      00070D E4               [12] 2412 	clr	a
      00070E 3B               [12] 2413 	addc	a,r3
      00070F FB               [12] 2414 	mov	r3,a
      000710 8A 82            [24] 2415 	mov	dpl,r2
      000712 8B 83            [24] 2416 	mov	dph,r3
      000714 8C F0            [24] 2417 	mov	b,r4
      000716 E4               [12] 2418 	clr	a
      000717 12r00r00         [24] 2419 	lcall	__gptrput
      00071A A3               [24] 2420 	inc	dptr
      00071B E4               [12] 2421 	clr	a
      00071C 12r00r00         [24] 2422 	lcall	__gptrput
      00071F A3               [24] 2423 	inc	dptr
      000720 E4               [12] 2424 	clr	a
      000721 12r00r00         [24] 2425 	lcall	__gptrput
                                   2426 ;	../../../../core/sys/ctimer.c:153: list_remove(ctimer_list, c);
      000724 D0 07            [24] 2427 	pop	ar7
      000726 D0 06            [24] 2428 	pop	ar6
      000728 D0 05            [24] 2429 	pop	ar5
                                   2430 ;	../../../../core/sys/ctimer.c:151: c->etimer.p = PROCESS_NONE;
      00072A                       2431 00103$:
                                   2432 ;	../../../../core/sys/ctimer.c:153: list_remove(ctimer_list, c);
      00072A 90r00r03         [24] 2433 	mov	dptr,#_ctimer_list
      00072D E0               [24] 2434 	movx	a,@dptr
      00072E FA               [12] 2435 	mov	r2,a
      00072F A3               [24] 2436 	inc	dptr
      000730 E0               [24] 2437 	movx	a,@dptr
      000731 FB               [12] 2438 	mov	r3,a
      000732 A3               [24] 2439 	inc	dptr
      000733 E0               [24] 2440 	movx	a,@dptr
      000734 FC               [12] 2441 	mov	r4,a
      000735 C0 05            [24] 2442 	push	ar5
      000737 C0 06            [24] 2443 	push	ar6
      000739 C0 07            [24] 2444 	push	ar7
      00073B 8A 82            [24] 2445 	mov	dpl,r2
      00073D 8B 83            [24] 2446 	mov	dph,r3
      00073F 8C F0            [24] 2447 	mov	b,r4
      000741 78r00            [12] 2448 	mov	r0,#_list_remove
      000743 79s00            [12] 2449 	mov	r1,#(_list_remove >> 8)
      000745 7As00            [12] 2450 	mov	r2,#(_list_remove >> 16)
      000747 12r00r00         [24] 2451 	lcall	__sdcc_banked_call
      00074A 15 81            [12] 2452 	dec	sp
      00074C 15 81            [12] 2453 	dec	sp
      00074E 15 81            [12] 2454 	dec	sp
      000750 15 81            [12] 2455 	dec	sp
      000752 15 81            [12] 2456 	dec	sp
      000754 15 81            [12] 2457 	dec	sp
      000756 02r00r00         [24] 2458 	ljmp	__sdcc_banked_ret
                                   2459 ;------------------------------------------------------------
                                   2460 ;Allocation info for local variables in function 'ctimer_expired'
                                   2461 ;------------------------------------------------------------
                                   2462 ;c                         Allocated to registers r5 r6 r7 
                                   2463 ;t                         Allocated to registers r2 r3 r4 
                                   2464 ;------------------------------------------------------------
                                   2465 ;	../../../../core/sys/ctimer.c:157: ctimer_expired(struct ctimer *c)
                                   2466 ;	-----------------------------------------
                                   2467 ;	 function ctimer_expired
                                   2468 ;	-----------------------------------------
      000759                       2469 _ctimer_expired:
      000759 AD 82            [24] 2470 	mov	r5,dpl
      00075B AE 83            [24] 2471 	mov	r6,dph
      00075D AF F0            [24] 2472 	mov	r7,b
                                   2473 ;	../../../../core/sys/ctimer.c:160: if(initialized) {
      00075F 90r00r00         [24] 2474 	mov	dptr,#_initialized
      000762 E0               [24] 2475 	movx	a,@dptr
      000763 FC               [12] 2476 	mov	r4,a
      000764 60 1F            [24] 2477 	jz	00102$
                                   2478 ;	../../../../core/sys/ctimer.c:161: return etimer_expired(&c->etimer);
      000766 74 03            [12] 2479 	mov	a,#0x03
      000768 2D               [12] 2480 	add	a,r5
      000769 FA               [12] 2481 	mov	r2,a
      00076A E4               [12] 2482 	clr	a
      00076B 3E               [12] 2483 	addc	a,r6
      00076C FB               [12] 2484 	mov	r3,a
      00076D 8F 04            [24] 2485 	mov	ar4,r7
      00076F 8A 82            [24] 2486 	mov	dpl,r2
      000771 8B 83            [24] 2487 	mov	dph,r3
      000773 8C F0            [24] 2488 	mov	b,r4
      000775 78r00            [12] 2489 	mov	r0,#_etimer_expired
      000777 79s00            [12] 2490 	mov	r1,#(_etimer_expired >> 8)
      000779 7As00            [12] 2491 	mov	r2,#(_etimer_expired >> 16)
      00077B 12r00r00         [24] 2492 	lcall	__sdcc_banked_call
      00077E AB 82            [24] 2493 	mov	r3,dpl
      000780 AC 83            [24] 2494 	mov  r4,dph
      000782 02r08r00         [24] 2495 	ljmp	00109$
      000785                       2496 00102$:
                                   2497 ;	../../../../core/sys/ctimer.c:163: for(t = list_head(ctimer_list); t != NULL; t = t->next) {
      000785 90r00r03         [24] 2498 	mov	dptr,#_ctimer_list
      000788 E0               [24] 2499 	movx	a,@dptr
      000789 FA               [12] 2500 	mov	r2,a
      00078A A3               [24] 2501 	inc	dptr
      00078B E0               [24] 2502 	movx	a,@dptr
      00078C FB               [12] 2503 	mov	r3,a
      00078D A3               [24] 2504 	inc	dptr
      00078E E0               [24] 2505 	movx	a,@dptr
      00078F FC               [12] 2506 	mov	r4,a
      000790 8A 82            [24] 2507 	mov	dpl,r2
      000792 8B 83            [24] 2508 	mov	dph,r3
      000794 8C F0            [24] 2509 	mov	b,r4
      000796 C0 07            [24] 2510 	push	ar7
      000798 C0 06            [24] 2511 	push	ar6
      00079A C0 05            [24] 2512 	push	ar5
      00079C 78r00            [12] 2513 	mov	r0,#_list_head
      00079E 79s00            [12] 2514 	mov	r1,#(_list_head >> 8)
      0007A0 7As00            [12] 2515 	mov	r2,#(_list_head >> 16)
      0007A2 12r00r00         [24] 2516 	lcall	__sdcc_banked_call
      0007A5 AA 82            [24] 2517 	mov	r2,dpl
      0007A7 AB 83            [24] 2518 	mov	r3,dph
      0007A9 AC F0            [24] 2519 	mov	r4,b
      0007AB D0 05            [24] 2520 	pop	ar5
      0007AD D0 06            [24] 2521 	pop	ar6
      0007AF D0 07            [24] 2522 	pop	ar7
      0007B1                       2523 00107$:
      0007B1 E4               [12] 2524 	clr	a
      0007B2 C0 E0            [24] 2525 	push	acc
      0007B4 E4               [12] 2526 	clr	a
      0007B5 C0 E0            [24] 2527 	push	acc
      0007B7 E4               [12] 2528 	clr	a
      0007B8 C0 E0            [24] 2529 	push	acc
      0007BA 8A 82            [24] 2530 	mov	dpl,r2
      0007BC 8B 83            [24] 2531 	mov	dph,r3
      0007BE 8C F0            [24] 2532 	mov	b,r4
      0007C0 12r00r00         [24] 2533 	lcall	___gptr_cmp
      0007C3 15 81            [12] 2534 	dec	sp
      0007C5 15 81            [12] 2535 	dec	sp
      0007C7 15 81            [12] 2536 	dec	sp
      0007C9 60 32            [24] 2537 	jz	00105$
                                   2538 ;	../../../../core/sys/ctimer.c:164: if(t == c) {
      0007CB C0 05            [24] 2539 	push	ar5
      0007CD C0 06            [24] 2540 	push	ar6
      0007CF C0 07            [24] 2541 	push	ar7
      0007D1 8A 82            [24] 2542 	mov	dpl,r2
      0007D3 8B 83            [24] 2543 	mov	dph,r3
      0007D5 8C F0            [24] 2544 	mov	b,r4
      0007D7 12r00r00         [24] 2545 	lcall	___gptr_cmp
      0007DA 15 81            [12] 2546 	dec	sp
      0007DC 15 81            [12] 2547 	dec	sp
      0007DE 15 81            [12] 2548 	dec	sp
      0007E0 70 05            [24] 2549 	jnz	00108$
                                   2550 ;	../../../../core/sys/ctimer.c:165: return 0;
      0007E2 90 00 00         [24] 2551 	mov	dptr,#0x0000
      0007E5 80 19            [24] 2552 	sjmp	00109$
      0007E7                       2553 00108$:
                                   2554 ;	../../../../core/sys/ctimer.c:163: for(t = list_head(ctimer_list); t != NULL; t = t->next) {
      0007E7 8A 82            [24] 2555 	mov	dpl,r2
      0007E9 8B 83            [24] 2556 	mov	dph,r3
      0007EB 8C F0            [24] 2557 	mov	b,r4
      0007ED 12r00r00         [24] 2558 	lcall	__gptrget
      0007F0 FA               [12] 2559 	mov	r2,a
      0007F1 A3               [24] 2560 	inc	dptr
      0007F2 12r00r00         [24] 2561 	lcall	__gptrget
      0007F5 FB               [12] 2562 	mov	r3,a
      0007F6 A3               [24] 2563 	inc	dptr
      0007F7 12r00r00         [24] 2564 	lcall	__gptrget
      0007FA FC               [12] 2565 	mov	r4,a
      0007FB 80 B4            [24] 2566 	sjmp	00107$
      0007FD                       2567 00105$:
                                   2568 ;	../../../../core/sys/ctimer.c:168: return 1;
      0007FD 90 00 01         [24] 2569 	mov	dptr,#0x0001
      000800                       2570 00109$:
      000800 02r00r00         [24] 2571 	ljmp	__sdcc_banked_ret
                                   2572 	.area CSEG    (CODE)
                                   2573 	.area CONST   (CODE)
                                   2574 	.area XINIT   (CODE)
      000000                       2575 __xinit__ctimer_list_list:
                                   2576 ; generic printIvalPtr
      000000 00 00 00              2577 	.byte #0x00,#0x00,#0x00
      000003                       2578 __xinit__ctimer_list:
      000003r00s00 00              2579 	.byte _ctimer_list_list,(_ctimer_list_list >> 8),#0x00
      000006                       2580 __xinit__ctimer_process:
                                   2581 ; generic printIvalPtr
      000006 00 00 00              2582 	.byte #0x00,#0x00,#0x00
      000009r00s00s00              2583 	.byte _process_thread_ctimer_process,(_process_thread_ctimer_process >> 8),(_process_thread_ctimer_process >> 16)
      00000C 00 00                 2584 	.byte #0x00,#0x00	; 0
      00000E 00                    2585 	.db #0x00	; 0
      00000F 00                    2586 	.db #0x00	; 0
                                   2587 	.area CABS    (ABS,CODE)
