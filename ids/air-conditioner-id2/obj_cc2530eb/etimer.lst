                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8804 (Aug  6 2013) (Linux)
                                      4 ; This file was generated Mon Aug 25 04:16:29 2014
                                      5 ;--------------------------------------------------------
                                      6 	.module etimer
                                      7 	.optsdcc -mmcs51 --model-huge
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _process_poll
                                     13 	.globl _process_post
                                     14 	.globl _timer_expired
                                     15 	.globl _timer_restart
                                     16 	.globl _timer_reset
                                     17 	.globl _timer_set
                                     18 	.globl _clock_time
                                     19 	.globl _etimer_process
                                     20 	.globl _etimer_request_poll
                                     21 	.globl _etimer_set
                                     22 	.globl _etimer_reset
                                     23 	.globl _etimer_restart
                                     24 	.globl _etimer_adjust
                                     25 	.globl _etimer_expired
                                     26 	.globl _etimer_expiration_time
                                     27 	.globl _etimer_start_time
                                     28 	.globl _etimer_pending
                                     29 	.globl _etimer_next_expiration_time
                                     30 	.globl _etimer_stop
                                     31 ;--------------------------------------------------------
                                     32 ; special function registers
                                     33 ;--------------------------------------------------------
                                     34 	.area RSEG    (ABS,DATA)
      000000                         35 	.org 0x0000
                                     36 ;--------------------------------------------------------
                                     37 ; special function bits
                                     38 ;--------------------------------------------------------
                                     39 	.area RSEG    (ABS,DATA)
      000000                         40 	.org 0x0000
                                     41 ;--------------------------------------------------------
                                     42 ; overlayable register banks
                                     43 ;--------------------------------------------------------
                                     44 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         45 	.ds 8
                                     46 ;--------------------------------------------------------
                                     47 ; internal ram data
                                     48 ;--------------------------------------------------------
                                     49 	.area DSEG    (DATA)
                                     50 ;--------------------------------------------------------
                                     51 ; overlayable items in internal ram 
                                     52 ;--------------------------------------------------------
                                     53 ;--------------------------------------------------------
                                     54 ; indirectly addressable internal ram data
                                     55 ;--------------------------------------------------------
                                     56 	.area ISEG    (DATA)
                                     57 ;--------------------------------------------------------
                                     58 ; absolute internal ram data
                                     59 ;--------------------------------------------------------
                                     60 	.area IABS    (ABS,DATA)
                                     61 	.area IABS    (ABS,DATA)
                                     62 ;--------------------------------------------------------
                                     63 ; bit data
                                     64 ;--------------------------------------------------------
                                     65 	.area BSEG    (BIT)
                                     66 ;--------------------------------------------------------
                                     67 ; paged external ram data
                                     68 ;--------------------------------------------------------
                                     69 	.area PSEG    (PAG,XDATA)
                                     70 ;--------------------------------------------------------
                                     71 ; external ram data
                                     72 ;--------------------------------------------------------
                                     73 	.area XSEG    (XDATA)
      000000                         74 _timerlist:
      000000                         75 	.ds 3
      000003                         76 _next_expiration:
      000003                         77 	.ds 2
                                     78 ;--------------------------------------------------------
                                     79 ; absolute external ram data
                                     80 ;--------------------------------------------------------
                                     81 	.area XABS    (ABS,XDATA)
                                     82 ;--------------------------------------------------------
                                     83 ; external initialized ram data
                                     84 ;--------------------------------------------------------
                                     85 	.area XISEG   (XDATA)
      000000                         86 _etimer_process::
      000000                         87 	.ds 10
                                     88 	.area HOME    (CODE)
                                     89 	.area GSINIT0 (CODE)
                                     90 	.area GSINIT1 (CODE)
                                     91 	.area GSINIT2 (CODE)
                                     92 	.area GSINIT3 (CODE)
                                     93 	.area GSINIT4 (CODE)
                                     94 	.area GSINIT5 (CODE)
                                     95 	.area GSINIT  (CODE)
                                     96 	.area GSFINAL (CODE)
                                     97 	.area CSEG    (CODE)
                                     98 ;--------------------------------------------------------
                                     99 ; global & static initialisations
                                    100 ;--------------------------------------------------------
                                    101 	.area HOME    (CODE)
                                    102 	.area GSINIT  (CODE)
                                    103 	.area GSFINAL (CODE)
                                    104 	.area GSINIT  (CODE)
                                    105 ;--------------------------------------------------------
                                    106 ; Home
                                    107 ;--------------------------------------------------------
                                    108 	.area HOME    (CODE)
                                    109 	.area HOME    (CODE)
                                    110 ;--------------------------------------------------------
                                    111 ; code
                                    112 ;--------------------------------------------------------
                                    113 	.area BANK1   (CODE)
                                    114 ;------------------------------------------------------------
                                    115 ;Allocation info for local variables in function 'update_time'
                                    116 ;------------------------------------------------------------
                                    117 ;tdist                     Allocated to stack - sp -3
                                    118 ;now                       Allocated to stack - sp -1
                                    119 ;t                         Allocated to stack - sp -6
                                    120 ;------------------------------------------------------------
                                    121 ;	../../../../core/sys/etimer.c:58: update_time(void)
                                    122 ;	-----------------------------------------
                                    123 ;	 function update_time
                                    124 ;	-----------------------------------------
      000000                        125 _update_time:
                           000007   126 	ar7 = 0x07
                           000006   127 	ar6 = 0x06
                           000005   128 	ar5 = 0x05
                           000004   129 	ar4 = 0x04
                           000003   130 	ar3 = 0x03
                           000002   131 	ar2 = 0x02
                           000001   132 	ar1 = 0x01
                           000000   133 	ar0 = 0x00
      000000 E5 81            [12]  134 	mov	a,sp
      000002 24 07            [12]  135 	add	a,#0x07
      000004 F5 81            [12]  136 	mov	sp,a
                                    137 ;	../../../../core/sys/etimer.c:64: if (timerlist == NULL) {
      000006 90r00r00         [24]  138 	mov	dptr,#_timerlist
      000009 E0               [24]  139 	movx	a,@dptr
      00000A FD               [12]  140 	mov	r5,a
      00000B A3               [24]  141 	inc	dptr
      00000C E0               [24]  142 	movx	a,@dptr
      00000D FE               [12]  143 	mov	r6,a
      00000E A3               [24]  144 	inc	dptr
      00000F E0               [24]  145 	movx	a,@dptr
      000010 FF               [12]  146 	mov	r7,a
      000011 ED               [12]  147 	mov	a,r5
      000012 4E               [12]  148 	orl	a,r6
      000013 70 0B            [24]  149 	jnz	00105$
                                    150 ;	../../../../core/sys/etimer.c:65: next_expiration = 0;
      000015 90r00r03         [24]  151 	mov	dptr,#_next_expiration
      000018 E4               [12]  152 	clr	a
      000019 F0               [24]  153 	movx	@dptr,a
      00001A E4               [12]  154 	clr	a
      00001B A3               [24]  155 	inc	dptr
      00001C F0               [24]  156 	movx	@dptr,a
      00001D 02r01r9C         [24]  157 	ljmp	00110$
      000020                        158 00105$:
                                    159 ;	../../../../core/sys/etimer.c:67: now = clock_time();
      000020 78r00            [12]  160 	mov	r0,#_clock_time
      000022 79s00            [12]  161 	mov	r1,#(_clock_time >> 8)
      000024 7As00            [12]  162 	mov	r2,#(_clock_time >> 16)
      000026 12r00r00         [24]  163 	lcall	__sdcc_banked_call
      000029 AE 82            [24]  164 	mov	r6,dpl
      00002B AF 83            [24]  165 	mov	r7,dph
      00002D A8 81            [24]  166 	mov	r0,sp
      00002F 18               [12]  167 	dec	r0
      000030 A6 06            [24]  168 	mov	@r0,ar6
      000032 08               [12]  169 	inc	r0
      000033 A6 07            [24]  170 	mov	@r0,ar7
                                    171 ;	../../../../core/sys/etimer.c:68: t = timerlist;
      000035 90r00r00         [24]  172 	mov	dptr,#_timerlist
      000038 E0               [24]  173 	movx	a,@dptr
      000039 FB               [12]  174 	mov	r3,a
      00003A A3               [24]  175 	inc	dptr
      00003B E0               [24]  176 	movx	a,@dptr
      00003C FC               [12]  177 	mov	r4,a
      00003D A3               [24]  178 	inc	dptr
      00003E E0               [24]  179 	movx	a,@dptr
      00003F FD               [12]  180 	mov	r5,a
      000040 E5 81            [12]  181 	mov	a,sp
      000042 24 FA            [12]  182 	add	a,#0xfa
      000044 F8               [12]  183 	mov	r0,a
      000045 A6 03            [24]  184 	mov	@r0,ar3
      000047 08               [12]  185 	inc	r0
      000048 A6 04            [24]  186 	mov	@r0,ar4
      00004A 08               [12]  187 	inc	r0
      00004B A6 05            [24]  188 	mov	@r0,ar5
                                    189 ;	../../../../core/sys/etimer.c:70: tdist = t->timer.start + t->timer.interval - now;
      00004D E5 81            [12]  190 	mov	a,sp
      00004F 24 FA            [12]  191 	add	a,#0xfa
      000051 F8               [12]  192 	mov	r0,a
      000052 86 82            [24]  193 	mov	dpl,@r0
      000054 08               [12]  194 	inc	r0
      000055 86 83            [24]  195 	mov	dph,@r0
      000057 08               [12]  196 	inc	r0
      000058 86 F0            [24]  197 	mov	b,@r0
      00005A 12r00r00         [24]  198 	lcall	__gptrget
      00005D FA               [12]  199 	mov	r2,a
      00005E A3               [24]  200 	inc	dptr
      00005F 12r00r00         [24]  201 	lcall	__gptrget
      000062 FF               [12]  202 	mov	r7,a
      000063 E5 81            [12]  203 	mov	a,sp
      000065 24 FA            [12]  204 	add	a,#0xfa
      000067 F8               [12]  205 	mov	r0,a
      000068 74 02            [12]  206 	mov	a,#0x02
      00006A 26               [12]  207 	add	a,@r0
      00006B FC               [12]  208 	mov	r4,a
      00006C E4               [12]  209 	clr	a
      00006D 08               [12]  210 	inc	r0
      00006E 36               [12]  211 	addc	a,@r0
      00006F FD               [12]  212 	mov	r5,a
      000070 08               [12]  213 	inc	r0
      000071 86 06            [24]  214 	mov	ar6,@r0
      000073 8C 82            [24]  215 	mov	dpl,r4
      000075 8D 83            [24]  216 	mov	dph,r5
      000077 8E F0            [24]  217 	mov	b,r6
      000079 12r00r00         [24]  218 	lcall	__gptrget
      00007C FC               [12]  219 	mov	r4,a
      00007D A3               [24]  220 	inc	dptr
      00007E 12r00r00         [24]  221 	lcall	__gptrget
      000081 FD               [12]  222 	mov	r5,a
      000082 EC               [12]  223 	mov	a,r4
      000083 2A               [12]  224 	add	a,r2
      000084 FA               [12]  225 	mov	r2,a
      000085 ED               [12]  226 	mov	a,r5
      000086 3F               [12]  227 	addc	a,r7
      000087 FF               [12]  228 	mov	r7,a
      000088 A8 81            [24]  229 	mov	r0,sp
      00008A 18               [12]  230 	dec	r0
      00008B EA               [12]  231 	mov	a,r2
      00008C C3               [12]  232 	clr	c
      00008D 96               [12]  233 	subb	a,@r0
      00008E FA               [12]  234 	mov	r2,a
      00008F EF               [12]  235 	mov	a,r7
      000090 08               [12]  236 	inc	r0
      000091 96               [12]  237 	subb	a,@r0
      000092 FF               [12]  238 	mov	r7,a
      000093 E5 81            [12]  239 	mov	a,sp
      000095 24 FD            [12]  240 	add	a,#0xfd
      000097 F8               [12]  241 	mov	r0,a
      000098 A6 02            [24]  242 	mov	@r0,ar2
      00009A 08               [12]  243 	inc	r0
      00009B A6 07            [24]  244 	mov	@r0,ar7
                                    245 ;	../../../../core/sys/etimer.c:71: for(t = t->next; t != NULL; t = t->next) {
      00009D E5 81            [12]  246 	mov	a,sp
      00009F 24 FA            [12]  247 	add	a,#0xfa
      0000A1 F8               [12]  248 	mov	r0,a
      0000A2 74 04            [12]  249 	mov	a,#0x04
      0000A4 26               [12]  250 	add	a,@r0
      0000A5 FB               [12]  251 	mov	r3,a
      0000A6 E4               [12]  252 	clr	a
      0000A7 08               [12]  253 	inc	r0
      0000A8 36               [12]  254 	addc	a,@r0
      0000A9 FC               [12]  255 	mov	r4,a
      0000AA 08               [12]  256 	inc	r0
      0000AB 86 05            [24]  257 	mov	ar5,@r0
      0000AD 8B 82            [24]  258 	mov	dpl,r3
      0000AF 8C 83            [24]  259 	mov	dph,r4
      0000B1 8D F0            [24]  260 	mov	b,r5
      0000B3 E5 81            [12]  261 	mov	a,sp
      0000B5 24 FA            [12]  262 	add	a,#0xfa
      0000B7 F8               [12]  263 	mov	r0,a
      0000B8 12r00r00         [24]  264 	lcall	__gptrget
      0000BB F6               [12]  265 	mov	@r0,a
      0000BC A3               [24]  266 	inc	dptr
      0000BD 12r00r00         [24]  267 	lcall	__gptrget
      0000C0 08               [12]  268 	inc	r0
      0000C1 F6               [12]  269 	mov	@r0,a
      0000C2 A3               [24]  270 	inc	dptr
      0000C3 12r00r00         [24]  271 	lcall	__gptrget
      0000C6 08               [12]  272 	inc	r0
      0000C7 F6               [12]  273 	mov	@r0,a
      0000C8                        274 00108$:
      0000C8 E5 81            [12]  275 	mov	a,sp
      0000CA 24 FA            [12]  276 	add	a,#0xfa
      0000CC F8               [12]  277 	mov	r0,a
      0000CD E4               [12]  278 	clr	a
      0000CE C0 E0            [24]  279 	push	acc
      0000D0 E4               [12]  280 	clr	a
      0000D1 C0 E0            [24]  281 	push	acc
      0000D3 E4               [12]  282 	clr	a
      0000D4 C0 E0            [24]  283 	push	acc
      0000D6 86 82            [24]  284 	mov	dpl,@r0
      0000D8 08               [12]  285 	inc	r0
      0000D9 86 83            [24]  286 	mov	dph,@r0
      0000DB 08               [12]  287 	inc	r0
      0000DC 86 F0            [24]  288 	mov	b,@r0
      0000DE 12r00r00         [24]  289 	lcall	___gptr_cmp
      0000E1 15 81            [12]  290 	dec	sp
      0000E3 15 81            [12]  291 	dec	sp
      0000E5 15 81            [12]  292 	dec	sp
      0000E7 70 03            [24]  293 	jnz	00125$
      0000E9 02r01r88         [24]  294 	ljmp	00103$
      0000EC                        295 00125$:
                                    296 ;	../../../../core/sys/etimer.c:72: if(t->timer.start + t->timer.interval - now < tdist) {
      0000EC E5 81            [12]  297 	mov	a,sp
      0000EE 24 FA            [12]  298 	add	a,#0xfa
      0000F0 F8               [12]  299 	mov	r0,a
      0000F1 86 82            [24]  300 	mov	dpl,@r0
      0000F3 08               [12]  301 	inc	r0
      0000F4 86 83            [24]  302 	mov	dph,@r0
      0000F6 08               [12]  303 	inc	r0
      0000F7 86 F0            [24]  304 	mov	b,@r0
      0000F9 12r00r00         [24]  305 	lcall	__gptrget
      0000FC FC               [12]  306 	mov	r4,a
      0000FD A3               [24]  307 	inc	dptr
      0000FE 12r00r00         [24]  308 	lcall	__gptrget
      000101 FD               [12]  309 	mov	r5,a
      000102 E5 81            [12]  310 	mov	a,sp
      000104 24 FA            [12]  311 	add	a,#0xfa
      000106 F8               [12]  312 	mov	r0,a
      000107 74 02            [12]  313 	mov	a,#0x02
      000109 26               [12]  314 	add	a,@r0
      00010A FA               [12]  315 	mov	r2,a
      00010B E4               [12]  316 	clr	a
      00010C 08               [12]  317 	inc	r0
      00010D 36               [12]  318 	addc	a,@r0
      00010E FB               [12]  319 	mov	r3,a
      00010F 08               [12]  320 	inc	r0
      000110 86 07            [24]  321 	mov	ar7,@r0
      000112 8A 82            [24]  322 	mov	dpl,r2
      000114 8B 83            [24]  323 	mov	dph,r3
      000116 8F F0            [24]  324 	mov	b,r7
      000118 12r00r00         [24]  325 	lcall	__gptrget
      00011B FE               [12]  326 	mov	r6,a
      00011C A3               [24]  327 	inc	dptr
      00011D 12r00r00         [24]  328 	lcall	__gptrget
      000120 FF               [12]  329 	mov	r7,a
      000121 EE               [12]  330 	mov	a,r6
      000122 2C               [12]  331 	add	a,r4
      000123 FA               [12]  332 	mov	r2,a
      000124 EF               [12]  333 	mov	a,r7
      000125 3D               [12]  334 	addc	a,r5
      000126 FB               [12]  335 	mov	r3,a
      000127 A8 81            [24]  336 	mov	r0,sp
      000129 18               [12]  337 	dec	r0
      00012A EA               [12]  338 	mov	a,r2
      00012B C3               [12]  339 	clr	c
      00012C 96               [12]  340 	subb	a,@r0
      00012D FA               [12]  341 	mov	r2,a
      00012E EB               [12]  342 	mov	a,r3
      00012F 08               [12]  343 	inc	r0
      000130 96               [12]  344 	subb	a,@r0
      000131 FB               [12]  345 	mov	r3,a
      000132 E5 81            [12]  346 	mov	a,sp
      000134 24 FD            [12]  347 	add	a,#0xfd
      000136 F8               [12]  348 	mov	r0,a
      000137 C3               [12]  349 	clr	c
      000138 EA               [12]  350 	mov	a,r2
      000139 96               [12]  351 	subb	a,@r0
      00013A EB               [12]  352 	mov	a,r3
      00013B 08               [12]  353 	inc	r0
      00013C 96               [12]  354 	subb	a,@r0
      00013D 50 1B            [24]  355 	jnc	00109$
                                    356 ;	../../../../core/sys/etimer.c:73: tdist = t->timer.start + t->timer.interval - now;
      00013F EE               [12]  357 	mov	a,r6
      000140 2C               [12]  358 	add	a,r4
      000141 FC               [12]  359 	mov	r4,a
      000142 EF               [12]  360 	mov	a,r7
      000143 3D               [12]  361 	addc	a,r5
      000144 FD               [12]  362 	mov	r5,a
      000145 A8 81            [24]  363 	mov	r0,sp
      000147 18               [12]  364 	dec	r0
      000148 EC               [12]  365 	mov	a,r4
      000149 C3               [12]  366 	clr	c
      00014A 96               [12]  367 	subb	a,@r0
      00014B FC               [12]  368 	mov	r4,a
      00014C ED               [12]  369 	mov	a,r5
      00014D 08               [12]  370 	inc	r0
      00014E 96               [12]  371 	subb	a,@r0
      00014F FD               [12]  372 	mov	r5,a
      000150 E5 81            [12]  373 	mov	a,sp
      000152 24 FD            [12]  374 	add	a,#0xfd
      000154 F8               [12]  375 	mov	r0,a
      000155 A6 04            [24]  376 	mov	@r0,ar4
      000157 08               [12]  377 	inc	r0
      000158 A6 05            [24]  378 	mov	@r0,ar5
      00015A                        379 00109$:
                                    380 ;	../../../../core/sys/etimer.c:71: for(t = t->next; t != NULL; t = t->next) {
      00015A E5 81            [12]  381 	mov	a,sp
      00015C 24 FA            [12]  382 	add	a,#0xfa
      00015E F8               [12]  383 	mov	r0,a
      00015F 74 04            [12]  384 	mov	a,#0x04
      000161 26               [12]  385 	add	a,@r0
      000162 FD               [12]  386 	mov	r5,a
      000163 E4               [12]  387 	clr	a
      000164 08               [12]  388 	inc	r0
      000165 36               [12]  389 	addc	a,@r0
      000166 FE               [12]  390 	mov	r6,a
      000167 08               [12]  391 	inc	r0
      000168 86 07            [24]  392 	mov	ar7,@r0
      00016A 8D 82            [24]  393 	mov	dpl,r5
      00016C 8E 83            [24]  394 	mov	dph,r6
      00016E 8F F0            [24]  395 	mov	b,r7
      000170 E5 81            [12]  396 	mov	a,sp
      000172 24 FA            [12]  397 	add	a,#0xfa
      000174 F8               [12]  398 	mov	r0,a
      000175 12r00r00         [24]  399 	lcall	__gptrget
      000178 F6               [12]  400 	mov	@r0,a
      000179 A3               [24]  401 	inc	dptr
      00017A 12r00r00         [24]  402 	lcall	__gptrget
      00017D 08               [12]  403 	inc	r0
      00017E F6               [12]  404 	mov	@r0,a
      00017F A3               [24]  405 	inc	dptr
      000180 12r00r00         [24]  406 	lcall	__gptrget
      000183 08               [12]  407 	inc	r0
      000184 F6               [12]  408 	mov	@r0,a
      000185 02r00rC8         [24]  409 	ljmp	00108$
      000188                        410 00103$:
                                    411 ;	../../../../core/sys/etimer.c:76: next_expiration = now + tdist;
      000188 A8 81            [24]  412 	mov	r0,sp
      00018A 18               [12]  413 	dec	r0
      00018B E5 81            [12]  414 	mov	a,sp
      00018D 24 FD            [12]  415 	add	a,#0xfd
      00018F F9               [12]  416 	mov	r1,a
      000190 90r00r03         [24]  417 	mov	dptr,#_next_expiration
      000193 E7               [12]  418 	mov	a,@r1
      000194 26               [12]  419 	add	a,@r0
      000195 F0               [24]  420 	movx	@dptr,a
      000196 09               [12]  421 	inc	r1
      000197 E7               [12]  422 	mov	a,@r1
      000198 08               [12]  423 	inc	r0
      000199 36               [12]  424 	addc	a,@r0
      00019A A3               [24]  425 	inc	dptr
      00019B F0               [24]  426 	movx	@dptr,a
      00019C                        427 00110$:
      00019C E5 81            [12]  428 	mov	a,sp
      00019E 24 F9            [12]  429 	add	a,#0xF9
      0001A0 F5 81            [12]  430 	mov	sp,a
      0001A2 02r00r00         [24]  431 	ljmp	__sdcc_banked_ret
                                    432 ;------------------------------------------------------------
                                    433 ;Allocation info for local variables in function 'process_thread_etimer_process'
                                    434 ;------------------------------------------------------------
                                    435 ;ev                        Allocated to stack - sp -15
                                    436 ;data                      Allocated to stack - sp -18
                                    437 ;process_pt                Allocated to registers r5 r6 r7 
                                    438 ;t                         Allocated to stack - sp -8
                                    439 ;u                         Allocated to stack - sp -5
                                    440 ;PT_YIELD_FLAG             Allocated to registers r4 
                                    441 ;p                         Allocated to stack - sp -2
                                    442 ;sloc0                     Allocated to stack - sp -11
                                    443 ;------------------------------------------------------------
                                    444 ;	../../../../core/sys/etimer.c:80: PROCESS_THREAD(etimer_process, ev, data)
                                    445 ;	-----------------------------------------
                                    446 ;	 function process_thread_etimer_process
                                    447 ;	-----------------------------------------
      0001A5                        448 _process_thread_etimer_process:
      0001A5 E5 81            [12]  449 	mov	a,sp
      0001A7 24 0C            [12]  450 	add	a,#0x0C
      0001A9 F5 81            [12]  451 	mov	sp,a
                                    452 ;	../../../../core/sys/etimer.c:84: PROCESS_BEGIN();
      0001AB AD 82            [24]  453 	mov	r5,dpl
      0001AD AE 83            [24]  454 	mov	r6,dph
      0001AF AF F0            [24]  455 	mov	r7,b
      0001B1 7C 01            [12]  456 	mov	r4,#0x01
      0001B3 12r00r00         [24]  457 	lcall	__gptrget
      0001B6 FA               [12]  458 	mov	r2,a
      0001B7 A3               [24]  459 	inc	dptr
      0001B8 12r00r00         [24]  460 	lcall	__gptrget
      0001BB FB               [12]  461 	mov	r3,a
      0001BC BA 00 05         [24]  462 	cjne	r2,#0x00,00198$
      0001BF BB 00 02         [24]  463 	cjne	r3,#0x00,00198$
      0001C2 80 0B            [24]  464 	sjmp	00101$
      0001C4                        465 00198$:
      0001C4 BA 59 05         [24]  466 	cjne	r2,#0x59,00199$
      0001C7 BB 00 02         [24]  467 	cjne	r3,#0x00,00199$
      0001CA 80 20            [24]  468 	sjmp	00102$
      0001CC                        469 00199$:
      0001CC 02r05rDB         [24]  470 	ljmp	00138$
      0001CF                        471 00101$:
                                    472 ;	../../../../core/sys/etimer.c:86: timerlist = NULL;
      0001CF 90r00r00         [24]  473 	mov	dptr,#_timerlist
      0001D2 E4               [12]  474 	clr	a
      0001D3 F0               [24]  475 	movx	@dptr,a
      0001D4 E4               [12]  476 	clr	a
      0001D5 A3               [24]  477 	inc	dptr
      0001D6 F0               [24]  478 	movx	@dptr,a
      0001D7 E4               [12]  479 	clr	a
      0001D8 A3               [24]  480 	inc	dptr
      0001D9 F0               [24]  481 	movx	@dptr,a
                                    482 ;	../../../../core/sys/etimer.c:88: while(1) {
      0001DA                        483 00136$:
                                    484 ;	../../../../core/sys/etimer.c:89: PROCESS_YIELD();
      0001DA 7C 00            [12]  485 	mov	r4,#0x00
      0001DC 8D 82            [24]  486 	mov	dpl,r5
      0001DE 8E 83            [24]  487 	mov	dph,r6
      0001E0 8F F0            [24]  488 	mov	b,r7
      0001E2 74 59            [12]  489 	mov	a,#0x59
      0001E4 12r00r00         [24]  490 	lcall	__gptrput
      0001E7 A3               [24]  491 	inc	dptr
      0001E8 E4               [12]  492 	clr	a
      0001E9 12r00r00         [24]  493 	lcall	__gptrput
      0001EC                        494 00102$:
      0001EC EC               [12]  495 	mov	a,r4
      0001ED 70 06            [24]  496 	jnz	00106$
      0001EF 75 82 01         [24]  497 	mov	dpl,#0x01
      0001F2 02r05rED         [24]  498 	ljmp	00142$
      0001F5                        499 00106$:
                                    500 ;	../../../../core/sys/etimer.c:91: if(ev == PROCESS_EVENT_EXITED) {
      0001F5 E5 81            [12]  501 	mov	a,sp
      0001F7 24 F1            [12]  502 	add	a,#0xf1
      0001F9 F8               [12]  503 	mov	r0,a
      0001FA B6 87 02         [24]  504 	cjne	@r0,#0x87,00201$
      0001FD 80 03            [24]  505 	sjmp	00202$
      0001FF                        506 00201$:
      0001FF 02r03rA2         [24]  507 	ljmp	00123$
      000202                        508 00202$:
                                    509 ;	../../../../core/sys/etimer.c:92: struct process *p = data;
      000202 E5 81            [12]  510 	mov	a,sp
      000204 24 EE            [12]  511 	add	a,#0xee
      000206 F8               [12]  512 	mov	r0,a
      000207 A9 81            [24]  513 	mov	r1,sp
      000209 19               [12]  514 	dec	r1
      00020A 19               [12]  515 	dec	r1
      00020B E6               [12]  516 	mov	a,@r0
      00020C F7               [12]  517 	mov	@r1,a
      00020D 08               [12]  518 	inc	r0
      00020E 09               [12]  519 	inc	r1
      00020F E6               [12]  520 	mov	a,@r0
      000210 F7               [12]  521 	mov	@r1,a
      000211 08               [12]  522 	inc	r0
      000212 09               [12]  523 	inc	r1
      000213 E6               [12]  524 	mov	a,@r0
      000214 F7               [12]  525 	mov	@r1,a
                                    526 ;	../../../../core/sys/etimer.c:94: while(timerlist != NULL && timerlist->p == p) {
      000215                        527 00109$:
      000215 90r00r00         [24]  528 	mov	dptr,#_timerlist
      000218 E0               [24]  529 	movx	a,@dptr
      000219 FA               [12]  530 	mov	r2,a
      00021A A3               [24]  531 	inc	dptr
      00021B E0               [24]  532 	movx	a,@dptr
      00021C FB               [12]  533 	mov	r3,a
      00021D A3               [24]  534 	inc	dptr
      00021E E0               [24]  535 	movx	a,@dptr
      00021F FC               [12]  536 	mov	r4,a
      000220 EA               [12]  537 	mov	a,r2
      000221 4B               [12]  538 	orl	a,r3
      000222 60 78            [24]  539 	jz	00111$
      000224 C0 05            [24]  540 	push	ar5
      000226 C0 06            [24]  541 	push	ar6
      000228 C0 07            [24]  542 	push	ar7
      00022A 74 07            [12]  543 	mov	a,#0x07
      00022C 2A               [12]  544 	add	a,r2
      00022D FD               [12]  545 	mov	r5,a
      00022E E4               [12]  546 	clr	a
      00022F 3B               [12]  547 	addc	a,r3
      000230 FE               [12]  548 	mov	r6,a
      000231 8C 07            [24]  549 	mov	ar7,r4
      000233 8D 82            [24]  550 	mov	dpl,r5
      000235 8E 83            [24]  551 	mov	dph,r6
      000237 8F F0            [24]  552 	mov	b,r7
      000239 12r00r00         [24]  553 	lcall	__gptrget
      00023C FD               [12]  554 	mov	r5,a
      00023D A3               [24]  555 	inc	dptr
      00023E 12r00r00         [24]  556 	lcall	__gptrget
      000241 FE               [12]  557 	mov	r6,a
      000242 A3               [24]  558 	inc	dptr
      000243 12r00r00         [24]  559 	lcall	__gptrget
      000246 FF               [12]  560 	mov	r7,a
      000247 E5 81            [12]  561 	mov	a,sp
      000249 24 FB            [12]  562 	add	a,#0xfb
      00024B F8               [12]  563 	mov	r0,a
      00024C C0 05            [24]  564 	push	ar5
      00024E C0 06            [24]  565 	push	ar6
      000250 C0 07            [24]  566 	push	ar7
      000252 86 82            [24]  567 	mov	dpl,@r0
      000254 08               [12]  568 	inc	r0
      000255 86 83            [24]  569 	mov	dph,@r0
      000257 08               [12]  570 	inc	r0
      000258 86 F0            [24]  571 	mov	b,@r0
      00025A 12r00r00         [24]  572 	lcall	___gptr_cmp
      00025D 15 81            [12]  573 	dec	sp
      00025F 15 81            [12]  574 	dec	sp
      000261 15 81            [12]  575 	dec	sp
      000263 60 08            [24]  576 	jz	00205$
      000265 D0 07            [24]  577 	pop	ar7
      000267 D0 06            [24]  578 	pop	ar6
      000269 D0 05            [24]  579 	pop	ar5
      00026B 80 2F            [24]  580 	sjmp	00111$
      00026D                        581 00205$:
      00026D D0 07            [24]  582 	pop	ar7
      00026F D0 06            [24]  583 	pop	ar6
      000271 D0 05            [24]  584 	pop	ar5
                                    585 ;	../../../../core/sys/etimer.c:95: timerlist = timerlist->next;
      000273 74 04            [12]  586 	mov	a,#0x04
      000275 2A               [12]  587 	add	a,r2
      000276 FA               [12]  588 	mov	r2,a
      000277 E4               [12]  589 	clr	a
      000278 3B               [12]  590 	addc	a,r3
      000279 FB               [12]  591 	mov	r3,a
      00027A 8A 82            [24]  592 	mov	dpl,r2
      00027C 8B 83            [24]  593 	mov	dph,r3
      00027E 8C F0            [24]  594 	mov	b,r4
      000280 12r00r00         [24]  595 	lcall	__gptrget
      000283 FA               [12]  596 	mov	r2,a
      000284 A3               [24]  597 	inc	dptr
      000285 12r00r00         [24]  598 	lcall	__gptrget
      000288 FB               [12]  599 	mov	r3,a
      000289 A3               [24]  600 	inc	dptr
      00028A 12r00r00         [24]  601 	lcall	__gptrget
      00028D FC               [12]  602 	mov	r4,a
      00028E 90r00r00         [24]  603 	mov	dptr,#_timerlist
      000291 EA               [12]  604 	mov	a,r2
      000292 F0               [24]  605 	movx	@dptr,a
      000293 EB               [12]  606 	mov	a,r3
      000294 A3               [24]  607 	inc	dptr
      000295 F0               [24]  608 	movx	@dptr,a
      000296 EC               [12]  609 	mov	a,r4
      000297 A3               [24]  610 	inc	dptr
      000298 F0               [24]  611 	movx	@dptr,a
      000299 02r02r15         [24]  612 	ljmp	00109$
      00029C                        613 00111$:
                                    614 ;	../../../../core/sys/etimer.c:98: if(timerlist != NULL) {
      00029C 90r00r00         [24]  615 	mov	dptr,#_timerlist
      00029F E0               [24]  616 	movx	a,@dptr
      0002A0 FA               [12]  617 	mov	r2,a
      0002A1 A3               [24]  618 	inc	dptr
      0002A2 E0               [24]  619 	movx	a,@dptr
      0002A3 FB               [12]  620 	mov	r3,a
      0002A4 A3               [24]  621 	inc	dptr
      0002A5 E0               [24]  622 	movx	a,@dptr
      0002A6 FC               [12]  623 	mov	r4,a
      0002A7 EA               [12]  624 	mov	a,r2
      0002A8 4B               [12]  625 	orl	a,r3
      0002A9 70 03            [24]  626 	jnz	00206$
      0002AB 02r01rDA         [24]  627 	ljmp	00136$
      0002AE                        628 00206$:
                                    629 ;	../../../../core/sys/etimer.c:99: t = timerlist;
      0002AE E5 81            [12]  630 	mov	a,sp
      0002B0 24 F8            [12]  631 	add	a,#0xf8
      0002B2 F8               [12]  632 	mov	r0,a
      0002B3 A6 02            [24]  633 	mov	@r0,ar2
      0002B5 08               [12]  634 	inc	r0
      0002B6 A6 03            [24]  635 	mov	@r0,ar3
      0002B8 08               [12]  636 	inc	r0
      0002B9 A6 04            [24]  637 	mov	@r0,ar4
                                    638 ;	../../../../core/sys/etimer.c:100: while(t->next != NULL) {
      0002BB                        639 00115$:
      0002BB E5 81            [12]  640 	mov	a,sp
      0002BD 24 F8            [12]  641 	add	a,#0xf8
      0002BF F8               [12]  642 	mov	r0,a
      0002C0 74 04            [12]  643 	mov	a,#0x04
      0002C2 26               [12]  644 	add	a,@r0
      0002C3 FA               [12]  645 	mov	r2,a
      0002C4 E4               [12]  646 	clr	a
      0002C5 08               [12]  647 	inc	r0
      0002C6 36               [12]  648 	addc	a,@r0
      0002C7 FB               [12]  649 	mov	r3,a
      0002C8 08               [12]  650 	inc	r0
      0002C9 86 04            [24]  651 	mov	ar4,@r0
      0002CB 8A 82            [24]  652 	mov	dpl,r2
      0002CD 8B 83            [24]  653 	mov	dph,r3
      0002CF 8C F0            [24]  654 	mov	b,r4
      0002D1 E5 81            [12]  655 	mov	a,sp
      0002D3 24 F5            [12]  656 	add	a,#0xf5
      0002D5 F8               [12]  657 	mov	r0,a
      0002D6 12r00r00         [24]  658 	lcall	__gptrget
      0002D9 F6               [12]  659 	mov	@r0,a
      0002DA A3               [24]  660 	inc	dptr
      0002DB 12r00r00         [24]  661 	lcall	__gptrget
      0002DE 08               [12]  662 	inc	r0
      0002DF F6               [12]  663 	mov	@r0,a
      0002E0 A3               [24]  664 	inc	dptr
      0002E1 12r00r00         [24]  665 	lcall	__gptrget
      0002E4 08               [12]  666 	inc	r0
      0002E5 F6               [12]  667 	mov	@r0,a
      0002E6 E5 81            [12]  668 	mov	a,sp
      0002E8 24 F5            [12]  669 	add	a,#0xf5
      0002EA F8               [12]  670 	mov	r0,a
      0002EB E6               [12]  671 	mov	a,@r0
      0002EC 08               [12]  672 	inc	r0
      0002ED 46               [12]  673 	orl	a,@r0
      0002EE 70 03            [24]  674 	jnz	00207$
      0002F0 02r01rDA         [24]  675 	ljmp	00136$
      0002F3                        676 00207$:
                                    677 ;	../../../../core/sys/etimer.c:101: if(t->next->p == p) {
      0002F3 C0 05            [24]  678 	push	ar5
      0002F5 C0 06            [24]  679 	push	ar6
      0002F7 C0 07            [24]  680 	push	ar7
      0002F9 E5 81            [12]  681 	mov	a,sp
      0002FB 24 F2            [12]  682 	add	a,#0xf2
      0002FD F8               [12]  683 	mov	r0,a
      0002FE 74 07            [12]  684 	mov	a,#0x07
      000300 26               [12]  685 	add	a,@r0
      000301 FD               [12]  686 	mov	r5,a
      000302 E4               [12]  687 	clr	a
      000303 08               [12]  688 	inc	r0
      000304 36               [12]  689 	addc	a,@r0
      000305 FE               [12]  690 	mov	r6,a
      000306 08               [12]  691 	inc	r0
      000307 86 07            [24]  692 	mov	ar7,@r0
      000309 8D 82            [24]  693 	mov	dpl,r5
      00030B 8E 83            [24]  694 	mov	dph,r6
      00030D 8F F0            [24]  695 	mov	b,r7
      00030F 12r00r00         [24]  696 	lcall	__gptrget
      000312 FD               [12]  697 	mov	r5,a
      000313 A3               [24]  698 	inc	dptr
      000314 12r00r00         [24]  699 	lcall	__gptrget
      000317 FE               [12]  700 	mov	r6,a
      000318 A3               [24]  701 	inc	dptr
      000319 12r00r00         [24]  702 	lcall	__gptrget
      00031C FF               [12]  703 	mov	r7,a
      00031D E5 81            [12]  704 	mov	a,sp
      00031F 24 FB            [12]  705 	add	a,#0xfb
      000321 F8               [12]  706 	mov	r0,a
      000322 C0 05            [24]  707 	push	ar5
      000324 C0 06            [24]  708 	push	ar6
      000326 C0 07            [24]  709 	push	ar7
      000328 86 82            [24]  710 	mov	dpl,@r0
      00032A 08               [12]  711 	inc	r0
      00032B 86 83            [24]  712 	mov	dph,@r0
      00032D 08               [12]  713 	inc	r0
      00032E 86 F0            [24]  714 	mov	b,@r0
      000330 12r00r00         [24]  715 	lcall	___gptr_cmp
      000333 15 81            [12]  716 	dec	sp
      000335 15 81            [12]  717 	dec	sp
      000337 15 81            [12]  718 	dec	sp
      000339 60 08            [24]  719 	jz	00209$
      00033B D0 07            [24]  720 	pop	ar7
      00033D D0 06            [24]  721 	pop	ar6
      00033F D0 05            [24]  722 	pop	ar5
      000341 80 41            [24]  723 	sjmp	00113$
      000343                        724 00209$:
                                    725 ;	../../../../core/sys/etimer.c:102: t->next = t->next->next;
      000343 E5 81            [12]  726 	mov	a,sp
      000345 24 F2            [12]  727 	add	a,#0xf2
      000347 F8               [12]  728 	mov	r0,a
      000348 74 04            [12]  729 	mov	a,#0x04
      00034A 26               [12]  730 	add	a,@r0
      00034B FD               [12]  731 	mov	r5,a
      00034C E4               [12]  732 	clr	a
      00034D 08               [12]  733 	inc	r0
      00034E 36               [12]  734 	addc	a,@r0
      00034F FE               [12]  735 	mov	r6,a
      000350 08               [12]  736 	inc	r0
      000351 86 07            [24]  737 	mov	ar7,@r0
      000353 8D 82            [24]  738 	mov	dpl,r5
      000355 8E 83            [24]  739 	mov	dph,r6
      000357 8F F0            [24]  740 	mov	b,r7
      000359 12r00r00         [24]  741 	lcall	__gptrget
      00035C FD               [12]  742 	mov	r5,a
      00035D A3               [24]  743 	inc	dptr
      00035E 12r00r00         [24]  744 	lcall	__gptrget
      000361 FE               [12]  745 	mov	r6,a
      000362 A3               [24]  746 	inc	dptr
      000363 12r00r00         [24]  747 	lcall	__gptrget
      000366 FF               [12]  748 	mov	r7,a
      000367 8A 82            [24]  749 	mov	dpl,r2
      000369 8B 83            [24]  750 	mov	dph,r3
      00036B 8C F0            [24]  751 	mov	b,r4
      00036D ED               [12]  752 	mov	a,r5
      00036E 12r00r00         [24]  753 	lcall	__gptrput
      000371 A3               [24]  754 	inc	dptr
      000372 EE               [12]  755 	mov	a,r6
      000373 12r00r00         [24]  756 	lcall	__gptrput
      000376 A3               [24]  757 	inc	dptr
      000377 EF               [12]  758 	mov	a,r7
      000378 12r00r00         [24]  759 	lcall	__gptrput
      00037B D0 07            [24]  760 	pop	ar7
      00037D D0 06            [24]  761 	pop	ar6
      00037F D0 05            [24]  762 	pop	ar5
      000381 02r02rBB         [24]  763 	ljmp	00115$
      000384                        764 00113$:
                                    765 ;	../../../../core/sys/etimer.c:104: t = t->next;
      000384 8A 82            [24]  766 	mov	dpl,r2
      000386 8B 83            [24]  767 	mov	dph,r3
      000388 8C F0            [24]  768 	mov	b,r4
      00038A E5 81            [12]  769 	mov	a,sp
      00038C 24 F8            [12]  770 	add	a,#0xf8
      00038E F8               [12]  771 	mov	r0,a
      00038F 12r00r00         [24]  772 	lcall	__gptrget
      000392 F6               [12]  773 	mov	@r0,a
      000393 A3               [24]  774 	inc	dptr
      000394 12r00r00         [24]  775 	lcall	__gptrget
      000397 08               [12]  776 	inc	r0
      000398 F6               [12]  777 	mov	@r0,a
      000399 A3               [24]  778 	inc	dptr
      00039A 12r00r00         [24]  779 	lcall	__gptrget
      00039D 08               [12]  780 	inc	r0
      00039E F6               [12]  781 	mov	@r0,a
      00039F 02r02rBB         [24]  782 	ljmp	00115$
                                    783 ;	../../../../core/sys/etimer.c:107: continue;
      0003A2                        784 00123$:
                                    785 ;	../../../../core/sys/etimer.c:108: } else if(ev != PROCESS_EVENT_POLL) {
      0003A2 E5 81            [12]  786 	mov	a,sp
      0003A4 24 F1            [12]  787 	add	a,#0xf1
      0003A6 F8               [12]  788 	mov	r0,a
      0003A7 B6 82 02         [24]  789 	cjne	@r0,#0x82,00210$
      0003AA 80 03            [24]  790 	sjmp	00211$
      0003AC                        791 00210$:
      0003AC 02r01rDA         [24]  792 	ljmp	00136$
      0003AF                        793 00211$:
                                    794 ;	../../../../core/sys/etimer.c:112: again:
      0003AF                        795 00125$:
                                    796 ;	../../../../core/sys/etimer.c:114: u = NULL;
      0003AF E5 81            [12]  797 	mov	a,sp
      0003B1 24 FB            [12]  798 	add	a,#0xfb
      0003B3 F8               [12]  799 	mov	r0,a
      0003B4 E4               [12]  800 	clr	a
      0003B5 F6               [12]  801 	mov	@r0,a
      0003B6 08               [12]  802 	inc	r0
      0003B7 F6               [12]  803 	mov	@r0,a
      0003B8 08               [12]  804 	inc	r0
      0003B9 76 00            [12]  805 	mov	@r0,#0x00
                                    806 ;	../../../../core/sys/etimer.c:116: for(t = timerlist; t != NULL; t = t->next) {
      0003BB 90r00r00         [24]  807 	mov	dptr,#_timerlist
      0003BE E0               [24]  808 	movx	a,@dptr
      0003BF FA               [12]  809 	mov	r2,a
      0003C0 A3               [24]  810 	inc	dptr
      0003C1 E0               [24]  811 	movx	a,@dptr
      0003C2 FB               [12]  812 	mov	r3,a
      0003C3 A3               [24]  813 	inc	dptr
      0003C4 E0               [24]  814 	movx	a,@dptr
      0003C5 FC               [12]  815 	mov	r4,a
      0003C6 E5 81            [12]  816 	mov	a,sp
      0003C8 24 F8            [12]  817 	add	a,#0xf8
      0003CA F8               [12]  818 	mov	r0,a
      0003CB A6 02            [24]  819 	mov	@r0,ar2
      0003CD 08               [12]  820 	inc	r0
      0003CE A6 03            [24]  821 	mov	@r0,ar3
      0003D0 08               [12]  822 	inc	r0
      0003D1 A6 04            [24]  823 	mov	@r0,ar4
      0003D3                        824 00140$:
      0003D3 E5 81            [12]  825 	mov	a,sp
      0003D5 24 F8            [12]  826 	add	a,#0xf8
      0003D7 F8               [12]  827 	mov	r0,a
      0003D8 E4               [12]  828 	clr	a
      0003D9 C0 E0            [24]  829 	push	acc
      0003DB E4               [12]  830 	clr	a
      0003DC C0 E0            [24]  831 	push	acc
      0003DE E4               [12]  832 	clr	a
      0003DF C0 E0            [24]  833 	push	acc
      0003E1 86 82            [24]  834 	mov	dpl,@r0
      0003E3 08               [12]  835 	inc	r0
      0003E4 86 83            [24]  836 	mov	dph,@r0
      0003E6 08               [12]  837 	inc	r0
      0003E7 86 F0            [24]  838 	mov	b,@r0
      0003E9 12r00r00         [24]  839 	lcall	___gptr_cmp
      0003EC 15 81            [12]  840 	dec	sp
      0003EE 15 81            [12]  841 	dec	sp
      0003F0 15 81            [12]  842 	dec	sp
      0003F2 70 03            [24]  843 	jnz	00212$
      0003F4 02r01rDA         [24]  844 	ljmp	00136$
      0003F7                        845 00212$:
                                    846 ;	../../../../core/sys/etimer.c:117: if(timer_expired(&t->timer)) {
      0003F7 E5 81            [12]  847 	mov	a,sp
      0003F9 24 F8            [12]  848 	add	a,#0xf8
      0003FB F8               [12]  849 	mov	r0,a
      0003FC 86 82            [24]  850 	mov	dpl,@r0
      0003FE 08               [12]  851 	inc	r0
      0003FF 86 83            [24]  852 	mov	dph,@r0
      000401 08               [12]  853 	inc	r0
      000402 86 F0            [24]  854 	mov	b,@r0
      000404 C0 07            [24]  855 	push	ar7
      000406 C0 06            [24]  856 	push	ar6
      000408 C0 05            [24]  857 	push	ar5
      00040A 78r00            [12]  858 	mov	r0,#_timer_expired
      00040C 79s00            [12]  859 	mov	r1,#(_timer_expired >> 8)
      00040E 7As00            [12]  860 	mov	r2,#(_timer_expired >> 16)
      000410 12r00r00         [24]  861 	lcall	__sdcc_banked_call
      000413 E5 82            [12]  862 	mov	a,dpl
      000415 85 83 F0         [24]  863 	mov	b,dph
      000418 D0 05            [24]  864 	pop	ar5
      00041A D0 06            [24]  865 	pop	ar6
      00041C D0 07            [24]  866 	pop	ar7
      00041E 45 F0            [12]  867 	orl	a,b
      000420 70 03            [24]  868 	jnz	00213$
      000422 02r05r99         [24]  869 	ljmp	00133$
      000425                        870 00213$:
                                    871 ;	../../../../core/sys/etimer.c:118: if(process_post(t->p, PROCESS_EVENT_TIMER, t) == PROCESS_ERR_OK) {
      000425 C0 05            [24]  872 	push	ar5
      000427 C0 06            [24]  873 	push	ar6
      000429 C0 07            [24]  874 	push	ar7
      00042B E5 81            [12]  875 	mov	a,sp
      00042D 24 F5            [12]  876 	add	a,#0xf5
      00042F F8               [12]  877 	mov	r0,a
      000430 86 02            [24]  878 	mov	ar2,@r0
      000432 08               [12]  879 	inc	r0
      000433 86 03            [24]  880 	mov	ar3,@r0
      000435 08               [12]  881 	inc	r0
      000436 86 04            [24]  882 	mov	ar4,@r0
      000438 E5 81            [12]  883 	mov	a,sp
      00043A 24 F5            [12]  884 	add	a,#0xf5
      00043C F8               [12]  885 	mov	r0,a
      00043D E5 81            [12]  886 	mov	a,sp
      00043F 24 F2            [12]  887 	add	a,#0xf2
      000441 F9               [12]  888 	mov	r1,a
      000442 74 07            [12]  889 	mov	a,#0x07
      000444 26               [12]  890 	add	a,@r0
      000445 F7               [12]  891 	mov	@r1,a
      000446 E4               [12]  892 	clr	a
      000447 08               [12]  893 	inc	r0
      000448 36               [12]  894 	addc	a,@r0
      000449 09               [12]  895 	inc	r1
      00044A F7               [12]  896 	mov	@r1,a
      00044B 08               [12]  897 	inc	r0
      00044C 09               [12]  898 	inc	r1
      00044D E6               [12]  899 	mov	a,@r0
      00044E F7               [12]  900 	mov	@r1,a
      00044F E5 81            [12]  901 	mov	a,sp
      000451 24 F2            [12]  902 	add	a,#0xf2
      000453 F8               [12]  903 	mov	r0,a
      000454 86 82            [24]  904 	mov	dpl,@r0
      000456 08               [12]  905 	inc	r0
      000457 86 83            [24]  906 	mov	dph,@r0
      000459 08               [12]  907 	inc	r0
      00045A 86 F0            [24]  908 	mov	b,@r0
      00045C 12r00r00         [24]  909 	lcall	__gptrget
      00045F FD               [12]  910 	mov	r5,a
      000460 A3               [24]  911 	inc	dptr
      000461 12r00r00         [24]  912 	lcall	__gptrget
      000464 FE               [12]  913 	mov	r6,a
      000465 A3               [24]  914 	inc	dptr
      000466 12r00r00         [24]  915 	lcall	__gptrget
      000469 FF               [12]  916 	mov	r7,a
      00046A C0 05            [24]  917 	push	ar5
      00046C C0 02            [24]  918 	push	ar2
      00046E C0 03            [24]  919 	push	ar3
      000470 C0 04            [24]  920 	push	ar4
      000472 74 88            [12]  921 	mov	a,#0x88
      000474 C0 E0            [24]  922 	push	acc
      000476 8D 82            [24]  923 	mov	dpl,r5
      000478 8E 83            [24]  924 	mov	dph,r6
      00047A 8F F0            [24]  925 	mov	b,r7
      00047C 78r00            [12]  926 	mov	r0,#_process_post
      00047E 79s00            [12]  927 	mov	r1,#(_process_post >> 8)
      000480 7As00            [12]  928 	mov	r2,#(_process_post >> 16)
      000482 12r00r00         [24]  929 	lcall	__sdcc_banked_call
      000485 AE 82            [24]  930 	mov	r6,dpl
      000487 AF 83            [24]  931 	mov	r7,dph
      000489 E5 81            [12]  932 	mov	a,sp
      00048B 24 FC            [12]  933 	add	a,#0xfc
      00048D F5 81            [12]  934 	mov	sp,a
      00048F D0 05            [24]  935 	pop	ar5
      000491 EE               [12]  936 	mov	a,r6
      000492 4F               [12]  937 	orl	a,r7
      000493 D0 07            [24]  938 	pop	ar7
      000495 D0 06            [24]  939 	pop	ar6
      000497 D0 05            [24]  940 	pop	ar5
      000499 60 03            [24]  941 	jz	00214$
      00049B 02r05r84         [24]  942 	ljmp	00130$
      00049E                        943 00214$:
                                    944 ;	../../../../core/sys/etimer.c:123: t->p = PROCESS_NONE;
      00049E E5 81            [12]  945 	mov	a,sp
      0004A0 24 F5            [12]  946 	add	a,#0xf5
      0004A2 F8               [12]  947 	mov	r0,a
      0004A3 86 82            [24]  948 	mov	dpl,@r0
      0004A5 08               [12]  949 	inc	r0
      0004A6 86 83            [24]  950 	mov	dph,@r0
      0004A8 08               [12]  951 	inc	r0
      0004A9 86 F0            [24]  952 	mov	b,@r0
      0004AB E4               [12]  953 	clr	a
      0004AC 12r00r00         [24]  954 	lcall	__gptrput
      0004AF A3               [24]  955 	inc	dptr
      0004B0 E4               [12]  956 	clr	a
      0004B1 12r00r00         [24]  957 	lcall	__gptrput
      0004B4 A3               [24]  958 	inc	dptr
      0004B5 E4               [12]  959 	clr	a
      0004B6 12r00r00         [24]  960 	lcall	__gptrput
                                    961 ;	../../../../core/sys/etimer.c:124: if(u != NULL) {
      0004B9 E5 81            [12]  962 	mov	a,sp
      0004BB 24 FB            [12]  963 	add	a,#0xfb
      0004BD F8               [12]  964 	mov	r0,a
      0004BE E6               [12]  965 	mov	a,@r0
      0004BF 08               [12]  966 	inc	r0
      0004C0 46               [12]  967 	orl	a,@r0
      0004C1 60 56            [24]  968 	jz	00127$
                                    969 ;	../../../../core/sys/etimer.c:125: u->next = t->next;
      0004C3 C0 05            [24]  970 	push	ar5
      0004C5 C0 06            [24]  971 	push	ar6
      0004C7 C0 07            [24]  972 	push	ar7
      0004C9 E5 81            [12]  973 	mov	a,sp
      0004CB 24 F8            [12]  974 	add	a,#0xf8
      0004CD F8               [12]  975 	mov	r0,a
      0004CE 74 04            [12]  976 	mov	a,#0x04
      0004D0 26               [12]  977 	add	a,@r0
      0004D1 FA               [12]  978 	mov	r2,a
      0004D2 E4               [12]  979 	clr	a
      0004D3 08               [12]  980 	inc	r0
      0004D4 36               [12]  981 	addc	a,@r0
      0004D5 FB               [12]  982 	mov	r3,a
      0004D6 08               [12]  983 	inc	r0
      0004D7 86 04            [24]  984 	mov	ar4,@r0
      0004D9 E5 81            [12]  985 	mov	a,sp
      0004DB 24 F5            [12]  986 	add	a,#0xf5
      0004DD F8               [12]  987 	mov	r0,a
      0004DE 74 04            [12]  988 	mov	a,#0x04
      0004E0 26               [12]  989 	add	a,@r0
      0004E1 FD               [12]  990 	mov	r5,a
      0004E2 E4               [12]  991 	clr	a
      0004E3 08               [12]  992 	inc	r0
      0004E4 36               [12]  993 	addc	a,@r0
      0004E5 FE               [12]  994 	mov	r6,a
      0004E6 08               [12]  995 	inc	r0
      0004E7 86 07            [24]  996 	mov	ar7,@r0
      0004E9 8D 82            [24]  997 	mov	dpl,r5
      0004EB 8E 83            [24]  998 	mov	dph,r6
      0004ED 8F F0            [24]  999 	mov	b,r7
      0004EF 12r00r00         [24] 1000 	lcall	__gptrget
      0004F2 FD               [12] 1001 	mov	r5,a
      0004F3 A3               [24] 1002 	inc	dptr
      0004F4 12r00r00         [24] 1003 	lcall	__gptrget
      0004F7 FE               [12] 1004 	mov	r6,a
      0004F8 A3               [24] 1005 	inc	dptr
      0004F9 12r00r00         [24] 1006 	lcall	__gptrget
      0004FC FF               [12] 1007 	mov	r7,a
      0004FD 8A 82            [24] 1008 	mov	dpl,r2
      0004FF 8B 83            [24] 1009 	mov	dph,r3
      000501 8C F0            [24] 1010 	mov	b,r4
      000503 ED               [12] 1011 	mov	a,r5
      000504 12r00r00         [24] 1012 	lcall	__gptrput
      000507 A3               [24] 1013 	inc	dptr
      000508 EE               [12] 1014 	mov	a,r6
      000509 12r00r00         [24] 1015 	lcall	__gptrput
      00050C A3               [24] 1016 	inc	dptr
      00050D EF               [12] 1017 	mov	a,r7
      00050E 12r00r00         [24] 1018 	lcall	__gptrput
      000511 D0 07            [24] 1019 	pop	ar7
      000513 D0 06            [24] 1020 	pop	ar6
      000515 D0 05            [24] 1021 	pop	ar5
      000517 80 2F            [24] 1022 	sjmp	00128$
      000519                       1023 00127$:
                                   1024 ;	../../../../core/sys/etimer.c:127: timerlist = t->next;
      000519 E5 81            [12] 1025 	mov	a,sp
      00051B 24 F8            [12] 1026 	add	a,#0xf8
      00051D F8               [12] 1027 	mov	r0,a
      00051E 74 04            [12] 1028 	mov	a,#0x04
      000520 26               [12] 1029 	add	a,@r0
      000521 FA               [12] 1030 	mov	r2,a
      000522 E4               [12] 1031 	clr	a
      000523 08               [12] 1032 	inc	r0
      000524 36               [12] 1033 	addc	a,@r0
      000525 FB               [12] 1034 	mov	r3,a
      000526 08               [12] 1035 	inc	r0
      000527 86 04            [24] 1036 	mov	ar4,@r0
      000529 8A 82            [24] 1037 	mov	dpl,r2
      00052B 8B 83            [24] 1038 	mov	dph,r3
      00052D 8C F0            [24] 1039 	mov	b,r4
      00052F 12r00r00         [24] 1040 	lcall	__gptrget
      000532 FA               [12] 1041 	mov	r2,a
      000533 A3               [24] 1042 	inc	dptr
      000534 12r00r00         [24] 1043 	lcall	__gptrget
      000537 FB               [12] 1044 	mov	r3,a
      000538 A3               [24] 1045 	inc	dptr
      000539 12r00r00         [24] 1046 	lcall	__gptrget
      00053C FC               [12] 1047 	mov	r4,a
      00053D 90r00r00         [24] 1048 	mov	dptr,#_timerlist
      000540 EA               [12] 1049 	mov	a,r2
      000541 F0               [24] 1050 	movx	@dptr,a
      000542 EB               [12] 1051 	mov	a,r3
      000543 A3               [24] 1052 	inc	dptr
      000544 F0               [24] 1053 	movx	@dptr,a
      000545 EC               [12] 1054 	mov	a,r4
      000546 A3               [24] 1055 	inc	dptr
      000547 F0               [24] 1056 	movx	@dptr,a
      000548                       1057 00128$:
                                   1058 ;	../../../../core/sys/etimer.c:129: t->next = NULL;
      000548 E5 81            [12] 1059 	mov	a,sp
      00054A 24 F8            [12] 1060 	add	a,#0xf8
      00054C F8               [12] 1061 	mov	r0,a
      00054D 74 04            [12] 1062 	mov	a,#0x04
      00054F 26               [12] 1063 	add	a,@r0
      000550 FA               [12] 1064 	mov	r2,a
      000551 E4               [12] 1065 	clr	a
      000552 08               [12] 1066 	inc	r0
      000553 36               [12] 1067 	addc	a,@r0
      000554 FB               [12] 1068 	mov	r3,a
      000555 08               [12] 1069 	inc	r0
      000556 86 04            [24] 1070 	mov	ar4,@r0
      000558 8A 82            [24] 1071 	mov	dpl,r2
      00055A 8B 83            [24] 1072 	mov	dph,r3
      00055C 8C F0            [24] 1073 	mov	b,r4
      00055E E4               [12] 1074 	clr	a
      00055F 12r00r00         [24] 1075 	lcall	__gptrput
      000562 A3               [24] 1076 	inc	dptr
      000563 E4               [12] 1077 	clr	a
      000564 12r00r00         [24] 1078 	lcall	__gptrput
      000567 A3               [24] 1079 	inc	dptr
      000568 E4               [12] 1080 	clr	a
      000569 12r00r00         [24] 1081 	lcall	__gptrput
                                   1082 ;	../../../../core/sys/etimer.c:130: update_time();
      00056C C0 07            [24] 1083 	push	ar7
      00056E C0 06            [24] 1084 	push	ar6
      000570 C0 05            [24] 1085 	push	ar5
      000572 78r00            [12] 1086 	mov	r0,#_update_time
      000574 79s00            [12] 1087 	mov	r1,#(_update_time >> 8)
      000576 7As00            [12] 1088 	mov	r2,#(_update_time >> 16)
      000578 12r00r00         [24] 1089 	lcall	__sdcc_banked_call
      00057B D0 05            [24] 1090 	pop	ar5
      00057D D0 06            [24] 1091 	pop	ar6
      00057F D0 07            [24] 1092 	pop	ar7
                                   1093 ;	../../../../core/sys/etimer.c:131: goto again;
      000581 02r03rAF         [24] 1094 	ljmp	00125$
      000584                       1095 00130$:
                                   1096 ;	../../../../core/sys/etimer.c:133: etimer_request_poll();
      000584 C0 07            [24] 1097 	push	ar7
      000586 C0 06            [24] 1098 	push	ar6
      000588 C0 05            [24] 1099 	push	ar5
      00058A 78rF6            [12] 1100 	mov	r0,#_etimer_request_poll
      00058C 79s05            [12] 1101 	mov	r1,#(_etimer_request_poll >> 8)
      00058E 7As00            [12] 1102 	mov	r2,#(_etimer_request_poll >> 16)
      000590 12r00r00         [24] 1103 	lcall	__sdcc_banked_call
      000593 D0 05            [24] 1104 	pop	ar5
      000595 D0 06            [24] 1105 	pop	ar6
      000597 D0 07            [24] 1106 	pop	ar7
      000599                       1107 00133$:
                                   1108 ;	../../../../core/sys/etimer.c:136: u = t;
      000599 E5 81            [12] 1109 	mov	a,sp
      00059B 24 F8            [12] 1110 	add	a,#0xf8
      00059D F8               [12] 1111 	mov	r0,a
      00059E E5 81            [12] 1112 	mov	a,sp
      0005A0 24 FB            [12] 1113 	add	a,#0xfb
      0005A2 F9               [12] 1114 	mov	r1,a
      0005A3 E6               [12] 1115 	mov	a,@r0
      0005A4 F7               [12] 1116 	mov	@r1,a
      0005A5 08               [12] 1117 	inc	r0
      0005A6 09               [12] 1118 	inc	r1
      0005A7 E6               [12] 1119 	mov	a,@r0
      0005A8 F7               [12] 1120 	mov	@r1,a
      0005A9 08               [12] 1121 	inc	r0
      0005AA 09               [12] 1122 	inc	r1
      0005AB E6               [12] 1123 	mov	a,@r0
      0005AC F7               [12] 1124 	mov	@r1,a
                                   1125 ;	../../../../core/sys/etimer.c:116: for(t = timerlist; t != NULL; t = t->next) {
      0005AD E5 81            [12] 1126 	mov	a,sp
      0005AF 24 F8            [12] 1127 	add	a,#0xf8
      0005B1 F8               [12] 1128 	mov	r0,a
      0005B2 74 04            [12] 1129 	mov	a,#0x04
      0005B4 26               [12] 1130 	add	a,@r0
      0005B5 FA               [12] 1131 	mov	r2,a
      0005B6 E4               [12] 1132 	clr	a
      0005B7 08               [12] 1133 	inc	r0
      0005B8 36               [12] 1134 	addc	a,@r0
      0005B9 FB               [12] 1135 	mov	r3,a
      0005BA 08               [12] 1136 	inc	r0
      0005BB 86 04            [24] 1137 	mov	ar4,@r0
      0005BD 8A 82            [24] 1138 	mov	dpl,r2
      0005BF 8B 83            [24] 1139 	mov	dph,r3
      0005C1 8C F0            [24] 1140 	mov	b,r4
      0005C3 E5 81            [12] 1141 	mov	a,sp
      0005C5 24 F8            [12] 1142 	add	a,#0xf8
      0005C7 F8               [12] 1143 	mov	r0,a
      0005C8 12r00r00         [24] 1144 	lcall	__gptrget
      0005CB F6               [12] 1145 	mov	@r0,a
      0005CC A3               [24] 1146 	inc	dptr
      0005CD 12r00r00         [24] 1147 	lcall	__gptrget
      0005D0 08               [12] 1148 	inc	r0
      0005D1 F6               [12] 1149 	mov	@r0,a
      0005D2 A3               [24] 1150 	inc	dptr
      0005D3 12r00r00         [24] 1151 	lcall	__gptrget
      0005D6 08               [12] 1152 	inc	r0
      0005D7 F6               [12] 1153 	mov	@r0,a
      0005D8 02r03rD3         [24] 1154 	ljmp	00140$
                                   1155 ;	../../../../core/sys/etimer.c:141: PROCESS_END();
      0005DB                       1156 00138$:
      0005DB 8D 82            [24] 1157 	mov	dpl,r5
      0005DD 8E 83            [24] 1158 	mov	dph,r6
      0005DF 8F F0            [24] 1159 	mov	b,r7
      0005E1 E4               [12] 1160 	clr	a
      0005E2 12r00r00         [24] 1161 	lcall	__gptrput
      0005E5 A3               [24] 1162 	inc	dptr
      0005E6 E4               [12] 1163 	clr	a
      0005E7 12r00r00         [24] 1164 	lcall	__gptrput
      0005EA 75 82 03         [24] 1165 	mov	dpl,#0x03
      0005ED                       1166 00142$:
      0005ED E5 81            [12] 1167 	mov	a,sp
      0005EF 24 F4            [12] 1168 	add	a,#0xF4
      0005F1 F5 81            [12] 1169 	mov	sp,a
      0005F3 02r00r00         [24] 1170 	ljmp	__sdcc_banked_ret
                                   1171 ;------------------------------------------------------------
                                   1172 ;Allocation info for local variables in function 'etimer_request_poll'
                                   1173 ;------------------------------------------------------------
                                   1174 ;	../../../../core/sys/etimer.c:145: etimer_request_poll(void)
                                   1175 ;	-----------------------------------------
                                   1176 ;	 function etimer_request_poll
                                   1177 ;	-----------------------------------------
      0005F6                       1178 _etimer_request_poll:
                                   1179 ;	../../../../core/sys/etimer.c:147: process_poll(&etimer_process);
      0005F6 90r00r00         [24] 1180 	mov	dptr,#_etimer_process
      0005F9 75 F0 00         [24] 1181 	mov	b,#0x00
      0005FC 78r00            [12] 1182 	mov	r0,#_process_poll
      0005FE 79s00            [12] 1183 	mov	r1,#(_process_poll >> 8)
      000600 7As00            [12] 1184 	mov	r2,#(_process_poll >> 16)
      000602 12r00r00         [24] 1185 	lcall	__sdcc_banked_call
      000605 02r00r00         [24] 1186 	ljmp	__sdcc_banked_ret
                                   1187 ;------------------------------------------------------------
                                   1188 ;Allocation info for local variables in function 'add_timer'
                                   1189 ;------------------------------------------------------------
                                   1190 ;timer                     Allocated to stack - sp -2
                                   1191 ;t                         Allocated to registers r5 r6 r7 
                                   1192 ;------------------------------------------------------------
                                   1193 ;	../../../../core/sys/etimer.c:151: add_timer(struct etimer *timer)
                                   1194 ;	-----------------------------------------
                                   1195 ;	 function add_timer
                                   1196 ;	-----------------------------------------
      000608                       1197 _add_timer:
      000608 C0 82            [24] 1198 	push	dpl
      00060A C0 83            [24] 1199 	push	dph
      00060C C0 F0            [24] 1200 	push	b
                                   1201 ;	../../../../core/sys/etimer.c:155: etimer_request_poll();
      00060E 78rF6            [12] 1202 	mov	r0,#_etimer_request_poll
      000610 79s05            [12] 1203 	mov	r1,#(_etimer_request_poll >> 8)
      000612 7As00            [12] 1204 	mov	r2,#(_etimer_request_poll >> 16)
      000614 12r00r00         [24] 1205 	lcall	__sdcc_banked_call
                                   1206 ;	../../../../core/sys/etimer.c:157: if(timer->p != PROCESS_NONE) {
      000617 A8 81            [24] 1207 	mov	r0,sp
      000619 18               [12] 1208 	dec	r0
      00061A 18               [12] 1209 	dec	r0
      00061B 74 07            [12] 1210 	mov	a,#0x07
      00061D 26               [12] 1211 	add	a,@r0
      00061E FA               [12] 1212 	mov	r2,a
      00061F E4               [12] 1213 	clr	a
      000620 08               [12] 1214 	inc	r0
      000621 36               [12] 1215 	addc	a,@r0
      000622 FB               [12] 1216 	mov	r3,a
      000623 08               [12] 1217 	inc	r0
      000624 86 04            [24] 1218 	mov	ar4,@r0
      000626 8A 82            [24] 1219 	mov	dpl,r2
      000628 8B 83            [24] 1220 	mov	dph,r3
      00062A 8C F0            [24] 1221 	mov	b,r4
      00062C 12r00r00         [24] 1222 	lcall	__gptrget
      00062F FD               [12] 1223 	mov	r5,a
      000630 A3               [24] 1224 	inc	dptr
      000631 12r00r00         [24] 1225 	lcall	__gptrget
      000634 FE               [12] 1226 	mov	r6,a
      000635 A3               [24] 1227 	inc	dptr
      000636 12r00r00         [24] 1228 	lcall	__gptrget
      000639 FF               [12] 1229 	mov	r7,a
      00063A ED               [12] 1230 	mov	a,r5
      00063B 4E               [12] 1231 	orl	a,r6
      00063C 70 03            [24] 1232 	jnz	00123$
      00063E 02r06rBC         [24] 1233 	ljmp	00105$
      000641                       1234 00123$:
                                   1235 ;	../../../../core/sys/etimer.c:160: for(t = timerlist; t != NULL; t = t->next) {
      000641 90r00r00         [24] 1236 	mov	dptr,#_timerlist
      000644 E0               [24] 1237 	movx	a,@dptr
      000645 FD               [12] 1238 	mov	r5,a
      000646 A3               [24] 1239 	inc	dptr
      000647 E0               [24] 1240 	movx	a,@dptr
      000648 FE               [12] 1241 	mov	r6,a
      000649 A3               [24] 1242 	inc	dptr
      00064A E0               [24] 1243 	movx	a,@dptr
      00064B FF               [12] 1244 	mov	r7,a
      00064C                       1245 00107$:
      00064C E4               [12] 1246 	clr	a
      00064D C0 E0            [24] 1247 	push	acc
      00064F E4               [12] 1248 	clr	a
      000650 C0 E0            [24] 1249 	push	acc
      000652 E4               [12] 1250 	clr	a
      000653 C0 E0            [24] 1251 	push	acc
      000655 8D 82            [24] 1252 	mov	dpl,r5
      000657 8E 83            [24] 1253 	mov	dph,r6
      000659 8F F0            [24] 1254 	mov	b,r7
      00065B 12r00r00         [24] 1255 	lcall	___gptr_cmp
      00065E 15 81            [12] 1256 	dec	sp
      000660 15 81            [12] 1257 	dec	sp
      000662 15 81            [12] 1258 	dec	sp
      000664 60 56            [24] 1259 	jz	00105$
                                   1260 ;	../../../../core/sys/etimer.c:161: if(t == timer) {
      000666 A8 81            [24] 1261 	mov	r0,sp
      000668 18               [12] 1262 	dec	r0
      000669 18               [12] 1263 	dec	r0
      00066A C0 05            [24] 1264 	push	ar5
      00066C C0 06            [24] 1265 	push	ar6
      00066E C0 07            [24] 1266 	push	ar7
      000670 86 82            [24] 1267 	mov	dpl,@r0
      000672 08               [12] 1268 	inc	r0
      000673 86 83            [24] 1269 	mov	dph,@r0
      000675 08               [12] 1270 	inc	r0
      000676 86 F0            [24] 1271 	mov	b,@r0
      000678 12r00r00         [24] 1272 	lcall	___gptr_cmp
      00067B 15 81            [12] 1273 	dec	sp
      00067D 15 81            [12] 1274 	dec	sp
      00067F 15 81            [12] 1275 	dec	sp
      000681 60 02            [24] 1276 	jz	00126$
      000683 80 0C            [24] 1277 	sjmp	00108$
      000685                       1278 00126$:
                                   1279 ;	../../../../core/sys/etimer.c:163: update_time();
      000685 78r00            [12] 1280 	mov	r0,#_update_time
      000687 79s00            [12] 1281 	mov	r1,#(_update_time >> 8)
      000689 7As00            [12] 1282 	mov	r2,#(_update_time >> 16)
      00068B 12r00r00         [24] 1283 	lcall	__sdcc_banked_call
                                   1284 ;	../../../../core/sys/etimer.c:164: return;
      00068E 02r07r23         [24] 1285 	ljmp	00109$
      000691                       1286 00108$:
                                   1287 ;	../../../../core/sys/etimer.c:160: for(t = timerlist; t != NULL; t = t->next) {
      000691 C0 02            [24] 1288 	push	ar2
      000693 C0 03            [24] 1289 	push	ar3
      000695 C0 04            [24] 1290 	push	ar4
      000697 74 04            [12] 1291 	mov	a,#0x04
      000699 2D               [12] 1292 	add	a,r5
      00069A FA               [12] 1293 	mov	r2,a
      00069B E4               [12] 1294 	clr	a
      00069C 3E               [12] 1295 	addc	a,r6
      00069D FB               [12] 1296 	mov	r3,a
      00069E 8F 04            [24] 1297 	mov	ar4,r7
      0006A0 8A 82            [24] 1298 	mov	dpl,r2
      0006A2 8B 83            [24] 1299 	mov	dph,r3
      0006A4 8C F0            [24] 1300 	mov	b,r4
      0006A6 12r00r00         [24] 1301 	lcall	__gptrget
      0006A9 FD               [12] 1302 	mov	r5,a
      0006AA A3               [24] 1303 	inc	dptr
      0006AB 12r00r00         [24] 1304 	lcall	__gptrget
      0006AE FE               [12] 1305 	mov	r6,a
      0006AF A3               [24] 1306 	inc	dptr
      0006B0 12r00r00         [24] 1307 	lcall	__gptrget
      0006B3 FF               [12] 1308 	mov	r7,a
      0006B4 D0 04            [24] 1309 	pop	ar4
      0006B6 D0 03            [24] 1310 	pop	ar3
      0006B8 D0 02            [24] 1311 	pop	ar2
      0006BA 80 90            [24] 1312 	sjmp	00107$
      0006BC                       1313 00105$:
                                   1314 ;	../../../../core/sys/etimer.c:169: timer->p = PROCESS_CURRENT();
      0006BC 90r00r00         [24] 1315 	mov	dptr,#_process_current
      0006BF E0               [24] 1316 	movx	a,@dptr
      0006C0 FD               [12] 1317 	mov	r5,a
      0006C1 A3               [24] 1318 	inc	dptr
      0006C2 E0               [24] 1319 	movx	a,@dptr
      0006C3 FE               [12] 1320 	mov	r6,a
      0006C4 A3               [24] 1321 	inc	dptr
      0006C5 E0               [24] 1322 	movx	a,@dptr
      0006C6 FF               [12] 1323 	mov	r7,a
      0006C7 8A 82            [24] 1324 	mov	dpl,r2
      0006C9 8B 83            [24] 1325 	mov	dph,r3
      0006CB 8C F0            [24] 1326 	mov	b,r4
      0006CD ED               [12] 1327 	mov	a,r5
      0006CE 12r00r00         [24] 1328 	lcall	__gptrput
      0006D1 A3               [24] 1329 	inc	dptr
      0006D2 EE               [12] 1330 	mov	a,r6
      0006D3 12r00r00         [24] 1331 	lcall	__gptrput
      0006D6 A3               [24] 1332 	inc	dptr
      0006D7 EF               [12] 1333 	mov	a,r7
      0006D8 12r00r00         [24] 1334 	lcall	__gptrput
                                   1335 ;	../../../../core/sys/etimer.c:170: timer->next = timerlist;
      0006DB A8 81            [24] 1336 	mov	r0,sp
      0006DD 18               [12] 1337 	dec	r0
      0006DE 18               [12] 1338 	dec	r0
      0006DF 74 04            [12] 1339 	mov	a,#0x04
      0006E1 26               [12] 1340 	add	a,@r0
      0006E2 FD               [12] 1341 	mov	r5,a
      0006E3 E4               [12] 1342 	clr	a
      0006E4 08               [12] 1343 	inc	r0
      0006E5 36               [12] 1344 	addc	a,@r0
      0006E6 FE               [12] 1345 	mov	r6,a
      0006E7 08               [12] 1346 	inc	r0
      0006E8 86 07            [24] 1347 	mov	ar7,@r0
      0006EA 90r00r00         [24] 1348 	mov	dptr,#_timerlist
      0006ED E0               [24] 1349 	movx	a,@dptr
      0006EE FA               [12] 1350 	mov	r2,a
      0006EF A3               [24] 1351 	inc	dptr
      0006F0 E0               [24] 1352 	movx	a,@dptr
      0006F1 FB               [12] 1353 	mov	r3,a
      0006F2 A3               [24] 1354 	inc	dptr
      0006F3 E0               [24] 1355 	movx	a,@dptr
      0006F4 FC               [12] 1356 	mov	r4,a
      0006F5 8D 82            [24] 1357 	mov	dpl,r5
      0006F7 8E 83            [24] 1358 	mov	dph,r6
      0006F9 8F F0            [24] 1359 	mov	b,r7
      0006FB EA               [12] 1360 	mov	a,r2
      0006FC 12r00r00         [24] 1361 	lcall	__gptrput
      0006FF A3               [24] 1362 	inc	dptr
      000700 EB               [12] 1363 	mov	a,r3
      000701 12r00r00         [24] 1364 	lcall	__gptrput
      000704 A3               [24] 1365 	inc	dptr
      000705 EC               [12] 1366 	mov	a,r4
      000706 12r00r00         [24] 1367 	lcall	__gptrput
                                   1368 ;	../../../../core/sys/etimer.c:171: timerlist = timer;
      000709 A8 81            [24] 1369 	mov	r0,sp
      00070B 18               [12] 1370 	dec	r0
      00070C 18               [12] 1371 	dec	r0
      00070D 90r00r00         [24] 1372 	mov	dptr,#_timerlist
      000710 E6               [12] 1373 	mov	a,@r0
      000711 F0               [24] 1374 	movx	@dptr,a
      000712 08               [12] 1375 	inc	r0
      000713 E6               [12] 1376 	mov	a,@r0
      000714 A3               [24] 1377 	inc	dptr
      000715 F0               [24] 1378 	movx	@dptr,a
      000716 08               [12] 1379 	inc	r0
      000717 E6               [12] 1380 	mov	a,@r0
      000718 A3               [24] 1381 	inc	dptr
      000719 F0               [24] 1382 	movx	@dptr,a
                                   1383 ;	../../../../core/sys/etimer.c:173: update_time();
      00071A 78r00            [12] 1384 	mov	r0,#_update_time
      00071C 79s00            [12] 1385 	mov	r1,#(_update_time >> 8)
      00071E 7As00            [12] 1386 	mov	r2,#(_update_time >> 16)
      000720 12r00r00         [24] 1387 	lcall	__sdcc_banked_call
      000723                       1388 00109$:
      000723 15 81            [12] 1389 	dec	sp
      000725 15 81            [12] 1390 	dec	sp
      000727 15 81            [12] 1391 	dec	sp
      000729 02r00r00         [24] 1392 	ljmp	__sdcc_banked_ret
                                   1393 ;------------------------------------------------------------
                                   1394 ;Allocation info for local variables in function 'etimer_set'
                                   1395 ;------------------------------------------------------------
                                   1396 ;interval                  Allocated to stack - sp -4
                                   1397 ;et                        Allocated to registers r5 r6 r7 
                                   1398 ;------------------------------------------------------------
                                   1399 ;	../../../../core/sys/etimer.c:177: etimer_set(struct etimer *et, clock_time_t interval)
                                   1400 ;	-----------------------------------------
                                   1401 ;	 function etimer_set
                                   1402 ;	-----------------------------------------
      00072C                       1403 _etimer_set:
      00072C AD 82            [24] 1404 	mov	r5,dpl
      00072E AE 83            [24] 1405 	mov	r6,dph
      000730 AF F0            [24] 1406 	mov	r7,b
                                   1407 ;	../../../../core/sys/etimer.c:179: timer_set(&et->timer, interval);
      000732 C0 07            [24] 1408 	push	ar7
      000734 C0 06            [24] 1409 	push	ar6
      000736 C0 05            [24] 1410 	push	ar5
      000738 E5 81            [12] 1411 	mov	a,sp
      00073A 24 F9            [12] 1412 	add	a,#0xf9
      00073C F8               [12] 1413 	mov	r0,a
      00073D E6               [12] 1414 	mov	a,@r0
      00073E C0 E0            [24] 1415 	push	acc
      000740 08               [12] 1416 	inc	r0
      000741 E6               [12] 1417 	mov	a,@r0
      000742 C0 E0            [24] 1418 	push	acc
      000744 8D 82            [24] 1419 	mov	dpl,r5
      000746 8E 83            [24] 1420 	mov	dph,r6
      000748 8F F0            [24] 1421 	mov	b,r7
      00074A 78r00            [12] 1422 	mov	r0,#_timer_set
      00074C 79s00            [12] 1423 	mov	r1,#(_timer_set >> 8)
      00074E 7As00            [12] 1424 	mov	r2,#(_timer_set >> 16)
      000750 12r00r00         [24] 1425 	lcall	__sdcc_banked_call
      000753 15 81            [12] 1426 	dec	sp
      000755 15 81            [12] 1427 	dec	sp
      000757 D0 05            [24] 1428 	pop	ar5
      000759 D0 06            [24] 1429 	pop	ar6
      00075B D0 07            [24] 1430 	pop	ar7
                                   1431 ;	../../../../core/sys/etimer.c:180: add_timer(et);
      00075D 8D 82            [24] 1432 	mov	dpl,r5
      00075F 8E 83            [24] 1433 	mov	dph,r6
      000761 8F F0            [24] 1434 	mov	b,r7
      000763 78r08            [12] 1435 	mov	r0,#_add_timer
      000765 79s06            [12] 1436 	mov	r1,#(_add_timer >> 8)
      000767 7As00            [12] 1437 	mov	r2,#(_add_timer >> 16)
      000769 12r00r00         [24] 1438 	lcall	__sdcc_banked_call
      00076C 02r00r00         [24] 1439 	ljmp	__sdcc_banked_ret
                                   1440 ;------------------------------------------------------------
                                   1441 ;Allocation info for local variables in function 'etimer_reset'
                                   1442 ;------------------------------------------------------------
                                   1443 ;et                        Allocated to registers r5 r6 r7 
                                   1444 ;------------------------------------------------------------
                                   1445 ;	../../../../core/sys/etimer.c:184: etimer_reset(struct etimer *et)
                                   1446 ;	-----------------------------------------
                                   1447 ;	 function etimer_reset
                                   1448 ;	-----------------------------------------
      00076F                       1449 _etimer_reset:
                                   1450 ;	../../../../core/sys/etimer.c:186: timer_reset(&et->timer);
      00076F AD 82            [24] 1451 	mov	r5,dpl
      000771 AE 83            [24] 1452 	mov	r6,dph
      000773 AF F0            [24] 1453 	mov	r7,b
      000775 C0 07            [24] 1454 	push	ar7
      000777 C0 06            [24] 1455 	push	ar6
      000779 C0 05            [24] 1456 	push	ar5
      00077B 78r00            [12] 1457 	mov	r0,#_timer_reset
      00077D 79s00            [12] 1458 	mov	r1,#(_timer_reset >> 8)
      00077F 7As00            [12] 1459 	mov	r2,#(_timer_reset >> 16)
      000781 12r00r00         [24] 1460 	lcall	__sdcc_banked_call
      000784 D0 05            [24] 1461 	pop	ar5
      000786 D0 06            [24] 1462 	pop	ar6
      000788 D0 07            [24] 1463 	pop	ar7
                                   1464 ;	../../../../core/sys/etimer.c:187: add_timer(et);
      00078A 8D 82            [24] 1465 	mov	dpl,r5
      00078C 8E 83            [24] 1466 	mov	dph,r6
      00078E 8F F0            [24] 1467 	mov	b,r7
      000790 78r08            [12] 1468 	mov	r0,#_add_timer
      000792 79s06            [12] 1469 	mov	r1,#(_add_timer >> 8)
      000794 7As00            [12] 1470 	mov	r2,#(_add_timer >> 16)
      000796 12r00r00         [24] 1471 	lcall	__sdcc_banked_call
      000799 02r00r00         [24] 1472 	ljmp	__sdcc_banked_ret
                                   1473 ;------------------------------------------------------------
                                   1474 ;Allocation info for local variables in function 'etimer_restart'
                                   1475 ;------------------------------------------------------------
                                   1476 ;et                        Allocated to registers r5 r6 r7 
                                   1477 ;------------------------------------------------------------
                                   1478 ;	../../../../core/sys/etimer.c:191: etimer_restart(struct etimer *et)
                                   1479 ;	-----------------------------------------
                                   1480 ;	 function etimer_restart
                                   1481 ;	-----------------------------------------
      00079C                       1482 _etimer_restart:
                                   1483 ;	../../../../core/sys/etimer.c:193: timer_restart(&et->timer);
      00079C AD 82            [24] 1484 	mov	r5,dpl
      00079E AE 83            [24] 1485 	mov	r6,dph
      0007A0 AF F0            [24] 1486 	mov	r7,b
      0007A2 C0 07            [24] 1487 	push	ar7
      0007A4 C0 06            [24] 1488 	push	ar6
      0007A6 C0 05            [24] 1489 	push	ar5
      0007A8 78r00            [12] 1490 	mov	r0,#_timer_restart
      0007AA 79s00            [12] 1491 	mov	r1,#(_timer_restart >> 8)
      0007AC 7As00            [12] 1492 	mov	r2,#(_timer_restart >> 16)
      0007AE 12r00r00         [24] 1493 	lcall	__sdcc_banked_call
      0007B1 D0 05            [24] 1494 	pop	ar5
      0007B3 D0 06            [24] 1495 	pop	ar6
      0007B5 D0 07            [24] 1496 	pop	ar7
                                   1497 ;	../../../../core/sys/etimer.c:194: add_timer(et);
      0007B7 8D 82            [24] 1498 	mov	dpl,r5
      0007B9 8E 83            [24] 1499 	mov	dph,r6
      0007BB 8F F0            [24] 1500 	mov	b,r7
      0007BD 78r08            [12] 1501 	mov	r0,#_add_timer
      0007BF 79s06            [12] 1502 	mov	r1,#(_add_timer >> 8)
      0007C1 7As00            [12] 1503 	mov	r2,#(_add_timer >> 16)
      0007C3 12r00r00         [24] 1504 	lcall	__sdcc_banked_call
      0007C6 02r00r00         [24] 1505 	ljmp	__sdcc_banked_ret
                                   1506 ;------------------------------------------------------------
                                   1507 ;Allocation info for local variables in function 'etimer_adjust'
                                   1508 ;------------------------------------------------------------
                                   1509 ;timediff                  Allocated to stack - sp -7
                                   1510 ;et                        Allocated to stack - sp -2
                                   1511 ;------------------------------------------------------------
                                   1512 ;	../../../../core/sys/etimer.c:198: etimer_adjust(struct etimer *et, int timediff)
                                   1513 ;	-----------------------------------------
                                   1514 ;	 function etimer_adjust
                                   1515 ;	-----------------------------------------
      0007C9                       1516 _etimer_adjust:
      0007C9 C0 82            [24] 1517 	push	dpl
      0007CB C0 83            [24] 1518 	push	dph
      0007CD C0 F0            [24] 1519 	push	b
                                   1520 ;	../../../../core/sys/etimer.c:200: et->timer.start += timediff;
      0007CF A8 81            [24] 1521 	mov	r0,sp
      0007D1 18               [12] 1522 	dec	r0
      0007D2 18               [12] 1523 	dec	r0
      0007D3 86 82            [24] 1524 	mov	dpl,@r0
      0007D5 08               [12] 1525 	inc	r0
      0007D6 86 83            [24] 1526 	mov	dph,@r0
      0007D8 08               [12] 1527 	inc	r0
      0007D9 86 F0            [24] 1528 	mov	b,@r0
      0007DB 12r00r00         [24] 1529 	lcall	__gptrget
      0007DE FB               [12] 1530 	mov	r3,a
      0007DF A3               [24] 1531 	inc	dptr
      0007E0 12r00r00         [24] 1532 	lcall	__gptrget
      0007E3 FC               [12] 1533 	mov	r4,a
      0007E4 E5 81            [12] 1534 	mov	a,sp
      0007E6 24 F9            [12] 1535 	add	a,#0xf9
      0007E8 F8               [12] 1536 	mov	r0,a
      0007E9 86 02            [24] 1537 	mov	ar2,@r0
      0007EB 08               [12] 1538 	inc	r0
      0007EC 86 07            [24] 1539 	mov	ar7,@r0
      0007EE EA               [12] 1540 	mov	a,r2
      0007EF 2B               [12] 1541 	add	a,r3
      0007F0 FB               [12] 1542 	mov	r3,a
      0007F1 EF               [12] 1543 	mov	a,r7
      0007F2 3C               [12] 1544 	addc	a,r4
      0007F3 FC               [12] 1545 	mov	r4,a
      0007F4 A8 81            [24] 1546 	mov	r0,sp
      0007F6 18               [12] 1547 	dec	r0
      0007F7 18               [12] 1548 	dec	r0
      0007F8 86 82            [24] 1549 	mov	dpl,@r0
      0007FA 08               [12] 1550 	inc	r0
      0007FB 86 83            [24] 1551 	mov	dph,@r0
      0007FD 08               [12] 1552 	inc	r0
      0007FE 86 F0            [24] 1553 	mov	b,@r0
      000800 EB               [12] 1554 	mov	a,r3
      000801 12r00r00         [24] 1555 	lcall	__gptrput
      000804 A3               [24] 1556 	inc	dptr
      000805 EC               [12] 1557 	mov	a,r4
      000806 12r00r00         [24] 1558 	lcall	__gptrput
                                   1559 ;	../../../../core/sys/etimer.c:201: update_time();
      000809 78r00            [12] 1560 	mov	r0,#_update_time
      00080B 79s00            [12] 1561 	mov	r1,#(_update_time >> 8)
      00080D 7As00            [12] 1562 	mov	r2,#(_update_time >> 16)
      00080F 12r00r00         [24] 1563 	lcall	__sdcc_banked_call
      000812 15 81            [12] 1564 	dec	sp
      000814 15 81            [12] 1565 	dec	sp
      000816 15 81            [12] 1566 	dec	sp
      000818 02r00r00         [24] 1567 	ljmp	__sdcc_banked_ret
                                   1568 ;------------------------------------------------------------
                                   1569 ;Allocation info for local variables in function 'etimer_expired'
                                   1570 ;------------------------------------------------------------
                                   1571 ;et                        Allocated to registers r5 r6 r7 
                                   1572 ;------------------------------------------------------------
                                   1573 ;	../../../../core/sys/etimer.c:205: etimer_expired(struct etimer *et)
                                   1574 ;	-----------------------------------------
                                   1575 ;	 function etimer_expired
                                   1576 ;	-----------------------------------------
      00081B                       1577 _etimer_expired:
      00081B AD 82            [24] 1578 	mov	r5,dpl
      00081D AE 83            [24] 1579 	mov	r6,dph
      00081F AF F0            [24] 1580 	mov	r7,b
                                   1581 ;	../../../../core/sys/etimer.c:207: return et->p == PROCESS_NONE;
      000821 74 07            [12] 1582 	mov	a,#0x07
      000823 2D               [12] 1583 	add	a,r5
      000824 FD               [12] 1584 	mov	r5,a
      000825 E4               [12] 1585 	clr	a
      000826 3E               [12] 1586 	addc	a,r6
      000827 FE               [12] 1587 	mov	r6,a
      000828 8D 82            [24] 1588 	mov	dpl,r5
      00082A 8E 83            [24] 1589 	mov	dph,r6
      00082C 8F F0            [24] 1590 	mov	b,r7
      00082E 12r00r00         [24] 1591 	lcall	__gptrget
      000831 FD               [12] 1592 	mov	r5,a
      000832 A3               [24] 1593 	inc	dptr
      000833 12r00r00         [24] 1594 	lcall	__gptrget
      000836 FE               [12] 1595 	mov	r6,a
      000837 A3               [24] 1596 	inc	dptr
      000838 12r00r00         [24] 1597 	lcall	__gptrget
      00083B FF               [12] 1598 	mov	r7,a
      00083C E4               [12] 1599 	clr	a
      00083D C0 E0            [24] 1600 	push	acc
      00083F E4               [12] 1601 	clr	a
      000840 C0 E0            [24] 1602 	push	acc
      000842 E4               [12] 1603 	clr	a
      000843 C0 E0            [24] 1604 	push	acc
      000845 8D 82            [24] 1605 	mov	dpl,r5
      000847 8E 83            [24] 1606 	mov	dph,r6
      000849 8F F0            [24] 1607 	mov	b,r7
      00084B 12r00r00         [24] 1608 	lcall	___gptr_cmp
      00084E 15 81            [12] 1609 	dec	sp
      000850 15 81            [12] 1610 	dec	sp
      000852 15 81            [12] 1611 	dec	sp
      000854 70 04            [24] 1612 	jnz	00103$
      000856 74 01            [12] 1613 	mov	a,#0x01
      000858 80 01            [24] 1614 	sjmp	00104$
      00085A                       1615 00103$:
      00085A E4               [12] 1616 	clr	a
      00085B                       1617 00104$:
      00085B FD               [12] 1618 	mov	r5,a
      00085C 33               [12] 1619 	rlc	a
      00085D 95 E0            [12] 1620 	subb	a,acc
      00085F FF               [12] 1621 	mov	r7,a
      000860 8D 82            [24] 1622 	mov	dpl,r5
      000862 8F 83            [24] 1623 	mov	dph,r7
      000864 02r00r00         [24] 1624 	ljmp	__sdcc_banked_ret
                                   1625 ;------------------------------------------------------------
                                   1626 ;Allocation info for local variables in function 'etimer_expiration_time'
                                   1627 ;------------------------------------------------------------
                                   1628 ;et                        Allocated to registers r5 r6 r7 
                                   1629 ;------------------------------------------------------------
                                   1630 ;	../../../../core/sys/etimer.c:211: etimer_expiration_time(struct etimer *et)
                                   1631 ;	-----------------------------------------
                                   1632 ;	 function etimer_expiration_time
                                   1633 ;	-----------------------------------------
      000867                       1634 _etimer_expiration_time:
                                   1635 ;	../../../../core/sys/etimer.c:213: return et->timer.start + et->timer.interval;
      000867 AD 82            [24] 1636 	mov	r5,dpl
      000869 AE 83            [24] 1637 	mov	r6,dph
      00086B AF F0            [24] 1638 	mov	r7,b
      00086D 12r00r00         [24] 1639 	lcall	__gptrget
      000870 FB               [12] 1640 	mov	r3,a
      000871 A3               [24] 1641 	inc	dptr
      000872 12r00r00         [24] 1642 	lcall	__gptrget
      000875 FC               [12] 1643 	mov	r4,a
      000876 74 02            [12] 1644 	mov	a,#0x02
      000878 2D               [12] 1645 	add	a,r5
      000879 FD               [12] 1646 	mov	r5,a
      00087A E4               [12] 1647 	clr	a
      00087B 3E               [12] 1648 	addc	a,r6
      00087C FE               [12] 1649 	mov	r6,a
      00087D 8D 82            [24] 1650 	mov	dpl,r5
      00087F 8E 83            [24] 1651 	mov	dph,r6
      000881 8F F0            [24] 1652 	mov	b,r7
      000883 12r00r00         [24] 1653 	lcall	__gptrget
      000886 FD               [12] 1654 	mov	r5,a
      000887 A3               [24] 1655 	inc	dptr
      000888 12r00r00         [24] 1656 	lcall	__gptrget
      00088B FE               [12] 1657 	mov	r6,a
      00088C ED               [12] 1658 	mov	a,r5
      00088D 2B               [12] 1659 	add	a,r3
      00088E FB               [12] 1660 	mov	r3,a
      00088F EE               [12] 1661 	mov	a,r6
      000890 3C               [12] 1662 	addc	a,r4
      000891 FC               [12] 1663 	mov	r4,a
      000892 8B 82            [24] 1664 	mov	dpl,r3
      000894 8C 83            [24] 1665 	mov	dph,r4
      000896 02r00r00         [24] 1666 	ljmp	__sdcc_banked_ret
                                   1667 ;------------------------------------------------------------
                                   1668 ;Allocation info for local variables in function 'etimer_start_time'
                                   1669 ;------------------------------------------------------------
                                   1670 ;et                        Allocated to registers r5 r6 r7 
                                   1671 ;------------------------------------------------------------
                                   1672 ;	../../../../core/sys/etimer.c:217: etimer_start_time(struct etimer *et)
                                   1673 ;	-----------------------------------------
                                   1674 ;	 function etimer_start_time
                                   1675 ;	-----------------------------------------
      000899                       1676 _etimer_start_time:
                                   1677 ;	../../../../core/sys/etimer.c:219: return et->timer.start;
      000899 AF F0            [24] 1678 	mov	r7,b
      00089B 12r00r00         [24] 1679 	lcall	__gptrget
      00089E FD               [12] 1680 	mov	r5,a
      00089F A3               [24] 1681 	inc	dptr
      0008A0 12r00r00         [24] 1682 	lcall	__gptrget
      0008A3 FE               [12] 1683 	mov	r6,a
      0008A4 8D 82            [24] 1684 	mov	dpl,r5
      0008A6 8E 83            [24] 1685 	mov	dph,r6
      0008A8 02r00r00         [24] 1686 	ljmp	__sdcc_banked_ret
                                   1687 ;------------------------------------------------------------
                                   1688 ;Allocation info for local variables in function 'etimer_pending'
                                   1689 ;------------------------------------------------------------
                                   1690 ;	../../../../core/sys/etimer.c:223: etimer_pending(void)
                                   1691 ;	-----------------------------------------
                                   1692 ;	 function etimer_pending
                                   1693 ;	-----------------------------------------
      0008AB                       1694 _etimer_pending:
                                   1695 ;	../../../../core/sys/etimer.c:225: return timerlist != NULL;
      0008AB 90r00r00         [24] 1696 	mov	dptr,#_timerlist
      0008AE E0               [24] 1697 	movx	a,@dptr
      0008AF FD               [12] 1698 	mov	r5,a
      0008B0 A3               [24] 1699 	inc	dptr
      0008B1 E0               [24] 1700 	movx	a,@dptr
      0008B2 FE               [12] 1701 	mov	r6,a
      0008B3 A3               [24] 1702 	inc	dptr
      0008B4 E0               [24] 1703 	movx	a,@dptr
      0008B5 FF               [12] 1704 	mov	r7,a
      0008B6 E4               [12] 1705 	clr	a
      0008B7 C0 E0            [24] 1706 	push	acc
      0008B9 E4               [12] 1707 	clr	a
      0008BA C0 E0            [24] 1708 	push	acc
      0008BC E4               [12] 1709 	clr	a
      0008BD C0 E0            [24] 1710 	push	acc
      0008BF 8D 82            [24] 1711 	mov	dpl,r5
      0008C1 8E 83            [24] 1712 	mov	dph,r6
      0008C3 8F F0            [24] 1713 	mov	b,r7
      0008C5 12r00r00         [24] 1714 	lcall	___gptr_cmp
      0008C8 15 81            [12] 1715 	dec	sp
      0008CA 15 81            [12] 1716 	dec	sp
      0008CC 15 81            [12] 1717 	dec	sp
      0008CE 70 04            [24] 1718 	jnz	00103$
      0008D0 74 01            [12] 1719 	mov	a,#0x01
      0008D2 80 01            [24] 1720 	sjmp	00104$
      0008D4                       1721 00103$:
      0008D4 E4               [12] 1722 	clr	a
      0008D5                       1723 00104$:
      0008D5 FD               [12] 1724 	mov	r5,a
      0008D6 B4 01 00         [24] 1725 	cjne	a,#0x01,00105$
      0008D9                       1726 00105$:
      0008D9 E4               [12] 1727 	clr	a
      0008DA 33               [12] 1728 	rlc	a
      0008DB FD               [12] 1729 	mov	r5,a
      0008DC 33               [12] 1730 	rlc	a
      0008DD 95 E0            [12] 1731 	subb	a,acc
      0008DF FF               [12] 1732 	mov	r7,a
      0008E0 8D 82            [24] 1733 	mov	dpl,r5
      0008E2 8F 83            [24] 1734 	mov	dph,r7
      0008E4 02r00r00         [24] 1735 	ljmp	__sdcc_banked_ret
                                   1736 ;------------------------------------------------------------
                                   1737 ;Allocation info for local variables in function 'etimer_next_expiration_time'
                                   1738 ;------------------------------------------------------------
                                   1739 ;	../../../../core/sys/etimer.c:229: etimer_next_expiration_time(void)
                                   1740 ;	-----------------------------------------
                                   1741 ;	 function etimer_next_expiration_time
                                   1742 ;	-----------------------------------------
      0008E7                       1743 _etimer_next_expiration_time:
                                   1744 ;	../../../../core/sys/etimer.c:231: return etimer_pending() ? next_expiration : 0;
      0008E7 78rAB            [12] 1745 	mov	r0,#_etimer_pending
      0008E9 79s08            [12] 1746 	mov	r1,#(_etimer_pending >> 8)
      0008EB 7As00            [12] 1747 	mov	r2,#(_etimer_pending >> 16)
      0008ED 12r00r00         [24] 1748 	lcall	__sdcc_banked_call
      0008F0 E5 82            [12] 1749 	mov	a,dpl
      0008F2 85 83 F0         [24] 1750 	mov	b,dph
      0008F5 45 F0            [12] 1751 	orl	a,b
      0008F7 60 0A            [24] 1752 	jz	00103$
      0008F9 90r00r03         [24] 1753 	mov	dptr,#_next_expiration
      0008FC E0               [24] 1754 	movx	a,@dptr
      0008FD FE               [12] 1755 	mov	r6,a
      0008FE A3               [24] 1756 	inc	dptr
      0008FF E0               [24] 1757 	movx	a,@dptr
      000900 FF               [12] 1758 	mov	r7,a
      000901 80 04            [24] 1759 	sjmp	00104$
      000903                       1760 00103$:
      000903 7E 00            [12] 1761 	mov	r6,#0x00
      000905 7F 00            [12] 1762 	mov	r7,#0x00
      000907                       1763 00104$:
      000907 8E 82            [24] 1764 	mov	dpl,r6
      000909 8F 83            [24] 1765 	mov	dph,r7
      00090B 02r00r00         [24] 1766 	ljmp	__sdcc_banked_ret
                                   1767 ;------------------------------------------------------------
                                   1768 ;Allocation info for local variables in function 'etimer_stop'
                                   1769 ;------------------------------------------------------------
                                   1770 ;et                        Allocated to stack - sp -2
                                   1771 ;t                         Allocated to registers r2 r3 r4 
                                   1772 ;------------------------------------------------------------
                                   1773 ;	../../../../core/sys/etimer.c:235: etimer_stop(struct etimer *et)
                                   1774 ;	-----------------------------------------
                                   1775 ;	 function etimer_stop
                                   1776 ;	-----------------------------------------
      00090E                       1777 _etimer_stop:
      00090E C0 82            [24] 1778 	push	dpl
      000910 C0 83            [24] 1779 	push	dph
      000912 C0 F0            [24] 1780 	push	b
                                   1781 ;	../../../../core/sys/etimer.c:240: if(et == timerlist) {
      000914 90r00r00         [24] 1782 	mov	dptr,#_timerlist
      000917 E0               [24] 1783 	movx	a,@dptr
      000918 FA               [12] 1784 	mov	r2,a
      000919 A3               [24] 1785 	inc	dptr
      00091A E0               [24] 1786 	movx	a,@dptr
      00091B FB               [12] 1787 	mov	r3,a
      00091C A3               [24] 1788 	inc	dptr
      00091D E0               [24] 1789 	movx	a,@dptr
      00091E FC               [12] 1790 	mov	r4,a
      00091F A8 81            [24] 1791 	mov	r0,sp
      000921 18               [12] 1792 	dec	r0
      000922 18               [12] 1793 	dec	r0
      000923 C0 02            [24] 1794 	push	ar2
      000925 C0 03            [24] 1795 	push	ar3
      000927 C0 04            [24] 1796 	push	ar4
      000929 86 82            [24] 1797 	mov	dpl,@r0
      00092B 08               [12] 1798 	inc	r0
      00092C 86 83            [24] 1799 	mov	dph,@r0
      00092E 08               [12] 1800 	inc	r0
      00092F 86 F0            [24] 1801 	mov	b,@r0
      000931 12r00r00         [24] 1802 	lcall	___gptr_cmp
      000934 15 81            [12] 1803 	dec	sp
      000936 15 81            [12] 1804 	dec	sp
      000938 15 81            [12] 1805 	dec	sp
      00093A 60 02            [24] 1806 	jz	00129$
      00093C 80 34            [24] 1807 	sjmp	00105$
      00093E                       1808 00129$:
                                   1809 ;	../../../../core/sys/etimer.c:241: timerlist = timerlist->next;
      00093E 74 04            [12] 1810 	mov	a,#0x04
      000940 2A               [12] 1811 	add	a,r2
      000941 FD               [12] 1812 	mov	r5,a
      000942 E4               [12] 1813 	clr	a
      000943 3B               [12] 1814 	addc	a,r3
      000944 FE               [12] 1815 	mov	r6,a
      000945 8C 07            [24] 1816 	mov	ar7,r4
      000947 8D 82            [24] 1817 	mov	dpl,r5
      000949 8E 83            [24] 1818 	mov	dph,r6
      00094B 8F F0            [24] 1819 	mov	b,r7
      00094D 12r00r00         [24] 1820 	lcall	__gptrget
      000950 FD               [12] 1821 	mov	r5,a
      000951 A3               [24] 1822 	inc	dptr
      000952 12r00r00         [24] 1823 	lcall	__gptrget
      000955 FE               [12] 1824 	mov	r6,a
      000956 A3               [24] 1825 	inc	dptr
      000957 12r00r00         [24] 1826 	lcall	__gptrget
      00095A FF               [12] 1827 	mov	r7,a
      00095B 90r00r00         [24] 1828 	mov	dptr,#_timerlist
      00095E ED               [12] 1829 	mov	a,r5
      00095F F0               [24] 1830 	movx	@dptr,a
      000960 EE               [12] 1831 	mov	a,r6
      000961 A3               [24] 1832 	inc	dptr
      000962 F0               [24] 1833 	movx	@dptr,a
      000963 EF               [12] 1834 	mov	a,r7
      000964 A3               [24] 1835 	inc	dptr
      000965 F0               [24] 1836 	movx	@dptr,a
                                   1837 ;	../../../../core/sys/etimer.c:242: update_time();
      000966 78r00            [12] 1838 	mov	r0,#_update_time
      000968 79s00            [12] 1839 	mov	r1,#(_update_time >> 8)
      00096A 7As00            [12] 1840 	mov	r2,#(_update_time >> 16)
      00096C 12r00r00         [24] 1841 	lcall	__sdcc_banked_call
      00096F 02r0Ar19         [24] 1842 	ljmp	00106$
      000972                       1843 00105$:
                                   1844 ;	../../../../core/sys/etimer.c:246: for(t = timerlist; t != NULL && t->next != et; t = t->next);
      000972                       1845 00109$:
      000972 E4               [12] 1846 	clr	a
      000973 C0 E0            [24] 1847 	push	acc
      000975 E4               [12] 1848 	clr	a
      000976 C0 E0            [24] 1849 	push	acc
      000978 E4               [12] 1850 	clr	a
      000979 C0 E0            [24] 1851 	push	acc
      00097B 8A 82            [24] 1852 	mov	dpl,r2
      00097D 8B 83            [24] 1853 	mov	dph,r3
      00097F 8C F0            [24] 1854 	mov	b,r4
      000981 12r00r00         [24] 1855 	lcall	___gptr_cmp
      000984 15 81            [12] 1856 	dec	sp
      000986 15 81            [12] 1857 	dec	sp
      000988 15 81            [12] 1858 	dec	sp
      00098A 60 42            [24] 1859 	jz	00101$
      00098C 74 04            [12] 1860 	mov	a,#0x04
      00098E 2A               [12] 1861 	add	a,r2
      00098F FD               [12] 1862 	mov	r5,a
      000990 E4               [12] 1863 	clr	a
      000991 3B               [12] 1864 	addc	a,r3
      000992 FE               [12] 1865 	mov	r6,a
      000993 8C 07            [24] 1866 	mov	ar7,r4
      000995 8D 82            [24] 1867 	mov	dpl,r5
      000997 8E 83            [24] 1868 	mov	dph,r6
      000999 8F F0            [24] 1869 	mov	b,r7
      00099B 12r00r00         [24] 1870 	lcall	__gptrget
      00099E FD               [12] 1871 	mov	r5,a
      00099F A3               [24] 1872 	inc	dptr
      0009A0 12r00r00         [24] 1873 	lcall	__gptrget
      0009A3 FE               [12] 1874 	mov	r6,a
      0009A4 A3               [24] 1875 	inc	dptr
      0009A5 12r00r00         [24] 1876 	lcall	__gptrget
      0009A8 FF               [12] 1877 	mov	r7,a
      0009A9 A8 81            [24] 1878 	mov	r0,sp
      0009AB 18               [12] 1879 	dec	r0
      0009AC 18               [12] 1880 	dec	r0
      0009AD C0 05            [24] 1881 	push	ar5
      0009AF C0 06            [24] 1882 	push	ar6
      0009B1 C0 07            [24] 1883 	push	ar7
      0009B3 86 82            [24] 1884 	mov	dpl,@r0
      0009B5 08               [12] 1885 	inc	r0
      0009B6 86 83            [24] 1886 	mov	dph,@r0
      0009B8 08               [12] 1887 	inc	r0
      0009B9 86 F0            [24] 1888 	mov	b,@r0
      0009BB 12r00r00         [24] 1889 	lcall	___gptr_cmp
      0009BE 15 81            [12] 1890 	dec	sp
      0009C0 15 81            [12] 1891 	dec	sp
      0009C2 15 81            [12] 1892 	dec	sp
      0009C4 60 08            [24] 1893 	jz	00101$
      0009C6 8D 02            [24] 1894 	mov	ar2,r5
      0009C8 8E 03            [24] 1895 	mov	ar3,r6
      0009CA 8F 04            [24] 1896 	mov	ar4,r7
      0009CC 80 A4            [24] 1897 	sjmp	00109$
      0009CE                       1898 00101$:
                                   1899 ;	../../../../core/sys/etimer.c:248: if(t != NULL) {
      0009CE EA               [12] 1900 	mov	a,r2
      0009CF 4B               [12] 1901 	orl	a,r3
      0009D0 60 47            [24] 1902 	jz	00106$
                                   1903 ;	../../../../core/sys/etimer.c:252: t->next = et->next;
      0009D2 74 04            [12] 1904 	mov	a,#0x04
      0009D4 2A               [12] 1905 	add	a,r2
      0009D5 FA               [12] 1906 	mov	r2,a
      0009D6 E4               [12] 1907 	clr	a
      0009D7 3B               [12] 1908 	addc	a,r3
      0009D8 FB               [12] 1909 	mov	r3,a
      0009D9 A8 81            [24] 1910 	mov	r0,sp
      0009DB 18               [12] 1911 	dec	r0
      0009DC 18               [12] 1912 	dec	r0
      0009DD 74 04            [12] 1913 	mov	a,#0x04
      0009DF 26               [12] 1914 	add	a,@r0
      0009E0 FD               [12] 1915 	mov	r5,a
      0009E1 E4               [12] 1916 	clr	a
      0009E2 08               [12] 1917 	inc	r0
      0009E3 36               [12] 1918 	addc	a,@r0
      0009E4 FE               [12] 1919 	mov	r6,a
      0009E5 08               [12] 1920 	inc	r0
      0009E6 86 07            [24] 1921 	mov	ar7,@r0
      0009E8 8D 82            [24] 1922 	mov	dpl,r5
      0009EA 8E 83            [24] 1923 	mov	dph,r6
      0009EC 8F F0            [24] 1924 	mov	b,r7
      0009EE 12r00r00         [24] 1925 	lcall	__gptrget
      0009F1 FD               [12] 1926 	mov	r5,a
      0009F2 A3               [24] 1927 	inc	dptr
      0009F3 12r00r00         [24] 1928 	lcall	__gptrget
      0009F6 FE               [12] 1929 	mov	r6,a
      0009F7 A3               [24] 1930 	inc	dptr
      0009F8 12r00r00         [24] 1931 	lcall	__gptrget
      0009FB FF               [12] 1932 	mov	r7,a
      0009FC 8A 82            [24] 1933 	mov	dpl,r2
      0009FE 8B 83            [24] 1934 	mov	dph,r3
      000A00 8C F0            [24] 1935 	mov	b,r4
      000A02 ED               [12] 1936 	mov	a,r5
      000A03 12r00r00         [24] 1937 	lcall	__gptrput
      000A06 A3               [24] 1938 	inc	dptr
      000A07 EE               [12] 1939 	mov	a,r6
      000A08 12r00r00         [24] 1940 	lcall	__gptrput
      000A0B A3               [24] 1941 	inc	dptr
      000A0C EF               [12] 1942 	mov	a,r7
      000A0D 12r00r00         [24] 1943 	lcall	__gptrput
                                   1944 ;	../../../../core/sys/etimer.c:254: update_time();
      000A10 78r00            [12] 1945 	mov	r0,#_update_time
      000A12 79s00            [12] 1946 	mov	r1,#(_update_time >> 8)
      000A14 7As00            [12] 1947 	mov	r2,#(_update_time >> 16)
      000A16 12r00r00         [24] 1948 	lcall	__sdcc_banked_call
      000A19                       1949 00106$:
                                   1950 ;	../../../../core/sys/etimer.c:259: et->next = NULL;
      000A19 A8 81            [24] 1951 	mov	r0,sp
      000A1B 18               [12] 1952 	dec	r0
      000A1C 18               [12] 1953 	dec	r0
      000A1D 74 04            [12] 1954 	mov	a,#0x04
      000A1F 26               [12] 1955 	add	a,@r0
      000A20 FD               [12] 1956 	mov	r5,a
      000A21 E4               [12] 1957 	clr	a
      000A22 08               [12] 1958 	inc	r0
      000A23 36               [12] 1959 	addc	a,@r0
      000A24 FE               [12] 1960 	mov	r6,a
      000A25 08               [12] 1961 	inc	r0
      000A26 86 07            [24] 1962 	mov	ar7,@r0
      000A28 8D 82            [24] 1963 	mov	dpl,r5
      000A2A 8E 83            [24] 1964 	mov	dph,r6
      000A2C 8F F0            [24] 1965 	mov	b,r7
      000A2E E4               [12] 1966 	clr	a
      000A2F 12r00r00         [24] 1967 	lcall	__gptrput
      000A32 A3               [24] 1968 	inc	dptr
      000A33 E4               [12] 1969 	clr	a
      000A34 12r00r00         [24] 1970 	lcall	__gptrput
      000A37 A3               [24] 1971 	inc	dptr
      000A38 E4               [12] 1972 	clr	a
      000A39 12r00r00         [24] 1973 	lcall	__gptrput
                                   1974 ;	../../../../core/sys/etimer.c:261: et->p = PROCESS_NONE;
      000A3C A8 81            [24] 1975 	mov	r0,sp
      000A3E 18               [12] 1976 	dec	r0
      000A3F 18               [12] 1977 	dec	r0
      000A40 74 07            [12] 1978 	mov	a,#0x07
      000A42 26               [12] 1979 	add	a,@r0
      000A43 FD               [12] 1980 	mov	r5,a
      000A44 E4               [12] 1981 	clr	a
      000A45 08               [12] 1982 	inc	r0
      000A46 36               [12] 1983 	addc	a,@r0
      000A47 FE               [12] 1984 	mov	r6,a
      000A48 08               [12] 1985 	inc	r0
      000A49 86 07            [24] 1986 	mov	ar7,@r0
      000A4B 8D 82            [24] 1987 	mov	dpl,r5
      000A4D 8E 83            [24] 1988 	mov	dph,r6
      000A4F 8F F0            [24] 1989 	mov	b,r7
      000A51 E4               [12] 1990 	clr	a
      000A52 12r00r00         [24] 1991 	lcall	__gptrput
      000A55 A3               [24] 1992 	inc	dptr
      000A56 E4               [12] 1993 	clr	a
      000A57 12r00r00         [24] 1994 	lcall	__gptrput
      000A5A A3               [24] 1995 	inc	dptr
      000A5B E4               [12] 1996 	clr	a
      000A5C 12r00r00         [24] 1997 	lcall	__gptrput
      000A5F 15 81            [12] 1998 	dec	sp
      000A61 15 81            [12] 1999 	dec	sp
      000A63 15 81            [12] 2000 	dec	sp
      000A65 02r00r00         [24] 2001 	ljmp	__sdcc_banked_ret
                                   2002 	.area CSEG    (CODE)
                                   2003 	.area CONST   (CODE)
                                   2004 	.area XINIT   (CODE)
      000000                       2005 __xinit__etimer_process:
                                   2006 ; generic printIvalPtr
      000000 00 00 00              2007 	.byte #0x00,#0x00,#0x00
      000003rA5s01s00              2008 	.byte _process_thread_etimer_process,(_process_thread_etimer_process >> 8),(_process_thread_etimer_process >> 16)
      000006 00 00                 2009 	.byte #0x00,#0x00	; 0
      000008 00                    2010 	.db #0x00	; 0
      000009 00                    2011 	.db #0x00	; 0
                                   2012 	.area CABS    (ABS,CODE)
