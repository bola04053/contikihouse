                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8804 (Aug  6 2013) (Linux)
                                      4 ; This file was generated Mon Aug 25 04:16:49 2014
                                      5 ;--------------------------------------------------------
                                      6 	.module neighbor_attr
                                      7 	.optsdcc -mmcs51 --model-huge
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _rimeaddr_cmp
                                     13 	.globl _rimeaddr_copy
                                     14 	.globl _list_remove
                                     15 	.globl _list_push
                                     16 	.globl _list_head
                                     17 	.globl _memb_inmemb
                                     18 	.globl _memb_free
                                     19 	.globl _memb_alloc
                                     20 	.globl _ctimer_stop
                                     21 	.globl _ctimer_set
                                     22 	.globl _memset
                                     23 	.globl _memcpy
                                     24 	.globl _ACTIVE
                                     25 	.globl _TX_BYTE
                                     26 	.globl _RX_BYTE
                                     27 	.globl _ERR
                                     28 	.globl _FE
                                     29 	.globl _SLAVE
                                     30 	.globl _RE
                                     31 	.globl _MODE
                                     32 	.globl _T3OVFIF
                                     33 	.globl _T3CH0IF
                                     34 	.globl _T3CH1IF
                                     35 	.globl _T4OVFIF
                                     36 	.globl _T4CH0IF
                                     37 	.globl _T4CH1IF
                                     38 	.globl _OVFIM
                                     39 	.globl _B_0
                                     40 	.globl _B_1
                                     41 	.globl _B_2
                                     42 	.globl _B_3
                                     43 	.globl _B_4
                                     44 	.globl _B_5
                                     45 	.globl _B_6
                                     46 	.globl _B_7
                                     47 	.globl _P2IF
                                     48 	.globl _UTX0IF
                                     49 	.globl _UTX1IF
                                     50 	.globl _P1IF
                                     51 	.globl _WDTIF
                                     52 	.globl _ACC_0
                                     53 	.globl _ACC_1
                                     54 	.globl _ACC_2
                                     55 	.globl _ACC_3
                                     56 	.globl _ACC_4
                                     57 	.globl _ACC_5
                                     58 	.globl _ACC_6
                                     59 	.globl _ACC_7
                                     60 	.globl _P
                                     61 	.globl _F1
                                     62 	.globl _OV
                                     63 	.globl _RS0
                                     64 	.globl _RS1
                                     65 	.globl _F0
                                     66 	.globl _AC
                                     67 	.globl _CY
                                     68 	.globl _DMAIF
                                     69 	.globl _T1IF
                                     70 	.globl _T2IF
                                     71 	.globl _T3IF
                                     72 	.globl _T4IF
                                     73 	.globl _P0IF
                                     74 	.globl _STIF
                                     75 	.globl _DMAIE
                                     76 	.globl _T1IE
                                     77 	.globl _T2IE
                                     78 	.globl _T3IE
                                     79 	.globl _T4IE
                                     80 	.globl _P0IE
                                     81 	.globl _RFERRIE
                                     82 	.globl _ADCIE
                                     83 	.globl _URX0IE
                                     84 	.globl _URX1IE
                                     85 	.globl _ENCIE
                                     86 	.globl _STIE
                                     87 	.globl _EA
                                     88 	.globl _P2_0
                                     89 	.globl _P2_1
                                     90 	.globl _P2_2
                                     91 	.globl _P2_3
                                     92 	.globl _P2_4
                                     93 	.globl _P2_5
                                     94 	.globl _P2_6
                                     95 	.globl _P2_7
                                     96 	.globl _ENCIF_0
                                     97 	.globl _ENCIF_1
                                     98 	.globl _P1_0
                                     99 	.globl _P1_1
                                    100 	.globl _P1_2
                                    101 	.globl _P1_3
                                    102 	.globl _P1_4
                                    103 	.globl _P1_5
                                    104 	.globl _P1_6
                                    105 	.globl _P1_7
                                    106 	.globl _IT0
                                    107 	.globl _RFERRIF
                                    108 	.globl _IT1
                                    109 	.globl _URX0IF
                                    110 	.globl _ADCIF
                                    111 	.globl _URX1IF
                                    112 	.globl _P0_0
                                    113 	.globl _P0_1
                                    114 	.globl _P0_2
                                    115 	.globl _P0_3
                                    116 	.globl _P0_4
                                    117 	.globl _P0_5
                                    118 	.globl _P0_6
                                    119 	.globl _P0_7
                                    120 	.globl _WDCTL
                                    121 	.globl _U1GCR
                                    122 	.globl _U1UCR
                                    123 	.globl _U1BAUD
                                    124 	.globl _U1DBUF
                                    125 	.globl _U1CSR
                                    126 	.globl _U0GCR
                                    127 	.globl _U0UCR
                                    128 	.globl _U0BAUD
                                    129 	.globl _U0DBUF
                                    130 	.globl _U0CSR
                                    131 	.globl _TIMIF
                                    132 	.globl _T4CC1
                                    133 	.globl _T4CCTL1
                                    134 	.globl _T4CC0
                                    135 	.globl _T4CCTL0
                                    136 	.globl _T4CTL
                                    137 	.globl _T4CNT
                                    138 	.globl _T3CC1
                                    139 	.globl _T3CCTL1
                                    140 	.globl _T3CC0
                                    141 	.globl _T3CCTL0
                                    142 	.globl _T3CTL
                                    143 	.globl _T3CNT
                                    144 	.globl _T2MSEL
                                    145 	.globl _T2IRQM
                                    146 	.globl _T2MOVF2
                                    147 	.globl _T2MOVF1
                                    148 	.globl _T2MOVF0
                                    149 	.globl _T2M1
                                    150 	.globl _T2M0
                                    151 	.globl _T2IRQF
                                    152 	.globl _T2EVTCFG
                                    153 	.globl _T2CTRL
                                    154 	.globl _T1STAT
                                    155 	.globl _T1CCTL2
                                    156 	.globl _T1CCTL1
                                    157 	.globl _T1CCTL0
                                    158 	.globl _T1CTL
                                    159 	.globl _T1CNTH
                                    160 	.globl _T1CNTL
                                    161 	.globl _T1CC2H
                                    162 	.globl _T1CC2L
                                    163 	.globl _T1CC1H
                                    164 	.globl _T1CC1L
                                    165 	.globl _T1CC0H
                                    166 	.globl _T1CC0L
                                    167 	.globl _CLKCONSTA
                                    168 	.globl _CLKCONCMD
                                    169 	.globl _SLEEPSTA
                                    170 	.globl _SLEEPCMD
                                    171 	.globl _STLOAD
                                    172 	.globl _ST2
                                    173 	.globl _ST1
                                    174 	.globl _ST0
                                    175 	.globl _RFERRF
                                    176 	.globl _RFIRQF0
                                    177 	.globl _RFST
                                    178 	.globl _RFD
                                    179 	.globl _RFIRQF1
                                    180 	.globl _PSBANK
                                    181 	.globl _FMAP
                                    182 	.globl _MEMCTR
                                    183 	.globl __XPAGE
                                    184 	.globl _MPAGE
                                    185 	.globl _PMUX
                                    186 	.globl _P2DIR
                                    187 	.globl _P1DIR
                                    188 	.globl _P0DIR
                                    189 	.globl _P2INP
                                    190 	.globl _P1INP
                                    191 	.globl _P2SEL
                                    192 	.globl _P1SEL
                                    193 	.globl _P0SEL
                                    194 	.globl _APCFG
                                    195 	.globl _PERCFG
                                    196 	.globl _P0INP
                                    197 	.globl _P2IEN
                                    198 	.globl _P1IEN
                                    199 	.globl _P0IEN
                                    200 	.globl _PICTL
                                    201 	.globl _P2IFG
                                    202 	.globl _P1IFG
                                    203 	.globl _P0IFG
                                    204 	.globl _DMAREQ
                                    205 	.globl _DMAARM
                                    206 	.globl _DMA0CFGH
                                    207 	.globl _DMA0CFGL
                                    208 	.globl _DMA1CFGH
                                    209 	.globl _DMA1CFGL
                                    210 	.globl _DMAIRQ
                                    211 	.globl _ENCCS
                                    212 	.globl _ENCDO
                                    213 	.globl _ENCDI
                                    214 	.globl _RNDH
                                    215 	.globl _RNDL
                                    216 	.globl _ADCH
                                    217 	.globl _ADCL
                                    218 	.globl _ADCCON3
                                    219 	.globl _ADCCON2
                                    220 	.globl _ADCCON1
                                    221 	.globl _B
                                    222 	.globl _IRCON2
                                    223 	.globl _ACC
                                    224 	.globl _PSW
                                    225 	.globl _IRCON
                                    226 	.globl _IP1
                                    227 	.globl _IEN1
                                    228 	.globl _IP0
                                    229 	.globl _IEN0
                                    230 	.globl _P2
                                    231 	.globl _S1CON
                                    232 	.globl _IEN2
                                    233 	.globl _S0CON
                                    234 	.globl _DPS
                                    235 	.globl _P1
                                    236 	.globl _TCON
                                    237 	.globl _PCON
                                    238 	.globl _DPH1
                                    239 	.globl _DPL1
                                    240 	.globl _DPH0
                                    241 	.globl _DPL0
                                    242 	.globl _SP
                                    243 	.globl _P0
                                    244 	.globl _X_IEEE_ADDR
                                    245 	.globl _X_INFOPAGE
                                    246 	.globl _X_P2DIR
                                    247 	.globl _X_P1DIR
                                    248 	.globl _X_P0DIR
                                    249 	.globl _X_U1GCR
                                    250 	.globl _X_U1UCR
                                    251 	.globl _X_U1BAUD
                                    252 	.globl _X_U1DBUF
                                    253 	.globl _X_U1CSR
                                    254 	.globl _X_P2INP
                                    255 	.globl _X_P1INP
                                    256 	.globl _X_P2SEL
                                    257 	.globl _X_P1SEL
                                    258 	.globl _X_P0SEL
                                    259 	.globl _X_APCFG
                                    260 	.globl _X_PERCFG
                                    261 	.globl _X_T4CC1
                                    262 	.globl _X_T4CCTL1
                                    263 	.globl _X_T4CC0
                                    264 	.globl _X_T4CCTL0
                                    265 	.globl _X_T4CTL
                                    266 	.globl _X_T4CNT
                                    267 	.globl _X_RFIRQF0
                                    268 	.globl _X_T1CCTL2
                                    269 	.globl _X_T1CCTL1
                                    270 	.globl _X_T1CCTL0
                                    271 	.globl _X_T1CTL
                                    272 	.globl _X_T1CNTH
                                    273 	.globl _X_T1CNTL
                                    274 	.globl _X_RFST
                                    275 	.globl _X_T1CC2H
                                    276 	.globl _X_T1CC2L
                                    277 	.globl _X_T1CC1H
                                    278 	.globl _X_T1CC1L
                                    279 	.globl _X_T1CC0H
                                    280 	.globl _X_T1CC0L
                                    281 	.globl _X_RFD
                                    282 	.globl _X_TIMIF
                                    283 	.globl _X_DMAREQ
                                    284 	.globl _X_DMAARM
                                    285 	.globl _X_DMA0CFGH
                                    286 	.globl _X_DMA0CFGL
                                    287 	.globl _X_DMA1CFGH
                                    288 	.globl _X_DMA1CFGL
                                    289 	.globl _X_DMAIRQ
                                    290 	.globl _X_T3CC1
                                    291 	.globl _X_T3CCTL1
                                    292 	.globl _X_T3CC0
                                    293 	.globl _X_T3CCTL0
                                    294 	.globl _X_T3CTL
                                    295 	.globl _X_T3CNT
                                    296 	.globl _X_WDCTL
                                    297 	.globl _X_MEMCTR
                                    298 	.globl _X_CLKCONCMD
                                    299 	.globl _X_U0GCR
                                    300 	.globl _X_U0UCR
                                    301 	.globl _X_T2MSEL
                                    302 	.globl _X_U0BAUD
                                    303 	.globl _X_U0DBUF
                                    304 	.globl _X_RFERRF
                                    305 	.globl _X_SLEEPCMD
                                    306 	.globl _X_RNDH
                                    307 	.globl _X_RNDL
                                    308 	.globl _X_ADCH
                                    309 	.globl _X_ADCL
                                    310 	.globl _X_ADCCON3
                                    311 	.globl _X_ADCCON2
                                    312 	.globl _X_ADCCON1
                                    313 	.globl _X_ENCCS
                                    314 	.globl _X_ENCDO
                                    315 	.globl _X_ENCDI
                                    316 	.globl _X_T1STAT
                                    317 	.globl _X_PMUX
                                    318 	.globl _X_STLOAD
                                    319 	.globl _X_P2IEN
                                    320 	.globl _X_P0IEN
                                    321 	.globl _X_T2IRQM
                                    322 	.globl _X_T2MOVF2
                                    323 	.globl _X_T2MOVF1
                                    324 	.globl _X_T2MOVF0
                                    325 	.globl _X_T2M1
                                    326 	.globl _X_T2M0
                                    327 	.globl _X_T2IRQF
                                    328 	.globl _X_P2
                                    329 	.globl _X_PSBANK
                                    330 	.globl _X_FMAP
                                    331 	.globl _X_CLKCONSTA
                                    332 	.globl _X_SLEEPSTA
                                    333 	.globl _X_T2EVTCFG
                                    334 	.globl _X_ST2
                                    335 	.globl _X_ST1
                                    336 	.globl _X_ST0
                                    337 	.globl _X_T2CTRL
                                    338 	.globl _X__XPAGE
                                    339 	.globl _X_MPAGE
                                    340 	.globl _X_RFIRQF1
                                    341 	.globl _X_P1
                                    342 	.globl _X_P0INP
                                    343 	.globl _X_P1IEN
                                    344 	.globl _X_PICTL
                                    345 	.globl _X_P2IFG
                                    346 	.globl _X_P1IFG
                                    347 	.globl _X_P0IFG
                                    348 	.globl _X_U0CSR
                                    349 	.globl _X_P0
                                    350 	.globl _USBF5
                                    351 	.globl _USBF4
                                    352 	.globl _USBF3
                                    353 	.globl _USBF2
                                    354 	.globl _USBF1
                                    355 	.globl _USBF0
                                    356 	.globl _USBCNTH
                                    357 	.globl _USBCNTL
                                    358 	.globl _USBCNT0
                                    359 	.globl _USBCSOH
                                    360 	.globl _USBCSOL
                                    361 	.globl _USBMAXO
                                    362 	.globl _USBCSIH
                                    363 	.globl _USBCSIL
                                    364 	.globl _USBCS0
                                    365 	.globl _USBMAXI
                                    366 	.globl _USBCTRL
                                    367 	.globl _USBINDEX
                                    368 	.globl _USBFRMH
                                    369 	.globl _USBFRML
                                    370 	.globl _USBCIE
                                    371 	.globl _USBOIE
                                    372 	.globl _USBIIE
                                    373 	.globl _USBCIF
                                    374 	.globl _USBOIF
                                    375 	.globl _USBIIF
                                    376 	.globl _USBPOW
                                    377 	.globl _USBADDR
                                    378 	.globl _CSPT
                                    379 	.globl _CSPZ
                                    380 	.globl _CSPY
                                    381 	.globl _CSPX
                                    382 	.globl _CSPSTAT
                                    383 	.globl _CSPCTRL
                                    384 	.globl _CSPPROG23
                                    385 	.globl _CSPPROG22
                                    386 	.globl _CSPPROG21
                                    387 	.globl _CSPPROG20
                                    388 	.globl _CSPPROG19
                                    389 	.globl _CSPPROG18
                                    390 	.globl _CSPPROG17
                                    391 	.globl _CSPPROG16
                                    392 	.globl _CSPPROG15
                                    393 	.globl _CSPPROG14
                                    394 	.globl _CSPPROG13
                                    395 	.globl _CSPPROG12
                                    396 	.globl _CSPPROG11
                                    397 	.globl _CSPPROG10
                                    398 	.globl _CSPPROG9
                                    399 	.globl _CSPPROG8
                                    400 	.globl _CSPPROG7
                                    401 	.globl _CSPPROG6
                                    402 	.globl _CSPPROG5
                                    403 	.globl _CSPPROG4
                                    404 	.globl _CSPPROG3
                                    405 	.globl _CSPPROG2
                                    406 	.globl _CSPPROG1
                                    407 	.globl _CSPPROG0
                                    408 	.globl _RFC_OBS_CTRL2
                                    409 	.globl _RFC_OBS_CTRL1
                                    410 	.globl _RFC_OBS_CTRL0
                                    411 	.globl _TXFILTCFG
                                    412 	.globl _PTEST1
                                    413 	.globl _PTEST0
                                    414 	.globl _ATEST
                                    415 	.globl _DACTEST2
                                    416 	.globl _DACTEST1
                                    417 	.globl _DACTEST0
                                    418 	.globl _MDMTEST1
                                    419 	.globl _MDMTEST0
                                    420 	.globl _ADCTEST2
                                    421 	.globl _ADCTEST1
                                    422 	.globl _ADCTEST0
                                    423 	.globl _AGCCTRL3
                                    424 	.globl _AGCCTRL2
                                    425 	.globl _AGCCTRL1
                                    426 	.globl _AGCCTRL0
                                    427 	.globl _FSCAL3
                                    428 	.globl _FSCAL2
                                    429 	.globl _FSCAL1
                                    430 	.globl _FSCAL0
                                    431 	.globl _FSCTRL
                                    432 	.globl _RXCTRL
                                    433 	.globl _FREQEST
                                    434 	.globl _MDMCTRL1
                                    435 	.globl _MDMCTRL0
                                    436 	.globl _RFRND
                                    437 	.globl _RFERRM
                                    438 	.globl _RFIRQM1
                                    439 	.globl _RFIRQM0
                                    440 	.globl _TXLAST_PTR
                                    441 	.globl _TXFIRST_PTR
                                    442 	.globl _RXP1_PTR
                                    443 	.globl _RXLAST_PTR
                                    444 	.globl _RXFIRST_PTR
                                    445 	.globl _TXFIFOCNT
                                    446 	.globl _RXFIFOCNT
                                    447 	.globl _RXFIRST
                                    448 	.globl _RSSISTAT
                                    449 	.globl _RSSI
                                    450 	.globl _CCACTRL1
                                    451 	.globl _CCACTRL0
                                    452 	.globl _FSMCTRL
                                    453 	.globl _FIFOPCTRL
                                    454 	.globl _FSMSTAT1
                                    455 	.globl _FSMSTAT0
                                    456 	.globl _TXCTRL
                                    457 	.globl _TXPOWER
                                    458 	.globl _FREQCTRL
                                    459 	.globl _FREQTUNE
                                    460 	.globl _RXMASKCLR
                                    461 	.globl _RXMASKSET
                                    462 	.globl _RXENABLE
                                    463 	.globl _FRMCTRL1
                                    464 	.globl _FRMCTRL0
                                    465 	.globl _SRCEXTEN2
                                    466 	.globl _SRCEXTEN1
                                    467 	.globl _SRCEXTEN0
                                    468 	.globl _SRCSHORTEN2
                                    469 	.globl _SRCSHORTEN1
                                    470 	.globl _SRCSHORTEN0
                                    471 	.globl _SRCMATCH
                                    472 	.globl _FRMFILT1
                                    473 	.globl _FRMFILT0
                                    474 	.globl _SHORT_ADDR1
                                    475 	.globl _SHORT_ADDR0
                                    476 	.globl _PAN_ID1
                                    477 	.globl _PAN_ID0
                                    478 	.globl _EXT_ADDR7
                                    479 	.globl _EXT_ADDR6
                                    480 	.globl _EXT_ADDR5
                                    481 	.globl _EXT_ADDR4
                                    482 	.globl _EXT_ADDR3
                                    483 	.globl _EXT_ADDR2
                                    484 	.globl _EXT_ADDR1
                                    485 	.globl _EXT_ADDR0
                                    486 	.globl _SRCSHORTPENDEN2
                                    487 	.globl _SRCSHORTPENDEN1
                                    488 	.globl _SRCSHORTPENDEN0
                                    489 	.globl _SRCEXTPENDEN2
                                    490 	.globl _SRCEXTPENDEN1
                                    491 	.globl _SRCEXTPENDEN0
                                    492 	.globl _SRCRESINDEX
                                    493 	.globl _SRCRESMASK2
                                    494 	.globl _SRCRESMASK1
                                    495 	.globl _SRCRESMASK0
                                    496 	.globl _SRC_ADDR_TABLE
                                    497 	.globl _TXFIFO
                                    498 	.globl _RXFIFO
                                    499 	.globl _RFCORE_RAM
                                    500 	.globl _CMPCTL
                                    501 	.globl _OPAMPS
                                    502 	.globl _OPAMPC
                                    503 	.globl _STCV2
                                    504 	.globl _STCV1
                                    505 	.globl _STCV0
                                    506 	.globl _STCS
                                    507 	.globl _STCC
                                    508 	.globl _T1CC4H
                                    509 	.globl _T1CC4L
                                    510 	.globl _T1CC3H
                                    511 	.globl _T1CC3L
                                    512 	.globl _XX_T1CC2H
                                    513 	.globl _XX_T1CC2L
                                    514 	.globl _XX_T1CC1H
                                    515 	.globl _XX_T1CC1L
                                    516 	.globl _XX_T1CC0H
                                    517 	.globl _XX_T1CC0L
                                    518 	.globl _T1CCTL4
                                    519 	.globl _T1CCTL3
                                    520 	.globl _XX_T1CCTL2
                                    521 	.globl _XX_T1CCTL1
                                    522 	.globl _XX_T1CCTL0
                                    523 	.globl _CLD
                                    524 	.globl _IRCTL
                                    525 	.globl _CHIPINFO1
                                    526 	.globl _CHIPINFO0
                                    527 	.globl _FWDATA
                                    528 	.globl _FADDRH
                                    529 	.globl _FADDRL
                                    530 	.globl _FCTL
                                    531 	.globl _IVCTRL
                                    532 	.globl _BATTMON
                                    533 	.globl _SRCRC
                                    534 	.globl _DBGDATA
                                    535 	.globl _TESTREG0
                                    536 	.globl _CHIPID
                                    537 	.globl _CHVER
                                    538 	.globl _OBSSEL5
                                    539 	.globl _OBSSEL4
                                    540 	.globl _OBSSEL3
                                    541 	.globl _OBSSEL2
                                    542 	.globl _OBSSEL1
                                    543 	.globl _OBSSEL0
                                    544 	.globl _I2CIO
                                    545 	.globl _I2CWC
                                    546 	.globl _I2CADDR
                                    547 	.globl _I2CDATA
                                    548 	.globl _I2CSTAT
                                    549 	.globl _I2CCFG
                                    550 	.globl _OPAMPMC
                                    551 	.globl _MONMUX
                                    552 	.globl _neighbor_attr_list_neighbors
                                    553 	.globl _neighbor_attr_register
                                    554 	.globl _neighbor_attr_has_neighbor
                                    555 	.globl _neighbor_attr_add_neighbor
                                    556 	.globl _neighbor_attr_remove_neighbor
                                    557 	.globl _neighbor_attr_get_data
                                    558 	.globl _neighbor_attr_set_data
                                    559 	.globl _neighbor_attr_tick
                                    560 	.globl _neighbor_attr_get_timeout
                                    561 	.globl _neighbor_attr_set_timeout
                                    562 ;--------------------------------------------------------
                                    563 ; special function registers
                                    564 ;--------------------------------------------------------
                                    565 	.area RSEG    (ABS,DATA)
      000000                        566 	.org 0x0000
                           000080   567 _P0	=	0x0080
                           000081   568 _SP	=	0x0081
                           000082   569 _DPL0	=	0x0082
                           000083   570 _DPH0	=	0x0083
                           000084   571 _DPL1	=	0x0084
                           000085   572 _DPH1	=	0x0085
                           000087   573 _PCON	=	0x0087
                           000088   574 _TCON	=	0x0088
                           000090   575 _P1	=	0x0090
                           000092   576 _DPS	=	0x0092
                           000098   577 _S0CON	=	0x0098
                           00009A   578 _IEN2	=	0x009a
                           00009B   579 _S1CON	=	0x009b
                           0000A0   580 _P2	=	0x00a0
                           0000A8   581 _IEN0	=	0x00a8
                           0000A9   582 _IP0	=	0x00a9
                           0000B8   583 _IEN1	=	0x00b8
                           0000B9   584 _IP1	=	0x00b9
                           0000C0   585 _IRCON	=	0x00c0
                           0000D0   586 _PSW	=	0x00d0
                           0000E0   587 _ACC	=	0x00e0
                           0000E8   588 _IRCON2	=	0x00e8
                           0000F0   589 _B	=	0x00f0
                           0000B4   590 _ADCCON1	=	0x00b4
                           0000B5   591 _ADCCON2	=	0x00b5
                           0000B6   592 _ADCCON3	=	0x00b6
                           0000BA   593 _ADCL	=	0x00ba
                           0000BB   594 _ADCH	=	0x00bb
                           0000BC   595 _RNDL	=	0x00bc
                           0000BD   596 _RNDH	=	0x00bd
                           0000B1   597 _ENCDI	=	0x00b1
                           0000B2   598 _ENCDO	=	0x00b2
                           0000B3   599 _ENCCS	=	0x00b3
                           0000D1   600 _DMAIRQ	=	0x00d1
                           0000D2   601 _DMA1CFGL	=	0x00d2
                           0000D3   602 _DMA1CFGH	=	0x00d3
                           0000D4   603 _DMA0CFGL	=	0x00d4
                           0000D5   604 _DMA0CFGH	=	0x00d5
                           0000D6   605 _DMAARM	=	0x00d6
                           0000D7   606 _DMAREQ	=	0x00d7
                           000089   607 _P0IFG	=	0x0089
                           00008A   608 _P1IFG	=	0x008a
                           00008B   609 _P2IFG	=	0x008b
                           00008C   610 _PICTL	=	0x008c
                           0000AB   611 _P0IEN	=	0x00ab
                           00008D   612 _P1IEN	=	0x008d
                           0000AC   613 _P2IEN	=	0x00ac
                           00008F   614 _P0INP	=	0x008f
                           0000F1   615 _PERCFG	=	0x00f1
                           0000F2   616 _APCFG	=	0x00f2
                           0000F3   617 _P0SEL	=	0x00f3
                           0000F4   618 _P1SEL	=	0x00f4
                           0000F5   619 _P2SEL	=	0x00f5
                           0000F6   620 _P1INP	=	0x00f6
                           0000F7   621 _P2INP	=	0x00f7
                           0000FD   622 _P0DIR	=	0x00fd
                           0000FE   623 _P1DIR	=	0x00fe
                           0000FF   624 _P2DIR	=	0x00ff
                           0000AE   625 _PMUX	=	0x00ae
                           000093   626 _MPAGE	=	0x0093
                           000093   627 __XPAGE	=	0x0093
                           0000C7   628 _MEMCTR	=	0x00c7
                           00009F   629 _FMAP	=	0x009f
                           00009F   630 _PSBANK	=	0x009f
                           000091   631 _RFIRQF1	=	0x0091
                           0000D9   632 _RFD	=	0x00d9
                           0000E1   633 _RFST	=	0x00e1
                           0000E9   634 _RFIRQF0	=	0x00e9
                           0000BF   635 _RFERRF	=	0x00bf
                           000095   636 _ST0	=	0x0095
                           000096   637 _ST1	=	0x0096
                           000097   638 _ST2	=	0x0097
                           0000AD   639 _STLOAD	=	0x00ad
                           0000BE   640 _SLEEPCMD	=	0x00be
                           00009D   641 _SLEEPSTA	=	0x009d
                           0000C6   642 _CLKCONCMD	=	0x00c6
                           00009E   643 _CLKCONSTA	=	0x009e
                           0000DA   644 _T1CC0L	=	0x00da
                           0000DB   645 _T1CC0H	=	0x00db
                           0000DC   646 _T1CC1L	=	0x00dc
                           0000DD   647 _T1CC1H	=	0x00dd
                           0000DE   648 _T1CC2L	=	0x00de
                           0000DF   649 _T1CC2H	=	0x00df
                           0000E2   650 _T1CNTL	=	0x00e2
                           0000E3   651 _T1CNTH	=	0x00e3
                           0000E4   652 _T1CTL	=	0x00e4
                           0000E5   653 _T1CCTL0	=	0x00e5
                           0000E6   654 _T1CCTL1	=	0x00e6
                           0000E7   655 _T1CCTL2	=	0x00e7
                           0000AF   656 _T1STAT	=	0x00af
                           000094   657 _T2CTRL	=	0x0094
                           00009C   658 _T2EVTCFG	=	0x009c
                           0000A1   659 _T2IRQF	=	0x00a1
                           0000A2   660 _T2M0	=	0x00a2
                           0000A3   661 _T2M1	=	0x00a3
                           0000A4   662 _T2MOVF0	=	0x00a4
                           0000A5   663 _T2MOVF1	=	0x00a5
                           0000A6   664 _T2MOVF2	=	0x00a6
                           0000A7   665 _T2IRQM	=	0x00a7
                           0000C3   666 _T2MSEL	=	0x00c3
                           0000CA   667 _T3CNT	=	0x00ca
                           0000CB   668 _T3CTL	=	0x00cb
                           0000CC   669 _T3CCTL0	=	0x00cc
                           0000CD   670 _T3CC0	=	0x00cd
                           0000CE   671 _T3CCTL1	=	0x00ce
                           0000CF   672 _T3CC1	=	0x00cf
                           0000EA   673 _T4CNT	=	0x00ea
                           0000EB   674 _T4CTL	=	0x00eb
                           0000EC   675 _T4CCTL0	=	0x00ec
                           0000ED   676 _T4CC0	=	0x00ed
                           0000EE   677 _T4CCTL1	=	0x00ee
                           0000EF   678 _T4CC1	=	0x00ef
                           0000D8   679 _TIMIF	=	0x00d8
                           000086   680 _U0CSR	=	0x0086
                           0000C1   681 _U0DBUF	=	0x00c1
                           0000C2   682 _U0BAUD	=	0x00c2
                           0000C4   683 _U0UCR	=	0x00c4
                           0000C5   684 _U0GCR	=	0x00c5
                           0000F8   685 _U1CSR	=	0x00f8
                           0000F9   686 _U1DBUF	=	0x00f9
                           0000FA   687 _U1BAUD	=	0x00fa
                           0000FB   688 _U1UCR	=	0x00fb
                           0000FC   689 _U1GCR	=	0x00fc
                           0000C9   690 _WDCTL	=	0x00c9
                                    691 ;--------------------------------------------------------
                                    692 ; special function bits
                                    693 ;--------------------------------------------------------
                                    694 	.area RSEG    (ABS,DATA)
      000000                        695 	.org 0x0000
                           000087   696 _P0_7	=	0x0087
                           000086   697 _P0_6	=	0x0086
                           000085   698 _P0_5	=	0x0085
                           000084   699 _P0_4	=	0x0084
                           000083   700 _P0_3	=	0x0083
                           000082   701 _P0_2	=	0x0082
                           000081   702 _P0_1	=	0x0081
                           000080   703 _P0_0	=	0x0080
                           00008F   704 _URX1IF	=	0x008f
                           00008D   705 _ADCIF	=	0x008d
                           00008B   706 _URX0IF	=	0x008b
                           00008A   707 _IT1	=	0x008a
                           000089   708 _RFERRIF	=	0x0089
                           000088   709 _IT0	=	0x0088
                           000097   710 _P1_7	=	0x0097
                           000096   711 _P1_6	=	0x0096
                           000095   712 _P1_5	=	0x0095
                           000094   713 _P1_4	=	0x0094
                           000093   714 _P1_3	=	0x0093
                           000092   715 _P1_2	=	0x0092
                           000091   716 _P1_1	=	0x0091
                           000090   717 _P1_0	=	0x0090
                           000099   718 _ENCIF_1	=	0x0099
                           000098   719 _ENCIF_0	=	0x0098
                           0000A7   720 _P2_7	=	0x00a7
                           0000A6   721 _P2_6	=	0x00a6
                           0000A5   722 _P2_5	=	0x00a5
                           0000A4   723 _P2_4	=	0x00a4
                           0000A3   724 _P2_3	=	0x00a3
                           0000A2   725 _P2_2	=	0x00a2
                           0000A1   726 _P2_1	=	0x00a1
                           0000A0   727 _P2_0	=	0x00a0
                           0000AF   728 _EA	=	0x00af
                           0000AD   729 _STIE	=	0x00ad
                           0000AC   730 _ENCIE	=	0x00ac
                           0000AB   731 _URX1IE	=	0x00ab
                           0000AA   732 _URX0IE	=	0x00aa
                           0000A9   733 _ADCIE	=	0x00a9
                           0000A8   734 _RFERRIE	=	0x00a8
                           0000BD   735 _P0IE	=	0x00bd
                           0000BC   736 _T4IE	=	0x00bc
                           0000BB   737 _T3IE	=	0x00bb
                           0000BA   738 _T2IE	=	0x00ba
                           0000B9   739 _T1IE	=	0x00b9
                           0000B8   740 _DMAIE	=	0x00b8
                           0000C7   741 _STIF	=	0x00c7
                           0000C5   742 _P0IF	=	0x00c5
                           0000C4   743 _T4IF	=	0x00c4
                           0000C3   744 _T3IF	=	0x00c3
                           0000C2   745 _T2IF	=	0x00c2
                           0000C1   746 _T1IF	=	0x00c1
                           0000C0   747 _DMAIF	=	0x00c0
                           0000D7   748 _CY	=	0x00d7
                           0000D6   749 _AC	=	0x00d6
                           0000D5   750 _F0	=	0x00d5
                           0000D4   751 _RS1	=	0x00d4
                           0000D3   752 _RS0	=	0x00d3
                           0000D2   753 _OV	=	0x00d2
                           0000D1   754 _F1	=	0x00d1
                           0000D0   755 _P	=	0x00d0
                           0000E7   756 _ACC_7	=	0x00e7
                           0000E6   757 _ACC_6	=	0x00e6
                           0000E5   758 _ACC_5	=	0x00e5
                           0000E4   759 _ACC_4	=	0x00e4
                           0000E3   760 _ACC_3	=	0x00e3
                           0000E2   761 _ACC_2	=	0x00e2
                           0000E1   762 _ACC_1	=	0x00e1
                           0000E0   763 _ACC_0	=	0x00e0
                           0000EC   764 _WDTIF	=	0x00ec
                           0000EB   765 _P1IF	=	0x00eb
                           0000EA   766 _UTX1IF	=	0x00ea
                           0000E9   767 _UTX0IF	=	0x00e9
                           0000E8   768 _P2IF	=	0x00e8
                           0000F7   769 _B_7	=	0x00f7
                           0000F6   770 _B_6	=	0x00f6
                           0000F5   771 _B_5	=	0x00f5
                           0000F4   772 _B_4	=	0x00f4
                           0000F3   773 _B_3	=	0x00f3
                           0000F2   774 _B_2	=	0x00f2
                           0000F1   775 _B_1	=	0x00f1
                           0000F0   776 _B_0	=	0x00f0
                           0000DE   777 _OVFIM	=	0x00de
                           0000DD   778 _T4CH1IF	=	0x00dd
                           0000DC   779 _T4CH0IF	=	0x00dc
                           0000DB   780 _T4OVFIF	=	0x00db
                           0000DA   781 _T3CH1IF	=	0x00da
                           0000D9   782 _T3CH0IF	=	0x00d9
                           0000D8   783 _T3OVFIF	=	0x00d8
                           0000FF   784 _MODE	=	0x00ff
                           0000FE   785 _RE	=	0x00fe
                           0000FD   786 _SLAVE	=	0x00fd
                           0000FC   787 _FE	=	0x00fc
                           0000FB   788 _ERR	=	0x00fb
                           0000FA   789 _RX_BYTE	=	0x00fa
                           0000F9   790 _TX_BYTE	=	0x00f9
                           0000F8   791 _ACTIVE	=	0x00f8
                                    792 ;--------------------------------------------------------
                                    793 ; overlayable register banks
                                    794 ;--------------------------------------------------------
                                    795 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        796 	.ds 8
                                    797 ;--------------------------------------------------------
                                    798 ; internal ram data
                                    799 ;--------------------------------------------------------
                                    800 	.area DSEG    (DATA)
                                    801 ;--------------------------------------------------------
                                    802 ; overlayable items in internal ram 
                                    803 ;--------------------------------------------------------
                                    804 ;--------------------------------------------------------
                                    805 ; indirectly addressable internal ram data
                                    806 ;--------------------------------------------------------
                                    807 	.area ISEG    (DATA)
                                    808 ;--------------------------------------------------------
                                    809 ; absolute internal ram data
                                    810 ;--------------------------------------------------------
                                    811 	.area IABS    (ABS,DATA)
                                    812 	.area IABS    (ABS,DATA)
                                    813 ;--------------------------------------------------------
                                    814 ; bit data
                                    815 ;--------------------------------------------------------
                                    816 	.area BSEG    (BIT)
                                    817 ;--------------------------------------------------------
                                    818 ; paged external ram data
                                    819 ;--------------------------------------------------------
                                    820 	.area PSEG    (PAG,XDATA)
                                    821 ;--------------------------------------------------------
                                    822 ; external ram data
                                    823 ;--------------------------------------------------------
                                    824 	.area XSEG    (XDATA)
                           0061A6   825 _MONMUX	=	0x61a6
                           0061A6   826 _OPAMPMC	=	0x61a6
                           006230   827 _I2CCFG	=	0x6230
                           006231   828 _I2CSTAT	=	0x6231
                           006232   829 _I2CDATA	=	0x6232
                           006233   830 _I2CADDR	=	0x6233
                           006234   831 _I2CWC	=	0x6234
                           006235   832 _I2CIO	=	0x6235
                           006243   833 _OBSSEL0	=	0x6243
                           006244   834 _OBSSEL1	=	0x6244
                           006245   835 _OBSSEL2	=	0x6245
                           006246   836 _OBSSEL3	=	0x6246
                           006247   837 _OBSSEL4	=	0x6247
                           006248   838 _OBSSEL5	=	0x6248
                           006249   839 _CHVER	=	0x6249
                           00624A   840 _CHIPID	=	0x624a
                           00624B   841 _TESTREG0	=	0x624b
                           006260   842 _DBGDATA	=	0x6260
                           006262   843 _SRCRC	=	0x6262
                           006264   844 _BATTMON	=	0x6264
                           006265   845 _IVCTRL	=	0x6265
                           006270   846 _FCTL	=	0x6270
                           006271   847 _FADDRL	=	0x6271
                           006272   848 _FADDRH	=	0x6272
                           006273   849 _FWDATA	=	0x6273
                           006276   850 _CHIPINFO0	=	0x6276
                           006277   851 _CHIPINFO1	=	0x6277
                           006281   852 _IRCTL	=	0x6281
                           006290   853 _CLD	=	0x6290
                           0062A0   854 _XX_T1CCTL0	=	0x62a0
                           0062A1   855 _XX_T1CCTL1	=	0x62a1
                           0062A2   856 _XX_T1CCTL2	=	0x62a2
                           0062A3   857 _T1CCTL3	=	0x62a3
                           0062A4   858 _T1CCTL4	=	0x62a4
                           0062A6   859 _XX_T1CC0L	=	0x62a6
                           0062A7   860 _XX_T1CC0H	=	0x62a7
                           0062A8   861 _XX_T1CC1L	=	0x62a8
                           0062A9   862 _XX_T1CC1H	=	0x62a9
                           0062AA   863 _XX_T1CC2L	=	0x62aa
                           0062AB   864 _XX_T1CC2H	=	0x62ab
                           0062AC   865 _T1CC3L	=	0x62ac
                           0062AD   866 _T1CC3H	=	0x62ad
                           0062AE   867 _T1CC4L	=	0x62ae
                           0062AF   868 _T1CC4H	=	0x62af
                           0062B0   869 _STCC	=	0x62b0
                           0062B1   870 _STCS	=	0x62b1
                           0062B2   871 _STCV0	=	0x62b2
                           0062B3   872 _STCV1	=	0x62b3
                           0062B4   873 _STCV2	=	0x62b4
                           0062C0   874 _OPAMPC	=	0x62c0
                           0062C1   875 _OPAMPS	=	0x62c1
                           0062D0   876 _CMPCTL	=	0x62d0
                           006000   877 _RFCORE_RAM	=	0x6000
                           006000   878 _RXFIFO	=	0x6000
                           006080   879 _TXFIFO	=	0x6080
                           006100   880 _SRC_ADDR_TABLE	=	0x6100
                           006160   881 _SRCRESMASK0	=	0x6160
                           006161   882 _SRCRESMASK1	=	0x6161
                           006162   883 _SRCRESMASK2	=	0x6162
                           006163   884 _SRCRESINDEX	=	0x6163
                           006164   885 _SRCEXTPENDEN0	=	0x6164
                           006165   886 _SRCEXTPENDEN1	=	0x6165
                           006166   887 _SRCEXTPENDEN2	=	0x6166
                           006167   888 _SRCSHORTPENDEN0	=	0x6167
                           006168   889 _SRCSHORTPENDEN1	=	0x6168
                           006169   890 _SRCSHORTPENDEN2	=	0x6169
                           00616A   891 _EXT_ADDR0	=	0x616a
                           00616B   892 _EXT_ADDR1	=	0x616b
                           00616C   893 _EXT_ADDR2	=	0x616c
                           00616D   894 _EXT_ADDR3	=	0x616d
                           00616E   895 _EXT_ADDR4	=	0x616e
                           00616F   896 _EXT_ADDR5	=	0x616f
                           006170   897 _EXT_ADDR6	=	0x6170
                           006171   898 _EXT_ADDR7	=	0x6171
                           006172   899 _PAN_ID0	=	0x6172
                           006173   900 _PAN_ID1	=	0x6173
                           006174   901 _SHORT_ADDR0	=	0x6174
                           006175   902 _SHORT_ADDR1	=	0x6175
                           006180   903 _FRMFILT0	=	0x6180
                           006181   904 _FRMFILT1	=	0x6181
                           006182   905 _SRCMATCH	=	0x6182
                           006183   906 _SRCSHORTEN0	=	0x6183
                           006184   907 _SRCSHORTEN1	=	0x6184
                           006185   908 _SRCSHORTEN2	=	0x6185
                           006186   909 _SRCEXTEN0	=	0x6186
                           006187   910 _SRCEXTEN1	=	0x6187
                           006188   911 _SRCEXTEN2	=	0x6188
                           006189   912 _FRMCTRL0	=	0x6189
                           00618A   913 _FRMCTRL1	=	0x618a
                           00618B   914 _RXENABLE	=	0x618b
                           00618C   915 _RXMASKSET	=	0x618c
                           00618D   916 _RXMASKCLR	=	0x618d
                           00618E   917 _FREQTUNE	=	0x618e
                           00618F   918 _FREQCTRL	=	0x618f
                           006190   919 _TXPOWER	=	0x6190
                           006191   920 _TXCTRL	=	0x6191
                           006192   921 _FSMSTAT0	=	0x6192
                           006193   922 _FSMSTAT1	=	0x6193
                           006194   923 _FIFOPCTRL	=	0x6194
                           006195   924 _FSMCTRL	=	0x6195
                           006196   925 _CCACTRL0	=	0x6196
                           006197   926 _CCACTRL1	=	0x6197
                           006198   927 _RSSI	=	0x6198
                           006199   928 _RSSISTAT	=	0x6199
                           00619A   929 _RXFIRST	=	0x619a
                           00619B   930 _RXFIFOCNT	=	0x619b
                           00619C   931 _TXFIFOCNT	=	0x619c
                           00619D   932 _RXFIRST_PTR	=	0x619d
                           00619E   933 _RXLAST_PTR	=	0x619e
                           00619F   934 _RXP1_PTR	=	0x619f
                           0061A1   935 _TXFIRST_PTR	=	0x61a1
                           0061A2   936 _TXLAST_PTR	=	0x61a2
                           0061A3   937 _RFIRQM0	=	0x61a3
                           0061A4   938 _RFIRQM1	=	0x61a4
                           0061A5   939 _RFERRM	=	0x61a5
                           0061A7   940 _RFRND	=	0x61a7
                           0061A8   941 _MDMCTRL0	=	0x61a8
                           0061A9   942 _MDMCTRL1	=	0x61a9
                           0061AA   943 _FREQEST	=	0x61aa
                           0061AB   944 _RXCTRL	=	0x61ab
                           0061AC   945 _FSCTRL	=	0x61ac
                           0061AD   946 _FSCAL0	=	0x61ad
                           0061AE   947 _FSCAL1	=	0x61ae
                           0061AF   948 _FSCAL2	=	0x61af
                           0061B0   949 _FSCAL3	=	0x61b0
                           0061B1   950 _AGCCTRL0	=	0x61b1
                           0061B2   951 _AGCCTRL1	=	0x61b2
                           0061B3   952 _AGCCTRL2	=	0x61b3
                           0061B4   953 _AGCCTRL3	=	0x61b4
                           0061B5   954 _ADCTEST0	=	0x61b5
                           0061B6   955 _ADCTEST1	=	0x61b6
                           0061B7   956 _ADCTEST2	=	0x61b7
                           0061B8   957 _MDMTEST0	=	0x61b8
                           0061B9   958 _MDMTEST1	=	0x61b9
                           0061BA   959 _DACTEST0	=	0x61ba
                           0061BB   960 _DACTEST1	=	0x61bb
                           0061BC   961 _DACTEST2	=	0x61bc
                           0061BD   962 _ATEST	=	0x61bd
                           0061BE   963 _PTEST0	=	0x61be
                           0061BF   964 _PTEST1	=	0x61bf
                           0061FA   965 _TXFILTCFG	=	0x61fa
                           0061EB   966 _RFC_OBS_CTRL0	=	0x61eb
                           0061EC   967 _RFC_OBS_CTRL1	=	0x61ec
                           0061ED   968 _RFC_OBS_CTRL2	=	0x61ed
                           0061C0   969 _CSPPROG0	=	0x61c0
                           0061C1   970 _CSPPROG1	=	0x61c1
                           0061C2   971 _CSPPROG2	=	0x61c2
                           0061C3   972 _CSPPROG3	=	0x61c3
                           0061C4   973 _CSPPROG4	=	0x61c4
                           0061C5   974 _CSPPROG5	=	0x61c5
                           0061C6   975 _CSPPROG6	=	0x61c6
                           0061C7   976 _CSPPROG7	=	0x61c7
                           0061C8   977 _CSPPROG8	=	0x61c8
                           0061C9   978 _CSPPROG9	=	0x61c9
                           0061CA   979 _CSPPROG10	=	0x61ca
                           0061CB   980 _CSPPROG11	=	0x61cb
                           0061CC   981 _CSPPROG12	=	0x61cc
                           0061CD   982 _CSPPROG13	=	0x61cd
                           0061CE   983 _CSPPROG14	=	0x61ce
                           0061CF   984 _CSPPROG15	=	0x61cf
                           0061D0   985 _CSPPROG16	=	0x61d0
                           0061D1   986 _CSPPROG17	=	0x61d1
                           0061D2   987 _CSPPROG18	=	0x61d2
                           0061D3   988 _CSPPROG19	=	0x61d3
                           0061D4   989 _CSPPROG20	=	0x61d4
                           0061D5   990 _CSPPROG21	=	0x61d5
                           0061D6   991 _CSPPROG22	=	0x61d6
                           0061D7   992 _CSPPROG23	=	0x61d7
                           0061E0   993 _CSPCTRL	=	0x61e0
                           0061E1   994 _CSPSTAT	=	0x61e1
                           0061E2   995 _CSPX	=	0x61e2
                           0061E3   996 _CSPY	=	0x61e3
                           0061E4   997 _CSPZ	=	0x61e4
                           0061E5   998 _CSPT	=	0x61e5
                           006200   999 _USBADDR	=	0x6200
                           006201  1000 _USBPOW	=	0x6201
                           006202  1001 _USBIIF	=	0x6202
                           006204  1002 _USBOIF	=	0x6204
                           006206  1003 _USBCIF	=	0x6206
                           006207  1004 _USBIIE	=	0x6207
                           006209  1005 _USBOIE	=	0x6209
                           00620B  1006 _USBCIE	=	0x620b
                           00620C  1007 _USBFRML	=	0x620c
                           00620D  1008 _USBFRMH	=	0x620d
                           00620E  1009 _USBINDEX	=	0x620e
                           00620F  1010 _USBCTRL	=	0x620f
                           006210  1011 _USBMAXI	=	0x6210
                           006211  1012 _USBCS0	=	0x6211
                           006211  1013 _USBCSIL	=	0x6211
                           006212  1014 _USBCSIH	=	0x6212
                           006213  1015 _USBMAXO	=	0x6213
                           006214  1016 _USBCSOL	=	0x6214
                           006215  1017 _USBCSOH	=	0x6215
                           006216  1018 _USBCNT0	=	0x6216
                           006216  1019 _USBCNTL	=	0x6216
                           006217  1020 _USBCNTH	=	0x6217
                           006220  1021 _USBF0	=	0x6220
                           006222  1022 _USBF1	=	0x6222
                           006224  1023 _USBF2	=	0x6224
                           006226  1024 _USBF3	=	0x6226
                           006228  1025 _USBF4	=	0x6228
                           00622A  1026 _USBF5	=	0x622a
                           007080  1027 _X_P0	=	0x7080
                           007086  1028 _X_U0CSR	=	0x7086
                           007089  1029 _X_P0IFG	=	0x7089
                           00708A  1030 _X_P1IFG	=	0x708a
                           00708B  1031 _X_P2IFG	=	0x708b
                           00708C  1032 _X_PICTL	=	0x708c
                           00708D  1033 _X_P1IEN	=	0x708d
                           00708F  1034 _X_P0INP	=	0x708f
                           007090  1035 _X_P1	=	0x7090
                           007091  1036 _X_RFIRQF1	=	0x7091
                           007093  1037 _X_MPAGE	=	0x7093
                           007093  1038 _X__XPAGE	=	0x7093
                           007094  1039 _X_T2CTRL	=	0x7094
                           007095  1040 _X_ST0	=	0x7095
                           007096  1041 _X_ST1	=	0x7096
                           007097  1042 _X_ST2	=	0x7097
                           00709C  1043 _X_T2EVTCFG	=	0x709c
                           00709D  1044 _X_SLEEPSTA	=	0x709d
                           00709E  1045 _X_CLKCONSTA	=	0x709e
                           00709F  1046 _X_FMAP	=	0x709f
                           00709F  1047 _X_PSBANK	=	0x709f
                           0070A0  1048 _X_P2	=	0x70a0
                           0070A1  1049 _X_T2IRQF	=	0x70a1
                           0070A2  1050 _X_T2M0	=	0x70a2
                           0070A3  1051 _X_T2M1	=	0x70a3
                           0070A4  1052 _X_T2MOVF0	=	0x70a4
                           0070A5  1053 _X_T2MOVF1	=	0x70a5
                           0070A6  1054 _X_T2MOVF2	=	0x70a6
                           0070A7  1055 _X_T2IRQM	=	0x70a7
                           0070AB  1056 _X_P0IEN	=	0x70ab
                           0070AC  1057 _X_P2IEN	=	0x70ac
                           0070AD  1058 _X_STLOAD	=	0x70ad
                           0070AE  1059 _X_PMUX	=	0x70ae
                           0070AF  1060 _X_T1STAT	=	0x70af
                           0070B1  1061 _X_ENCDI	=	0x70b1
                           0070B2  1062 _X_ENCDO	=	0x70b2
                           0070B3  1063 _X_ENCCS	=	0x70b3
                           0070B4  1064 _X_ADCCON1	=	0x70b4
                           0070B5  1065 _X_ADCCON2	=	0x70b5
                           0070B6  1066 _X_ADCCON3	=	0x70b6
                           0070BA  1067 _X_ADCL	=	0x70ba
                           0070BB  1068 _X_ADCH	=	0x70bb
                           0070BC  1069 _X_RNDL	=	0x70bc
                           0070BD  1070 _X_RNDH	=	0x70bd
                           0070BE  1071 _X_SLEEPCMD	=	0x70be
                           0070BF  1072 _X_RFERRF	=	0x70bf
                           0070C1  1073 _X_U0DBUF	=	0x70c1
                           0070C2  1074 _X_U0BAUD	=	0x70c2
                           0070C3  1075 _X_T2MSEL	=	0x70c3
                           0070C4  1076 _X_U0UCR	=	0x70c4
                           0070C5  1077 _X_U0GCR	=	0x70c5
                           0070C6  1078 _X_CLKCONCMD	=	0x70c6
                           0070C7  1079 _X_MEMCTR	=	0x70c7
                           0070C9  1080 _X_WDCTL	=	0x70c9
                           0070CA  1081 _X_T3CNT	=	0x70ca
                           0070CB  1082 _X_T3CTL	=	0x70cb
                           0070CC  1083 _X_T3CCTL0	=	0x70cc
                           0070CD  1084 _X_T3CC0	=	0x70cd
                           0070CE  1085 _X_T3CCTL1	=	0x70ce
                           0070CF  1086 _X_T3CC1	=	0x70cf
                           0070D1  1087 _X_DMAIRQ	=	0x70d1
                           0070D2  1088 _X_DMA1CFGL	=	0x70d2
                           0070D3  1089 _X_DMA1CFGH	=	0x70d3
                           0070D4  1090 _X_DMA0CFGL	=	0x70d4
                           0070D5  1091 _X_DMA0CFGH	=	0x70d5
                           0070D6  1092 _X_DMAARM	=	0x70d6
                           0070D7  1093 _X_DMAREQ	=	0x70d7
                           0070D8  1094 _X_TIMIF	=	0x70d8
                           0070D9  1095 _X_RFD	=	0x70d9
                           0070DA  1096 _X_T1CC0L	=	0x70da
                           0070DB  1097 _X_T1CC0H	=	0x70db
                           0070DC  1098 _X_T1CC1L	=	0x70dc
                           0070DD  1099 _X_T1CC1H	=	0x70dd
                           0070DE  1100 _X_T1CC2L	=	0x70de
                           0070DF  1101 _X_T1CC2H	=	0x70df
                           0070E1  1102 _X_RFST	=	0x70e1
                           0070E2  1103 _X_T1CNTL	=	0x70e2
                           0070E3  1104 _X_T1CNTH	=	0x70e3
                           0070E4  1105 _X_T1CTL	=	0x70e4
                           0070E5  1106 _X_T1CCTL0	=	0x70e5
                           0070E6  1107 _X_T1CCTL1	=	0x70e6
                           0070E7  1108 _X_T1CCTL2	=	0x70e7
                           0070E9  1109 _X_RFIRQF0	=	0x70e9
                           0070EA  1110 _X_T4CNT	=	0x70ea
                           0070EB  1111 _X_T4CTL	=	0x70eb
                           0070EC  1112 _X_T4CCTL0	=	0x70ec
                           0070ED  1113 _X_T4CC0	=	0x70ed
                           0070EE  1114 _X_T4CCTL1	=	0x70ee
                           0070EF  1115 _X_T4CC1	=	0x70ef
                           0070F1  1116 _X_PERCFG	=	0x70f1
                           0070F2  1117 _X_APCFG	=	0x70f2
                           0070F3  1118 _X_P0SEL	=	0x70f3
                           0070F4  1119 _X_P1SEL	=	0x70f4
                           0070F5  1120 _X_P2SEL	=	0x70f5
                           0070F6  1121 _X_P1INP	=	0x70f6
                           0070F7  1122 _X_P2INP	=	0x70f7
                           0070F8  1123 _X_U1CSR	=	0x70f8
                           0070F9  1124 _X_U1DBUF	=	0x70f9
                           0070FA  1125 _X_U1BAUD	=	0x70fa
                           0070FB  1126 _X_U1UCR	=	0x70fb
                           0070FC  1127 _X_U1GCR	=	0x70fc
                           0070FD  1128 _X_P0DIR	=	0x70fd
                           0070FE  1129 _X_P1DIR	=	0x70fe
                           0070FF  1130 _X_P2DIR	=	0x70ff
                           007800  1131 _X_INFOPAGE	=	0x7800
                           00780C  1132 _X_IEEE_ADDR	=	0x780c
      000000                       1133 _neighbor_addr_mem_memb_count:
      000000                       1134 	.ds 12
      00000C                       1135 _neighbor_addr_mem_memb_mem:
      00000C                       1136 	.ds 180
      0000C0                       1137 _ct:
      0000C0                       1138 	.ds 22
                                   1139 ;--------------------------------------------------------
                                   1140 ; absolute external ram data
                                   1141 ;--------------------------------------------------------
                                   1142 	.area XABS    (ABS,XDATA)
                                   1143 ;--------------------------------------------------------
                                   1144 ; external initialized ram data
                                   1145 ;--------------------------------------------------------
                                   1146 	.area XISEG   (XDATA)
      000000                       1147 _timeout:
      000000                       1148 	.ds 2
      000002                       1149 _neighbor_addr_mem:
      000002                       1150 	.ds 10
      00000C                       1151 _neighbor_addrs_list:
      00000C                       1152 	.ds 3
      00000F                       1153 _neighbor_addrs:
      00000F                       1154 	.ds 3
      000012                       1155 _neighbor_attrs_list:
      000012                       1156 	.ds 3
      000015                       1157 _neighbor_attrs:
      000015                       1158 	.ds 3
                                   1159 	.area HOME    (CODE)
                                   1160 	.area GSINIT0 (CODE)
                                   1161 	.area GSINIT1 (CODE)
                                   1162 	.area GSINIT2 (CODE)
                                   1163 	.area GSINIT3 (CODE)
                                   1164 	.area GSINIT4 (CODE)
                                   1165 	.area GSINIT5 (CODE)
                                   1166 	.area GSINIT  (CODE)
                                   1167 	.area GSFINAL (CODE)
                                   1168 	.area CSEG    (CODE)
                                   1169 ;--------------------------------------------------------
                                   1170 ; global & static initialisations
                                   1171 ;--------------------------------------------------------
                                   1172 	.area HOME    (CODE)
                                   1173 	.area GSINIT  (CODE)
                                   1174 	.area GSFINAL (CODE)
                                   1175 	.area GSINIT  (CODE)
                                   1176 ;--------------------------------------------------------
                                   1177 ; Home
                                   1178 ;--------------------------------------------------------
                                   1179 	.area HOME    (CODE)
                                   1180 	.area HOME    (CODE)
                                   1181 ;--------------------------------------------------------
                                   1182 ; code
                                   1183 ;--------------------------------------------------------
                                   1184 	.area BANK1   (CODE)
                                   1185 ;------------------------------------------------------------
                                   1186 ;Allocation info for local variables in function 'neighbor_addr_get'
                                   1187 ;------------------------------------------------------------
                                   1188 ;addr                      Allocated to stack - sp -2
                                   1189 ;item                      Allocated to registers r5 r6 r7 
                                   1190 ;------------------------------------------------------------
                                   1191 ;	../../../../core/net/neighbor-attr.c:59: neighbor_addr_get(const rimeaddr_t *addr)
                                   1192 ;	-----------------------------------------
                                   1193 ;	 function neighbor_addr_get
                                   1194 ;	-----------------------------------------
      000000                       1195 _neighbor_addr_get:
                           000007  1196 	ar7 = 0x07
                           000006  1197 	ar6 = 0x06
                           000005  1198 	ar5 = 0x05
                           000004  1199 	ar4 = 0x04
                           000003  1200 	ar3 = 0x03
                           000002  1201 	ar2 = 0x02
                           000001  1202 	ar1 = 0x01
                           000000  1203 	ar0 = 0x00
      000000 C0 82            [24] 1204 	push	dpl
      000002 C0 83            [24] 1205 	push	dph
      000004 C0 F0            [24] 1206 	push	b
                                   1207 ;	../../../../core/net/neighbor-attr.c:64: if(memb_inmemb(&neighbor_addr_mem, (char *)addr)) {
      000006 A8 81            [24] 1208 	mov	r0,sp
      000008 18               [12] 1209 	dec	r0
      000009 18               [12] 1210 	dec	r0
      00000A 86 02            [24] 1211 	mov	ar2,@r0
      00000C 08               [12] 1212 	inc	r0
      00000D 86 03            [24] 1213 	mov	ar3,@r0
      00000F 08               [12] 1214 	inc	r0
      000010 86 04            [24] 1215 	mov	ar4,@r0
      000012 8A 05            [24] 1216 	mov	ar5,r2
      000014 8B 06            [24] 1217 	mov	ar6,r3
      000016 8C 07            [24] 1218 	mov	ar7,r4
      000018 C0 04            [24] 1219 	push	ar4
      00001A C0 03            [24] 1220 	push	ar3
      00001C C0 02            [24] 1221 	push	ar2
      00001E C0 05            [24] 1222 	push	ar5
      000020 C0 06            [24] 1223 	push	ar6
      000022 C0 07            [24] 1224 	push	ar7
      000024 90r00r02         [24] 1225 	mov	dptr,#_neighbor_addr_mem
      000027 75 F0 00         [24] 1226 	mov	b,#0x00
      00002A 78r00            [12] 1227 	mov	r0,#_memb_inmemb
      00002C 79s00            [12] 1228 	mov	r1,#(_memb_inmemb >> 8)
      00002E 7As00            [12] 1229 	mov	r2,#(_memb_inmemb >> 16)
      000030 12r00r00         [24] 1230 	lcall	__sdcc_banked_call
      000033 AE 82            [24] 1231 	mov	r6,dpl
      000035 AF 83            [24] 1232 	mov	r7,dph
      000037 15 81            [12] 1233 	dec	sp
      000039 15 81            [12] 1234 	dec	sp
      00003B 15 81            [12] 1235 	dec	sp
      00003D D0 02            [24] 1236 	pop	ar2
      00003F D0 03            [24] 1237 	pop	ar3
      000041 D0 04            [24] 1238 	pop	ar4
      000043 EE               [12] 1239 	mov	a,r6
      000044 4F               [12] 1240 	orl	a,r7
      000045 60 11            [24] 1241 	jz	00102$
                                   1242 ;	../../../../core/net/neighbor-attr.c:66: (((char *)addr) - offsetof(struct neighbor_addr, addr));
      000047 EA               [12] 1243 	mov	a,r2
      000048 24 FD            [12] 1244 	add	a,#0xFD
      00004A FA               [12] 1245 	mov	r2,a
      00004B EB               [12] 1246 	mov	a,r3
      00004C 34 FF            [12] 1247 	addc	a,#0xFF
      00004E FB               [12] 1248 	mov	r3,a
      00004F 8A 82            [24] 1249 	mov	dpl,r2
      000051 8B 83            [24] 1250 	mov	dph,r3
      000053 8C F0            [24] 1251 	mov	b,r4
      000055 02r00rDF         [24] 1252 	ljmp	00108$
      000058                       1253 00102$:
                                   1254 ;	../../../../core/net/neighbor-attr.c:69: item = list_head(neighbor_addrs);
      000058 90r00r0F         [24] 1255 	mov	dptr,#_neighbor_addrs
      00005B E0               [24] 1256 	movx	a,@dptr
      00005C FD               [12] 1257 	mov	r5,a
      00005D A3               [24] 1258 	inc	dptr
      00005E E0               [24] 1259 	movx	a,@dptr
      00005F FE               [12] 1260 	mov	r6,a
      000060 A3               [24] 1261 	inc	dptr
      000061 E0               [24] 1262 	movx	a,@dptr
      000062 FF               [12] 1263 	mov	r7,a
      000063 8D 82            [24] 1264 	mov	dpl,r5
      000065 8E 83            [24] 1265 	mov	dph,r6
      000067 8F F0            [24] 1266 	mov	b,r7
      000069 78r00            [12] 1267 	mov	r0,#_list_head
      00006B 79s00            [12] 1268 	mov	r1,#(_list_head >> 8)
      00006D 7As00            [12] 1269 	mov	r2,#(_list_head >> 16)
      00006F 12r00r00         [24] 1270 	lcall	__sdcc_banked_call
      000072 AD 82            [24] 1271 	mov	r5,dpl
      000074 AE 83            [24] 1272 	mov	r6,dph
      000076 AF F0            [24] 1273 	mov	r7,b
                                   1274 ;	../../../../core/net/neighbor-attr.c:70: while(item != NULL) {
      000078                       1275 00105$:
      000078 ED               [12] 1276 	mov	a,r5
      000079 4E               [12] 1277 	orl	a,r6
      00007A 60 5D            [24] 1278 	jz	00107$
                                   1279 ;	../../../../core/net/neighbor-attr.c:71: if(rimeaddr_cmp(addr, &item->addr)) {
      00007C 74 03            [12] 1280 	mov	a,#0x03
      00007E 2D               [12] 1281 	add	a,r5
      00007F FA               [12] 1282 	mov	r2,a
      000080 E4               [12] 1283 	clr	a
      000081 3E               [12] 1284 	addc	a,r6
      000082 FB               [12] 1285 	mov	r3,a
      000083 8F 04            [24] 1286 	mov	ar4,r7
      000085 C0 07            [24] 1287 	push	ar7
      000087 C0 06            [24] 1288 	push	ar6
      000089 C0 05            [24] 1289 	push	ar5
      00008B C0 02            [24] 1290 	push	ar2
      00008D C0 03            [24] 1291 	push	ar3
      00008F C0 04            [24] 1292 	push	ar4
      000091 E5 81            [12] 1293 	mov	a,sp
      000093 24 F8            [12] 1294 	add	a,#0xf8
      000095 F8               [12] 1295 	mov	r0,a
      000096 86 82            [24] 1296 	mov	dpl,@r0
      000098 08               [12] 1297 	inc	r0
      000099 86 83            [24] 1298 	mov	dph,@r0
      00009B 08               [12] 1299 	inc	r0
      00009C 86 F0            [24] 1300 	mov	b,@r0
      00009E 78r00            [12] 1301 	mov	r0,#_rimeaddr_cmp
      0000A0 79s00            [12] 1302 	mov	r1,#(_rimeaddr_cmp >> 8)
      0000A2 7As00            [12] 1303 	mov	r2,#(_rimeaddr_cmp >> 16)
      0000A4 12r00r00         [24] 1304 	lcall	__sdcc_banked_call
      0000A7 AB 82            [24] 1305 	mov	r3,dpl
      0000A9 AC 83            [24] 1306 	mov	r4,dph
      0000AB 15 81            [12] 1307 	dec	sp
      0000AD 15 81            [12] 1308 	dec	sp
      0000AF 15 81            [12] 1309 	dec	sp
      0000B1 D0 05            [24] 1310 	pop	ar5
      0000B3 D0 06            [24] 1311 	pop	ar6
      0000B5 D0 07            [24] 1312 	pop	ar7
      0000B7 EB               [12] 1313 	mov	a,r3
      0000B8 4C               [12] 1314 	orl	a,r4
      0000B9 60 08            [24] 1315 	jz	00104$
                                   1316 ;	../../../../core/net/neighbor-attr.c:72: return item;
      0000BB 8D 82            [24] 1317 	mov	dpl,r5
      0000BD 8E 83            [24] 1318 	mov	dph,r6
      0000BF 8F F0            [24] 1319 	mov	b,r7
      0000C1 80 1C            [24] 1320 	sjmp	00108$
      0000C3                       1321 00104$:
                                   1322 ;	../../../../core/net/neighbor-attr.c:74: item = item->next;
      0000C3 8D 82            [24] 1323 	mov	dpl,r5
      0000C5 8E 83            [24] 1324 	mov	dph,r6
      0000C7 8F F0            [24] 1325 	mov	b,r7
      0000C9 12r00r00         [24] 1326 	lcall	__gptrget
      0000CC FD               [12] 1327 	mov	r5,a
      0000CD A3               [24] 1328 	inc	dptr
      0000CE 12r00r00         [24] 1329 	lcall	__gptrget
      0000D1 FE               [12] 1330 	mov	r6,a
      0000D2 A3               [24] 1331 	inc	dptr
      0000D3 12r00r00         [24] 1332 	lcall	__gptrget
      0000D6 FF               [12] 1333 	mov	r7,a
      0000D7 80 9F            [24] 1334 	sjmp	00105$
      0000D9                       1335 00107$:
                                   1336 ;	../../../../core/net/neighbor-attr.c:76: return NULL;
      0000D9 90 00 00         [24] 1337 	mov	dptr,#0x0000
      0000DC 75 F0 00         [24] 1338 	mov	b,#0x00
      0000DF                       1339 00108$:
      0000DF 15 81            [12] 1340 	dec	sp
      0000E1 15 81            [12] 1341 	dec	sp
      0000E3 15 81            [12] 1342 	dec	sp
      0000E5 02r00r00         [24] 1343 	ljmp	__sdcc_banked_ret
                                   1344 ;------------------------------------------------------------
                                   1345 ;Allocation info for local variables in function 'neighbor_attr_list_neighbors'
                                   1346 ;------------------------------------------------------------
                                   1347 ;	../../../../core/net/neighbor-attr.c:80: neighbor_attr_list_neighbors(void)
                                   1348 ;	-----------------------------------------
                                   1349 ;	 function neighbor_attr_list_neighbors
                                   1350 ;	-----------------------------------------
      0000E8                       1351 _neighbor_attr_list_neighbors:
                                   1352 ;	../../../../core/net/neighbor-attr.c:82: return list_head(neighbor_addrs);
      0000E8 90r00r0F         [24] 1353 	mov	dptr,#_neighbor_addrs
      0000EB E0               [24] 1354 	movx	a,@dptr
      0000EC FD               [12] 1355 	mov	r5,a
      0000ED A3               [24] 1356 	inc	dptr
      0000EE E0               [24] 1357 	movx	a,@dptr
      0000EF FE               [12] 1358 	mov	r6,a
      0000F0 A3               [24] 1359 	inc	dptr
      0000F1 E0               [24] 1360 	movx	a,@dptr
      0000F2 FF               [12] 1361 	mov	r7,a
      0000F3 8D 82            [24] 1362 	mov	dpl,r5
      0000F5 8E 83            [24] 1363 	mov	dph,r6
      0000F7 8F F0            [24] 1364 	mov	b,r7
      0000F9 78r00            [12] 1365 	mov	r0,#_list_head
      0000FB 79s00            [12] 1366 	mov	r1,#(_list_head >> 8)
      0000FD 7As00            [12] 1367 	mov	r2,#(_list_head >> 16)
      0000FF 12r00r00         [24] 1368 	lcall	__sdcc_banked_call
      000102 AD 82            [24] 1369 	mov	r5,dpl
      000104 AE 83            [24] 1370 	mov	r6,dph
      000106 AF F0            [24] 1371 	mov	r7,b
      000108 02r00r00         [24] 1372 	ljmp	__sdcc_banked_ret
                                   1373 ;------------------------------------------------------------
                                   1374 ;Allocation info for local variables in function 'set_attr'
                                   1375 ;------------------------------------------------------------
                                   1376 ;index                     Allocated to stack - sp -12
                                   1377 ;attr                      Allocated to stack - sp -7
                                   1378 ;sloc0                     Allocated to stack - sp -4
                                   1379 ;sloc1                     Allocated to stack - sp -2
                                   1380 ;------------------------------------------------------------
                                   1381 ;	../../../../core/net/neighbor-attr.c:86: set_attr(struct neighbor_attr *attr, uint16_t index)
                                   1382 ;	-----------------------------------------
                                   1383 ;	 function set_attr
                                   1384 ;	-----------------------------------------
      00010B                       1385 _set_attr:
      00010B C0 82            [24] 1386 	push	dpl
      00010D C0 83            [24] 1387 	push	dph
      00010F C0 F0            [24] 1388 	push	b
      000111 E5 81            [12] 1389 	mov	a,sp
      000113 24 05            [12] 1390 	add	a,#0x05
                                   1391 ;	../../../../core/net/neighbor-attr.c:88: if(attr->default_value != NULL) {
      000115 F5 81            [12] 1392 	mov	sp,a
      000117 24 F9            [12] 1393 	add	a,#0xf9
      000119 F8               [12] 1394 	mov	r0,a
      00011A 74 05            [12] 1395 	mov	a,#0x05
      00011C 26               [12] 1396 	add	a,@r0
      00011D FA               [12] 1397 	mov	r2,a
      00011E E4               [12] 1398 	clr	a
      00011F 08               [12] 1399 	inc	r0
      000120 36               [12] 1400 	addc	a,@r0
      000121 FB               [12] 1401 	mov	r3,a
      000122 08               [12] 1402 	inc	r0
      000123 86 04            [24] 1403 	mov	ar4,@r0
      000125 8A 82            [24] 1404 	mov	dpl,r2
      000127 8B 83            [24] 1405 	mov	dph,r3
      000129 8C F0            [24] 1406 	mov	b,r4
      00012B 12r00r00         [24] 1407 	lcall	__gptrget
      00012E FA               [12] 1408 	mov	r2,a
      00012F A3               [24] 1409 	inc	dptr
      000130 12r00r00         [24] 1410 	lcall	__gptrget
      000133 FB               [12] 1411 	mov	r3,a
      000134 A3               [24] 1412 	inc	dptr
      000135 12r00r00         [24] 1413 	lcall	__gptrget
      000138 FC               [12] 1414 	mov	r4,a
      000139 EA               [12] 1415 	mov	a,r2
      00013A 4B               [12] 1416 	orl	a,r3
      00013B 70 03            [24] 1417 	jnz	00109$
      00013D 02r01rFA         [24] 1418 	ljmp	00102$
      000140                       1419 00109$:
                                   1420 ;	../../../../core/net/neighbor-attr.c:90: attr->default_value, attr->size);
      000140 E5 81            [12] 1421 	mov	a,sp
      000142 24 F9            [12] 1422 	add	a,#0xf9
      000144 F8               [12] 1423 	mov	r0,a
      000145 74 03            [12] 1424 	mov	a,#0x03
      000147 26               [12] 1425 	add	a,@r0
      000148 FD               [12] 1426 	mov	r5,a
      000149 E4               [12] 1427 	clr	a
      00014A 08               [12] 1428 	inc	r0
      00014B 36               [12] 1429 	addc	a,@r0
      00014C FE               [12] 1430 	mov	r6,a
      00014D 08               [12] 1431 	inc	r0
      00014E 86 07            [24] 1432 	mov	ar7,@r0
      000150 8D 82            [24] 1433 	mov	dpl,r5
      000152 8E 83            [24] 1434 	mov	dph,r6
      000154 8F F0            [24] 1435 	mov	b,r7
      000156 E5 81            [12] 1436 	mov	a,sp
      000158 24 FC            [12] 1437 	add	a,#0xfc
      00015A F8               [12] 1438 	mov	r0,a
      00015B 12r00r00         [24] 1439 	lcall	__gptrget
      00015E F6               [12] 1440 	mov	@r0,a
      00015F A3               [24] 1441 	inc	dptr
      000160 12r00r00         [24] 1442 	lcall	__gptrget
      000163 08               [12] 1443 	inc	r0
      000164 F6               [12] 1444 	mov	@r0,a
                                   1445 ;	../../../../core/net/neighbor-attr.c:89: memcpy((char *)attr->data + index * attr->size,
      000165 E5 81            [12] 1446 	mov	a,sp
      000167 24 F9            [12] 1447 	add	a,#0xf9
      000169 F8               [12] 1448 	mov	r0,a
      00016A 74 08            [12] 1449 	mov	a,#0x08
      00016C 26               [12] 1450 	add	a,@r0
      00016D FD               [12] 1451 	mov	r5,a
      00016E E4               [12] 1452 	clr	a
      00016F 08               [12] 1453 	inc	r0
      000170 36               [12] 1454 	addc	a,@r0
      000171 FE               [12] 1455 	mov	r6,a
      000172 08               [12] 1456 	inc	r0
      000173 86 07            [24] 1457 	mov	ar7,@r0
      000175 8D 82            [24] 1458 	mov	dpl,r5
      000177 8E 83            [24] 1459 	mov	dph,r6
      000179 8F F0            [24] 1460 	mov	b,r7
      00017B 12r00r00         [24] 1461 	lcall	__gptrget
      00017E FD               [12] 1462 	mov	r5,a
      00017F A3               [24] 1463 	inc	dptr
      000180 12r00r00         [24] 1464 	lcall	__gptrget
      000183 FE               [12] 1465 	mov	r6,a
      000184 A3               [24] 1466 	inc	dptr
      000185 12r00r00         [24] 1467 	lcall	__gptrget
      000188 FF               [12] 1468 	mov	r7,a
      000189 A8 81            [24] 1469 	mov	r0,sp
      00018B 18               [12] 1470 	dec	r0
      00018C 18               [12] 1471 	dec	r0
      00018D A6 05            [24] 1472 	mov	@r0,ar5
      00018F 08               [12] 1473 	inc	r0
      000190 A6 06            [24] 1474 	mov	@r0,ar6
      000192 08               [12] 1475 	inc	r0
      000193 A6 07            [24] 1476 	mov	@r0,ar7
      000195 C0 04            [24] 1477 	push	ar4
      000197 C0 03            [24] 1478 	push	ar3
      000199 C0 02            [24] 1479 	push	ar2
      00019B E5 81            [12] 1480 	mov	a,sp
      00019D 24 F9            [12] 1481 	add	a,#0xf9
      00019F F8               [12] 1482 	mov	r0,a
      0001A0 E6               [12] 1483 	mov	a,@r0
      0001A1 C0 E0            [24] 1484 	push	acc
      0001A3 08               [12] 1485 	inc	r0
      0001A4 E6               [12] 1486 	mov	a,@r0
      0001A5 C0 E0            [24] 1487 	push	acc
      0001A7 E5 81            [12] 1488 	mov	a,sp
      0001A9 24 EF            [12] 1489 	add	a,#0xef
      0001AB F8               [12] 1490 	mov	r0,a
      0001AC 86 82            [24] 1491 	mov	dpl,@r0
      0001AE 08               [12] 1492 	inc	r0
      0001AF 86 83            [24] 1493 	mov	dph,@r0
      0001B1 12r00r00         [24] 1494 	lcall	__mulint
      0001B4 AE 82            [24] 1495 	mov	r6,dpl
      0001B6 AF 83            [24] 1496 	mov	r7,dph
      0001B8 15 81            [12] 1497 	dec	sp
      0001BA 15 81            [12] 1498 	dec	sp
      0001BC D0 02            [24] 1499 	pop	ar2
      0001BE D0 03            [24] 1500 	pop	ar3
      0001C0 D0 04            [24] 1501 	pop	ar4
      0001C2 A8 81            [24] 1502 	mov	r0,sp
      0001C4 18               [12] 1503 	dec	r0
      0001C5 18               [12] 1504 	dec	r0
      0001C6 EE               [12] 1505 	mov	a,r6
      0001C7 26               [12] 1506 	add	a,@r0
      0001C8 FE               [12] 1507 	mov	r6,a
      0001C9 EF               [12] 1508 	mov	a,r7
      0001CA 08               [12] 1509 	inc	r0
      0001CB 36               [12] 1510 	addc	a,@r0
      0001CC FF               [12] 1511 	mov	r7,a
      0001CD 08               [12] 1512 	inc	r0
      0001CE 86 05            [24] 1513 	mov	ar5,@r0
      0001D0 E5 81            [12] 1514 	mov	a,sp
      0001D2 24 FC            [12] 1515 	add	a,#0xfc
      0001D4 F8               [12] 1516 	mov	r0,a
      0001D5 E6               [12] 1517 	mov	a,@r0
      0001D6 C0 E0            [24] 1518 	push	acc
      0001D8 08               [12] 1519 	inc	r0
      0001D9 E6               [12] 1520 	mov	a,@r0
      0001DA C0 E0            [24] 1521 	push	acc
      0001DC C0 02            [24] 1522 	push	ar2
      0001DE C0 03            [24] 1523 	push	ar3
      0001E0 C0 04            [24] 1524 	push	ar4
      0001E2 8E 82            [24] 1525 	mov	dpl,r6
      0001E4 8F 83            [24] 1526 	mov	dph,r7
      0001E6 8D F0            [24] 1527 	mov	b,r5
      0001E8 78r00            [12] 1528 	mov	r0,#_memcpy
      0001EA 79s00            [12] 1529 	mov	r1,#(_memcpy >> 8)
      0001EC 7As00            [12] 1530 	mov	r2,#(_memcpy >> 16)
      0001EE 12r00r00         [24] 1531 	lcall	__sdcc_banked_call
      0001F1 E5 81            [12] 1532 	mov	a,sp
      0001F3 24 FB            [12] 1533 	add	a,#0xfb
      0001F5 F5 81            [12] 1534 	mov	sp,a
      0001F7 02r02r94         [24] 1535 	ljmp	00104$
      0001FA                       1536 00102$:
                                   1537 ;	../../../../core/net/neighbor-attr.c:93: memset((char *)attr->data + index * attr->size, 0, attr->size);
      0001FA E5 81            [12] 1538 	mov	a,sp
      0001FC 24 F9            [12] 1539 	add	a,#0xf9
      0001FE F8               [12] 1540 	mov	r0,a
      0001FF 74 03            [12] 1541 	mov	a,#0x03
      000201 26               [12] 1542 	add	a,@r0
      000202 FD               [12] 1543 	mov	r5,a
      000203 E4               [12] 1544 	clr	a
      000204 08               [12] 1545 	inc	r0
      000205 36               [12] 1546 	addc	a,@r0
      000206 FE               [12] 1547 	mov	r6,a
      000207 08               [12] 1548 	inc	r0
      000208 86 07            [24] 1549 	mov	ar7,@r0
      00020A 8D 82            [24] 1550 	mov	dpl,r5
      00020C 8E 83            [24] 1551 	mov	dph,r6
      00020E 8F F0            [24] 1552 	mov	b,r7
      000210 12r00r00         [24] 1553 	lcall	__gptrget
      000213 FD               [12] 1554 	mov	r5,a
      000214 A3               [24] 1555 	inc	dptr
      000215 12r00r00         [24] 1556 	lcall	__gptrget
      000218 FE               [12] 1557 	mov	r6,a
      000219 E5 81            [12] 1558 	mov	a,sp
      00021B 24 F9            [12] 1559 	add	a,#0xf9
      00021D F8               [12] 1560 	mov	r0,a
      00021E 74 08            [12] 1561 	mov	a,#0x08
      000220 26               [12] 1562 	add	a,@r0
      000221 FB               [12] 1563 	mov	r3,a
      000222 E4               [12] 1564 	clr	a
      000223 08               [12] 1565 	inc	r0
      000224 36               [12] 1566 	addc	a,@r0
      000225 FC               [12] 1567 	mov	r4,a
      000226 08               [12] 1568 	inc	r0
      000227 86 07            [24] 1569 	mov	ar7,@r0
      000229 8B 82            [24] 1570 	mov	dpl,r3
      00022B 8C 83            [24] 1571 	mov	dph,r4
      00022D 8F F0            [24] 1572 	mov	b,r7
      00022F 12r00r00         [24] 1573 	lcall	__gptrget
      000232 FB               [12] 1574 	mov	r3,a
      000233 A3               [24] 1575 	inc	dptr
      000234 12r00r00         [24] 1576 	lcall	__gptrget
      000237 FC               [12] 1577 	mov	r4,a
      000238 A3               [24] 1578 	inc	dptr
      000239 12r00r00         [24] 1579 	lcall	__gptrget
      00023C FF               [12] 1580 	mov	r7,a
      00023D A8 81            [24] 1581 	mov	r0,sp
      00023F 18               [12] 1582 	dec	r0
      000240 18               [12] 1583 	dec	r0
      000241 A6 03            [24] 1584 	mov	@r0,ar3
      000243 08               [12] 1585 	inc	r0
      000244 A6 04            [24] 1586 	mov	@r0,ar4
      000246 08               [12] 1587 	inc	r0
      000247 A6 07            [24] 1588 	mov	@r0,ar7
      000249 C0 06            [24] 1589 	push	ar6
      00024B C0 05            [24] 1590 	push	ar5
      00024D C0 05            [24] 1591 	push	ar5
      00024F C0 06            [24] 1592 	push	ar6
      000251 E5 81            [12] 1593 	mov	a,sp
      000253 24 F0            [12] 1594 	add	a,#0xf0
      000255 F8               [12] 1595 	mov	r0,a
      000256 86 82            [24] 1596 	mov	dpl,@r0
      000258 08               [12] 1597 	inc	r0
      000259 86 83            [24] 1598 	mov	dph,@r0
      00025B 12r00r00         [24] 1599 	lcall	__mulint
      00025E AA 82            [24] 1600 	mov	r2,dpl
      000260 AF 83            [24] 1601 	mov	r7,dph
      000262 15 81            [12] 1602 	dec	sp
      000264 15 81            [12] 1603 	dec	sp
      000266 D0 05            [24] 1604 	pop	ar5
      000268 D0 06            [24] 1605 	pop	ar6
      00026A A8 81            [24] 1606 	mov	r0,sp
      00026C 18               [12] 1607 	dec	r0
      00026D 18               [12] 1608 	dec	r0
      00026E EA               [12] 1609 	mov	a,r2
      00026F 26               [12] 1610 	add	a,@r0
      000270 FA               [12] 1611 	mov	r2,a
      000271 EF               [12] 1612 	mov	a,r7
      000272 08               [12] 1613 	inc	r0
      000273 36               [12] 1614 	addc	a,@r0
      000274 FF               [12] 1615 	mov	r7,a
      000275 08               [12] 1616 	inc	r0
      000276 86 04            [24] 1617 	mov	ar4,@r0
      000278 C0 05            [24] 1618 	push	ar5
      00027A C0 06            [24] 1619 	push	ar6
      00027C E4               [12] 1620 	clr	a
      00027D C0 E0            [24] 1621 	push	acc
      00027F 8A 82            [24] 1622 	mov	dpl,r2
      000281 8F 83            [24] 1623 	mov	dph,r7
      000283 8C F0            [24] 1624 	mov	b,r4
      000285 78r00            [12] 1625 	mov	r0,#_memset
      000287 79s00            [12] 1626 	mov	r1,#(_memset >> 8)
      000289 7As00            [12] 1627 	mov	r2,#(_memset >> 16)
      00028B 12r00r00         [24] 1628 	lcall	__sdcc_banked_call
      00028E 15 81            [12] 1629 	dec	sp
      000290 15 81            [12] 1630 	dec	sp
      000292 15 81            [12] 1631 	dec	sp
      000294                       1632 00104$:
      000294 E5 81            [12] 1633 	mov	a,sp
      000296 24 F8            [12] 1634 	add	a,#0xF8
      000298 F5 81            [12] 1635 	mov	sp,a
      00029A 02r00r00         [24] 1636 	ljmp	__sdcc_banked_ret
                                   1637 ;------------------------------------------------------------
                                   1638 ;Allocation info for local variables in function 'neighbor_attr_register'
                                   1639 ;------------------------------------------------------------
                                   1640 ;def                       Allocated to stack - sp -2
                                   1641 ;addr                      Allocated to registers r5 r6 r7 
                                   1642 ;------------------------------------------------------------
                                   1643 ;	../../../../core/net/neighbor-attr.c:98: neighbor_attr_register(struct neighbor_attr *def)
                                   1644 ;	-----------------------------------------
                                   1645 ;	 function neighbor_attr_register
                                   1646 ;	-----------------------------------------
      00029D                       1647 _neighbor_attr_register:
      00029D C0 82            [24] 1648 	push	dpl
      00029F C0 83            [24] 1649 	push	dph
      0002A1 C0 F0            [24] 1650 	push	b
                                   1651 ;	../../../../core/net/neighbor-attr.c:102: list_push(neighbor_attrs, def);
      0002A3 A8 81            [24] 1652 	mov	r0,sp
      0002A5 18               [12] 1653 	dec	r0
      0002A6 18               [12] 1654 	dec	r0
      0002A7 86 02            [24] 1655 	mov	ar2,@r0
      0002A9 08               [12] 1656 	inc	r0
      0002AA 86 03            [24] 1657 	mov	ar3,@r0
      0002AC 08               [12] 1658 	inc	r0
      0002AD 86 04            [24] 1659 	mov	ar4,@r0
      0002AF 90r00r15         [24] 1660 	mov	dptr,#_neighbor_attrs
      0002B2 E0               [24] 1661 	movx	a,@dptr
      0002B3 FD               [12] 1662 	mov	r5,a
      0002B4 A3               [24] 1663 	inc	dptr
      0002B5 E0               [24] 1664 	movx	a,@dptr
      0002B6 FE               [12] 1665 	mov	r6,a
      0002B7 A3               [24] 1666 	inc	dptr
      0002B8 E0               [24] 1667 	movx	a,@dptr
      0002B9 FF               [12] 1668 	mov	r7,a
      0002BA C0 02            [24] 1669 	push	ar2
      0002BC C0 03            [24] 1670 	push	ar3
      0002BE C0 04            [24] 1671 	push	ar4
      0002C0 8D 82            [24] 1672 	mov	dpl,r5
      0002C2 8E 83            [24] 1673 	mov	dph,r6
      0002C4 8F F0            [24] 1674 	mov	b,r7
      0002C6 78r00            [12] 1675 	mov	r0,#_list_push
      0002C8 79s00            [12] 1676 	mov	r1,#(_list_push >> 8)
      0002CA 7As00            [12] 1677 	mov	r2,#(_list_push >> 16)
      0002CC 12r00r00         [24] 1678 	lcall	__sdcc_banked_call
      0002CF 15 81            [12] 1679 	dec	sp
      0002D1 15 81            [12] 1680 	dec	sp
      0002D3 15 81            [12] 1681 	dec	sp
                                   1682 ;	../../../../core/net/neighbor-attr.c:105: for(addr = list_head(neighbor_addrs); addr != NULL; addr = addr->next) {
      0002D5 90r00r0F         [24] 1683 	mov	dptr,#_neighbor_addrs
      0002D8 E0               [24] 1684 	movx	a,@dptr
      0002D9 FD               [12] 1685 	mov	r5,a
      0002DA A3               [24] 1686 	inc	dptr
      0002DB E0               [24] 1687 	movx	a,@dptr
      0002DC FE               [12] 1688 	mov	r6,a
      0002DD A3               [24] 1689 	inc	dptr
      0002DE E0               [24] 1690 	movx	a,@dptr
      0002DF FF               [12] 1691 	mov	r7,a
      0002E0 8D 82            [24] 1692 	mov	dpl,r5
      0002E2 8E 83            [24] 1693 	mov	dph,r6
      0002E4 8F F0            [24] 1694 	mov	b,r7
      0002E6 78r00            [12] 1695 	mov	r0,#_list_head
      0002E8 79s00            [12] 1696 	mov	r1,#(_list_head >> 8)
      0002EA 7As00            [12] 1697 	mov	r2,#(_list_head >> 16)
      0002EC 12r00r00         [24] 1698 	lcall	__sdcc_banked_call
      0002EF AD 82            [24] 1699 	mov	r5,dpl
      0002F1 AE 83            [24] 1700 	mov	r6,dph
      0002F3 AF F0            [24] 1701 	mov	r7,b
      0002F5                       1702 00103$:
      0002F5 E4               [12] 1703 	clr	a
      0002F6 C0 E0            [24] 1704 	push	acc
      0002F8 E4               [12] 1705 	clr	a
      0002F9 C0 E0            [24] 1706 	push	acc
      0002FB E4               [12] 1707 	clr	a
      0002FC C0 E0            [24] 1708 	push	acc
      0002FE 8D 82            [24] 1709 	mov	dpl,r5
      000300 8E 83            [24] 1710 	mov	dph,r6
      000302 8F F0            [24] 1711 	mov	b,r7
      000304 12r00r00         [24] 1712 	lcall	___gptr_cmp
      000307 15 81            [12] 1713 	dec	sp
      000309 15 81            [12] 1714 	dec	sp
      00030B 15 81            [12] 1715 	dec	sp
      00030D 60 58            [24] 1716 	jz	00101$
                                   1717 ;	../../../../core/net/neighbor-attr.c:106: set_attr(def, addr->index);
      00030F 74 0D            [12] 1718 	mov	a,#0x0D
      000311 2D               [12] 1719 	add	a,r5
      000312 FA               [12] 1720 	mov	r2,a
      000313 E4               [12] 1721 	clr	a
      000314 3E               [12] 1722 	addc	a,r6
      000315 FB               [12] 1723 	mov	r3,a
      000316 8F 04            [24] 1724 	mov	ar4,r7
      000318 8A 82            [24] 1725 	mov	dpl,r2
      00031A 8B 83            [24] 1726 	mov	dph,r3
      00031C 8C F0            [24] 1727 	mov	b,r4
      00031E 12r00r00         [24] 1728 	lcall	__gptrget
      000321 FA               [12] 1729 	mov	r2,a
      000322 A3               [24] 1730 	inc	dptr
      000323 12r00r00         [24] 1731 	lcall	__gptrget
      000326 FB               [12] 1732 	mov	r3,a
      000327 C0 07            [24] 1733 	push	ar7
      000329 C0 06            [24] 1734 	push	ar6
      00032B C0 05            [24] 1735 	push	ar5
      00032D C0 02            [24] 1736 	push	ar2
      00032F C0 03            [24] 1737 	push	ar3
      000331 E5 81            [12] 1738 	mov	a,sp
      000333 24 F9            [12] 1739 	add	a,#0xf9
      000335 F8               [12] 1740 	mov	r0,a
      000336 86 82            [24] 1741 	mov	dpl,@r0
      000338 08               [12] 1742 	inc	r0
      000339 86 83            [24] 1743 	mov	dph,@r0
      00033B 08               [12] 1744 	inc	r0
      00033C 86 F0            [24] 1745 	mov	b,@r0
      00033E 78r0B            [12] 1746 	mov	r0,#_set_attr
      000340 79s01            [12] 1747 	mov	r1,#(_set_attr >> 8)
      000342 7As00            [12] 1748 	mov	r2,#(_set_attr >> 16)
      000344 12r00r00         [24] 1749 	lcall	__sdcc_banked_call
      000347 15 81            [12] 1750 	dec	sp
      000349 15 81            [12] 1751 	dec	sp
      00034B D0 05            [24] 1752 	pop	ar5
      00034D D0 06            [24] 1753 	pop	ar6
      00034F D0 07            [24] 1754 	pop	ar7
                                   1755 ;	../../../../core/net/neighbor-attr.c:105: for(addr = list_head(neighbor_addrs); addr != NULL; addr = addr->next) {
      000351 8D 82            [24] 1756 	mov	dpl,r5
      000353 8E 83            [24] 1757 	mov	dph,r6
      000355 8F F0            [24] 1758 	mov	b,r7
      000357 12r00r00         [24] 1759 	lcall	__gptrget
      00035A FD               [12] 1760 	mov	r5,a
      00035B A3               [24] 1761 	inc	dptr
      00035C 12r00r00         [24] 1762 	lcall	__gptrget
      00035F FE               [12] 1763 	mov	r6,a
      000360 A3               [24] 1764 	inc	dptr
      000361 12r00r00         [24] 1765 	lcall	__gptrget
      000364 FF               [12] 1766 	mov	r7,a
      000365 80 8E            [24] 1767 	sjmp	00103$
      000367                       1768 00101$:
                                   1769 ;	../../../../core/net/neighbor-attr.c:108: return 1;
      000367 90 00 01         [24] 1770 	mov	dptr,#0x0001
      00036A 15 81            [12] 1771 	dec	sp
      00036C 15 81            [12] 1772 	dec	sp
      00036E 15 81            [12] 1773 	dec	sp
      000370 02r00r00         [24] 1774 	ljmp	__sdcc_banked_ret
                                   1775 ;------------------------------------------------------------
                                   1776 ;Allocation info for local variables in function 'neighbor_attr_has_neighbor'
                                   1777 ;------------------------------------------------------------
                                   1778 ;addr                      Allocated to registers r5 r6 r7 
                                   1779 ;------------------------------------------------------------
                                   1780 ;	../../../../core/net/neighbor-attr.c:112: neighbor_attr_has_neighbor(const rimeaddr_t *addr)
                                   1781 ;	-----------------------------------------
                                   1782 ;	 function neighbor_attr_has_neighbor
                                   1783 ;	-----------------------------------------
      000373                       1784 _neighbor_attr_has_neighbor:
                                   1785 ;	../../../../core/net/neighbor-attr.c:114: return neighbor_addr_get(addr) != NULL;
      000373 78r00            [12] 1786 	mov	r0,#_neighbor_addr_get
      000375 79s00            [12] 1787 	mov	r1,#(_neighbor_addr_get >> 8)
      000377 7As00            [12] 1788 	mov	r2,#(_neighbor_addr_get >> 16)
      000379 12r00r00         [24] 1789 	lcall	__sdcc_banked_call
      00037C AD 82            [24] 1790 	mov	r5,dpl
      00037E AE 83            [24] 1791 	mov	r6,dph
      000380 AF F0            [24] 1792 	mov	r7,b
      000382 E4               [12] 1793 	clr	a
      000383 C0 E0            [24] 1794 	push	acc
      000385 E4               [12] 1795 	clr	a
      000386 C0 E0            [24] 1796 	push	acc
      000388 E4               [12] 1797 	clr	a
      000389 C0 E0            [24] 1798 	push	acc
      00038B 8D 82            [24] 1799 	mov	dpl,r5
      00038D 8E 83            [24] 1800 	mov	dph,r6
      00038F 8F F0            [24] 1801 	mov	b,r7
      000391 12r00r00         [24] 1802 	lcall	___gptr_cmp
      000394 15 81            [12] 1803 	dec	sp
      000396 15 81            [12] 1804 	dec	sp
      000398 15 81            [12] 1805 	dec	sp
      00039A 70 04            [24] 1806 	jnz	00103$
      00039C 74 01            [12] 1807 	mov	a,#0x01
      00039E 80 01            [24] 1808 	sjmp	00104$
      0003A0                       1809 00103$:
      0003A0 E4               [12] 1810 	clr	a
      0003A1                       1811 00104$:
      0003A1 FD               [12] 1812 	mov	r5,a
      0003A2 B4 01 00         [24] 1813 	cjne	a,#0x01,00105$
      0003A5                       1814 00105$:
      0003A5 E4               [12] 1815 	clr	a
      0003A6 33               [12] 1816 	rlc	a
      0003A7 FD               [12] 1817 	mov	r5,a
      0003A8 33               [12] 1818 	rlc	a
      0003A9 95 E0            [12] 1819 	subb	a,acc
      0003AB FF               [12] 1820 	mov	r7,a
      0003AC 8D 82            [24] 1821 	mov	dpl,r5
      0003AE 8F 83            [24] 1822 	mov	dph,r7
      0003B0 02r00r00         [24] 1823 	ljmp	__sdcc_banked_ret
                                   1824 ;------------------------------------------------------------
                                   1825 ;Allocation info for local variables in function 'neighbor_attr_add_neighbor'
                                   1826 ;------------------------------------------------------------
                                   1827 ;addr                      Allocated to stack - sp -8
                                   1828 ;def                       Allocated to registers r5 r6 r7 
                                   1829 ;item                      Allocated to stack - sp -5
                                   1830 ;ptr                       Allocated to stack - sp -2
                                   1831 ;i                         Allocated to registers 
                                   1832 ;------------------------------------------------------------
                                   1833 ;	../../../../core/net/neighbor-attr.c:118: neighbor_attr_add_neighbor(const rimeaddr_t *addr)
                                   1834 ;	-----------------------------------------
                                   1835 ;	 function neighbor_attr_add_neighbor
                                   1836 ;	-----------------------------------------
      0003B3                       1837 _neighbor_attr_add_neighbor:
      0003B3 C0 82            [24] 1838 	push	dpl
      0003B5 C0 83            [24] 1839 	push	dph
      0003B7 C0 F0            [24] 1840 	push	b
      0003B9 E5 81            [12] 1841 	mov	a,sp
      0003BB 24 06            [12] 1842 	add	a,#0x06
                                   1843 ;	../../../../core/net/neighbor-attr.c:125: if(neighbor_attr_has_neighbor(addr)) {
      0003BD F5 81            [12] 1844 	mov	sp,a
      0003BF 24 F8            [12] 1845 	add	a,#0xf8
      0003C1 F8               [12] 1846 	mov	r0,a
      0003C2 86 82            [24] 1847 	mov	dpl,@r0
      0003C4 08               [12] 1848 	inc	r0
      0003C5 86 83            [24] 1849 	mov	dph,@r0
      0003C7 08               [12] 1850 	inc	r0
      0003C8 86 F0            [24] 1851 	mov	b,@r0
      0003CA 78r73            [12] 1852 	mov	r0,#_neighbor_attr_has_neighbor
      0003CC 79s03            [12] 1853 	mov	r1,#(_neighbor_attr_has_neighbor >> 8)
      0003CE 7As00            [12] 1854 	mov	r2,#(_neighbor_attr_has_neighbor >> 16)
      0003D0 12r00r00         [24] 1855 	lcall	__sdcc_banked_call
      0003D3 E5 82            [12] 1856 	mov	a,dpl
      0003D5 85 83 F0         [24] 1857 	mov	b,dph
      0003D8 45 F0            [12] 1858 	orl	a,b
      0003DA 60 06            [24] 1859 	jz	00102$
                                   1860 ;	../../../../core/net/neighbor-attr.c:126: return 0;
      0003DC 90 00 00         [24] 1861 	mov	dptr,#0x0000
      0003DF 02r05rB7         [24] 1862 	ljmp	00115$
      0003E2                       1863 00102$:
                                   1864 ;	../../../../core/net/neighbor-attr.c:129: item = memb_alloc(&neighbor_addr_mem);
      0003E2 90r00r02         [24] 1865 	mov	dptr,#_neighbor_addr_mem
      0003E5 75 F0 00         [24] 1866 	mov	b,#0x00
      0003E8 78r00            [12] 1867 	mov	r0,#_memb_alloc
      0003EA 79s00            [12] 1868 	mov	r1,#(_memb_alloc >> 8)
      0003EC 7As00            [12] 1869 	mov	r2,#(_memb_alloc >> 16)
      0003EE 12r00r00         [24] 1870 	lcall	__sdcc_banked_call
      0003F1 AA 82            [24] 1871 	mov	r2,dpl
      0003F3 AB 83            [24] 1872 	mov	r3,dph
      0003F5 AC F0            [24] 1873 	mov	r4,b
      0003F7 E5 81            [12] 1874 	mov	a,sp
      0003F9 24 FB            [12] 1875 	add	a,#0xfb
      0003FB F8               [12] 1876 	mov	r0,a
      0003FC A6 02            [24] 1877 	mov	@r0,ar2
      0003FE 08               [12] 1878 	inc	r0
      0003FF A6 03            [24] 1879 	mov	@r0,ar3
      000401 08               [12] 1880 	inc	r0
      000402 A6 04            [24] 1881 	mov	@r0,ar4
                                   1882 ;	../../../../core/net/neighbor-attr.c:130: if(item == NULL) {
      000404 E5 81            [12] 1883 	mov	a,sp
      000406 24 FB            [12] 1884 	add	a,#0xfb
      000408 F8               [12] 1885 	mov	r0,a
      000409 E6               [12] 1886 	mov	a,@r0
      00040A 08               [12] 1887 	inc	r0
      00040B 46               [12] 1888 	orl	a,@r0
      00040C 70 06            [24] 1889 	jnz	00104$
                                   1890 ;	../../../../core/net/neighbor-attr.c:131: return -1;
      00040E 90 FF FF         [24] 1891 	mov	dptr,#0xFFFF
      000411 02r05rB7         [24] 1892 	ljmp	00115$
      000414                       1893 00104$:
                                   1894 ;	../../../../core/net/neighbor-attr.c:134: list_push(neighbor_addrs, item);
      000414 E5 81            [12] 1895 	mov	a,sp
      000416 24 FB            [12] 1896 	add	a,#0xfb
      000418 F8               [12] 1897 	mov	r0,a
      000419 86 05            [24] 1898 	mov	ar5,@r0
      00041B 08               [12] 1899 	inc	r0
      00041C 86 06            [24] 1900 	mov	ar6,@r0
      00041E 08               [12] 1901 	inc	r0
      00041F 86 07            [24] 1902 	mov	ar7,@r0
      000421 90r00r0F         [24] 1903 	mov	dptr,#_neighbor_addrs
      000424 E0               [24] 1904 	movx	a,@dptr
      000425 FA               [12] 1905 	mov	r2,a
      000426 A3               [24] 1906 	inc	dptr
      000427 E0               [24] 1907 	movx	a,@dptr
      000428 FB               [12] 1908 	mov	r3,a
      000429 A3               [24] 1909 	inc	dptr
      00042A E0               [24] 1910 	movx	a,@dptr
      00042B FC               [12] 1911 	mov	r4,a
      00042C C0 05            [24] 1912 	push	ar5
      00042E C0 06            [24] 1913 	push	ar6
      000430 C0 07            [24] 1914 	push	ar7
      000432 8A 82            [24] 1915 	mov	dpl,r2
      000434 8B 83            [24] 1916 	mov	dph,r3
      000436 8C F0            [24] 1917 	mov	b,r4
      000438 78r00            [12] 1918 	mov	r0,#_list_push
      00043A 79s00            [12] 1919 	mov	r1,#(_list_push >> 8)
      00043C 7As00            [12] 1920 	mov	r2,#(_list_push >> 16)
      00043E 12r00r00         [24] 1921 	lcall	__sdcc_banked_call
      000441 15 81            [12] 1922 	dec	sp
      000443 15 81            [12] 1923 	dec	sp
      000445 15 81            [12] 1924 	dec	sp
                                   1925 ;	../../../../core/net/neighbor-attr.c:136: item->time = 0;
      000447 E5 81            [12] 1926 	mov	a,sp
      000449 24 FB            [12] 1927 	add	a,#0xfb
      00044B F8               [12] 1928 	mov	r0,a
      00044C 74 0B            [12] 1929 	mov	a,#0x0B
      00044E 26               [12] 1930 	add	a,@r0
      00044F FD               [12] 1931 	mov	r5,a
      000450 E4               [12] 1932 	clr	a
      000451 08               [12] 1933 	inc	r0
      000452 36               [12] 1934 	addc	a,@r0
      000453 FE               [12] 1935 	mov	r6,a
      000454 08               [12] 1936 	inc	r0
      000455 86 07            [24] 1937 	mov	ar7,@r0
      000457 8D 82            [24] 1938 	mov	dpl,r5
      000459 8E 83            [24] 1939 	mov	dph,r6
      00045B 8F F0            [24] 1940 	mov	b,r7
      00045D E4               [12] 1941 	clr	a
      00045E 12r00r00         [24] 1942 	lcall	__gptrput
      000461 A3               [24] 1943 	inc	dptr
      000462 E4               [12] 1944 	clr	a
      000463 12r00r00         [24] 1945 	lcall	__gptrput
                                   1946 ;	../../../../core/net/neighbor-attr.c:137: rimeaddr_copy(&item->addr, addr);
      000466 E5 81            [12] 1947 	mov	a,sp
      000468 24 FB            [12] 1948 	add	a,#0xfb
      00046A F8               [12] 1949 	mov	r0,a
      00046B 74 03            [12] 1950 	mov	a,#0x03
      00046D 26               [12] 1951 	add	a,@r0
      00046E FD               [12] 1952 	mov	r5,a
      00046F E4               [12] 1953 	clr	a
      000470 08               [12] 1954 	inc	r0
      000471 36               [12] 1955 	addc	a,@r0
      000472 FE               [12] 1956 	mov	r6,a
      000473 08               [12] 1957 	inc	r0
      000474 86 07            [24] 1958 	mov	ar7,@r0
      000476 E5 81            [12] 1959 	mov	a,sp
      000478 24 F8            [12] 1960 	add	a,#0xf8
      00047A F8               [12] 1961 	mov	r0,a
      00047B E6               [12] 1962 	mov	a,@r0
      00047C C0 E0            [24] 1963 	push	acc
      00047E 08               [12] 1964 	inc	r0
      00047F E6               [12] 1965 	mov	a,@r0
      000480 C0 E0            [24] 1966 	push	acc
      000482 08               [12] 1967 	inc	r0
      000483 E6               [12] 1968 	mov	a,@r0
      000484 C0 E0            [24] 1969 	push	acc
      000486 8D 82            [24] 1970 	mov	dpl,r5
      000488 8E 83            [24] 1971 	mov	dph,r6
      00048A 8F F0            [24] 1972 	mov	b,r7
      00048C 78r00            [12] 1973 	mov	r0,#_rimeaddr_copy
      00048E 79s00            [12] 1974 	mov	r1,#(_rimeaddr_copy >> 8)
      000490 7As00            [12] 1975 	mov	r2,#(_rimeaddr_copy >> 16)
      000492 12r00r00         [24] 1976 	lcall	__sdcc_banked_call
      000495 15 81            [12] 1977 	dec	sp
      000497 15 81            [12] 1978 	dec	sp
      000499 15 81            [12] 1979 	dec	sp
                                   1980 ;	../../../../core/net/neighbor-attr.c:140: ptr = neighbor_addr_mem.mem;
      00049B 90r00r09         [24] 1981 	mov	dptr,#(_neighbor_addr_mem + 0x0007)
      00049E E0               [24] 1982 	movx	a,@dptr
      00049F FD               [12] 1983 	mov	r5,a
      0004A0 A3               [24] 1984 	inc	dptr
      0004A1 E0               [24] 1985 	movx	a,@dptr
      0004A2 FE               [12] 1986 	mov	r6,a
      0004A3 A3               [24] 1987 	inc	dptr
      0004A4 E0               [24] 1988 	movx	a,@dptr
      0004A5 FF               [12] 1989 	mov	r7,a
      0004A6 A8 81            [24] 1990 	mov	r0,sp
      0004A8 18               [12] 1991 	dec	r0
      0004A9 18               [12] 1992 	dec	r0
      0004AA A6 05            [24] 1993 	mov	@r0,ar5
      0004AC 08               [12] 1994 	inc	r0
      0004AD A6 06            [24] 1995 	mov	@r0,ar6
      0004AF 08               [12] 1996 	inc	r0
      0004B0 A6 07            [24] 1997 	mov	@r0,ar7
                                   1998 ;	../../../../core/net/neighbor-attr.c:141: for(i = 0; i < neighbor_addr_mem.num; ++i) {
      0004B2 7B 00            [12] 1999 	mov	r3,#0x00
      0004B4 7C 00            [12] 2000 	mov	r4,#0x00
      0004B6 7A 00            [12] 2001 	mov	r2,#0x00
      0004B8 7F 00            [12] 2002 	mov	r7,#0x00
      0004BA                       2003 00110$:
      0004BA 90r00r04         [24] 2004 	mov	dptr,#(_neighbor_addr_mem + 0x0002)
      0004BD E0               [24] 2005 	movx	a,@dptr
      0004BE FD               [12] 2006 	mov	r5,a
      0004BF A3               [24] 2007 	inc	dptr
      0004C0 E0               [24] 2008 	movx	a,@dptr
      0004C1 FE               [12] 2009 	mov	r6,a
      0004C2 C3               [12] 2010 	clr	c
      0004C3 EB               [12] 2011 	mov	a,r3
      0004C4 9D               [12] 2012 	subb	a,r5
      0004C5 EC               [12] 2013 	mov	a,r4
      0004C6 9E               [12] 2014 	subb	a,r6
      0004C7 50 49            [24] 2015 	jnc	00124$
                                   2016 ;	../../../../core/net/neighbor-attr.c:142: if(&ptr[i] == item) {
      0004C9 C0 03            [24] 2017 	push	ar3
      0004CB C0 04            [24] 2018 	push	ar4
      0004CD E5 81            [12] 2019 	mov	a,sp
      0004CF 24 FC            [12] 2020 	add	a,#0xfc
      0004D1 F8               [12] 2021 	mov	r0,a
      0004D2 EA               [12] 2022 	mov	a,r2
      0004D3 26               [12] 2023 	add	a,@r0
      0004D4 FC               [12] 2024 	mov	r4,a
      0004D5 EF               [12] 2025 	mov	a,r7
      0004D6 08               [12] 2026 	inc	r0
      0004D7 36               [12] 2027 	addc	a,@r0
      0004D8 FD               [12] 2028 	mov	r5,a
      0004D9 08               [12] 2029 	inc	r0
      0004DA 86 06            [24] 2030 	mov	ar6,@r0
      0004DC E5 81            [12] 2031 	mov	a,sp
      0004DE 24 F9            [12] 2032 	add	a,#0xf9
      0004E0 F8               [12] 2033 	mov	r0,a
      0004E1 C0 04            [24] 2034 	push	ar4
      0004E3 C0 05            [24] 2035 	push	ar5
      0004E5 C0 06            [24] 2036 	push	ar6
      0004E7 86 82            [24] 2037 	mov	dpl,@r0
      0004E9 08               [12] 2038 	inc	r0
      0004EA 86 83            [24] 2039 	mov	dph,@r0
      0004EC 08               [12] 2040 	inc	r0
      0004ED 86 F0            [24] 2041 	mov	b,@r0
      0004EF 12r00r00         [24] 2042 	lcall	___gptr_cmp
      0004F2 15 81            [12] 2043 	dec	sp
      0004F4 15 81            [12] 2044 	dec	sp
      0004F6 15 81            [12] 2045 	dec	sp
      0004F8 70 06            [24] 2046 	jnz	00142$
      0004FA D0 04            [24] 2047 	pop	ar4
      0004FC D0 03            [24] 2048 	pop	ar3
      0004FE 80 12            [24] 2049 	sjmp	00124$
      000500                       2050 00142$:
      000500 D0 04            [24] 2051 	pop	ar4
      000502 D0 03            [24] 2052 	pop	ar3
                                   2053 ;	../../../../core/net/neighbor-attr.c:141: for(i = 0; i < neighbor_addr_mem.num; ++i) {
      000504 74 0F            [12] 2054 	mov	a,#0x0F
      000506 2A               [12] 2055 	add	a,r2
      000507 FA               [12] 2056 	mov	r2,a
      000508 E4               [12] 2057 	clr	a
      000509 3F               [12] 2058 	addc	a,r7
      00050A FF               [12] 2059 	mov	r7,a
      00050B 0B               [12] 2060 	inc	r3
      00050C BB 00 AB         [24] 2061 	cjne	r3,#0x00,00110$
      00050F 0C               [12] 2062 	inc	r4
      000510 80 A8            [24] 2063 	sjmp	00110$
      000512                       2064 00124$:
                                   2065 ;	../../../../core/net/neighbor-attr.c:147: item->index = i;
      000512 E5 81            [12] 2066 	mov	a,sp
      000514 24 FB            [12] 2067 	add	a,#0xfb
      000516 F8               [12] 2068 	mov	r0,a
      000517 74 0D            [12] 2069 	mov	a,#0x0D
      000519 26               [12] 2070 	add	a,@r0
      00051A FD               [12] 2071 	mov	r5,a
      00051B E4               [12] 2072 	clr	a
      00051C 08               [12] 2073 	inc	r0
      00051D 36               [12] 2074 	addc	a,@r0
      00051E FE               [12] 2075 	mov	r6,a
      00051F 08               [12] 2076 	inc	r0
      000520 86 07            [24] 2077 	mov	ar7,@r0
      000522 8D 82            [24] 2078 	mov	dpl,r5
      000524 8E 83            [24] 2079 	mov	dph,r6
      000526 8F F0            [24] 2080 	mov	b,r7
      000528 EB               [12] 2081 	mov	a,r3
      000529 12r00r00         [24] 2082 	lcall	__gptrput
      00052C A3               [24] 2083 	inc	dptr
      00052D EC               [12] 2084 	mov	a,r4
      00052E 12r00r00         [24] 2085 	lcall	__gptrput
                                   2086 ;	../../../../core/net/neighbor-attr.c:149: for(def = list_head(neighbor_attrs); def != NULL; def = def->next) {
      000531 90r00r15         [24] 2087 	mov	dptr,#_neighbor_attrs
      000534 E0               [24] 2088 	movx	a,@dptr
      000535 FD               [12] 2089 	mov	r5,a
      000536 A3               [24] 2090 	inc	dptr
      000537 E0               [24] 2091 	movx	a,@dptr
      000538 FE               [12] 2092 	mov	r6,a
      000539 A3               [24] 2093 	inc	dptr
      00053A E0               [24] 2094 	movx	a,@dptr
      00053B FF               [12] 2095 	mov	r7,a
      00053C 8D 82            [24] 2096 	mov	dpl,r5
      00053E 8E 83            [24] 2097 	mov	dph,r6
      000540 8F F0            [24] 2098 	mov	b,r7
      000542 C0 04            [24] 2099 	push	ar4
      000544 C0 03            [24] 2100 	push	ar3
      000546 78r00            [12] 2101 	mov	r0,#_list_head
      000548 79s00            [12] 2102 	mov	r1,#(_list_head >> 8)
      00054A 7As00            [12] 2103 	mov	r2,#(_list_head >> 16)
      00054C 12r00r00         [24] 2104 	lcall	__sdcc_banked_call
      00054F AD 82            [24] 2105 	mov	r5,dpl
      000551 AE 83            [24] 2106 	mov	r6,dph
      000553 AF F0            [24] 2107 	mov	r7,b
      000555 D0 03            [24] 2108 	pop	ar3
      000557 D0 04            [24] 2109 	pop	ar4
      000559                       2110 00113$:
      000559 E4               [12] 2111 	clr	a
      00055A C0 E0            [24] 2112 	push	acc
      00055C E4               [12] 2113 	clr	a
      00055D C0 E0            [24] 2114 	push	acc
      00055F E4               [12] 2115 	clr	a
      000560 C0 E0            [24] 2116 	push	acc
      000562 8D 82            [24] 2117 	mov	dpl,r5
      000564 8E 83            [24] 2118 	mov	dph,r6
      000566 8F F0            [24] 2119 	mov	b,r7
      000568 12r00r00         [24] 2120 	lcall	___gptr_cmp
      00056B 15 81            [12] 2121 	dec	sp
      00056D 15 81            [12] 2122 	dec	sp
      00056F 15 81            [12] 2123 	dec	sp
      000571 60 41            [24] 2124 	jz	00108$
                                   2125 ;	../../../../core/net/neighbor-attr.c:150: set_attr(def, i);
      000573 C0 07            [24] 2126 	push	ar7
      000575 C0 06            [24] 2127 	push	ar6
      000577 C0 05            [24] 2128 	push	ar5
      000579 C0 04            [24] 2129 	push	ar4
      00057B C0 03            [24] 2130 	push	ar3
      00057D C0 03            [24] 2131 	push	ar3
      00057F C0 04            [24] 2132 	push	ar4
      000581 8D 82            [24] 2133 	mov	dpl,r5
      000583 8E 83            [24] 2134 	mov	dph,r6
      000585 8F F0            [24] 2135 	mov	b,r7
      000587 78r0B            [12] 2136 	mov	r0,#_set_attr
      000589 79s01            [12] 2137 	mov	r1,#(_set_attr >> 8)
      00058B 7As00            [12] 2138 	mov	r2,#(_set_attr >> 16)
      00058D 12r00r00         [24] 2139 	lcall	__sdcc_banked_call
      000590 15 81            [12] 2140 	dec	sp
      000592 15 81            [12] 2141 	dec	sp
      000594 D0 03            [24] 2142 	pop	ar3
      000596 D0 04            [24] 2143 	pop	ar4
      000598 D0 05            [24] 2144 	pop	ar5
      00059A D0 06            [24] 2145 	pop	ar6
      00059C D0 07            [24] 2146 	pop	ar7
                                   2147 ;	../../../../core/net/neighbor-attr.c:149: for(def = list_head(neighbor_attrs); def != NULL; def = def->next) {
      00059E 8D 82            [24] 2148 	mov	dpl,r5
      0005A0 8E 83            [24] 2149 	mov	dph,r6
      0005A2 8F F0            [24] 2150 	mov	b,r7
      0005A4 12r00r00         [24] 2151 	lcall	__gptrget
      0005A7 FD               [12] 2152 	mov	r5,a
      0005A8 A3               [24] 2153 	inc	dptr
      0005A9 12r00r00         [24] 2154 	lcall	__gptrget
      0005AC FE               [12] 2155 	mov	r6,a
      0005AD A3               [24] 2156 	inc	dptr
      0005AE 12r00r00         [24] 2157 	lcall	__gptrget
      0005B1 FF               [12] 2158 	mov	r7,a
      0005B2 80 A5            [24] 2159 	sjmp	00113$
      0005B4                       2160 00108$:
                                   2161 ;	../../../../core/net/neighbor-attr.c:153: return 1;
      0005B4 90 00 01         [24] 2162 	mov	dptr,#0x0001
      0005B7                       2163 00115$:
      0005B7 E5 81            [12] 2164 	mov	a,sp
      0005B9 24 F7            [12] 2165 	add	a,#0xF7
      0005BB F5 81            [12] 2166 	mov	sp,a
      0005BD 02r00r00         [24] 2167 	ljmp	__sdcc_banked_ret
                                   2168 ;------------------------------------------------------------
                                   2169 ;Allocation info for local variables in function 'neighbor_attr_remove_neighbor'
                                   2170 ;------------------------------------------------------------
                                   2171 ;addr                      Allocated to registers r5 r6 r7 
                                   2172 ;item                      Allocated to stack - sp -2
                                   2173 ;------------------------------------------------------------
                                   2174 ;	../../../../core/net/neighbor-attr.c:157: neighbor_attr_remove_neighbor(const rimeaddr_t *addr)
                                   2175 ;	-----------------------------------------
                                   2176 ;	 function neighbor_attr_remove_neighbor
                                   2177 ;	-----------------------------------------
      0005C0                       2178 _neighbor_attr_remove_neighbor:
      0005C0 05 81            [12] 2179 	inc	sp
      0005C2 05 81            [12] 2180 	inc	sp
      0005C4 05 81            [12] 2181 	inc	sp
                                   2182 ;	../../../../core/net/neighbor-attr.c:159: struct neighbor_addr *item = neighbor_addr_get(addr);
      0005C6 78r00            [12] 2183 	mov	r0,#_neighbor_addr_get
      0005C8 79s00            [12] 2184 	mov	r1,#(_neighbor_addr_get >> 8)
      0005CA 7As00            [12] 2185 	mov	r2,#(_neighbor_addr_get >> 16)
      0005CC 12r00r00         [24] 2186 	lcall	__sdcc_banked_call
      0005CF AD 82            [24] 2187 	mov	r5,dpl
      0005D1 AE 83            [24] 2188 	mov	r6,dph
      0005D3 AF F0            [24] 2189 	mov	r7,b
      0005D5 A8 81            [24] 2190 	mov	r0,sp
      0005D7 18               [12] 2191 	dec	r0
      0005D8 18               [12] 2192 	dec	r0
      0005D9 A6 05            [24] 2193 	mov	@r0,ar5
      0005DB 08               [12] 2194 	inc	r0
      0005DC A6 06            [24] 2195 	mov	@r0,ar6
      0005DE 08               [12] 2196 	inc	r0
      0005DF A6 07            [24] 2197 	mov	@r0,ar7
                                   2198 ;	../../../../core/net/neighbor-attr.c:161: if(item != NULL) {
      0005E1 A8 81            [24] 2199 	mov	r0,sp
      0005E3 18               [12] 2200 	dec	r0
      0005E4 18               [12] 2201 	dec	r0
      0005E5 E6               [12] 2202 	mov	a,@r0
      0005E6 08               [12] 2203 	inc	r0
      0005E7 46               [12] 2204 	orl	a,@r0
      0005E8 60 5E            [24] 2205 	jz	00102$
                                   2206 ;	../../../../core/net/neighbor-attr.c:162: list_remove(neighbor_addrs, item);
      0005EA A8 81            [24] 2207 	mov	r0,sp
      0005EC 18               [12] 2208 	dec	r0
      0005ED 18               [12] 2209 	dec	r0
      0005EE 86 02            [24] 2210 	mov	ar2,@r0
      0005F0 08               [12] 2211 	inc	r0
      0005F1 86 03            [24] 2212 	mov	ar3,@r0
      0005F3 08               [12] 2213 	inc	r0
      0005F4 86 04            [24] 2214 	mov	ar4,@r0
      0005F6 90r00r0F         [24] 2215 	mov	dptr,#_neighbor_addrs
      0005F9 E0               [24] 2216 	movx	a,@dptr
      0005FA FD               [12] 2217 	mov	r5,a
      0005FB A3               [24] 2218 	inc	dptr
      0005FC E0               [24] 2219 	movx	a,@dptr
      0005FD FE               [12] 2220 	mov	r6,a
      0005FE A3               [24] 2221 	inc	dptr
      0005FF E0               [24] 2222 	movx	a,@dptr
      000600 FF               [12] 2223 	mov	r7,a
      000601 C0 02            [24] 2224 	push	ar2
      000603 C0 03            [24] 2225 	push	ar3
      000605 C0 04            [24] 2226 	push	ar4
      000607 8D 82            [24] 2227 	mov	dpl,r5
      000609 8E 83            [24] 2228 	mov	dph,r6
      00060B 8F F0            [24] 2229 	mov	b,r7
      00060D 78r00            [12] 2230 	mov	r0,#_list_remove
      00060F 79s00            [12] 2231 	mov	r1,#(_list_remove >> 8)
      000611 7As00            [12] 2232 	mov	r2,#(_list_remove >> 16)
      000613 12r00r00         [24] 2233 	lcall	__sdcc_banked_call
      000616 15 81            [12] 2234 	dec	sp
      000618 15 81            [12] 2235 	dec	sp
      00061A 15 81            [12] 2236 	dec	sp
                                   2237 ;	../../../../core/net/neighbor-attr.c:163: memb_free(&neighbor_addr_mem, item);
      00061C A8 81            [24] 2238 	mov	r0,sp
      00061E 18               [12] 2239 	dec	r0
      00061F 18               [12] 2240 	dec	r0
      000620 86 05            [24] 2241 	mov	ar5,@r0
      000622 08               [12] 2242 	inc	r0
      000623 86 06            [24] 2243 	mov	ar6,@r0
      000625 08               [12] 2244 	inc	r0
      000626 86 07            [24] 2245 	mov	ar7,@r0
      000628 C0 05            [24] 2246 	push	ar5
      00062A C0 06            [24] 2247 	push	ar6
      00062C C0 07            [24] 2248 	push	ar7
      00062E 90r00r02         [24] 2249 	mov	dptr,#_neighbor_addr_mem
      000631 75 F0 00         [24] 2250 	mov	b,#0x00
      000634 78r00            [12] 2251 	mov	r0,#_memb_free
      000636 79s00            [12] 2252 	mov	r1,#(_memb_free >> 8)
      000638 7As00            [12] 2253 	mov	r2,#(_memb_free >> 16)
      00063A 12r00r00         [24] 2254 	lcall	__sdcc_banked_call
      00063D 15 81            [12] 2255 	dec	sp
      00063F 15 81            [12] 2256 	dec	sp
      000641 15 81            [12] 2257 	dec	sp
                                   2258 ;	../../../../core/net/neighbor-attr.c:164: return 0;
      000643 90 00 00         [24] 2259 	mov	dptr,#0x0000
      000646 80 03            [24] 2260 	sjmp	00103$
      000648                       2261 00102$:
                                   2262 ;	../../../../core/net/neighbor-attr.c:166: return -1;
      000648 90 FF FF         [24] 2263 	mov	dptr,#0xFFFF
      00064B                       2264 00103$:
      00064B 15 81            [12] 2265 	dec	sp
      00064D 15 81            [12] 2266 	dec	sp
      00064F 15 81            [12] 2267 	dec	sp
      000651 02r00r00         [24] 2268 	ljmp	__sdcc_banked_ret
                                   2269 ;------------------------------------------------------------
                                   2270 ;Allocation info for local variables in function 'neighbor_attr_get_data'
                                   2271 ;------------------------------------------------------------
                                   2272 ;addr                      Allocated to stack - sp -10
                                   2273 ;def                       Allocated to stack - sp -4
                                   2274 ;attr                      Allocated to registers r5 r6 r7 
                                   2275 ;sloc0                     Allocated to stack - sp -1
                                   2276 ;------------------------------------------------------------
                                   2277 ;	../../../../core/net/neighbor-attr.c:170: neighbor_attr_get_data(struct neighbor_attr *def, const rimeaddr_t *addr)
                                   2278 ;	-----------------------------------------
                                   2279 ;	 function neighbor_attr_get_data
                                   2280 ;	-----------------------------------------
      000654                       2281 _neighbor_attr_get_data:
      000654 C0 82            [24] 2282 	push	dpl
      000656 C0 83            [24] 2283 	push	dph
      000658 C0 F0            [24] 2284 	push	b
      00065A 05 81            [12] 2285 	inc	sp
      00065C 05 81            [12] 2286 	inc	sp
                                   2287 ;	../../../../core/net/neighbor-attr.c:172: struct neighbor_addr *attr = neighbor_addr_get(addr);
      00065E E5 81            [12] 2288 	mov	a,sp
      000660 24 F6            [12] 2289 	add	a,#0xf6
      000662 F8               [12] 2290 	mov	r0,a
      000663 86 82            [24] 2291 	mov	dpl,@r0
      000665 08               [12] 2292 	inc	r0
      000666 86 83            [24] 2293 	mov	dph,@r0
      000668 08               [12] 2294 	inc	r0
      000669 86 F0            [24] 2295 	mov	b,@r0
      00066B 78r00            [12] 2296 	mov	r0,#_neighbor_addr_get
      00066D 79s00            [12] 2297 	mov	r1,#(_neighbor_addr_get >> 8)
      00066F 7As00            [12] 2298 	mov	r2,#(_neighbor_addr_get >> 16)
      000671 12r00r00         [24] 2299 	lcall	__sdcc_banked_call
      000674 AA 82            [24] 2300 	mov	r2,dpl
      000676 AB 83            [24] 2301 	mov	r3,dph
      000678 AC F0            [24] 2302 	mov	r4,b
      00067A 8A 05            [24] 2303 	mov	ar5,r2
      00067C 8B 06            [24] 2304 	mov	ar6,r3
      00067E 8C 07            [24] 2305 	mov	ar7,r4
                                   2306 ;	../../../../core/net/neighbor-attr.c:174: if(attr != NULL) {
      000680 ED               [12] 2307 	mov	a,r5
      000681 4E               [12] 2308 	orl	a,r6
      000682 70 03            [24] 2309 	jnz	00108$
      000684 02r07r17         [24] 2310 	ljmp	00102$
      000687                       2311 00108$:
                                   2312 ;	../../../../core/net/neighbor-attr.c:175: return (char *)def->data + attr->index * def->size;
      000687 E5 81            [12] 2313 	mov	a,sp
      000689 24 FC            [12] 2314 	add	a,#0xfc
      00068B F8               [12] 2315 	mov	r0,a
      00068C 74 08            [12] 2316 	mov	a,#0x08
      00068E 26               [12] 2317 	add	a,@r0
      00068F FA               [12] 2318 	mov	r2,a
      000690 E4               [12] 2319 	clr	a
      000691 08               [12] 2320 	inc	r0
      000692 36               [12] 2321 	addc	a,@r0
      000693 FB               [12] 2322 	mov	r3,a
      000694 08               [12] 2323 	inc	r0
      000695 86 04            [24] 2324 	mov	ar4,@r0
      000697 8A 82            [24] 2325 	mov	dpl,r2
      000699 8B 83            [24] 2326 	mov	dph,r3
      00069B 8C F0            [24] 2327 	mov	b,r4
      00069D 12r00r00         [24] 2328 	lcall	__gptrget
      0006A0 FA               [12] 2329 	mov	r2,a
      0006A1 A3               [24] 2330 	inc	dptr
      0006A2 12r00r00         [24] 2331 	lcall	__gptrget
      0006A5 FB               [12] 2332 	mov	r3,a
      0006A6 A3               [24] 2333 	inc	dptr
      0006A7 12r00r00         [24] 2334 	lcall	__gptrget
      0006AA FC               [12] 2335 	mov	r4,a
      0006AB 74 0D            [12] 2336 	mov	a,#0x0D
      0006AD 2D               [12] 2337 	add	a,r5
      0006AE FD               [12] 2338 	mov	r5,a
      0006AF E4               [12] 2339 	clr	a
      0006B0 3E               [12] 2340 	addc	a,r6
      0006B1 FE               [12] 2341 	mov	r6,a
      0006B2 8D 82            [24] 2342 	mov	dpl,r5
      0006B4 8E 83            [24] 2343 	mov	dph,r6
      0006B6 8F F0            [24] 2344 	mov	b,r7
      0006B8 A8 81            [24] 2345 	mov	r0,sp
      0006BA 18               [12] 2346 	dec	r0
      0006BB 12r00r00         [24] 2347 	lcall	__gptrget
      0006BE F6               [12] 2348 	mov	@r0,a
      0006BF A3               [24] 2349 	inc	dptr
      0006C0 12r00r00         [24] 2350 	lcall	__gptrget
      0006C3 08               [12] 2351 	inc	r0
      0006C4 F6               [12] 2352 	mov	@r0,a
      0006C5 E5 81            [12] 2353 	mov	a,sp
      0006C7 24 FC            [12] 2354 	add	a,#0xfc
      0006C9 F8               [12] 2355 	mov	r0,a
      0006CA 74 03            [12] 2356 	mov	a,#0x03
      0006CC 26               [12] 2357 	add	a,@r0
      0006CD FD               [12] 2358 	mov	r5,a
      0006CE E4               [12] 2359 	clr	a
      0006CF 08               [12] 2360 	inc	r0
      0006D0 36               [12] 2361 	addc	a,@r0
      0006D1 FE               [12] 2362 	mov	r6,a
      0006D2 08               [12] 2363 	inc	r0
      0006D3 86 07            [24] 2364 	mov	ar7,@r0
      0006D5 8D 82            [24] 2365 	mov	dpl,r5
      0006D7 8E 83            [24] 2366 	mov	dph,r6
      0006D9 8F F0            [24] 2367 	mov	b,r7
      0006DB 12r00r00         [24] 2368 	lcall	__gptrget
      0006DE FD               [12] 2369 	mov	r5,a
      0006DF A3               [24] 2370 	inc	dptr
      0006E0 12r00r00         [24] 2371 	lcall	__gptrget
      0006E3 FE               [12] 2372 	mov	r6,a
      0006E4 C0 04            [24] 2373 	push	ar4
      0006E6 C0 03            [24] 2374 	push	ar3
      0006E8 C0 02            [24] 2375 	push	ar2
      0006EA C0 05            [24] 2376 	push	ar5
      0006EC C0 06            [24] 2377 	push	ar6
      0006EE E5 81            [12] 2378 	mov	a,sp
      0006F0 24 FA            [12] 2379 	add	a,#0xfa
      0006F2 F8               [12] 2380 	mov	r0,a
      0006F3 86 82            [24] 2381 	mov	dpl,@r0
      0006F5 08               [12] 2382 	inc	r0
      0006F6 86 83            [24] 2383 	mov	dph,@r0
      0006F8 12r00r00         [24] 2384 	lcall	__mulint
      0006FB AE 82            [24] 2385 	mov	r6,dpl
      0006FD AF 83            [24] 2386 	mov	r7,dph
      0006FF 15 81            [12] 2387 	dec	sp
      000701 15 81            [12] 2388 	dec	sp
      000703 D0 02            [24] 2389 	pop	ar2
      000705 D0 03            [24] 2390 	pop	ar3
      000707 D0 04            [24] 2391 	pop	ar4
      000709 EE               [12] 2392 	mov	a,r6
      00070A 2A               [12] 2393 	add	a,r2
      00070B FA               [12] 2394 	mov	r2,a
      00070C EF               [12] 2395 	mov	a,r7
      00070D 3B               [12] 2396 	addc	a,r3
      00070E FB               [12] 2397 	mov	r3,a
      00070F 8A 82            [24] 2398 	mov	dpl,r2
      000711 8B 83            [24] 2399 	mov	dph,r3
      000713 8C F0            [24] 2400 	mov	b,r4
      000715 80 06            [24] 2401 	sjmp	00103$
      000717                       2402 00102$:
                                   2403 ;	../../../../core/net/neighbor-attr.c:177: return NULL;
      000717 90 00 00         [24] 2404 	mov	dptr,#0x0000
      00071A 75 F0 00         [24] 2405 	mov	b,#0x00
      00071D                       2406 00103$:
      00071D E5 81            [12] 2407 	mov	a,sp
      00071F 24 FB            [12] 2408 	add	a,#0xFB
      000721 F5 81            [12] 2409 	mov	sp,a
      000723 02r00r00         [24] 2410 	ljmp	__sdcc_banked_ret
                                   2411 ;------------------------------------------------------------
                                   2412 ;Allocation info for local variables in function 'neighbor_attr_set_data'
                                   2413 ;------------------------------------------------------------
                                   2414 ;addr                      Allocated to stack - sp -14
                                   2415 ;data                      Allocated to stack - sp -17
                                   2416 ;def                       Allocated to stack - sp -8
                                   2417 ;attr                      Allocated to stack - sp -2
                                   2418 ;sloc0                     Allocated to stack - sp -5
                                   2419 ;------------------------------------------------------------
                                   2420 ;	../../../../core/net/neighbor-attr.c:181: neighbor_attr_set_data(struct neighbor_attr *def, const rimeaddr_t *addr,
                                   2421 ;	-----------------------------------------
                                   2422 ;	 function neighbor_attr_set_data
                                   2423 ;	-----------------------------------------
      000726                       2424 _neighbor_attr_set_data:
      000726 C0 82            [24] 2425 	push	dpl
      000728 C0 83            [24] 2426 	push	dph
      00072A C0 F0            [24] 2427 	push	b
      00072C E5 81            [12] 2428 	mov	a,sp
      00072E 24 06            [12] 2429 	add	a,#0x06
                                   2430 ;	../../../../core/net/neighbor-attr.c:184: struct neighbor_addr *attr = neighbor_addr_get(addr);
      000730 F5 81            [12] 2431 	mov	sp,a
      000732 24 F2            [12] 2432 	add	a,#0xf2
      000734 F8               [12] 2433 	mov	r0,a
      000735 86 82            [24] 2434 	mov	dpl,@r0
      000737 08               [12] 2435 	inc	r0
      000738 86 83            [24] 2436 	mov	dph,@r0
      00073A 08               [12] 2437 	inc	r0
      00073B 86 F0            [24] 2438 	mov	b,@r0
      00073D 78r00            [12] 2439 	mov	r0,#_neighbor_addr_get
      00073F 79s00            [12] 2440 	mov	r1,#(_neighbor_addr_get >> 8)
      000741 7As00            [12] 2441 	mov	r2,#(_neighbor_addr_get >> 16)
      000743 12r00r00         [24] 2442 	lcall	__sdcc_banked_call
      000746 AA 82            [24] 2443 	mov	r2,dpl
      000748 AB 83            [24] 2444 	mov	r3,dph
      00074A AC F0            [24] 2445 	mov	r4,b
      00074C A8 81            [24] 2446 	mov	r0,sp
      00074E 18               [12] 2447 	dec	r0
      00074F 18               [12] 2448 	dec	r0
      000750 A6 02            [24] 2449 	mov	@r0,ar2
      000752 08               [12] 2450 	inc	r0
      000753 A6 03            [24] 2451 	mov	@r0,ar3
      000755 08               [12] 2452 	inc	r0
      000756 A6 04            [24] 2453 	mov	@r0,ar4
                                   2454 ;	../../../../core/net/neighbor-attr.c:186: if(attr == NULL) {
      000758 A8 81            [24] 2455 	mov	r0,sp
      00075A 18               [12] 2456 	dec	r0
      00075B 18               [12] 2457 	dec	r0
      00075C E6               [12] 2458 	mov	a,@r0
      00075D 08               [12] 2459 	inc	r0
      00075E 46               [12] 2460 	orl	a,@r0
      00075F 70 47            [24] 2461 	jnz	00104$
                                   2462 ;	../../../../core/net/neighbor-attr.c:187: if(neighbor_attr_add_neighbor(addr)) {
      000761 E5 81            [12] 2463 	mov	a,sp
      000763 24 F2            [12] 2464 	add	a,#0xf2
      000765 F8               [12] 2465 	mov	r0,a
      000766 86 82            [24] 2466 	mov	dpl,@r0
      000768 08               [12] 2467 	inc	r0
      000769 86 83            [24] 2468 	mov	dph,@r0
      00076B 08               [12] 2469 	inc	r0
      00076C 86 F0            [24] 2470 	mov	b,@r0
      00076E 78rB3            [12] 2471 	mov	r0,#_neighbor_attr_add_neighbor
      000770 79s03            [12] 2472 	mov	r1,#(_neighbor_attr_add_neighbor >> 8)
      000772 7As00            [12] 2473 	mov	r2,#(_neighbor_attr_add_neighbor >> 16)
      000774 12r00r00         [24] 2474 	lcall	__sdcc_banked_call
      000777 E5 82            [12] 2475 	mov	a,dpl
      000779 85 83 F0         [24] 2476 	mov	b,dph
      00077C 45 F0            [12] 2477 	orl	a,b
      00077E 60 28            [24] 2478 	jz	00104$
                                   2479 ;	../../../../core/net/neighbor-attr.c:188: attr = neighbor_addr_get(addr);
      000780 E5 81            [12] 2480 	mov	a,sp
      000782 24 F2            [12] 2481 	add	a,#0xf2
      000784 F8               [12] 2482 	mov	r0,a
      000785 86 82            [24] 2483 	mov	dpl,@r0
      000787 08               [12] 2484 	inc	r0
      000788 86 83            [24] 2485 	mov	dph,@r0
      00078A 08               [12] 2486 	inc	r0
      00078B 86 F0            [24] 2487 	mov	b,@r0
      00078D 78r00            [12] 2488 	mov	r0,#_neighbor_addr_get
      00078F 79s00            [12] 2489 	mov	r1,#(_neighbor_addr_get >> 8)
      000791 7As00            [12] 2490 	mov	r2,#(_neighbor_addr_get >> 16)
      000793 12r00r00         [24] 2491 	lcall	__sdcc_banked_call
      000796 AD 82            [24] 2492 	mov	r5,dpl
      000798 AE 83            [24] 2493 	mov	r6,dph
      00079A AF F0            [24] 2494 	mov	r7,b
      00079C A8 81            [24] 2495 	mov	r0,sp
      00079E 18               [12] 2496 	dec	r0
      00079F 18               [12] 2497 	dec	r0
      0007A0 A6 05            [24] 2498 	mov	@r0,ar5
      0007A2 08               [12] 2499 	inc	r0
      0007A3 A6 06            [24] 2500 	mov	@r0,ar6
      0007A5 08               [12] 2501 	inc	r0
      0007A6 A6 07            [24] 2502 	mov	@r0,ar7
      0007A8                       2503 00104$:
                                   2504 ;	../../../../core/net/neighbor-attr.c:191: if(attr != NULL) {
      0007A8 A8 81            [24] 2505 	mov	r0,sp
      0007AA 18               [12] 2506 	dec	r0
      0007AB 18               [12] 2507 	dec	r0
      0007AC E6               [12] 2508 	mov	a,@r0
      0007AD 08               [12] 2509 	inc	r0
      0007AE 46               [12] 2510 	orl	a,@r0
      0007AF 70 03            [24] 2511 	jnz	00120$
      0007B1 02r08r98         [24] 2512 	ljmp	00106$
      0007B4                       2513 00120$:
                                   2514 ;	../../../../core/net/neighbor-attr.c:192: attr->time = 0;
      0007B4 A8 81            [24] 2515 	mov	r0,sp
      0007B6 18               [12] 2516 	dec	r0
      0007B7 18               [12] 2517 	dec	r0
      0007B8 74 0B            [12] 2518 	mov	a,#0x0B
      0007BA 26               [12] 2519 	add	a,@r0
      0007BB FD               [12] 2520 	mov	r5,a
      0007BC E4               [12] 2521 	clr	a
      0007BD 08               [12] 2522 	inc	r0
      0007BE 36               [12] 2523 	addc	a,@r0
      0007BF FE               [12] 2524 	mov	r6,a
      0007C0 08               [12] 2525 	inc	r0
      0007C1 86 07            [24] 2526 	mov	ar7,@r0
      0007C3 8D 82            [24] 2527 	mov	dpl,r5
      0007C5 8E 83            [24] 2528 	mov	dph,r6
      0007C7 8F F0            [24] 2529 	mov	b,r7
      0007C9 E4               [12] 2530 	clr	a
      0007CA 12r00r00         [24] 2531 	lcall	__gptrput
      0007CD A3               [24] 2532 	inc	dptr
      0007CE E4               [12] 2533 	clr	a
      0007CF 12r00r00         [24] 2534 	lcall	__gptrput
                                   2535 ;	../../../../core/net/neighbor-attr.c:193: memcpy((char *)def->data + attr->index * def->size, data, def->size);
      0007D2 E5 81            [12] 2536 	mov	a,sp
      0007D4 24 F8            [12] 2537 	add	a,#0xf8
      0007D6 F8               [12] 2538 	mov	r0,a
      0007D7 74 03            [12] 2539 	mov	a,#0x03
      0007D9 26               [12] 2540 	add	a,@r0
      0007DA FD               [12] 2541 	mov	r5,a
      0007DB E4               [12] 2542 	clr	a
      0007DC 08               [12] 2543 	inc	r0
      0007DD 36               [12] 2544 	addc	a,@r0
      0007DE FE               [12] 2545 	mov	r6,a
      0007DF 08               [12] 2546 	inc	r0
      0007E0 86 07            [24] 2547 	mov	ar7,@r0
      0007E2 8D 82            [24] 2548 	mov	dpl,r5
      0007E4 8E 83            [24] 2549 	mov	dph,r6
      0007E6 8F F0            [24] 2550 	mov	b,r7
      0007E8 12r00r00         [24] 2551 	lcall	__gptrget
      0007EB FD               [12] 2552 	mov	r5,a
      0007EC A3               [24] 2553 	inc	dptr
      0007ED 12r00r00         [24] 2554 	lcall	__gptrget
      0007F0 FE               [12] 2555 	mov	r6,a
      0007F1 E5 81            [12] 2556 	mov	a,sp
      0007F3 24 F8            [12] 2557 	add	a,#0xf8
      0007F5 F8               [12] 2558 	mov	r0,a
      0007F6 74 08            [12] 2559 	mov	a,#0x08
      0007F8 26               [12] 2560 	add	a,@r0
      0007F9 FB               [12] 2561 	mov	r3,a
      0007FA E4               [12] 2562 	clr	a
      0007FB 08               [12] 2563 	inc	r0
      0007FC 36               [12] 2564 	addc	a,@r0
      0007FD FC               [12] 2565 	mov	r4,a
      0007FE 08               [12] 2566 	inc	r0
      0007FF 86 07            [24] 2567 	mov	ar7,@r0
      000801 8B 82            [24] 2568 	mov	dpl,r3
      000803 8C 83            [24] 2569 	mov	dph,r4
      000805 8F F0            [24] 2570 	mov	b,r7
      000807 12r00r00         [24] 2571 	lcall	__gptrget
      00080A FB               [12] 2572 	mov	r3,a
      00080B A3               [24] 2573 	inc	dptr
      00080C 12r00r00         [24] 2574 	lcall	__gptrget
      00080F FC               [12] 2575 	mov	r4,a
      000810 A3               [24] 2576 	inc	dptr
      000811 12r00r00         [24] 2577 	lcall	__gptrget
      000814 FF               [12] 2578 	mov	r7,a
      000815 E5 81            [12] 2579 	mov	a,sp
      000817 24 FB            [12] 2580 	add	a,#0xfb
      000819 F8               [12] 2581 	mov	r0,a
      00081A A6 03            [24] 2582 	mov	@r0,ar3
      00081C 08               [12] 2583 	inc	r0
      00081D A6 04            [24] 2584 	mov	@r0,ar4
      00081F 08               [12] 2585 	inc	r0
      000820 A6 07            [24] 2586 	mov	@r0,ar7
      000822 A8 81            [24] 2587 	mov	r0,sp
      000824 18               [12] 2588 	dec	r0
      000825 18               [12] 2589 	dec	r0
      000826 74 0D            [12] 2590 	mov	a,#0x0D
      000828 26               [12] 2591 	add	a,@r0
      000829 FA               [12] 2592 	mov	r2,a
      00082A E4               [12] 2593 	clr	a
      00082B 08               [12] 2594 	inc	r0
      00082C 36               [12] 2595 	addc	a,@r0
      00082D FC               [12] 2596 	mov	r4,a
      00082E 08               [12] 2597 	inc	r0
      00082F 86 07            [24] 2598 	mov	ar7,@r0
      000831 8A 82            [24] 2599 	mov	dpl,r2
      000833 8C 83            [24] 2600 	mov	dph,r4
      000835 8F F0            [24] 2601 	mov	b,r7
      000837 12r00r00         [24] 2602 	lcall	__gptrget
      00083A FA               [12] 2603 	mov	r2,a
      00083B A3               [24] 2604 	inc	dptr
      00083C 12r00r00         [24] 2605 	lcall	__gptrget
      00083F FC               [12] 2606 	mov	r4,a
      000840 C0 06            [24] 2607 	push	ar6
      000842 C0 05            [24] 2608 	push	ar5
      000844 C0 05            [24] 2609 	push	ar5
      000846 C0 06            [24] 2610 	push	ar6
      000848 8A 82            [24] 2611 	mov	dpl,r2
      00084A 8C 83            [24] 2612 	mov	dph,r4
      00084C 12r00r00         [24] 2613 	lcall	__mulint
      00084F AC 82            [24] 2614 	mov	r4,dpl
      000851 AF 83            [24] 2615 	mov	r7,dph
      000853 15 81            [12] 2616 	dec	sp
      000855 15 81            [12] 2617 	dec	sp
      000857 D0 05            [24] 2618 	pop	ar5
      000859 D0 06            [24] 2619 	pop	ar6
      00085B E5 81            [12] 2620 	mov	a,sp
      00085D 24 FB            [12] 2621 	add	a,#0xfb
      00085F F8               [12] 2622 	mov	r0,a
      000860 EC               [12] 2623 	mov	a,r4
      000861 26               [12] 2624 	add	a,@r0
      000862 FC               [12] 2625 	mov	r4,a
      000863 EF               [12] 2626 	mov	a,r7
      000864 08               [12] 2627 	inc	r0
      000865 36               [12] 2628 	addc	a,@r0
      000866 FF               [12] 2629 	mov	r7,a
      000867 08               [12] 2630 	inc	r0
      000868 86 03            [24] 2631 	mov	ar3,@r0
      00086A C0 05            [24] 2632 	push	ar5
      00086C C0 06            [24] 2633 	push	ar6
      00086E E5 81            [12] 2634 	mov	a,sp
      000870 24 ED            [12] 2635 	add	a,#0xed
      000872 F8               [12] 2636 	mov	r0,a
      000873 E6               [12] 2637 	mov	a,@r0
      000874 C0 E0            [24] 2638 	push	acc
      000876 08               [12] 2639 	inc	r0
      000877 E6               [12] 2640 	mov	a,@r0
      000878 C0 E0            [24] 2641 	push	acc
      00087A 08               [12] 2642 	inc	r0
      00087B E6               [12] 2643 	mov	a,@r0
      00087C C0 E0            [24] 2644 	push	acc
      00087E 8C 82            [24] 2645 	mov	dpl,r4
      000880 8F 83            [24] 2646 	mov	dph,r7
      000882 8B F0            [24] 2647 	mov	b,r3
      000884 78r00            [12] 2648 	mov	r0,#_memcpy
      000886 79s00            [12] 2649 	mov	r1,#(_memcpy >> 8)
      000888 7As00            [12] 2650 	mov	r2,#(_memcpy >> 16)
      00088A 12r00r00         [24] 2651 	lcall	__sdcc_banked_call
      00088D E5 81            [12] 2652 	mov	a,sp
      00088F 24 FB            [12] 2653 	add	a,#0xfb
      000891 F5 81            [12] 2654 	mov	sp,a
                                   2655 ;	../../../../core/net/neighbor-attr.c:194: return 1;
      000893 90 00 01         [24] 2656 	mov	dptr,#0x0001
      000896 80 03            [24] 2657 	sjmp	00107$
      000898                       2658 00106$:
                                   2659 ;	../../../../core/net/neighbor-attr.c:196: return 0;
      000898 90 00 00         [24] 2660 	mov	dptr,#0x0000
      00089B                       2661 00107$:
      00089B E5 81            [12] 2662 	mov	a,sp
      00089D 24 F7            [12] 2663 	add	a,#0xF7
      00089F F5 81            [12] 2664 	mov	sp,a
      0008A1 02r00r00         [24] 2665 	ljmp	__sdcc_banked_ret
                                   2666 ;------------------------------------------------------------
                                   2667 ;Allocation info for local variables in function 'neighbor_attr_tick'
                                   2668 ;------------------------------------------------------------
                                   2669 ;addr                      Allocated to registers r5 r6 r7 
                                   2670 ;attr                      Allocated to registers r5 r6 r7 
                                   2671 ;------------------------------------------------------------
                                   2672 ;	../../../../core/net/neighbor-attr.c:200: neighbor_attr_tick(const rimeaddr_t * addr)
                                   2673 ;	-----------------------------------------
                                   2674 ;	 function neighbor_attr_tick
                                   2675 ;	-----------------------------------------
      0008A4                       2676 _neighbor_attr_tick:
                                   2677 ;	../../../../core/net/neighbor-attr.c:202: struct neighbor_addr *attr = neighbor_addr_get(addr);
      0008A4 78r00            [12] 2678 	mov	r0,#_neighbor_addr_get
      0008A6 79s00            [12] 2679 	mov	r1,#(_neighbor_addr_get >> 8)
      0008A8 7As00            [12] 2680 	mov	r2,#(_neighbor_addr_get >> 16)
      0008AA 12r00r00         [24] 2681 	lcall	__sdcc_banked_call
      0008AD AD 82            [24] 2682 	mov	r5,dpl
      0008AF AE 83            [24] 2683 	mov	r6,dph
      0008B1 AF F0            [24] 2684 	mov	r7,b
                                   2685 ;	../../../../core/net/neighbor-attr.c:204: if(attr != NULL) {
      0008B3 ED               [12] 2686 	mov	a,r5
      0008B4 4E               [12] 2687 	orl	a,r6
      0008B5 60 16            [24] 2688 	jz	00103$
                                   2689 ;	../../../../core/net/neighbor-attr.c:205: attr->time = 0;
      0008B7 74 0B            [12] 2690 	mov	a,#0x0B
      0008B9 2D               [12] 2691 	add	a,r5
      0008BA FD               [12] 2692 	mov	r5,a
      0008BB E4               [12] 2693 	clr	a
      0008BC 3E               [12] 2694 	addc	a,r6
      0008BD FE               [12] 2695 	mov	r6,a
      0008BE 8D 82            [24] 2696 	mov	dpl,r5
      0008C0 8E 83            [24] 2697 	mov	dph,r6
      0008C2 8F F0            [24] 2698 	mov	b,r7
      0008C4 E4               [12] 2699 	clr	a
      0008C5 12r00r00         [24] 2700 	lcall	__gptrput
      0008C8 A3               [24] 2701 	inc	dptr
      0008C9 E4               [12] 2702 	clr	a
      0008CA 12r00r00         [24] 2703 	lcall	__gptrput
      0008CD                       2704 00103$:
      0008CD 02r00r00         [24] 2705 	ljmp	__sdcc_banked_ret
                                   2706 ;------------------------------------------------------------
                                   2707 ;Allocation info for local variables in function 'neighbor_attr_get_timeout'
                                   2708 ;------------------------------------------------------------
                                   2709 ;	../../../../core/net/neighbor-attr.c:210: neighbor_attr_get_timeout(void)
                                   2710 ;	-----------------------------------------
                                   2711 ;	 function neighbor_attr_get_timeout
                                   2712 ;	-----------------------------------------
      0008D0                       2713 _neighbor_attr_get_timeout:
                                   2714 ;	../../../../core/net/neighbor-attr.c:212: return timeout;
      0008D0 90r00r00         [24] 2715 	mov	dptr,#_timeout
      0008D3 E0               [24] 2716 	movx	a,@dptr
      0008D4 FE               [12] 2717 	mov	r6,a
      0008D5 A3               [24] 2718 	inc	dptr
      0008D6 E0               [24] 2719 	movx	a,@dptr
      0008D7 FF               [12] 2720 	mov	r7,a
      0008D8 8E 82            [24] 2721 	mov	dpl,r6
      0008DA 8F 83            [24] 2722 	mov	dph,r7
      0008DC 02r00r00         [24] 2723 	ljmp	__sdcc_banked_ret
                                   2724 ;------------------------------------------------------------
                                   2725 ;Allocation info for local variables in function 'timeout_check'
                                   2726 ;------------------------------------------------------------
                                   2727 ;ptr                       Allocated to registers r5 r6 r7 
                                   2728 ;item                      Allocated to stack - sp -5
                                   2729 ;next_item                 Allocated to stack - sp -2
                                   2730 ;------------------------------------------------------------
                                   2731 ;	../../../../core/net/neighbor-attr.c:219: timeout_check(void *ptr)
                                   2732 ;	-----------------------------------------
                                   2733 ;	 function timeout_check
                                   2734 ;	-----------------------------------------
      0008DF                       2735 _timeout_check:
      0008DF E5 81            [12] 2736 	mov	a,sp
      0008E1 24 06            [12] 2737 	add	a,#0x06
      0008E3 F5 81            [12] 2738 	mov	sp,a
      0008E5 AD 82            [24] 2739 	mov	r5,dpl
      0008E7 AE 83            [24] 2740 	mov	r6,dph
      0008E9 AF F0            [24] 2741 	mov	r7,b
                                   2742 ;	../../../../core/net/neighbor-attr.c:221: if(timeout > 0) {
      0008EB 90r00r00         [24] 2743 	mov	dptr,#_timeout
      0008EE E0               [24] 2744 	movx	a,@dptr
      0008EF FB               [12] 2745 	mov	r3,a
      0008F0 A3               [24] 2746 	inc	dptr
      0008F1 E0               [24] 2747 	movx	a,@dptr
      0008F2 FC               [12] 2748 	mov	r4,a
      0008F3 4B               [12] 2749 	orl	a,r3
      0008F4 70 03            [24] 2750 	jnz	00123$
      0008F6 02r0Ar8A         [24] 2751 	ljmp	00109$
      0008F9                       2752 00123$:
                                   2753 ;	../../../../core/net/neighbor-attr.c:222: struct neighbor_addr *item = neighbor_attr_list_neighbors();
      0008F9 C0 07            [24] 2754 	push	ar7
      0008FB C0 06            [24] 2755 	push	ar6
      0008FD C0 05            [24] 2756 	push	ar5
      0008FF 78rE8            [12] 2757 	mov	r0,#_neighbor_attr_list_neighbors
      000901 79s00            [12] 2758 	mov	r1,#(_neighbor_attr_list_neighbors >> 8)
      000903 7As00            [12] 2759 	mov	r2,#(_neighbor_attr_list_neighbors >> 16)
      000905 12r00r00         [24] 2760 	lcall	__sdcc_banked_call
      000908 AA 82            [24] 2761 	mov	r2,dpl
      00090A AB 83            [24] 2762 	mov	r3,dph
      00090C AC F0            [24] 2763 	mov	r4,b
      00090E D0 05            [24] 2764 	pop	ar5
      000910 D0 06            [24] 2765 	pop	ar6
      000912 D0 07            [24] 2766 	pop	ar7
      000914 E5 81            [12] 2767 	mov	a,sp
      000916 24 FB            [12] 2768 	add	a,#0xfb
      000918 F8               [12] 2769 	mov	r0,a
      000919 A6 02            [24] 2770 	mov	@r0,ar2
      00091B 08               [12] 2771 	inc	r0
      00091C A6 03            [24] 2772 	mov	@r0,ar3
      00091E 08               [12] 2773 	inc	r0
      00091F A6 04            [24] 2774 	mov	@r0,ar4
                                   2775 ;	../../../../core/net/neighbor-attr.c:224: while(item != NULL) {
      000921                       2776 00104$:
      000921 E5 81            [12] 2777 	mov	a,sp
      000923 24 FB            [12] 2778 	add	a,#0xfb
      000925 F8               [12] 2779 	mov	r0,a
      000926 E6               [12] 2780 	mov	a,@r0
      000927 08               [12] 2781 	inc	r0
      000928 46               [12] 2782 	orl	a,@r0
      000929 70 03            [24] 2783 	jnz	00124$
      00092B 02r0Ar5B         [24] 2784 	ljmp	00106$
      00092E                       2785 00124$:
                                   2786 ;	../../../../core/net/neighbor-attr.c:225: item->time += TIMEOUT_SECONDS;
      00092E C0 05            [24] 2787 	push	ar5
      000930 C0 06            [24] 2788 	push	ar6
      000932 C0 07            [24] 2789 	push	ar7
      000934 E5 81            [12] 2790 	mov	a,sp
      000936 24 F8            [12] 2791 	add	a,#0xf8
      000938 F8               [12] 2792 	mov	r0,a
      000939 74 0B            [12] 2793 	mov	a,#0x0B
      00093B 26               [12] 2794 	add	a,@r0
      00093C FD               [12] 2795 	mov	r5,a
      00093D E4               [12] 2796 	clr	a
      00093E 08               [12] 2797 	inc	r0
      00093F 36               [12] 2798 	addc	a,@r0
      000940 FE               [12] 2799 	mov	r6,a
      000941 08               [12] 2800 	inc	r0
      000942 86 07            [24] 2801 	mov	ar7,@r0
      000944 8D 82            [24] 2802 	mov	dpl,r5
      000946 8E 83            [24] 2803 	mov	dph,r6
      000948 8F F0            [24] 2804 	mov	b,r7
      00094A 12r00r00         [24] 2805 	lcall	__gptrget
      00094D FB               [12] 2806 	mov	r3,a
      00094E A3               [24] 2807 	inc	dptr
      00094F 12r00r00         [24] 2808 	lcall	__gptrget
      000952 FC               [12] 2809 	mov	r4,a
      000953 74 05            [12] 2810 	mov	a,#0x05
      000955 2B               [12] 2811 	add	a,r3
      000956 FB               [12] 2812 	mov	r3,a
      000957 E4               [12] 2813 	clr	a
      000958 3C               [12] 2814 	addc	a,r4
      000959 FC               [12] 2815 	mov	r4,a
      00095A 8D 82            [24] 2816 	mov	dpl,r5
      00095C 8E 83            [24] 2817 	mov	dph,r6
      00095E 8F F0            [24] 2818 	mov	b,r7
      000960 EB               [12] 2819 	mov	a,r3
      000961 12r00r00         [24] 2820 	lcall	__gptrput
      000964 A3               [24] 2821 	inc	dptr
      000965 EC               [12] 2822 	mov	a,r4
      000966 12r00r00         [24] 2823 	lcall	__gptrput
                                   2824 ;	../../../../core/net/neighbor-attr.c:226: if(item->time >= timeout) {
      000969 90r00r00         [24] 2825 	mov	dptr,#_timeout
      00096C E0               [24] 2826 	movx	a,@dptr
      00096D FE               [12] 2827 	mov	r6,a
      00096E A3               [24] 2828 	inc	dptr
      00096F E0               [24] 2829 	movx	a,@dptr
      000970 FF               [12] 2830 	mov	r7,a
      000971 C3               [12] 2831 	clr	c
      000972 EB               [12] 2832 	mov	a,r3
      000973 9E               [12] 2833 	subb	a,r6
      000974 EC               [12] 2834 	mov	a,r4
      000975 9F               [12] 2835 	subb	a,r7
      000976 D0 07            [24] 2836 	pop	ar7
      000978 D0 06            [24] 2837 	pop	ar6
      00097A D0 05            [24] 2838 	pop	ar5
      00097C 50 03            [24] 2839 	jnc	00125$
      00097E 02r0Ar39         [24] 2840 	ljmp	00102$
      000981                       2841 00125$:
                                   2842 ;	../../../../core/net/neighbor-attr.c:227: struct neighbor_addr *next_item = item->next;
      000981 C0 05            [24] 2843 	push	ar5
      000983 C0 06            [24] 2844 	push	ar6
      000985 C0 07            [24] 2845 	push	ar7
      000987 E5 81            [12] 2846 	mov	a,sp
      000989 24 F8            [12] 2847 	add	a,#0xf8
      00098B F8               [12] 2848 	mov	r0,a
      00098C 86 82            [24] 2849 	mov	dpl,@r0
      00098E 08               [12] 2850 	inc	r0
      00098F 86 83            [24] 2851 	mov	dph,@r0
      000991 08               [12] 2852 	inc	r0
      000992 86 F0            [24] 2853 	mov	b,@r0
      000994 E5 81            [12] 2854 	mov	a,sp
      000996 24 FB            [12] 2855 	add	a,#0xfb
      000998 F9               [12] 2856 	mov	r1,a
      000999 12r00r00         [24] 2857 	lcall	__gptrget
      00099C F7               [12] 2858 	mov	@r1,a
      00099D A3               [24] 2859 	inc	dptr
      00099E 12r00r00         [24] 2860 	lcall	__gptrget
      0009A1 09               [12] 2861 	inc	r1
      0009A2 F7               [12] 2862 	mov	@r1,a
      0009A3 A3               [24] 2863 	inc	dptr
      0009A4 12r00r00         [24] 2864 	lcall	__gptrget
      0009A7 09               [12] 2865 	inc	r1
      0009A8 F7               [12] 2866 	mov	@r1,a
                                   2867 ;	../../../../core/net/neighbor-attr.c:229: list_remove(neighbor_addrs, item);
      0009A9 E5 81            [12] 2868 	mov	a,sp
      0009AB 24 F8            [12] 2869 	add	a,#0xf8
      0009AD F8               [12] 2870 	mov	r0,a
      0009AE 86 05            [24] 2871 	mov	ar5,@r0
      0009B0 08               [12] 2872 	inc	r0
      0009B1 86 06            [24] 2873 	mov	ar6,@r0
      0009B3 08               [12] 2874 	inc	r0
      0009B4 86 07            [24] 2875 	mov	ar7,@r0
      0009B6 90r00r0F         [24] 2876 	mov	dptr,#_neighbor_addrs
      0009B9 E0               [24] 2877 	movx	a,@dptr
      0009BA FA               [12] 2878 	mov	r2,a
      0009BB A3               [24] 2879 	inc	dptr
      0009BC E0               [24] 2880 	movx	a,@dptr
      0009BD FB               [12] 2881 	mov	r3,a
      0009BE A3               [24] 2882 	inc	dptr
      0009BF E0               [24] 2883 	movx	a,@dptr
      0009C0 FC               [12] 2884 	mov	r4,a
      0009C1 C0 07            [24] 2885 	push	ar7
      0009C3 C0 06            [24] 2886 	push	ar6
      0009C5 C0 05            [24] 2887 	push	ar5
      0009C7 C0 05            [24] 2888 	push	ar5
      0009C9 C0 06            [24] 2889 	push	ar6
      0009CB C0 07            [24] 2890 	push	ar7
      0009CD 8A 82            [24] 2891 	mov	dpl,r2
      0009CF 8B 83            [24] 2892 	mov	dph,r3
      0009D1 8C F0            [24] 2893 	mov	b,r4
      0009D3 78r00            [12] 2894 	mov	r0,#_list_remove
      0009D5 79s00            [12] 2895 	mov	r1,#(_list_remove >> 8)
      0009D7 7As00            [12] 2896 	mov	r2,#(_list_remove >> 16)
      0009D9 12r00r00         [24] 2897 	lcall	__sdcc_banked_call
      0009DC 15 81            [12] 2898 	dec	sp
      0009DE 15 81            [12] 2899 	dec	sp
      0009E0 15 81            [12] 2900 	dec	sp
      0009E2 D0 05            [24] 2901 	pop	ar5
      0009E4 D0 06            [24] 2902 	pop	ar6
      0009E6 D0 07            [24] 2903 	pop	ar7
                                   2904 ;	../../../../core/net/neighbor-attr.c:230: memb_free(&neighbor_addr_mem, item);
      0009E8 E5 81            [12] 2905 	mov	a,sp
      0009EA 24 F8            [12] 2906 	add	a,#0xf8
      0009EC F8               [12] 2907 	mov	r0,a
      0009ED 86 02            [24] 2908 	mov	ar2,@r0
      0009EF 08               [12] 2909 	inc	r0
      0009F0 86 03            [24] 2910 	mov	ar3,@r0
      0009F2 08               [12] 2911 	inc	r0
      0009F3 86 04            [24] 2912 	mov	ar4,@r0
      0009F5 C0 07            [24] 2913 	push	ar7
      0009F7 C0 06            [24] 2914 	push	ar6
      0009F9 C0 05            [24] 2915 	push	ar5
      0009FB C0 02            [24] 2916 	push	ar2
      0009FD C0 03            [24] 2917 	push	ar3
      0009FF C0 04            [24] 2918 	push	ar4
      000A01 90r00r02         [24] 2919 	mov	dptr,#_neighbor_addr_mem
      000A04 75 F0 00         [24] 2920 	mov	b,#0x00
      000A07 78r00            [12] 2921 	mov	r0,#_memb_free
      000A09 79s00            [12] 2922 	mov	r1,#(_memb_free >> 8)
      000A0B 7As00            [12] 2923 	mov	r2,#(_memb_free >> 16)
      000A0D 12r00r00         [24] 2924 	lcall	__sdcc_banked_call
      000A10 15 81            [12] 2925 	dec	sp
      000A12 15 81            [12] 2926 	dec	sp
      000A14 15 81            [12] 2927 	dec	sp
      000A16 D0 05            [24] 2928 	pop	ar5
      000A18 D0 06            [24] 2929 	pop	ar6
      000A1A D0 07            [24] 2930 	pop	ar7
                                   2931 ;	../../../../core/net/neighbor-attr.c:231: item = next_item;
      000A1C E5 81            [12] 2932 	mov	a,sp
      000A1E 24 FB            [12] 2933 	add	a,#0xfb
      000A20 F8               [12] 2934 	mov	r0,a
      000A21 E5 81            [12] 2935 	mov	a,sp
      000A23 24 F8            [12] 2936 	add	a,#0xf8
      000A25 F9               [12] 2937 	mov	r1,a
      000A26 E6               [12] 2938 	mov	a,@r0
      000A27 F7               [12] 2939 	mov	@r1,a
      000A28 08               [12] 2940 	inc	r0
      000A29 09               [12] 2941 	inc	r1
      000A2A E6               [12] 2942 	mov	a,@r0
      000A2B F7               [12] 2943 	mov	@r1,a
      000A2C 08               [12] 2944 	inc	r0
      000A2D 09               [12] 2945 	inc	r1
      000A2E E6               [12] 2946 	mov	a,@r0
      000A2F F7               [12] 2947 	mov	@r1,a
      000A30 D0 07            [24] 2948 	pop	ar7
      000A32 D0 06            [24] 2949 	pop	ar6
      000A34 D0 05            [24] 2950 	pop	ar5
      000A36 02r09r21         [24] 2951 	ljmp	00104$
      000A39                       2952 00102$:
                                   2953 ;	../../../../core/net/neighbor-attr.c:233: item = item->next;
      000A39 E5 81            [12] 2954 	mov	a,sp
      000A3B 24 FB            [12] 2955 	add	a,#0xfb
      000A3D F8               [12] 2956 	mov	r0,a
      000A3E 86 82            [24] 2957 	mov	dpl,@r0
      000A40 08               [12] 2958 	inc	r0
      000A41 86 83            [24] 2959 	mov	dph,@r0
      000A43 08               [12] 2960 	inc	r0
      000A44 86 F0            [24] 2961 	mov	b,@r0
      000A46 12r00r00         [24] 2962 	lcall	__gptrget
      000A49 18               [12] 2963 	dec	r0
      000A4A 18               [12] 2964 	dec	r0
      000A4B F6               [12] 2965 	mov	@r0,a
      000A4C A3               [24] 2966 	inc	dptr
      000A4D 12r00r00         [24] 2967 	lcall	__gptrget
      000A50 08               [12] 2968 	inc	r0
      000A51 F6               [12] 2969 	mov	@r0,a
      000A52 A3               [24] 2970 	inc	dptr
      000A53 12r00r00         [24] 2971 	lcall	__gptrget
      000A56 08               [12] 2972 	inc	r0
      000A57 F6               [12] 2973 	mov	@r0,a
      000A58 02r09r21         [24] 2974 	ljmp	00104$
      000A5B                       2975 00106$:
                                   2976 ;	../../../../core/net/neighbor-attr.c:236: ctimer_set(&ct, TIMEOUT_SECONDS * CLOCK_SECOND, timeout_check, ptr);
      000A5B C0 05            [24] 2977 	push	ar5
      000A5D C0 06            [24] 2978 	push	ar6
      000A5F C0 07            [24] 2979 	push	ar7
      000A61 74rDF            [12] 2980 	mov	a,#_timeout_check
      000A63 C0 E0            [24] 2981 	push	acc
      000A65 74s08            [12] 2982 	mov	a,#(_timeout_check >> 8)
      000A67 C0 E0            [24] 2983 	push	acc
      000A69 74s00            [12] 2984 	mov	a,#(_timeout_check >> 16)
      000A6B C0 E0            [24] 2985 	push	acc
      000A6D 74 80            [12] 2986 	mov	a,#0x80
      000A6F C0 E0            [24] 2987 	push	acc
      000A71 74 02            [12] 2988 	mov	a,#0x02
      000A73 C0 E0            [24] 2989 	push	acc
      000A75 90r00rC0         [24] 2990 	mov	dptr,#_ct
      000A78 75 F0 00         [24] 2991 	mov	b,#0x00
      000A7B 78r00            [12] 2992 	mov	r0,#_ctimer_set
      000A7D 79s00            [12] 2993 	mov	r1,#(_ctimer_set >> 8)
      000A7F 7As00            [12] 2994 	mov	r2,#(_ctimer_set >> 16)
      000A81 12r00r00         [24] 2995 	lcall	__sdcc_banked_call
      000A84 E5 81            [12] 2996 	mov	a,sp
      000A86 24 F8            [12] 2997 	add	a,#0xf8
      000A88 F5 81            [12] 2998 	mov	sp,a
      000A8A                       2999 00109$:
      000A8A E5 81            [12] 3000 	mov	a,sp
      000A8C 24 FA            [12] 3001 	add	a,#0xFA
      000A8E F5 81            [12] 3002 	mov	sp,a
      000A90 02r00r00         [24] 3003 	ljmp	__sdcc_banked_ret
                                   3004 ;------------------------------------------------------------
                                   3005 ;Allocation info for local variables in function 'neighbor_attr_set_timeout'
                                   3006 ;------------------------------------------------------------
                                   3007 ;time                      Allocated to registers r6 r7 
                                   3008 ;------------------------------------------------------------
                                   3009 ;	../../../../core/net/neighbor-attr.c:241: neighbor_attr_set_timeout(uint16_t time)
                                   3010 ;	-----------------------------------------
                                   3011 ;	 function neighbor_attr_set_timeout
                                   3012 ;	-----------------------------------------
      000A93                       3013 _neighbor_attr_set_timeout:
      000A93 AE 82            [24] 3014 	mov	r6,dpl
      000A95 AF 83            [24] 3015 	mov	r7,dph
                                   3016 ;	../../../../core/net/neighbor-attr.c:243: if(timeout == 0 && time > 0) {
      000A97 90r00r00         [24] 3017 	mov	dptr,#_timeout
      000A9A E0               [24] 3018 	movx	a,@dptr
      000A9B FC               [12] 3019 	mov	r4,a
      000A9C A3               [24] 3020 	inc	dptr
      000A9D E0               [24] 3021 	movx	a,@dptr
      000A9E FD               [12] 3022 	mov	r5,a
      000A9F 4C               [12] 3023 	orl	a,r4
      000AA0 70 3E            [24] 3024 	jnz	00105$
      000AA2 EE               [12] 3025 	mov	a,r6
      000AA3 4F               [12] 3026 	orl	a,r7
      000AA4 60 3A            [24] 3027 	jz	00105$
                                   3028 ;	../../../../core/net/neighbor-attr.c:244: ctimer_set(&ct, TIMEOUT_SECONDS * CLOCK_SECOND, timeout_check, NULL);
      000AA6 C0 07            [24] 3029 	push	ar7
      000AA8 C0 06            [24] 3030 	push	ar6
      000AAA E4               [12] 3031 	clr	a
      000AAB C0 E0            [24] 3032 	push	acc
      000AAD C0 E0            [24] 3033 	push	acc
      000AAF C0 E0            [24] 3034 	push	acc
      000AB1 74rDF            [12] 3035 	mov	a,#_timeout_check
      000AB3 C0 E0            [24] 3036 	push	acc
      000AB5 74s08            [12] 3037 	mov	a,#(_timeout_check >> 8)
      000AB7 C0 E0            [24] 3038 	push	acc
      000AB9 74s00            [12] 3039 	mov	a,#(_timeout_check >> 16)
      000ABB C0 E0            [24] 3040 	push	acc
      000ABD 74 80            [12] 3041 	mov	a,#0x80
      000ABF C0 E0            [24] 3042 	push	acc
      000AC1 74 02            [12] 3043 	mov	a,#0x02
      000AC3 C0 E0            [24] 3044 	push	acc
      000AC5 90r00rC0         [24] 3045 	mov	dptr,#_ct
      000AC8 75 F0 00         [24] 3046 	mov	b,#0x00
      000ACB 78r00            [12] 3047 	mov	r0,#_ctimer_set
      000ACD 79s00            [12] 3048 	mov	r1,#(_ctimer_set >> 8)
      000ACF 7As00            [12] 3049 	mov	r2,#(_ctimer_set >> 16)
      000AD1 12r00r00         [24] 3050 	lcall	__sdcc_banked_call
      000AD4 E5 81            [12] 3051 	mov	a,sp
      000AD6 24 F8            [12] 3052 	add	a,#0xf8
      000AD8 F5 81            [12] 3053 	mov	sp,a
      000ADA D0 06            [24] 3054 	pop	ar6
      000ADC D0 07            [24] 3055 	pop	ar7
      000ADE 80 1E            [24] 3056 	sjmp	00106$
      000AE0                       3057 00105$:
                                   3058 ;	../../../../core/net/neighbor-attr.c:245: } else if(timeout > 0 && time == 0) {
      000AE0 EC               [12] 3059 	mov	a,r4
      000AE1 4D               [12] 3060 	orl	a,r5
      000AE2 60 1A            [24] 3061 	jz	00106$
      000AE4 EE               [12] 3062 	mov	a,r6
      000AE5 4F               [12] 3063 	orl	a,r7
                                   3064 ;	../../../../core/net/neighbor-attr.c:246: ctimer_stop(&ct);
      000AE6 70 16            [24] 3065 	jnz	00106$
      000AE8 90r00rC0         [24] 3066 	mov	dptr,#_ct
      000AEB F5 F0            [12] 3067 	mov	b,a
      000AED C0 07            [24] 3068 	push	ar7
      000AEF C0 06            [24] 3069 	push	ar6
      000AF1 78r00            [12] 3070 	mov	r0,#_ctimer_stop
      000AF3 79s00            [12] 3071 	mov	r1,#(_ctimer_stop >> 8)
      000AF5 7As00            [12] 3072 	mov	r2,#(_ctimer_stop >> 16)
      000AF7 12r00r00         [24] 3073 	lcall	__sdcc_banked_call
      000AFA D0 06            [24] 3074 	pop	ar6
      000AFC D0 07            [24] 3075 	pop	ar7
      000AFE                       3076 00106$:
                                   3077 ;	../../../../core/net/neighbor-attr.c:248: timeout = time;
      000AFE 90r00r00         [24] 3078 	mov	dptr,#_timeout
      000B01 EE               [12] 3079 	mov	a,r6
      000B02 F0               [24] 3080 	movx	@dptr,a
      000B03 EF               [12] 3081 	mov	a,r7
      000B04 A3               [24] 3082 	inc	dptr
      000B05 F0               [24] 3083 	movx	@dptr,a
      000B06 02r00r00         [24] 3084 	ljmp	__sdcc_banked_ret
                                   3085 	.area CSEG    (CODE)
                                   3086 	.area CONST   (CODE)
                                   3087 	.area XINIT   (CODE)
      000000                       3088 __xinit__timeout:
      000000 00 00                 3089 	.byte #0x00,#0x00	; 0
      000002                       3090 __xinit__neighbor_addr_mem:
      000002 0F 00                 3091 	.byte #0x0F,#0x00	; 15
      000004 0C 00                 3092 	.byte #0x0C,#0x00	; 12
      000006r00s00 00              3093 	.byte _neighbor_addr_mem_memb_count,(_neighbor_addr_mem_memb_count >> 8),#0x00
      000009r0Cs00 00              3094 	.byte _neighbor_addr_mem_memb_mem,(_neighbor_addr_mem_memb_mem >> 8),#0x00
      00000C                       3095 __xinit__neighbor_addrs_list:
                                   3096 ; generic printIvalPtr
      00000C 00 00 00              3097 	.byte #0x00,#0x00,#0x00
      00000F                       3098 __xinit__neighbor_addrs:
      00000Fr0Cs00 00              3099 	.byte _neighbor_addrs_list,(_neighbor_addrs_list >> 8),#0x00
      000012                       3100 __xinit__neighbor_attrs_list:
                                   3101 ; generic printIvalPtr
      000012 00 00 00              3102 	.byte #0x00,#0x00,#0x00
      000015                       3103 __xinit__neighbor_attrs:
      000015r12s00 00              3104 	.byte _neighbor_attrs_list,(_neighbor_attrs_list >> 8),#0x00
                                   3105 	.area CABS    (ABS,CODE)
