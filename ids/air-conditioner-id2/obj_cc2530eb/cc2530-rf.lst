                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8804 (Aug  6 2013) (Linux)
                                      4 ; This file was generated Mon Aug 25 04:16:56 2014
                                      5 ;--------------------------------------------------------
                                      6 	.module cc2530_rf
                                      7 	.optsdcc -mmcs51 --model-huge
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _cc2530_rf_driver
                                     13 	.globl _packetbuf_set_attr
                                     14 	.globl _clock_delay_usec
                                     15 	.globl _ACTIVE
                                     16 	.globl _TX_BYTE
                                     17 	.globl _RX_BYTE
                                     18 	.globl _ERR
                                     19 	.globl _FE
                                     20 	.globl _SLAVE
                                     21 	.globl _RE
                                     22 	.globl _MODE
                                     23 	.globl _T3OVFIF
                                     24 	.globl _T3CH0IF
                                     25 	.globl _T3CH1IF
                                     26 	.globl _T4OVFIF
                                     27 	.globl _T4CH0IF
                                     28 	.globl _T4CH1IF
                                     29 	.globl _OVFIM
                                     30 	.globl _B_0
                                     31 	.globl _B_1
                                     32 	.globl _B_2
                                     33 	.globl _B_3
                                     34 	.globl _B_4
                                     35 	.globl _B_5
                                     36 	.globl _B_6
                                     37 	.globl _B_7
                                     38 	.globl _P2IF
                                     39 	.globl _UTX0IF
                                     40 	.globl _UTX1IF
                                     41 	.globl _P1IF
                                     42 	.globl _WDTIF
                                     43 	.globl _ACC_0
                                     44 	.globl _ACC_1
                                     45 	.globl _ACC_2
                                     46 	.globl _ACC_3
                                     47 	.globl _ACC_4
                                     48 	.globl _ACC_5
                                     49 	.globl _ACC_6
                                     50 	.globl _ACC_7
                                     51 	.globl _P
                                     52 	.globl _F1
                                     53 	.globl _OV
                                     54 	.globl _RS0
                                     55 	.globl _RS1
                                     56 	.globl _F0
                                     57 	.globl _AC
                                     58 	.globl _CY
                                     59 	.globl _DMAIF
                                     60 	.globl _T1IF
                                     61 	.globl _T2IF
                                     62 	.globl _T3IF
                                     63 	.globl _T4IF
                                     64 	.globl _P0IF
                                     65 	.globl _STIF
                                     66 	.globl _DMAIE
                                     67 	.globl _T1IE
                                     68 	.globl _T2IE
                                     69 	.globl _T3IE
                                     70 	.globl _T4IE
                                     71 	.globl _P0IE
                                     72 	.globl _RFERRIE
                                     73 	.globl _ADCIE
                                     74 	.globl _URX0IE
                                     75 	.globl _URX1IE
                                     76 	.globl _ENCIE
                                     77 	.globl _STIE
                                     78 	.globl _EA
                                     79 	.globl _P2_0
                                     80 	.globl _P2_1
                                     81 	.globl _P2_2
                                     82 	.globl _P2_3
                                     83 	.globl _P2_4
                                     84 	.globl _P2_5
                                     85 	.globl _P2_6
                                     86 	.globl _P2_7
                                     87 	.globl _ENCIF_0
                                     88 	.globl _ENCIF_1
                                     89 	.globl _P1_0
                                     90 	.globl _P1_1
                                     91 	.globl _P1_2
                                     92 	.globl _P1_3
                                     93 	.globl _P1_4
                                     94 	.globl _P1_5
                                     95 	.globl _P1_6
                                     96 	.globl _P1_7
                                     97 	.globl _IT0
                                     98 	.globl _RFERRIF
                                     99 	.globl _IT1
                                    100 	.globl _URX0IF
                                    101 	.globl _ADCIF
                                    102 	.globl _URX1IF
                                    103 	.globl _P0_0
                                    104 	.globl _P0_1
                                    105 	.globl _P0_2
                                    106 	.globl _P0_3
                                    107 	.globl _P0_4
                                    108 	.globl _P0_5
                                    109 	.globl _P0_6
                                    110 	.globl _P0_7
                                    111 	.globl _WDCTL
                                    112 	.globl _U1GCR
                                    113 	.globl _U1UCR
                                    114 	.globl _U1BAUD
                                    115 	.globl _U1DBUF
                                    116 	.globl _U1CSR
                                    117 	.globl _U0GCR
                                    118 	.globl _U0UCR
                                    119 	.globl _U0BAUD
                                    120 	.globl _U0DBUF
                                    121 	.globl _U0CSR
                                    122 	.globl _TIMIF
                                    123 	.globl _T4CC1
                                    124 	.globl _T4CCTL1
                                    125 	.globl _T4CC0
                                    126 	.globl _T4CCTL0
                                    127 	.globl _T4CTL
                                    128 	.globl _T4CNT
                                    129 	.globl _T3CC1
                                    130 	.globl _T3CCTL1
                                    131 	.globl _T3CC0
                                    132 	.globl _T3CCTL0
                                    133 	.globl _T3CTL
                                    134 	.globl _T3CNT
                                    135 	.globl _T2MSEL
                                    136 	.globl _T2IRQM
                                    137 	.globl _T2MOVF2
                                    138 	.globl _T2MOVF1
                                    139 	.globl _T2MOVF0
                                    140 	.globl _T2M1
                                    141 	.globl _T2M0
                                    142 	.globl _T2IRQF
                                    143 	.globl _T2EVTCFG
                                    144 	.globl _T2CTRL
                                    145 	.globl _T1STAT
                                    146 	.globl _T1CCTL2
                                    147 	.globl _T1CCTL1
                                    148 	.globl _T1CCTL0
                                    149 	.globl _T1CTL
                                    150 	.globl _T1CNTH
                                    151 	.globl _T1CNTL
                                    152 	.globl _T1CC2H
                                    153 	.globl _T1CC2L
                                    154 	.globl _T1CC1H
                                    155 	.globl _T1CC1L
                                    156 	.globl _T1CC0H
                                    157 	.globl _T1CC0L
                                    158 	.globl _CLKCONSTA
                                    159 	.globl _CLKCONCMD
                                    160 	.globl _SLEEPSTA
                                    161 	.globl _SLEEPCMD
                                    162 	.globl _STLOAD
                                    163 	.globl _ST2
                                    164 	.globl _ST1
                                    165 	.globl _ST0
                                    166 	.globl _RFERRF
                                    167 	.globl _RFIRQF0
                                    168 	.globl _RFST
                                    169 	.globl _RFD
                                    170 	.globl _RFIRQF1
                                    171 	.globl _PSBANK
                                    172 	.globl _FMAP
                                    173 	.globl _MEMCTR
                                    174 	.globl __XPAGE
                                    175 	.globl _MPAGE
                                    176 	.globl _PMUX
                                    177 	.globl _P2DIR
                                    178 	.globl _P1DIR
                                    179 	.globl _P0DIR
                                    180 	.globl _P2INP
                                    181 	.globl _P1INP
                                    182 	.globl _P2SEL
                                    183 	.globl _P1SEL
                                    184 	.globl _P0SEL
                                    185 	.globl _APCFG
                                    186 	.globl _PERCFG
                                    187 	.globl _P0INP
                                    188 	.globl _P2IEN
                                    189 	.globl _P1IEN
                                    190 	.globl _P0IEN
                                    191 	.globl _PICTL
                                    192 	.globl _P2IFG
                                    193 	.globl _P1IFG
                                    194 	.globl _P0IFG
                                    195 	.globl _DMAREQ
                                    196 	.globl _DMAARM
                                    197 	.globl _DMA0CFGH
                                    198 	.globl _DMA0CFGL
                                    199 	.globl _DMA1CFGH
                                    200 	.globl _DMA1CFGL
                                    201 	.globl _DMAIRQ
                                    202 	.globl _ENCCS
                                    203 	.globl _ENCDO
                                    204 	.globl _ENCDI
                                    205 	.globl _RNDH
                                    206 	.globl _RNDL
                                    207 	.globl _ADCH
                                    208 	.globl _ADCL
                                    209 	.globl _ADCCON3
                                    210 	.globl _ADCCON2
                                    211 	.globl _ADCCON1
                                    212 	.globl _B
                                    213 	.globl _IRCON2
                                    214 	.globl _ACC
                                    215 	.globl _PSW
                                    216 	.globl _IRCON
                                    217 	.globl _IP1
                                    218 	.globl _IEN1
                                    219 	.globl _IP0
                                    220 	.globl _IEN0
                                    221 	.globl _P2
                                    222 	.globl _S1CON
                                    223 	.globl _IEN2
                                    224 	.globl _S0CON
                                    225 	.globl _DPS
                                    226 	.globl _P1
                                    227 	.globl _TCON
                                    228 	.globl _PCON
                                    229 	.globl _DPH1
                                    230 	.globl _DPL1
                                    231 	.globl _DPH0
                                    232 	.globl _DPL0
                                    233 	.globl _SP
                                    234 	.globl _P0
                                    235 	.globl _X_IEEE_ADDR
                                    236 	.globl _X_INFOPAGE
                                    237 	.globl _X_P2DIR
                                    238 	.globl _X_P1DIR
                                    239 	.globl _X_P0DIR
                                    240 	.globl _X_U1GCR
                                    241 	.globl _X_U1UCR
                                    242 	.globl _X_U1BAUD
                                    243 	.globl _X_U1DBUF
                                    244 	.globl _X_U1CSR
                                    245 	.globl _X_P2INP
                                    246 	.globl _X_P1INP
                                    247 	.globl _X_P2SEL
                                    248 	.globl _X_P1SEL
                                    249 	.globl _X_P0SEL
                                    250 	.globl _X_APCFG
                                    251 	.globl _X_PERCFG
                                    252 	.globl _X_T4CC1
                                    253 	.globl _X_T4CCTL1
                                    254 	.globl _X_T4CC0
                                    255 	.globl _X_T4CCTL0
                                    256 	.globl _X_T4CTL
                                    257 	.globl _X_T4CNT
                                    258 	.globl _X_RFIRQF0
                                    259 	.globl _X_T1CCTL2
                                    260 	.globl _X_T1CCTL1
                                    261 	.globl _X_T1CCTL0
                                    262 	.globl _X_T1CTL
                                    263 	.globl _X_T1CNTH
                                    264 	.globl _X_T1CNTL
                                    265 	.globl _X_RFST
                                    266 	.globl _X_T1CC2H
                                    267 	.globl _X_T1CC2L
                                    268 	.globl _X_T1CC1H
                                    269 	.globl _X_T1CC1L
                                    270 	.globl _X_T1CC0H
                                    271 	.globl _X_T1CC0L
                                    272 	.globl _X_RFD
                                    273 	.globl _X_TIMIF
                                    274 	.globl _X_DMAREQ
                                    275 	.globl _X_DMAARM
                                    276 	.globl _X_DMA0CFGH
                                    277 	.globl _X_DMA0CFGL
                                    278 	.globl _X_DMA1CFGH
                                    279 	.globl _X_DMA1CFGL
                                    280 	.globl _X_DMAIRQ
                                    281 	.globl _X_T3CC1
                                    282 	.globl _X_T3CCTL1
                                    283 	.globl _X_T3CC0
                                    284 	.globl _X_T3CCTL0
                                    285 	.globl _X_T3CTL
                                    286 	.globl _X_T3CNT
                                    287 	.globl _X_WDCTL
                                    288 	.globl _X_MEMCTR
                                    289 	.globl _X_CLKCONCMD
                                    290 	.globl _X_U0GCR
                                    291 	.globl _X_U0UCR
                                    292 	.globl _X_T2MSEL
                                    293 	.globl _X_U0BAUD
                                    294 	.globl _X_U0DBUF
                                    295 	.globl _X_RFERRF
                                    296 	.globl _X_SLEEPCMD
                                    297 	.globl _X_RNDH
                                    298 	.globl _X_RNDL
                                    299 	.globl _X_ADCH
                                    300 	.globl _X_ADCL
                                    301 	.globl _X_ADCCON3
                                    302 	.globl _X_ADCCON2
                                    303 	.globl _X_ADCCON1
                                    304 	.globl _X_ENCCS
                                    305 	.globl _X_ENCDO
                                    306 	.globl _X_ENCDI
                                    307 	.globl _X_T1STAT
                                    308 	.globl _X_PMUX
                                    309 	.globl _X_STLOAD
                                    310 	.globl _X_P2IEN
                                    311 	.globl _X_P0IEN
                                    312 	.globl _X_T2IRQM
                                    313 	.globl _X_T2MOVF2
                                    314 	.globl _X_T2MOVF1
                                    315 	.globl _X_T2MOVF0
                                    316 	.globl _X_T2M1
                                    317 	.globl _X_T2M0
                                    318 	.globl _X_T2IRQF
                                    319 	.globl _X_P2
                                    320 	.globl _X_PSBANK
                                    321 	.globl _X_FMAP
                                    322 	.globl _X_CLKCONSTA
                                    323 	.globl _X_SLEEPSTA
                                    324 	.globl _X_T2EVTCFG
                                    325 	.globl _X_ST2
                                    326 	.globl _X_ST1
                                    327 	.globl _X_ST0
                                    328 	.globl _X_T2CTRL
                                    329 	.globl _X__XPAGE
                                    330 	.globl _X_MPAGE
                                    331 	.globl _X_RFIRQF1
                                    332 	.globl _X_P1
                                    333 	.globl _X_P0INP
                                    334 	.globl _X_P1IEN
                                    335 	.globl _X_PICTL
                                    336 	.globl _X_P2IFG
                                    337 	.globl _X_P1IFG
                                    338 	.globl _X_P0IFG
                                    339 	.globl _X_U0CSR
                                    340 	.globl _X_P0
                                    341 	.globl _USBF5
                                    342 	.globl _USBF4
                                    343 	.globl _USBF3
                                    344 	.globl _USBF2
                                    345 	.globl _USBF1
                                    346 	.globl _USBF0
                                    347 	.globl _USBCNTH
                                    348 	.globl _USBCNTL
                                    349 	.globl _USBCNT0
                                    350 	.globl _USBCSOH
                                    351 	.globl _USBCSOL
                                    352 	.globl _USBMAXO
                                    353 	.globl _USBCSIH
                                    354 	.globl _USBCSIL
                                    355 	.globl _USBCS0
                                    356 	.globl _USBMAXI
                                    357 	.globl _USBCTRL
                                    358 	.globl _USBINDEX
                                    359 	.globl _USBFRMH
                                    360 	.globl _USBFRML
                                    361 	.globl _USBCIE
                                    362 	.globl _USBOIE
                                    363 	.globl _USBIIE
                                    364 	.globl _USBCIF
                                    365 	.globl _USBOIF
                                    366 	.globl _USBIIF
                                    367 	.globl _USBPOW
                                    368 	.globl _USBADDR
                                    369 	.globl _CSPT
                                    370 	.globl _CSPZ
                                    371 	.globl _CSPY
                                    372 	.globl _CSPX
                                    373 	.globl _CSPSTAT
                                    374 	.globl _CSPCTRL
                                    375 	.globl _CSPPROG23
                                    376 	.globl _CSPPROG22
                                    377 	.globl _CSPPROG21
                                    378 	.globl _CSPPROG20
                                    379 	.globl _CSPPROG19
                                    380 	.globl _CSPPROG18
                                    381 	.globl _CSPPROG17
                                    382 	.globl _CSPPROG16
                                    383 	.globl _CSPPROG15
                                    384 	.globl _CSPPROG14
                                    385 	.globl _CSPPROG13
                                    386 	.globl _CSPPROG12
                                    387 	.globl _CSPPROG11
                                    388 	.globl _CSPPROG10
                                    389 	.globl _CSPPROG9
                                    390 	.globl _CSPPROG8
                                    391 	.globl _CSPPROG7
                                    392 	.globl _CSPPROG6
                                    393 	.globl _CSPPROG5
                                    394 	.globl _CSPPROG4
                                    395 	.globl _CSPPROG3
                                    396 	.globl _CSPPROG2
                                    397 	.globl _CSPPROG1
                                    398 	.globl _CSPPROG0
                                    399 	.globl _RFC_OBS_CTRL2
                                    400 	.globl _RFC_OBS_CTRL1
                                    401 	.globl _RFC_OBS_CTRL0
                                    402 	.globl _TXFILTCFG
                                    403 	.globl _PTEST1
                                    404 	.globl _PTEST0
                                    405 	.globl _ATEST
                                    406 	.globl _DACTEST2
                                    407 	.globl _DACTEST1
                                    408 	.globl _DACTEST0
                                    409 	.globl _MDMTEST1
                                    410 	.globl _MDMTEST0
                                    411 	.globl _ADCTEST2
                                    412 	.globl _ADCTEST1
                                    413 	.globl _ADCTEST0
                                    414 	.globl _AGCCTRL3
                                    415 	.globl _AGCCTRL2
                                    416 	.globl _AGCCTRL1
                                    417 	.globl _AGCCTRL0
                                    418 	.globl _FSCAL3
                                    419 	.globl _FSCAL2
                                    420 	.globl _FSCAL1
                                    421 	.globl _FSCAL0
                                    422 	.globl _FSCTRL
                                    423 	.globl _RXCTRL
                                    424 	.globl _FREQEST
                                    425 	.globl _MDMCTRL1
                                    426 	.globl _MDMCTRL0
                                    427 	.globl _RFRND
                                    428 	.globl _RFERRM
                                    429 	.globl _RFIRQM1
                                    430 	.globl _RFIRQM0
                                    431 	.globl _TXLAST_PTR
                                    432 	.globl _TXFIRST_PTR
                                    433 	.globl _RXP1_PTR
                                    434 	.globl _RXLAST_PTR
                                    435 	.globl _RXFIRST_PTR
                                    436 	.globl _TXFIFOCNT
                                    437 	.globl _RXFIFOCNT
                                    438 	.globl _RXFIRST
                                    439 	.globl _RSSISTAT
                                    440 	.globl _RSSI
                                    441 	.globl _CCACTRL1
                                    442 	.globl _CCACTRL0
                                    443 	.globl _FSMCTRL
                                    444 	.globl _FIFOPCTRL
                                    445 	.globl _FSMSTAT1
                                    446 	.globl _FSMSTAT0
                                    447 	.globl _TXCTRL
                                    448 	.globl _TXPOWER
                                    449 	.globl _FREQCTRL
                                    450 	.globl _FREQTUNE
                                    451 	.globl _RXMASKCLR
                                    452 	.globl _RXMASKSET
                                    453 	.globl _RXENABLE
                                    454 	.globl _FRMCTRL1
                                    455 	.globl _FRMCTRL0
                                    456 	.globl _SRCEXTEN2
                                    457 	.globl _SRCEXTEN1
                                    458 	.globl _SRCEXTEN0
                                    459 	.globl _SRCSHORTEN2
                                    460 	.globl _SRCSHORTEN1
                                    461 	.globl _SRCSHORTEN0
                                    462 	.globl _SRCMATCH
                                    463 	.globl _FRMFILT1
                                    464 	.globl _FRMFILT0
                                    465 	.globl _SHORT_ADDR1
                                    466 	.globl _SHORT_ADDR0
                                    467 	.globl _PAN_ID1
                                    468 	.globl _PAN_ID0
                                    469 	.globl _EXT_ADDR7
                                    470 	.globl _EXT_ADDR6
                                    471 	.globl _EXT_ADDR5
                                    472 	.globl _EXT_ADDR4
                                    473 	.globl _EXT_ADDR3
                                    474 	.globl _EXT_ADDR2
                                    475 	.globl _EXT_ADDR1
                                    476 	.globl _EXT_ADDR0
                                    477 	.globl _SRCSHORTPENDEN2
                                    478 	.globl _SRCSHORTPENDEN1
                                    479 	.globl _SRCSHORTPENDEN0
                                    480 	.globl _SRCEXTPENDEN2
                                    481 	.globl _SRCEXTPENDEN1
                                    482 	.globl _SRCEXTPENDEN0
                                    483 	.globl _SRCRESINDEX
                                    484 	.globl _SRCRESMASK2
                                    485 	.globl _SRCRESMASK1
                                    486 	.globl _SRCRESMASK0
                                    487 	.globl _SRC_ADDR_TABLE
                                    488 	.globl _TXFIFO
                                    489 	.globl _RXFIFO
                                    490 	.globl _RFCORE_RAM
                                    491 	.globl _CMPCTL
                                    492 	.globl _OPAMPS
                                    493 	.globl _OPAMPC
                                    494 	.globl _STCV2
                                    495 	.globl _STCV1
                                    496 	.globl _STCV0
                                    497 	.globl _STCS
                                    498 	.globl _STCC
                                    499 	.globl _T1CC4H
                                    500 	.globl _T1CC4L
                                    501 	.globl _T1CC3H
                                    502 	.globl _T1CC3L
                                    503 	.globl _XX_T1CC2H
                                    504 	.globl _XX_T1CC2L
                                    505 	.globl _XX_T1CC1H
                                    506 	.globl _XX_T1CC1L
                                    507 	.globl _XX_T1CC0H
                                    508 	.globl _XX_T1CC0L
                                    509 	.globl _T1CCTL4
                                    510 	.globl _T1CCTL3
                                    511 	.globl _XX_T1CCTL2
                                    512 	.globl _XX_T1CCTL1
                                    513 	.globl _XX_T1CCTL0
                                    514 	.globl _CLD
                                    515 	.globl _IRCTL
                                    516 	.globl _CHIPINFO1
                                    517 	.globl _CHIPINFO0
                                    518 	.globl _FWDATA
                                    519 	.globl _FADDRH
                                    520 	.globl _FADDRL
                                    521 	.globl _FCTL
                                    522 	.globl _IVCTRL
                                    523 	.globl _BATTMON
                                    524 	.globl _SRCRC
                                    525 	.globl _DBGDATA
                                    526 	.globl _TESTREG0
                                    527 	.globl _CHIPID
                                    528 	.globl _CHVER
                                    529 	.globl _OBSSEL5
                                    530 	.globl _OBSSEL4
                                    531 	.globl _OBSSEL3
                                    532 	.globl _OBSSEL2
                                    533 	.globl _OBSSEL1
                                    534 	.globl _OBSSEL0
                                    535 	.globl _I2CIO
                                    536 	.globl _I2CWC
                                    537 	.globl _I2CADDR
                                    538 	.globl _I2CDATA
                                    539 	.globl _I2CSTAT
                                    540 	.globl _I2CCFG
                                    541 	.globl _OPAMPMC
                                    542 	.globl _MONMUX
                                    543 	.globl _cc2530_rf_channel_set
                                    544 	.globl _cc2530_rf_power_set
                                    545 	.globl _cc2530_rf_set_addr
                                    546 ;--------------------------------------------------------
                                    547 ; special function registers
                                    548 ;--------------------------------------------------------
                                    549 	.area RSEG    (ABS,DATA)
      000000                        550 	.org 0x0000
                           000080   551 _P0	=	0x0080
                           000081   552 _SP	=	0x0081
                           000082   553 _DPL0	=	0x0082
                           000083   554 _DPH0	=	0x0083
                           000084   555 _DPL1	=	0x0084
                           000085   556 _DPH1	=	0x0085
                           000087   557 _PCON	=	0x0087
                           000088   558 _TCON	=	0x0088
                           000090   559 _P1	=	0x0090
                           000092   560 _DPS	=	0x0092
                           000098   561 _S0CON	=	0x0098
                           00009A   562 _IEN2	=	0x009a
                           00009B   563 _S1CON	=	0x009b
                           0000A0   564 _P2	=	0x00a0
                           0000A8   565 _IEN0	=	0x00a8
                           0000A9   566 _IP0	=	0x00a9
                           0000B8   567 _IEN1	=	0x00b8
                           0000B9   568 _IP1	=	0x00b9
                           0000C0   569 _IRCON	=	0x00c0
                           0000D0   570 _PSW	=	0x00d0
                           0000E0   571 _ACC	=	0x00e0
                           0000E8   572 _IRCON2	=	0x00e8
                           0000F0   573 _B	=	0x00f0
                           0000B4   574 _ADCCON1	=	0x00b4
                           0000B5   575 _ADCCON2	=	0x00b5
                           0000B6   576 _ADCCON3	=	0x00b6
                           0000BA   577 _ADCL	=	0x00ba
                           0000BB   578 _ADCH	=	0x00bb
                           0000BC   579 _RNDL	=	0x00bc
                           0000BD   580 _RNDH	=	0x00bd
                           0000B1   581 _ENCDI	=	0x00b1
                           0000B2   582 _ENCDO	=	0x00b2
                           0000B3   583 _ENCCS	=	0x00b3
                           0000D1   584 _DMAIRQ	=	0x00d1
                           0000D2   585 _DMA1CFGL	=	0x00d2
                           0000D3   586 _DMA1CFGH	=	0x00d3
                           0000D4   587 _DMA0CFGL	=	0x00d4
                           0000D5   588 _DMA0CFGH	=	0x00d5
                           0000D6   589 _DMAARM	=	0x00d6
                           0000D7   590 _DMAREQ	=	0x00d7
                           000089   591 _P0IFG	=	0x0089
                           00008A   592 _P1IFG	=	0x008a
                           00008B   593 _P2IFG	=	0x008b
                           00008C   594 _PICTL	=	0x008c
                           0000AB   595 _P0IEN	=	0x00ab
                           00008D   596 _P1IEN	=	0x008d
                           0000AC   597 _P2IEN	=	0x00ac
                           00008F   598 _P0INP	=	0x008f
                           0000F1   599 _PERCFG	=	0x00f1
                           0000F2   600 _APCFG	=	0x00f2
                           0000F3   601 _P0SEL	=	0x00f3
                           0000F4   602 _P1SEL	=	0x00f4
                           0000F5   603 _P2SEL	=	0x00f5
                           0000F6   604 _P1INP	=	0x00f6
                           0000F7   605 _P2INP	=	0x00f7
                           0000FD   606 _P0DIR	=	0x00fd
                           0000FE   607 _P1DIR	=	0x00fe
                           0000FF   608 _P2DIR	=	0x00ff
                           0000AE   609 _PMUX	=	0x00ae
                           000093   610 _MPAGE	=	0x0093
                           000093   611 __XPAGE	=	0x0093
                           0000C7   612 _MEMCTR	=	0x00c7
                           00009F   613 _FMAP	=	0x009f
                           00009F   614 _PSBANK	=	0x009f
                           000091   615 _RFIRQF1	=	0x0091
                           0000D9   616 _RFD	=	0x00d9
                           0000E1   617 _RFST	=	0x00e1
                           0000E9   618 _RFIRQF0	=	0x00e9
                           0000BF   619 _RFERRF	=	0x00bf
                           000095   620 _ST0	=	0x0095
                           000096   621 _ST1	=	0x0096
                           000097   622 _ST2	=	0x0097
                           0000AD   623 _STLOAD	=	0x00ad
                           0000BE   624 _SLEEPCMD	=	0x00be
                           00009D   625 _SLEEPSTA	=	0x009d
                           0000C6   626 _CLKCONCMD	=	0x00c6
                           00009E   627 _CLKCONSTA	=	0x009e
                           0000DA   628 _T1CC0L	=	0x00da
                           0000DB   629 _T1CC0H	=	0x00db
                           0000DC   630 _T1CC1L	=	0x00dc
                           0000DD   631 _T1CC1H	=	0x00dd
                           0000DE   632 _T1CC2L	=	0x00de
                           0000DF   633 _T1CC2H	=	0x00df
                           0000E2   634 _T1CNTL	=	0x00e2
                           0000E3   635 _T1CNTH	=	0x00e3
                           0000E4   636 _T1CTL	=	0x00e4
                           0000E5   637 _T1CCTL0	=	0x00e5
                           0000E6   638 _T1CCTL1	=	0x00e6
                           0000E7   639 _T1CCTL2	=	0x00e7
                           0000AF   640 _T1STAT	=	0x00af
                           000094   641 _T2CTRL	=	0x0094
                           00009C   642 _T2EVTCFG	=	0x009c
                           0000A1   643 _T2IRQF	=	0x00a1
                           0000A2   644 _T2M0	=	0x00a2
                           0000A3   645 _T2M1	=	0x00a3
                           0000A4   646 _T2MOVF0	=	0x00a4
                           0000A5   647 _T2MOVF1	=	0x00a5
                           0000A6   648 _T2MOVF2	=	0x00a6
                           0000A7   649 _T2IRQM	=	0x00a7
                           0000C3   650 _T2MSEL	=	0x00c3
                           0000CA   651 _T3CNT	=	0x00ca
                           0000CB   652 _T3CTL	=	0x00cb
                           0000CC   653 _T3CCTL0	=	0x00cc
                           0000CD   654 _T3CC0	=	0x00cd
                           0000CE   655 _T3CCTL1	=	0x00ce
                           0000CF   656 _T3CC1	=	0x00cf
                           0000EA   657 _T4CNT	=	0x00ea
                           0000EB   658 _T4CTL	=	0x00eb
                           0000EC   659 _T4CCTL0	=	0x00ec
                           0000ED   660 _T4CC0	=	0x00ed
                           0000EE   661 _T4CCTL1	=	0x00ee
                           0000EF   662 _T4CC1	=	0x00ef
                           0000D8   663 _TIMIF	=	0x00d8
                           000086   664 _U0CSR	=	0x0086
                           0000C1   665 _U0DBUF	=	0x00c1
                           0000C2   666 _U0BAUD	=	0x00c2
                           0000C4   667 _U0UCR	=	0x00c4
                           0000C5   668 _U0GCR	=	0x00c5
                           0000F8   669 _U1CSR	=	0x00f8
                           0000F9   670 _U1DBUF	=	0x00f9
                           0000FA   671 _U1BAUD	=	0x00fa
                           0000FB   672 _U1UCR	=	0x00fb
                           0000FC   673 _U1GCR	=	0x00fc
                           0000C9   674 _WDCTL	=	0x00c9
                                    675 ;--------------------------------------------------------
                                    676 ; special function bits
                                    677 ;--------------------------------------------------------
                                    678 	.area RSEG    (ABS,DATA)
      000000                        679 	.org 0x0000
                           000087   680 _P0_7	=	0x0087
                           000086   681 _P0_6	=	0x0086
                           000085   682 _P0_5	=	0x0085
                           000084   683 _P0_4	=	0x0084
                           000083   684 _P0_3	=	0x0083
                           000082   685 _P0_2	=	0x0082
                           000081   686 _P0_1	=	0x0081
                           000080   687 _P0_0	=	0x0080
                           00008F   688 _URX1IF	=	0x008f
                           00008D   689 _ADCIF	=	0x008d
                           00008B   690 _URX0IF	=	0x008b
                           00008A   691 _IT1	=	0x008a
                           000089   692 _RFERRIF	=	0x0089
                           000088   693 _IT0	=	0x0088
                           000097   694 _P1_7	=	0x0097
                           000096   695 _P1_6	=	0x0096
                           000095   696 _P1_5	=	0x0095
                           000094   697 _P1_4	=	0x0094
                           000093   698 _P1_3	=	0x0093
                           000092   699 _P1_2	=	0x0092
                           000091   700 _P1_1	=	0x0091
                           000090   701 _P1_0	=	0x0090
                           000099   702 _ENCIF_1	=	0x0099
                           000098   703 _ENCIF_0	=	0x0098
                           0000A7   704 _P2_7	=	0x00a7
                           0000A6   705 _P2_6	=	0x00a6
                           0000A5   706 _P2_5	=	0x00a5
                           0000A4   707 _P2_4	=	0x00a4
                           0000A3   708 _P2_3	=	0x00a3
                           0000A2   709 _P2_2	=	0x00a2
                           0000A1   710 _P2_1	=	0x00a1
                           0000A0   711 _P2_0	=	0x00a0
                           0000AF   712 _EA	=	0x00af
                           0000AD   713 _STIE	=	0x00ad
                           0000AC   714 _ENCIE	=	0x00ac
                           0000AB   715 _URX1IE	=	0x00ab
                           0000AA   716 _URX0IE	=	0x00aa
                           0000A9   717 _ADCIE	=	0x00a9
                           0000A8   718 _RFERRIE	=	0x00a8
                           0000BD   719 _P0IE	=	0x00bd
                           0000BC   720 _T4IE	=	0x00bc
                           0000BB   721 _T3IE	=	0x00bb
                           0000BA   722 _T2IE	=	0x00ba
                           0000B9   723 _T1IE	=	0x00b9
                           0000B8   724 _DMAIE	=	0x00b8
                           0000C7   725 _STIF	=	0x00c7
                           0000C5   726 _P0IF	=	0x00c5
                           0000C4   727 _T4IF	=	0x00c4
                           0000C3   728 _T3IF	=	0x00c3
                           0000C2   729 _T2IF	=	0x00c2
                           0000C1   730 _T1IF	=	0x00c1
                           0000C0   731 _DMAIF	=	0x00c0
                           0000D7   732 _CY	=	0x00d7
                           0000D6   733 _AC	=	0x00d6
                           0000D5   734 _F0	=	0x00d5
                           0000D4   735 _RS1	=	0x00d4
                           0000D3   736 _RS0	=	0x00d3
                           0000D2   737 _OV	=	0x00d2
                           0000D1   738 _F1	=	0x00d1
                           0000D0   739 _P	=	0x00d0
                           0000E7   740 _ACC_7	=	0x00e7
                           0000E6   741 _ACC_6	=	0x00e6
                           0000E5   742 _ACC_5	=	0x00e5
                           0000E4   743 _ACC_4	=	0x00e4
                           0000E3   744 _ACC_3	=	0x00e3
                           0000E2   745 _ACC_2	=	0x00e2
                           0000E1   746 _ACC_1	=	0x00e1
                           0000E0   747 _ACC_0	=	0x00e0
                           0000EC   748 _WDTIF	=	0x00ec
                           0000EB   749 _P1IF	=	0x00eb
                           0000EA   750 _UTX1IF	=	0x00ea
                           0000E9   751 _UTX0IF	=	0x00e9
                           0000E8   752 _P2IF	=	0x00e8
                           0000F7   753 _B_7	=	0x00f7
                           0000F6   754 _B_6	=	0x00f6
                           0000F5   755 _B_5	=	0x00f5
                           0000F4   756 _B_4	=	0x00f4
                           0000F3   757 _B_3	=	0x00f3
                           0000F2   758 _B_2	=	0x00f2
                           0000F1   759 _B_1	=	0x00f1
                           0000F0   760 _B_0	=	0x00f0
                           0000DE   761 _OVFIM	=	0x00de
                           0000DD   762 _T4CH1IF	=	0x00dd
                           0000DC   763 _T4CH0IF	=	0x00dc
                           0000DB   764 _T4OVFIF	=	0x00db
                           0000DA   765 _T3CH1IF	=	0x00da
                           0000D9   766 _T3CH0IF	=	0x00d9
                           0000D8   767 _T3OVFIF	=	0x00d8
                           0000FF   768 _MODE	=	0x00ff
                           0000FE   769 _RE	=	0x00fe
                           0000FD   770 _SLAVE	=	0x00fd
                           0000FC   771 _FE	=	0x00fc
                           0000FB   772 _ERR	=	0x00fb
                           0000FA   773 _RX_BYTE	=	0x00fa
                           0000F9   774 _TX_BYTE	=	0x00f9
                           0000F8   775 _ACTIVE	=	0x00f8
                                    776 ;--------------------------------------------------------
                                    777 ; overlayable register banks
                                    778 ;--------------------------------------------------------
                                    779 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        780 	.ds 8
                                    781 ;--------------------------------------------------------
                                    782 ; internal ram data
                                    783 ;--------------------------------------------------------
                                    784 	.area DSEG    (DATA)
      000000                        785 _rf_flags:
      000000                        786 	.ds 1
                                    787 ;--------------------------------------------------------
                                    788 ; overlayable items in internal ram 
                                    789 ;--------------------------------------------------------
                                    790 ;--------------------------------------------------------
                                    791 ; indirectly addressable internal ram data
                                    792 ;--------------------------------------------------------
                                    793 	.area ISEG    (DATA)
                                    794 ;--------------------------------------------------------
                                    795 ; absolute internal ram data
                                    796 ;--------------------------------------------------------
                                    797 	.area IABS    (ABS,DATA)
                                    798 	.area IABS    (ABS,DATA)
                                    799 ;--------------------------------------------------------
                                    800 ; bit data
                                    801 ;--------------------------------------------------------
                                    802 	.area BSEG    (BIT)
                                    803 ;--------------------------------------------------------
                                    804 ; paged external ram data
                                    805 ;--------------------------------------------------------
                                    806 	.area PSEG    (PAG,XDATA)
                                    807 ;--------------------------------------------------------
                                    808 ; external ram data
                                    809 ;--------------------------------------------------------
                                    810 	.area XSEG    (XDATA)
                           0061A6   811 _MONMUX	=	0x61a6
                           0061A6   812 _OPAMPMC	=	0x61a6
                           006230   813 _I2CCFG	=	0x6230
                           006231   814 _I2CSTAT	=	0x6231
                           006232   815 _I2CDATA	=	0x6232
                           006233   816 _I2CADDR	=	0x6233
                           006234   817 _I2CWC	=	0x6234
                           006235   818 _I2CIO	=	0x6235
                           006243   819 _OBSSEL0	=	0x6243
                           006244   820 _OBSSEL1	=	0x6244
                           006245   821 _OBSSEL2	=	0x6245
                           006246   822 _OBSSEL3	=	0x6246
                           006247   823 _OBSSEL4	=	0x6247
                           006248   824 _OBSSEL5	=	0x6248
                           006249   825 _CHVER	=	0x6249
                           00624A   826 _CHIPID	=	0x624a
                           00624B   827 _TESTREG0	=	0x624b
                           006260   828 _DBGDATA	=	0x6260
                           006262   829 _SRCRC	=	0x6262
                           006264   830 _BATTMON	=	0x6264
                           006265   831 _IVCTRL	=	0x6265
                           006270   832 _FCTL	=	0x6270
                           006271   833 _FADDRL	=	0x6271
                           006272   834 _FADDRH	=	0x6272
                           006273   835 _FWDATA	=	0x6273
                           006276   836 _CHIPINFO0	=	0x6276
                           006277   837 _CHIPINFO1	=	0x6277
                           006281   838 _IRCTL	=	0x6281
                           006290   839 _CLD	=	0x6290
                           0062A0   840 _XX_T1CCTL0	=	0x62a0
                           0062A1   841 _XX_T1CCTL1	=	0x62a1
                           0062A2   842 _XX_T1CCTL2	=	0x62a2
                           0062A3   843 _T1CCTL3	=	0x62a3
                           0062A4   844 _T1CCTL4	=	0x62a4
                           0062A6   845 _XX_T1CC0L	=	0x62a6
                           0062A7   846 _XX_T1CC0H	=	0x62a7
                           0062A8   847 _XX_T1CC1L	=	0x62a8
                           0062A9   848 _XX_T1CC1H	=	0x62a9
                           0062AA   849 _XX_T1CC2L	=	0x62aa
                           0062AB   850 _XX_T1CC2H	=	0x62ab
                           0062AC   851 _T1CC3L	=	0x62ac
                           0062AD   852 _T1CC3H	=	0x62ad
                           0062AE   853 _T1CC4L	=	0x62ae
                           0062AF   854 _T1CC4H	=	0x62af
                           0062B0   855 _STCC	=	0x62b0
                           0062B1   856 _STCS	=	0x62b1
                           0062B2   857 _STCV0	=	0x62b2
                           0062B3   858 _STCV1	=	0x62b3
                           0062B4   859 _STCV2	=	0x62b4
                           0062C0   860 _OPAMPC	=	0x62c0
                           0062C1   861 _OPAMPS	=	0x62c1
                           0062D0   862 _CMPCTL	=	0x62d0
                           006000   863 _RFCORE_RAM	=	0x6000
                           006000   864 _RXFIFO	=	0x6000
                           006080   865 _TXFIFO	=	0x6080
                           006100   866 _SRC_ADDR_TABLE	=	0x6100
                           006160   867 _SRCRESMASK0	=	0x6160
                           006161   868 _SRCRESMASK1	=	0x6161
                           006162   869 _SRCRESMASK2	=	0x6162
                           006163   870 _SRCRESINDEX	=	0x6163
                           006164   871 _SRCEXTPENDEN0	=	0x6164
                           006165   872 _SRCEXTPENDEN1	=	0x6165
                           006166   873 _SRCEXTPENDEN2	=	0x6166
                           006167   874 _SRCSHORTPENDEN0	=	0x6167
                           006168   875 _SRCSHORTPENDEN1	=	0x6168
                           006169   876 _SRCSHORTPENDEN2	=	0x6169
                           00616A   877 _EXT_ADDR0	=	0x616a
                           00616B   878 _EXT_ADDR1	=	0x616b
                           00616C   879 _EXT_ADDR2	=	0x616c
                           00616D   880 _EXT_ADDR3	=	0x616d
                           00616E   881 _EXT_ADDR4	=	0x616e
                           00616F   882 _EXT_ADDR5	=	0x616f
                           006170   883 _EXT_ADDR6	=	0x6170
                           006171   884 _EXT_ADDR7	=	0x6171
                           006172   885 _PAN_ID0	=	0x6172
                           006173   886 _PAN_ID1	=	0x6173
                           006174   887 _SHORT_ADDR0	=	0x6174
                           006175   888 _SHORT_ADDR1	=	0x6175
                           006180   889 _FRMFILT0	=	0x6180
                           006181   890 _FRMFILT1	=	0x6181
                           006182   891 _SRCMATCH	=	0x6182
                           006183   892 _SRCSHORTEN0	=	0x6183
                           006184   893 _SRCSHORTEN1	=	0x6184
                           006185   894 _SRCSHORTEN2	=	0x6185
                           006186   895 _SRCEXTEN0	=	0x6186
                           006187   896 _SRCEXTEN1	=	0x6187
                           006188   897 _SRCEXTEN2	=	0x6188
                           006189   898 _FRMCTRL0	=	0x6189
                           00618A   899 _FRMCTRL1	=	0x618a
                           00618B   900 _RXENABLE	=	0x618b
                           00618C   901 _RXMASKSET	=	0x618c
                           00618D   902 _RXMASKCLR	=	0x618d
                           00618E   903 _FREQTUNE	=	0x618e
                           00618F   904 _FREQCTRL	=	0x618f
                           006190   905 _TXPOWER	=	0x6190
                           006191   906 _TXCTRL	=	0x6191
                           006192   907 _FSMSTAT0	=	0x6192
                           006193   908 _FSMSTAT1	=	0x6193
                           006194   909 _FIFOPCTRL	=	0x6194
                           006195   910 _FSMCTRL	=	0x6195
                           006196   911 _CCACTRL0	=	0x6196
                           006197   912 _CCACTRL1	=	0x6197
                           006198   913 _RSSI	=	0x6198
                           006199   914 _RSSISTAT	=	0x6199
                           00619A   915 _RXFIRST	=	0x619a
                           00619B   916 _RXFIFOCNT	=	0x619b
                           00619C   917 _TXFIFOCNT	=	0x619c
                           00619D   918 _RXFIRST_PTR	=	0x619d
                           00619E   919 _RXLAST_PTR	=	0x619e
                           00619F   920 _RXP1_PTR	=	0x619f
                           0061A1   921 _TXFIRST_PTR	=	0x61a1
                           0061A2   922 _TXLAST_PTR	=	0x61a2
                           0061A3   923 _RFIRQM0	=	0x61a3
                           0061A4   924 _RFIRQM1	=	0x61a4
                           0061A5   925 _RFERRM	=	0x61a5
                           0061A7   926 _RFRND	=	0x61a7
                           0061A8   927 _MDMCTRL0	=	0x61a8
                           0061A9   928 _MDMCTRL1	=	0x61a9
                           0061AA   929 _FREQEST	=	0x61aa
                           0061AB   930 _RXCTRL	=	0x61ab
                           0061AC   931 _FSCTRL	=	0x61ac
                           0061AD   932 _FSCAL0	=	0x61ad
                           0061AE   933 _FSCAL1	=	0x61ae
                           0061AF   934 _FSCAL2	=	0x61af
                           0061B0   935 _FSCAL3	=	0x61b0
                           0061B1   936 _AGCCTRL0	=	0x61b1
                           0061B2   937 _AGCCTRL1	=	0x61b2
                           0061B3   938 _AGCCTRL2	=	0x61b3
                           0061B4   939 _AGCCTRL3	=	0x61b4
                           0061B5   940 _ADCTEST0	=	0x61b5
                           0061B6   941 _ADCTEST1	=	0x61b6
                           0061B7   942 _ADCTEST2	=	0x61b7
                           0061B8   943 _MDMTEST0	=	0x61b8
                           0061B9   944 _MDMTEST1	=	0x61b9
                           0061BA   945 _DACTEST0	=	0x61ba
                           0061BB   946 _DACTEST1	=	0x61bb
                           0061BC   947 _DACTEST2	=	0x61bc
                           0061BD   948 _ATEST	=	0x61bd
                           0061BE   949 _PTEST0	=	0x61be
                           0061BF   950 _PTEST1	=	0x61bf
                           0061FA   951 _TXFILTCFG	=	0x61fa
                           0061EB   952 _RFC_OBS_CTRL0	=	0x61eb
                           0061EC   953 _RFC_OBS_CTRL1	=	0x61ec
                           0061ED   954 _RFC_OBS_CTRL2	=	0x61ed
                           0061C0   955 _CSPPROG0	=	0x61c0
                           0061C1   956 _CSPPROG1	=	0x61c1
                           0061C2   957 _CSPPROG2	=	0x61c2
                           0061C3   958 _CSPPROG3	=	0x61c3
                           0061C4   959 _CSPPROG4	=	0x61c4
                           0061C5   960 _CSPPROG5	=	0x61c5
                           0061C6   961 _CSPPROG6	=	0x61c6
                           0061C7   962 _CSPPROG7	=	0x61c7
                           0061C8   963 _CSPPROG8	=	0x61c8
                           0061C9   964 _CSPPROG9	=	0x61c9
                           0061CA   965 _CSPPROG10	=	0x61ca
                           0061CB   966 _CSPPROG11	=	0x61cb
                           0061CC   967 _CSPPROG12	=	0x61cc
                           0061CD   968 _CSPPROG13	=	0x61cd
                           0061CE   969 _CSPPROG14	=	0x61ce
                           0061CF   970 _CSPPROG15	=	0x61cf
                           0061D0   971 _CSPPROG16	=	0x61d0
                           0061D1   972 _CSPPROG17	=	0x61d1
                           0061D2   973 _CSPPROG18	=	0x61d2
                           0061D3   974 _CSPPROG19	=	0x61d3
                           0061D4   975 _CSPPROG20	=	0x61d4
                           0061D5   976 _CSPPROG21	=	0x61d5
                           0061D6   977 _CSPPROG22	=	0x61d6
                           0061D7   978 _CSPPROG23	=	0x61d7
                           0061E0   979 _CSPCTRL	=	0x61e0
                           0061E1   980 _CSPSTAT	=	0x61e1
                           0061E2   981 _CSPX	=	0x61e2
                           0061E3   982 _CSPY	=	0x61e3
                           0061E4   983 _CSPZ	=	0x61e4
                           0061E5   984 _CSPT	=	0x61e5
                           006200   985 _USBADDR	=	0x6200
                           006201   986 _USBPOW	=	0x6201
                           006202   987 _USBIIF	=	0x6202
                           006204   988 _USBOIF	=	0x6204
                           006206   989 _USBCIF	=	0x6206
                           006207   990 _USBIIE	=	0x6207
                           006209   991 _USBOIE	=	0x6209
                           00620B   992 _USBCIE	=	0x620b
                           00620C   993 _USBFRML	=	0x620c
                           00620D   994 _USBFRMH	=	0x620d
                           00620E   995 _USBINDEX	=	0x620e
                           00620F   996 _USBCTRL	=	0x620f
                           006210   997 _USBMAXI	=	0x6210
                           006211   998 _USBCS0	=	0x6211
                           006211   999 _USBCSIL	=	0x6211
                           006212  1000 _USBCSIH	=	0x6212
                           006213  1001 _USBMAXO	=	0x6213
                           006214  1002 _USBCSOL	=	0x6214
                           006215  1003 _USBCSOH	=	0x6215
                           006216  1004 _USBCNT0	=	0x6216
                           006216  1005 _USBCNTL	=	0x6216
                           006217  1006 _USBCNTH	=	0x6217
                           006220  1007 _USBF0	=	0x6220
                           006222  1008 _USBF1	=	0x6222
                           006224  1009 _USBF2	=	0x6224
                           006226  1010 _USBF3	=	0x6226
                           006228  1011 _USBF4	=	0x6228
                           00622A  1012 _USBF5	=	0x622a
                           007080  1013 _X_P0	=	0x7080
                           007086  1014 _X_U0CSR	=	0x7086
                           007089  1015 _X_P0IFG	=	0x7089
                           00708A  1016 _X_P1IFG	=	0x708a
                           00708B  1017 _X_P2IFG	=	0x708b
                           00708C  1018 _X_PICTL	=	0x708c
                           00708D  1019 _X_P1IEN	=	0x708d
                           00708F  1020 _X_P0INP	=	0x708f
                           007090  1021 _X_P1	=	0x7090
                           007091  1022 _X_RFIRQF1	=	0x7091
                           007093  1023 _X_MPAGE	=	0x7093
                           007093  1024 _X__XPAGE	=	0x7093
                           007094  1025 _X_T2CTRL	=	0x7094
                           007095  1026 _X_ST0	=	0x7095
                           007096  1027 _X_ST1	=	0x7096
                           007097  1028 _X_ST2	=	0x7097
                           00709C  1029 _X_T2EVTCFG	=	0x709c
                           00709D  1030 _X_SLEEPSTA	=	0x709d
                           00709E  1031 _X_CLKCONSTA	=	0x709e
                           00709F  1032 _X_FMAP	=	0x709f
                           00709F  1033 _X_PSBANK	=	0x709f
                           0070A0  1034 _X_P2	=	0x70a0
                           0070A1  1035 _X_T2IRQF	=	0x70a1
                           0070A2  1036 _X_T2M0	=	0x70a2
                           0070A3  1037 _X_T2M1	=	0x70a3
                           0070A4  1038 _X_T2MOVF0	=	0x70a4
                           0070A5  1039 _X_T2MOVF1	=	0x70a5
                           0070A6  1040 _X_T2MOVF2	=	0x70a6
                           0070A7  1041 _X_T2IRQM	=	0x70a7
                           0070AB  1042 _X_P0IEN	=	0x70ab
                           0070AC  1043 _X_P2IEN	=	0x70ac
                           0070AD  1044 _X_STLOAD	=	0x70ad
                           0070AE  1045 _X_PMUX	=	0x70ae
                           0070AF  1046 _X_T1STAT	=	0x70af
                           0070B1  1047 _X_ENCDI	=	0x70b1
                           0070B2  1048 _X_ENCDO	=	0x70b2
                           0070B3  1049 _X_ENCCS	=	0x70b3
                           0070B4  1050 _X_ADCCON1	=	0x70b4
                           0070B5  1051 _X_ADCCON2	=	0x70b5
                           0070B6  1052 _X_ADCCON3	=	0x70b6
                           0070BA  1053 _X_ADCL	=	0x70ba
                           0070BB  1054 _X_ADCH	=	0x70bb
                           0070BC  1055 _X_RNDL	=	0x70bc
                           0070BD  1056 _X_RNDH	=	0x70bd
                           0070BE  1057 _X_SLEEPCMD	=	0x70be
                           0070BF  1058 _X_RFERRF	=	0x70bf
                           0070C1  1059 _X_U0DBUF	=	0x70c1
                           0070C2  1060 _X_U0BAUD	=	0x70c2
                           0070C3  1061 _X_T2MSEL	=	0x70c3
                           0070C4  1062 _X_U0UCR	=	0x70c4
                           0070C5  1063 _X_U0GCR	=	0x70c5
                           0070C6  1064 _X_CLKCONCMD	=	0x70c6
                           0070C7  1065 _X_MEMCTR	=	0x70c7
                           0070C9  1066 _X_WDCTL	=	0x70c9
                           0070CA  1067 _X_T3CNT	=	0x70ca
                           0070CB  1068 _X_T3CTL	=	0x70cb
                           0070CC  1069 _X_T3CCTL0	=	0x70cc
                           0070CD  1070 _X_T3CC0	=	0x70cd
                           0070CE  1071 _X_T3CCTL1	=	0x70ce
                           0070CF  1072 _X_T3CC1	=	0x70cf
                           0070D1  1073 _X_DMAIRQ	=	0x70d1
                           0070D2  1074 _X_DMA1CFGL	=	0x70d2
                           0070D3  1075 _X_DMA1CFGH	=	0x70d3
                           0070D4  1076 _X_DMA0CFGL	=	0x70d4
                           0070D5  1077 _X_DMA0CFGH	=	0x70d5
                           0070D6  1078 _X_DMAARM	=	0x70d6
                           0070D7  1079 _X_DMAREQ	=	0x70d7
                           0070D8  1080 _X_TIMIF	=	0x70d8
                           0070D9  1081 _X_RFD	=	0x70d9
                           0070DA  1082 _X_T1CC0L	=	0x70da
                           0070DB  1083 _X_T1CC0H	=	0x70db
                           0070DC  1084 _X_T1CC1L	=	0x70dc
                           0070DD  1085 _X_T1CC1H	=	0x70dd
                           0070DE  1086 _X_T1CC2L	=	0x70de
                           0070DF  1087 _X_T1CC2H	=	0x70df
                           0070E1  1088 _X_RFST	=	0x70e1
                           0070E2  1089 _X_T1CNTL	=	0x70e2
                           0070E3  1090 _X_T1CNTH	=	0x70e3
                           0070E4  1091 _X_T1CTL	=	0x70e4
                           0070E5  1092 _X_T1CCTL0	=	0x70e5
                           0070E6  1093 _X_T1CCTL1	=	0x70e6
                           0070E7  1094 _X_T1CCTL2	=	0x70e7
                           0070E9  1095 _X_RFIRQF0	=	0x70e9
                           0070EA  1096 _X_T4CNT	=	0x70ea
                           0070EB  1097 _X_T4CTL	=	0x70eb
                           0070EC  1098 _X_T4CCTL0	=	0x70ec
                           0070ED  1099 _X_T4CC0	=	0x70ed
                           0070EE  1100 _X_T4CCTL1	=	0x70ee
                           0070EF  1101 _X_T4CC1	=	0x70ef
                           0070F1  1102 _X_PERCFG	=	0x70f1
                           0070F2  1103 _X_APCFG	=	0x70f2
                           0070F3  1104 _X_P0SEL	=	0x70f3
                           0070F4  1105 _X_P1SEL	=	0x70f4
                           0070F5  1106 _X_P2SEL	=	0x70f5
                           0070F6  1107 _X_P1INP	=	0x70f6
                           0070F7  1108 _X_P2INP	=	0x70f7
                           0070F8  1109 _X_U1CSR	=	0x70f8
                           0070F9  1110 _X_U1DBUF	=	0x70f9
                           0070FA  1111 _X_U1BAUD	=	0x70fa
                           0070FB  1112 _X_U1UCR	=	0x70fb
                           0070FC  1113 _X_U1GCR	=	0x70fc
                           0070FD  1114 _X_P0DIR	=	0x70fd
                           0070FE  1115 _X_P1DIR	=	0x70fe
                           0070FF  1116 _X_P2DIR	=	0x70ff
                           007800  1117 _X_INFOPAGE	=	0x7800
                           00780C  1118 _X_IEEE_ADDR	=	0x780c
                                   1119 ;--------------------------------------------------------
                                   1120 ; absolute external ram data
                                   1121 ;--------------------------------------------------------
                                   1122 	.area XABS    (ABS,XDATA)
                                   1123 ;--------------------------------------------------------
                                   1124 ; external initialized ram data
                                   1125 ;--------------------------------------------------------
                                   1126 	.area XISEG   (XDATA)
                                   1127 	.area HOME    (CODE)
                                   1128 	.area GSINIT0 (CODE)
                                   1129 	.area GSINIT1 (CODE)
                                   1130 	.area GSINIT2 (CODE)
                                   1131 	.area GSINIT3 (CODE)
                                   1132 	.area GSINIT4 (CODE)
                                   1133 	.area GSINIT5 (CODE)
                                   1134 	.area GSINIT  (CODE)
                                   1135 	.area GSFINAL (CODE)
                                   1136 	.area CSEG    (CODE)
                                   1137 ;--------------------------------------------------------
                                   1138 ; global & static initialisations
                                   1139 ;--------------------------------------------------------
                                   1140 	.area HOME    (CODE)
                                   1141 	.area GSINIT  (CODE)
                                   1142 	.area GSFINAL (CODE)
                                   1143 	.area GSINIT  (CODE)
                                   1144 ;--------------------------------------------------------
                                   1145 ; Home
                                   1146 ;--------------------------------------------------------
                                   1147 	.area HOME    (CODE)
                                   1148 	.area HOME    (CODE)
                                   1149 ;--------------------------------------------------------
                                   1150 ; code
                                   1151 ;--------------------------------------------------------
                                   1152 	.area BANK1   (CODE)
                                   1153 ;------------------------------------------------------------
                                   1154 ;Allocation info for local variables in function 'cc2530_rf_channel_set'
                                   1155 ;------------------------------------------------------------
                                   1156 ;channel                   Allocated to registers r7 
                                   1157 ;------------------------------------------------------------
                                   1158 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:118: cc2530_rf_channel_set(uint8_t channel)
                                   1159 ;	-----------------------------------------
                                   1160 ;	 function cc2530_rf_channel_set
                                   1161 ;	-----------------------------------------
      000000                       1162 _cc2530_rf_channel_set:
                           000007  1163 	ar7 = 0x07
                           000006  1164 	ar6 = 0x06
                           000005  1165 	ar5 = 0x05
                           000004  1166 	ar4 = 0x04
                           000003  1167 	ar3 = 0x03
                           000002  1168 	ar2 = 0x02
                           000001  1169 	ar1 = 0x01
                           000000  1170 	ar0 = 0x00
      000000 AF 82            [24] 1171 	mov	r7,dpl
                                   1172 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:122: if((channel < CC2530_RF_CHANNEL_MIN) || (channel > CC2530_RF_CHANNEL_MAX)) {
      000002 BF 0B 00         [24] 1173 	cjne	r7,#0x0B,00109$
      000005                       1174 00109$:
      000005 40 05            [24] 1175 	jc	00101$
      000007 EF               [12] 1176 	mov	a,r7
      000008 24 E5            [12] 1177 	add	a,#0xff - 0x1A
      00000A 50 05            [24] 1178 	jnc	00102$
      00000C                       1179 00101$:
                                   1180 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:123: return -1;
      00000C 75 82 FF         [24] 1181 	mov	dpl,#0xFF
      00000F 80 29            [24] 1182 	sjmp	00104$
      000011                       1183 00102$:
                                   1184 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:127: off();
      000011 C0 07            [24] 1185 	push	ar7
      000013 78r10            [12] 1186 	mov	r0,#_off
      000015 79s05            [12] 1187 	mov	r1,#(_off >> 8)
      000017 7As00            [12] 1188 	mov	r2,#(_off >> 16)
      000019 12r00r00         [24] 1189 	lcall	__sdcc_banked_call
      00001C D0 07            [24] 1190 	pop	ar7
                                   1191 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:129: + (channel - CC2530_RF_CHANNEL_MIN) * CC2530_RF_CHANNEL_SPACING);
      00001E EF               [12] 1192 	mov	a,r7
      00001F 24 F5            [12] 1193 	add	a,#0xF5
      000021 75 F0 05         [24] 1194 	mov	b,#0x05
      000024 A4               [48] 1195 	mul	ab
      000025 90 61 8F         [24] 1196 	mov	dptr,#_FREQCTRL
      000028 24 0B            [12] 1197 	add	a,#0x0B
      00002A F0               [24] 1198 	movx	@dptr,a
                                   1199 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:130: on();
      00002B C0 07            [24] 1200 	push	ar7
      00002D 78rF9            [12] 1201 	mov	r0,#_on
      00002F 79s04            [12] 1202 	mov	r1,#(_on >> 8)
      000031 7As00            [12] 1203 	mov	r2,#(_on >> 16)
      000033 12r00r00         [24] 1204 	lcall	__sdcc_banked_call
      000036 D0 07            [24] 1205 	pop	ar7
                                   1206 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:132: return (int8_t) channel;
      000038 8F 82            [24] 1207 	mov	dpl,r7
      00003A                       1208 00104$:
      00003A 02r00r00         [24] 1209 	ljmp	__sdcc_banked_ret
                                   1210 ;------------------------------------------------------------
                                   1211 ;Allocation info for local variables in function 'cc2530_rf_power_set'
                                   1212 ;------------------------------------------------------------
                                   1213 ;new_power                 Allocated to registers 
                                   1214 ;------------------------------------------------------------
                                   1215 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:136: cc2530_rf_power_set(uint8_t new_power)
                                   1216 ;	-----------------------------------------
                                   1217 ;	 function cc2530_rf_power_set
                                   1218 ;	-----------------------------------------
      00003D                       1219 _cc2530_rf_power_set:
      00003D E5 82            [12] 1220 	mov	a,dpl
      00003F 90 61 90         [24] 1221 	mov	dptr,#_TXPOWER
      000042 F0               [24] 1222 	movx	@dptr,a
                                   1223 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:143: return TXPOWER;
      000043 90 61 90         [24] 1224 	mov	dptr,#_TXPOWER
      000046 E0               [24] 1225 	movx	a,@dptr
      000047 FF               [12] 1226 	mov	r7,a
      000048 F5 82            [12] 1227 	mov	dpl,a
      00004A 02r00r00         [24] 1228 	ljmp	__sdcc_banked_ret
                                   1229 ;------------------------------------------------------------
                                   1230 ;Allocation info for local variables in function 'cc2530_rf_set_addr'
                                   1231 ;------------------------------------------------------------
                                   1232 ;pan                       Allocated to registers r6 r7 
                                   1233 ;i                         Allocated to registers r4 r5 
                                   1234 ;------------------------------------------------------------
                                   1235 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:147: cc2530_rf_set_addr(uint16_t pan)
                                   1236 ;	-----------------------------------------
                                   1237 ;	 function cc2530_rf_set_addr
                                   1238 ;	-----------------------------------------
      00004D                       1239 _cc2530_rf_set_addr:
      00004D AE 82            [24] 1240 	mov	r6,dpl
      00004F AF 83            [24] 1241 	mov	r7,dph
                                   1242 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:151: for(i = (RIMEADDR_SIZE - 1); i >= 0; --i) {
      000051 7C 07            [12] 1243 	mov	r4,#0x07
      000053 7D 00            [12] 1244 	mov	r5,#0x00
      000055                       1245 00102$:
                                   1246 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:152: ((uint8_t *)&EXT_ADDR0)[i] = rimeaddr_node_addr.u8[RIMEADDR_SIZE - 1 - i];
      000055 EC               [12] 1247 	mov	a,r4
      000056 24 6A            [12] 1248 	add	a,#_EXT_ADDR0
      000058 FA               [12] 1249 	mov	r2,a
      000059 ED               [12] 1250 	mov	a,r5
      00005A 34 61            [12] 1251 	addc	a,#(_EXT_ADDR0 >> 8)
      00005C FB               [12] 1252 	mov	r3,a
      00005D 8C 01            [24] 1253 	mov	ar1,r4
      00005F 74 07            [12] 1254 	mov	a,#0x07
      000061 C3               [12] 1255 	clr	c
      000062 99               [12] 1256 	subb	a,r1
      000063 24r00            [12] 1257 	add	a,#_rimeaddr_node_addr
      000065 F5 82            [12] 1258 	mov	dpl,a
      000067 E4               [12] 1259 	clr	a
      000068 34s00            [12] 1260 	addc	a,#(_rimeaddr_node_addr >> 8)
      00006A F5 83            [12] 1261 	mov	dph,a
      00006C E0               [24] 1262 	movx	a,@dptr
      00006D F9               [12] 1263 	mov	r1,a
      00006E 8A 82            [24] 1264 	mov	dpl,r2
      000070 8B 83            [24] 1265 	mov	dph,r3
      000072 F0               [24] 1266 	movx	@dptr,a
                                   1267 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:151: for(i = (RIMEADDR_SIZE - 1); i >= 0; --i) {
      000073 1C               [12] 1268 	dec	r4
      000074 BC FF 01         [24] 1269 	cjne	r4,#0xFF,00113$
      000077 1D               [12] 1270 	dec	r5
      000078                       1271 00113$:
      000078 ED               [12] 1272 	mov	a,r5
      000079 30 E7 D9         [24] 1273 	jnb	acc.7,00102$
                                   1274 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:156: PAN_ID0 = pan & 0xFF;
      00007C 8E 04            [24] 1275 	mov	ar4,r6
      00007E 7D 00            [12] 1276 	mov	r5,#0x00
      000080 90 61 72         [24] 1277 	mov	dptr,#_PAN_ID0
      000083 EC               [12] 1278 	mov	a,r4
      000084 F0               [24] 1279 	movx	@dptr,a
                                   1280 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:157: PAN_ID1 = pan >> 8;
      000085 90 61 73         [24] 1281 	mov	dptr,#_PAN_ID1
      000088 EF               [12] 1282 	mov	a,r7
      000089 F0               [24] 1283 	movx	@dptr,a
                                   1284 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:159: SHORT_ADDR0 = rimeaddr_node_addr.u8[RIMEADDR_SIZE - 1];
      00008A 90r00r07         [24] 1285 	mov	dptr,#(_rimeaddr_node_addr + 0x0007)
      00008D E0               [24] 1286 	movx	a,@dptr
      00008E 90 61 74         [24] 1287 	mov	dptr,#_SHORT_ADDR0
      000091 F0               [24] 1288 	movx	@dptr,a
                                   1289 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:160: SHORT_ADDR1 = rimeaddr_node_addr.u8[RIMEADDR_SIZE - 2];
      000092 90r00r06         [24] 1290 	mov	dptr,#(_rimeaddr_node_addr + 0x0006)
      000095 E0               [24] 1291 	movx	a,@dptr
      000096 FF               [12] 1292 	mov	r7,a
      000097 90 61 75         [24] 1293 	mov	dptr,#_SHORT_ADDR1
      00009A F0               [24] 1294 	movx	@dptr,a
      00009B 02r00r00         [24] 1295 	ljmp	__sdcc_banked_ret
                                   1296 ;------------------------------------------------------------
                                   1297 ;Allocation info for local variables in function 'init'
                                   1298 ;------------------------------------------------------------
                                   1299 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:166: init(void)
                                   1300 ;	-----------------------------------------
                                   1301 ;	 function init
                                   1302 ;	-----------------------------------------
      00009E                       1303 _init:
                                   1304 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:170: if(rf_flags & RF_ON) {
      00009E E5*00            [12] 1305 	mov	a,_rf_flags
      0000A0 30 E0 05         [24] 1306 	jnb	acc.0,00102$
                                   1307 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:171: return 0;
      0000A3 90 00 00         [24] 1308 	mov	dptr,#0x0000
      0000A6 80 5B            [24] 1309 	sjmp	00103$
      0000A8                       1310 00102$:
                                   1311 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:179: RXCTRL = 0x3F;
      0000A8 90 61 AB         [24] 1312 	mov	dptr,#_RXCTRL
      0000AB 74 3F            [12] 1313 	mov	a,#0x3F
      0000AD F0               [24] 1314 	movx	@dptr,a
                                   1315 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:180: FSCTRL = 0x55;
      0000AE 90 61 AC         [24] 1316 	mov	dptr,#_FSCTRL
      0000B1 74 55            [12] 1317 	mov	a,#0x55
      0000B3 F0               [24] 1318 	movx	@dptr,a
                                   1319 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:183: CCACTRL0 = CC2530_RF_CCA_THRES;
      0000B4 90 61 96         [24] 1320 	mov	dptr,#_CCACTRL0
      0000B7 74 F8            [12] 1321 	mov	a,#0xF8
      0000B9 F0               [24] 1322 	movx	@dptr,a
                                   1323 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:191: TXFILTCFG = 0x09; /* TX anti-aliasing filter */
      0000BA 90 61 FA         [24] 1324 	mov	dptr,#_TXFILTCFG
      0000BD 74 09            [12] 1325 	mov	a,#0x09
      0000BF F0               [24] 1326 	movx	@dptr,a
                                   1327 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:192: AGCCTRL1 = 0x15;  /* AGC target value */
      0000C0 90 61 B2         [24] 1328 	mov	dptr,#_AGCCTRL1
      0000C3 74 15            [12] 1329 	mov	a,#0x15
      0000C5 F0               [24] 1330 	movx	@dptr,a
                                   1331 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:193: FSCAL1 = 0x00;    /* Reduce the VCO leakage */
      0000C6 90 61 AE         [24] 1332 	mov	dptr,#_FSCAL1
      0000C9 E4               [12] 1333 	clr	a
      0000CA F0               [24] 1334 	movx	@dptr,a
                                   1335 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:196: FRMCTRL0 = FRMCTRL0_AUTOCRC;
                                   1336 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:198: FRMCTRL0 |= FRMCTRL0_AUTOACK;
      0000CB 90 61 89         [24] 1337 	mov	dptr,#_FRMCTRL0
      0000CE 74 40            [12] 1338 	mov	a,#0x40
      0000D0 F0               [24] 1339 	movx	@dptr,a
      0000D1 E0               [24] 1340 	movx	a,@dptr
      0000D2 FF               [12] 1341 	mov	r7,a
      0000D3 90 61 89         [24] 1342 	mov	dptr,#_FRMCTRL0
      0000D6 74 20            [12] 1343 	mov	a,#0x20
      0000D8 4F               [12] 1344 	orl	a,r7
      0000D9 F0               [24] 1345 	movx	@dptr,a
                                   1346 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:202: SRCMATCH = 0; /* investigate */
      0000DA 90 61 82         [24] 1347 	mov	dptr,#_SRCMATCH
      0000DD E4               [12] 1348 	clr	a
      0000DE F0               [24] 1349 	movx	@dptr,a
                                   1350 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:205: FIFOPCTRL = CC2530_RF_MAX_PACKET_LEN;
      0000DF 90 61 94         [24] 1351 	mov	dptr,#_FIFOPCTRL
      0000E2 74 7F            [12] 1352 	mov	a,#0x7F
      0000E4 F0               [24] 1353 	movx	@dptr,a
                                   1354 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:207: cc2530_rf_power_set(CC2530_RF_TX_POWER);
      0000E5 75 82 D5         [24] 1355 	mov	dpl,#0xD5
      0000E8 78r3D            [12] 1356 	mov	r0,#_cc2530_rf_power_set
      0000EA 79s00            [12] 1357 	mov	r1,#(_cc2530_rf_power_set >> 8)
      0000EC 7As00            [12] 1358 	mov	r2,#(_cc2530_rf_power_set >> 16)
      0000EE 12r00r00         [24] 1359 	lcall	__sdcc_banked_call
                                   1360 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:208: cc2530_rf_channel_set(CC2530_RF_CHANNEL);
      0000F1 75 82 19         [24] 1361 	mov	dpl,#0x19
      0000F4 78r00            [12] 1362 	mov	r0,#_cc2530_rf_channel_set
      0000F6 79s00            [12] 1363 	mov	r1,#(_cc2530_rf_channel_set >> 8)
      0000F8 7As00            [12] 1364 	mov	r2,#(_cc2530_rf_channel_set >> 16)
      0000FA 12r00r00         [24] 1365 	lcall	__sdcc_banked_call
                                   1366 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:213: rf_flags |= RF_ON;
      0000FD 43*00 01         [24] 1367 	orl	_rf_flags,#0x01
                                   1368 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:215: return 1;
      000100 90 00 01         [24] 1369 	mov	dptr,#0x0001
      000103                       1370 00103$:
      000103 02r00r00         [24] 1371 	ljmp	__sdcc_banked_ret
                                   1372 ;------------------------------------------------------------
                                   1373 ;Allocation info for local variables in function 'prepare'
                                   1374 ;------------------------------------------------------------
                                   1375 ;payload_len               Allocated to stack - sp -7
                                   1376 ;payload                   Allocated to stack - sp -2
                                   1377 ;i                         Allocated to registers r4 
                                   1378 ;------------------------------------------------------------
                                   1379 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:219: prepare(const void *payload, unsigned short payload_len)
                                   1380 ;	-----------------------------------------
                                   1381 ;	 function prepare
                                   1382 ;	-----------------------------------------
      000106                       1383 _prepare:
      000106 C0 82            [24] 1384 	push	dpl
      000108 C0 83            [24] 1385 	push	dph
      00010A C0 F0            [24] 1386 	push	b
                                   1387 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:231: while(FSMSTAT1 & FSMSTAT1_TX_ACTIVE);
      00010C                       1388 00101$:
      00010C 90 61 93         [24] 1389 	mov	dptr,#_FSMSTAT1
      00010F E0               [24] 1390 	movx	a,@dptr
      000110 FC               [12] 1391 	mov	r4,a
      000111 20 E1 F8         [24] 1392 	jb	acc.1,00101$
                                   1393 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:233: if((rf_flags & RX_ACTIVE) == 0) {
      000114 E5*00            [12] 1394 	mov	a,_rf_flags
      000116 20 E7 09         [24] 1395 	jb	acc.7,00106$
                                   1396 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:234: on();
      000119 78rF9            [12] 1397 	mov	r0,#_on
      00011B 79s04            [12] 1398 	mov	r1,#(_on >> 8)
      00011D 7As00            [12] 1399 	mov	r2,#(_on >> 16)
      00011F 12r00r00         [24] 1400 	lcall	__sdcc_banked_call
                                   1401 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:237: CC2530_CSP_ISFLUSHTX();
      000122                       1402 00106$:
      000122 75 E1 EE         [24] 1403 	mov	_RFST,#0xEE
      000125 75 E1 EE         [24] 1404 	mov	_RFST,#0xEE
                                   1405 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:241: RFD = payload_len + CHECKSUM_LEN; /* Payload plus FCS */
      000128 E5 81            [12] 1406 	mov	a,sp
      00012A 24 F9            [12] 1407 	add	a,#0xf9
      00012C F8               [12] 1408 	mov	r0,a
      00012D 86 04            [24] 1409 	mov	ar4,@r0
      00012F 74 02            [12] 1410 	mov	a,#0x02
      000131 2C               [12] 1411 	add	a,r4
      000132 F5 D9            [12] 1412 	mov	_RFD,a
                                   1413 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:242: for(i = 0; i < payload_len; i++) {
      000134 7C 00            [12] 1414 	mov	r4,#0x00
      000136                       1415 00111$:
      000136 8C 02            [24] 1416 	mov	ar2,r4
      000138 7B 00            [12] 1417 	mov	r3,#0x00
      00013A E5 81            [12] 1418 	mov	a,sp
      00013C 24 F9            [12] 1419 	add	a,#0xf9
      00013E F8               [12] 1420 	mov	r0,a
      00013F C3               [12] 1421 	clr	c
      000140 EA               [12] 1422 	mov	a,r2
      000141 96               [12] 1423 	subb	a,@r0
      000142 EB               [12] 1424 	mov	a,r3
      000143 08               [12] 1425 	inc	r0
      000144 96               [12] 1426 	subb	a,@r0
      000145 50 20            [24] 1427 	jnc	00109$
                                   1428 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:243: RFD = ((unsigned char *)(payload))[i];
      000147 A8 81            [24] 1429 	mov	r0,sp
      000149 18               [12] 1430 	dec	r0
      00014A 18               [12] 1431 	dec	r0
      00014B 86 02            [24] 1432 	mov	ar2,@r0
      00014D 08               [12] 1433 	inc	r0
      00014E 86 03            [24] 1434 	mov	ar3,@r0
      000150 08               [12] 1435 	inc	r0
      000151 86 07            [24] 1436 	mov	ar7,@r0
      000153 EC               [12] 1437 	mov	a,r4
      000154 2A               [12] 1438 	add	a,r2
      000155 FA               [12] 1439 	mov	r2,a
      000156 E4               [12] 1440 	clr	a
      000157 3B               [12] 1441 	addc	a,r3
      000158 FB               [12] 1442 	mov	r3,a
      000159 8A 82            [24] 1443 	mov	dpl,r2
      00015B 8B 83            [24] 1444 	mov	dph,r3
      00015D 8F F0            [24] 1445 	mov	b,r7
      00015F 12r00r00         [24] 1446 	lcall	__gptrget
      000162 F5 D9            [12] 1447 	mov	_RFD,a
                                   1448 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:242: for(i = 0; i < payload_len; i++) {
      000164 0C               [12] 1449 	inc	r4
      000165 80 CF            [24] 1450 	sjmp	00111$
      000167                       1451 00109$:
                                   1452 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:249: RFD = 0;
      000167 75 D9 00         [24] 1453 	mov	_RFD,#0x00
                                   1454 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:250: RFD = 0;
      00016A 75 D9 00         [24] 1455 	mov	_RFD,#0x00
                                   1456 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:252: return 0;
      00016D 90 00 00         [24] 1457 	mov	dptr,#0x0000
      000170 15 81            [12] 1458 	dec	sp
      000172 15 81            [12] 1459 	dec	sp
      000174 15 81            [12] 1460 	dec	sp
      000176 02r00r00         [24] 1461 	ljmp	__sdcc_banked_ret
                                   1462 ;------------------------------------------------------------
                                   1463 ;Allocation info for local variables in function 'transmit'
                                   1464 ;------------------------------------------------------------
                                   1465 ;transmit_len              Allocated to registers 
                                   1466 ;counter                   Allocated to registers r7 
                                   1467 ;ret                       Allocated to registers r6 r7 
                                   1468 ;t0                        Allocated to registers 
                                   1469 ;------------------------------------------------------------
                                   1470 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:256: transmit(unsigned short transmit_len)
                                   1471 ;	-----------------------------------------
                                   1472 ;	 function transmit
                                   1473 ;	-----------------------------------------
      000179                       1474 _transmit:
                                   1475 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:263: if(!(rf_flags & RX_ACTIVE)) {
      000179 E5*00            [12] 1476 	mov	a,_rf_flags
      00017B 20 E7 42         [24] 1477 	jb	acc.7,00105$
                                   1478 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:264: t0 = RTIMER_NOW();
      00017E AE E2            [24] 1479 	mov	r6,_T1CNTL
      000180 7F 00            [12] 1480 	mov	r7,#0x00
      000182 AC E3            [24] 1481 	mov	r4,_T1CNTH
      000184 8C 05            [24] 1482 	mov	ar5,r4
      000186 E4               [12] 1483 	clr	a
      000187 2E               [12] 1484 	add	a,r6
      000188 FE               [12] 1485 	mov	r6,a
      000189 ED               [12] 1486 	mov	a,r5
      00018A 3F               [12] 1487 	addc	a,r7
      00018B FF               [12] 1488 	mov	r7,a
                                   1489 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:265: on();
      00018C C0 07            [24] 1490 	push	ar7
      00018E C0 06            [24] 1491 	push	ar6
      000190 78rF9            [12] 1492 	mov	r0,#_on
      000192 79s04            [12] 1493 	mov	r1,#(_on >> 8)
      000194 7As00            [12] 1494 	mov	r2,#(_on >> 16)
      000196 12r00r00         [24] 1495 	lcall	__sdcc_banked_call
      000199 D0 06            [24] 1496 	pop	ar6
      00019B D0 07            [24] 1497 	pop	ar7
                                   1498 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:266: rf_flags |= WAS_OFF;
      00019D 43*00 10         [24] 1499 	orl	_rf_flags,#0x10
                                   1500 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:267: while(RTIMER_CLOCK_LT(RTIMER_NOW(), t0 + ONOFF_TIME));
      0001A0 74 05            [12] 1501 	mov	a,#0x05
      0001A2 2E               [12] 1502 	add	a,r6
      0001A3 FE               [12] 1503 	mov	r6,a
      0001A4 E4               [12] 1504 	clr	a
      0001A5 3F               [12] 1505 	addc	a,r7
      0001A6 FF               [12] 1506 	mov	r7,a
      0001A7                       1507 00101$:
      0001A7 AC E2            [24] 1508 	mov	r4,_T1CNTL
      0001A9 7D 00            [12] 1509 	mov	r5,#0x00
      0001AB AA E3            [24] 1510 	mov	r2,_T1CNTH
      0001AD 8A 03            [24] 1511 	mov	ar3,r2
      0001AF E4               [12] 1512 	clr	a
      0001B0 FA               [12] 1513 	mov	r2,a
      0001B1 2C               [12] 1514 	add	a,r4
      0001B2 FC               [12] 1515 	mov	r4,a
      0001B3 EB               [12] 1516 	mov	a,r3
      0001B4 3D               [12] 1517 	addc	a,r5
      0001B5 FD               [12] 1518 	mov	r5,a
      0001B6 EC               [12] 1519 	mov	a,r4
      0001B7 C3               [12] 1520 	clr	c
      0001B8 9E               [12] 1521 	subb	a,r6
      0001B9 FC               [12] 1522 	mov	r4,a
      0001BA ED               [12] 1523 	mov	a,r5
      0001BB 9F               [12] 1524 	subb	a,r7
      0001BC FD               [12] 1525 	mov	r5,a
      0001BD 20 E7 E7         [24] 1526 	jb	acc.7,00101$
      0001C0                       1527 00105$:
                                   1528 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:270: if(channel_clear() == CC2530_RF_CCA_BUSY) {
      0001C0 78rCB            [12] 1529 	mov	r0,#_channel_clear
      0001C2 79s04            [12] 1530 	mov	r1,#(_channel_clear >> 8)
      0001C4 7As00            [12] 1531 	mov	r2,#(_channel_clear >> 16)
      0001C6 12r00r00         [24] 1532 	lcall	__sdcc_banked_call
      0001C9 E5 82            [12] 1533 	mov	a,dpl
      0001CB 85 83 F0         [24] 1534 	mov	b,dph
      0001CE 45 F0            [12] 1535 	orl	a,b
      0001D0 70 2F            [24] 1536 	jnz	00107$
                                   1537 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:271: RIMESTATS_ADD(contentiondrop);
      0001D2 90r00r38         [24] 1538 	mov	dptr,#(_rimestats + 0x0038)
      0001D5 E0               [24] 1539 	movx	a,@dptr
      0001D6 FC               [12] 1540 	mov	r4,a
      0001D7 A3               [24] 1541 	inc	dptr
      0001D8 E0               [24] 1542 	movx	a,@dptr
      0001D9 FD               [12] 1543 	mov	r5,a
      0001DA A3               [24] 1544 	inc	dptr
      0001DB E0               [24] 1545 	movx	a,@dptr
      0001DC FE               [12] 1546 	mov	r6,a
      0001DD A3               [24] 1547 	inc	dptr
      0001DE E0               [24] 1548 	movx	a,@dptr
      0001DF FF               [12] 1549 	mov	r7,a
      0001E0 0C               [12] 1550 	inc	r4
      0001E1 BC 00 09         [24] 1551 	cjne	r4,#0x00,00175$
      0001E4 0D               [12] 1552 	inc	r5
      0001E5 BD 00 05         [24] 1553 	cjne	r5,#0x00,00175$
      0001E8 0E               [12] 1554 	inc	r6
      0001E9 BE 00 01         [24] 1555 	cjne	r6,#0x00,00175$
      0001EC 0F               [12] 1556 	inc	r7
      0001ED                       1557 00175$:
      0001ED 90r00r38         [24] 1558 	mov	dptr,#(_rimestats + 0x0038)
      0001F0 EC               [12] 1559 	mov	a,r4
      0001F1 F0               [24] 1560 	movx	@dptr,a
      0001F2 ED               [12] 1561 	mov	a,r5
      0001F3 A3               [24] 1562 	inc	dptr
      0001F4 F0               [24] 1563 	movx	@dptr,a
      0001F5 EE               [12] 1564 	mov	a,r6
      0001F6 A3               [24] 1565 	inc	dptr
      0001F7 F0               [24] 1566 	movx	@dptr,a
      0001F8 EF               [12] 1567 	mov	a,r7
      0001F9 A3               [24] 1568 	inc	dptr
      0001FA F0               [24] 1569 	movx	@dptr,a
                                   1570 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:272: return RADIO_TX_COLLISION;
      0001FB 90 00 02         [24] 1571 	mov	dptr,#0x0002
      0001FE 02r02rC2         [24] 1572 	ljmp	00136$
      000201                       1573 00107$:
                                   1574 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:279: if(FSMSTAT1 & FSMSTAT1_SFD) {
      000201 90 61 93         [24] 1575 	mov	dptr,#_FSMSTAT1
      000204 E0               [24] 1576 	movx	a,@dptr
      000205 FF               [12] 1577 	mov	r7,a
      000206 30 E5 2F         [24] 1578 	jnb	acc.5,00110$
                                   1579 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:280: RIMESTATS_ADD(contentiondrop);
      000209 90r00r38         [24] 1580 	mov	dptr,#(_rimestats + 0x0038)
      00020C E0               [24] 1581 	movx	a,@dptr
      00020D FC               [12] 1582 	mov	r4,a
      00020E A3               [24] 1583 	inc	dptr
      00020F E0               [24] 1584 	movx	a,@dptr
      000210 FD               [12] 1585 	mov	r5,a
      000211 A3               [24] 1586 	inc	dptr
      000212 E0               [24] 1587 	movx	a,@dptr
      000213 FE               [12] 1588 	mov	r6,a
      000214 A3               [24] 1589 	inc	dptr
      000215 E0               [24] 1590 	movx	a,@dptr
      000216 FF               [12] 1591 	mov	r7,a
      000217 0C               [12] 1592 	inc	r4
      000218 BC 00 09         [24] 1593 	cjne	r4,#0x00,00177$
      00021B 0D               [12] 1594 	inc	r5
      00021C BD 00 05         [24] 1595 	cjne	r5,#0x00,00177$
      00021F 0E               [12] 1596 	inc	r6
      000220 BE 00 01         [24] 1597 	cjne	r6,#0x00,00177$
      000223 0F               [12] 1598 	inc	r7
      000224                       1599 00177$:
      000224 90r00r38         [24] 1600 	mov	dptr,#(_rimestats + 0x0038)
      000227 EC               [12] 1601 	mov	a,r4
      000228 F0               [24] 1602 	movx	@dptr,a
      000229 ED               [12] 1603 	mov	a,r5
      00022A A3               [24] 1604 	inc	dptr
      00022B F0               [24] 1605 	movx	@dptr,a
      00022C EE               [12] 1606 	mov	a,r6
      00022D A3               [24] 1607 	inc	dptr
      00022E F0               [24] 1608 	movx	@dptr,a
      00022F EF               [12] 1609 	mov	a,r7
      000230 A3               [24] 1610 	inc	dptr
      000231 F0               [24] 1611 	movx	@dptr,a
                                   1612 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:281: return RADIO_TX_COLLISION;
      000232 90 00 02         [24] 1613 	mov	dptr,#0x0002
      000235 02r02rC2         [24] 1614 	ljmp	00136$
                                   1615 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:286: ENERGEST_OFF(ENERGEST_TYPE_LISTEN);
      000238                       1616 00110$:
                                   1617 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:289: CC2530_CSP_ISTXON();
      000238 75 E1 E9         [24] 1618 	mov	_RFST,#0xE9
                                   1619 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:292: while(!(FSMSTAT1 & FSMSTAT1_TX_ACTIVE) && (counter++ < 3)) {
      00023B 7F 00            [12] 1620 	mov	r7,#0x00
      00023D                       1621 00118$:
      00023D 90 61 93         [24] 1622 	mov	dptr,#_FSMSTAT1
      000240 E0               [24] 1623 	movx	a,@dptr
      000241 FE               [12] 1624 	mov	r6,a
      000242 20 E1 1A         [24] 1625 	jb	acc.1,00120$
      000245 8F 06            [24] 1626 	mov	ar6,r7
      000247 0F               [12] 1627 	inc	r7
      000248 BE 03 00         [24] 1628 	cjne	r6,#0x03,00179$
      00024B                       1629 00179$:
      00024B 50 12            [24] 1630 	jnc	00120$
                                   1631 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:293: clock_delay_usec(6);
      00024D 90 00 06         [24] 1632 	mov	dptr,#0x0006
      000250 C0 07            [24] 1633 	push	ar7
      000252 78r00            [12] 1634 	mov	r0,#_clock_delay_usec
      000254 79s00            [12] 1635 	mov	r1,#(_clock_delay_usec >> 8)
      000256 7As00            [12] 1636 	mov	r2,#(_clock_delay_usec >> 16)
      000258 12r00r00         [24] 1637 	lcall	__sdcc_banked_call
      00025B D0 07            [24] 1638 	pop	ar7
      00025D 80 DE            [24] 1639 	sjmp	00118$
      00025F                       1640 00120$:
                                   1641 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:296: if(!(FSMSTAT1 & FSMSTAT1_TX_ACTIVE)) {
      00025F 90 61 93         [24] 1642 	mov	dptr,#_FSMSTAT1
      000262 E0               [24] 1643 	movx	a,@dptr
      000263 FF               [12] 1644 	mov	r7,a
      000264 20 E1 0C         [24] 1645 	jb	acc.1,00124$
                                   1646 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:298: CC2530_CSP_ISFLUSHTX();
      000267 75 E1 EE         [24] 1647 	mov	_RFST,#0xEE
      00026A 75 E1 EE         [24] 1648 	mov	_RFST,#0xEE
                                   1649 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:299: ret = RADIO_TX_ERR;
      00026D 7E 01            [12] 1650 	mov	r6,#0x01
      00026F 7F 00            [12] 1651 	mov	r7,#0x00
                                   1652 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:302: while(FSMSTAT1 & FSMSTAT1_TX_ACTIVE);
      000271 80 0C            [24] 1653 	sjmp	00130$
      000273                       1654 00124$:
      000273 90 61 93         [24] 1655 	mov	dptr,#_FSMSTAT1
      000276 E0               [24] 1656 	movx	a,@dptr
      000277 FD               [12] 1657 	mov	r5,a
      000278 20 E1 F8         [24] 1658 	jb	acc.1,00124$
                                   1659 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:303: ret = RADIO_TX_OK;
      00027B 7E 00            [12] 1660 	mov	r6,#0x00
      00027D 7F 00            [12] 1661 	mov	r7,#0x00
                                   1662 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:305: ENERGEST_OFF(ENERGEST_TYPE_TRANSMIT);
      00027F                       1663 00130$:
                                   1664 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:308: if(rf_flags & WAS_OFF) {
      00027F E5*00            [12] 1665 	mov	a,_rf_flags
      000281 30 E4 11         [24] 1666 	jnb	acc.4,00135$
                                   1667 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:309: off();
      000284 C0 07            [24] 1668 	push	ar7
      000286 C0 06            [24] 1669 	push	ar6
      000288 78r10            [12] 1670 	mov	r0,#_off
      00028A 79s05            [12] 1671 	mov	r1,#(_off >> 8)
      00028C 7As00            [12] 1672 	mov	r2,#(_off >> 16)
      00028E 12r00r00         [24] 1673 	lcall	__sdcc_banked_call
      000291 D0 06            [24] 1674 	pop	ar6
      000293 D0 07            [24] 1675 	pop	ar7
      000295                       1676 00135$:
                                   1677 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:312: RIMESTATS_ADD(lltx);
      000295 90r00r40         [24] 1678 	mov	dptr,#(_rimestats + 0x0040)
      000298 E0               [24] 1679 	movx	a,@dptr
      000299 FA               [12] 1680 	mov	r2,a
      00029A A3               [24] 1681 	inc	dptr
      00029B E0               [24] 1682 	movx	a,@dptr
      00029C FB               [12] 1683 	mov	r3,a
      00029D A3               [24] 1684 	inc	dptr
      00029E E0               [24] 1685 	movx	a,@dptr
      00029F FC               [12] 1686 	mov	r4,a
      0002A0 A3               [24] 1687 	inc	dptr
      0002A1 E0               [24] 1688 	movx	a,@dptr
      0002A2 FD               [12] 1689 	mov	r5,a
      0002A3 0A               [12] 1690 	inc	r2
      0002A4 BA 00 09         [24] 1691 	cjne	r2,#0x00,00184$
      0002A7 0B               [12] 1692 	inc	r3
      0002A8 BB 00 05         [24] 1693 	cjne	r3,#0x00,00184$
      0002AB 0C               [12] 1694 	inc	r4
      0002AC BC 00 01         [24] 1695 	cjne	r4,#0x00,00184$
      0002AF 0D               [12] 1696 	inc	r5
      0002B0                       1697 00184$:
      0002B0 90r00r40         [24] 1698 	mov	dptr,#(_rimestats + 0x0040)
      0002B3 EA               [12] 1699 	mov	a,r2
      0002B4 F0               [24] 1700 	movx	@dptr,a
      0002B5 EB               [12] 1701 	mov	a,r3
      0002B6 A3               [24] 1702 	inc	dptr
      0002B7 F0               [24] 1703 	movx	@dptr,a
      0002B8 EC               [12] 1704 	mov	a,r4
      0002B9 A3               [24] 1705 	inc	dptr
      0002BA F0               [24] 1706 	movx	@dptr,a
      0002BB ED               [12] 1707 	mov	a,r5
      0002BC A3               [24] 1708 	inc	dptr
      0002BD F0               [24] 1709 	movx	@dptr,a
                                   1710 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:317: return ret;
      0002BE 8E 82            [24] 1711 	mov	dpl,r6
      0002C0 8F 83            [24] 1712 	mov	dph,r7
      0002C2                       1713 00136$:
      0002C2 02r00r00         [24] 1714 	ljmp	__sdcc_banked_ret
                                   1715 ;------------------------------------------------------------
                                   1716 ;Allocation info for local variables in function 'send'
                                   1717 ;------------------------------------------------------------
                                   1718 ;payload_len               Allocated to stack - sp -4
                                   1719 ;payload                   Allocated to registers r5 r6 r7 
                                   1720 ;------------------------------------------------------------
                                   1721 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:321: send(void *payload, unsigned short payload_len)
                                   1722 ;	-----------------------------------------
                                   1723 ;	 function send
                                   1724 ;	-----------------------------------------
      0002C5                       1725 _send:
      0002C5 AD 82            [24] 1726 	mov	r5,dpl
      0002C7 AE 83            [24] 1727 	mov	r6,dph
      0002C9 AF F0            [24] 1728 	mov	r7,b
                                   1729 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:323: prepare(payload, payload_len);
      0002CB E5 81            [12] 1730 	mov	a,sp
      0002CD 24 FC            [12] 1731 	add	a,#0xfc
      0002CF F8               [12] 1732 	mov	r0,a
      0002D0 E6               [12] 1733 	mov	a,@r0
      0002D1 C0 E0            [24] 1734 	push	acc
      0002D3 08               [12] 1735 	inc	r0
      0002D4 E6               [12] 1736 	mov	a,@r0
      0002D5 C0 E0            [24] 1737 	push	acc
      0002D7 8D 82            [24] 1738 	mov	dpl,r5
      0002D9 8E 83            [24] 1739 	mov	dph,r6
      0002DB 8F F0            [24] 1740 	mov	b,r7
      0002DD 78r06            [12] 1741 	mov	r0,#_prepare
      0002DF 79s01            [12] 1742 	mov	r1,#(_prepare >> 8)
      0002E1 7As00            [12] 1743 	mov	r2,#(_prepare >> 16)
      0002E3 12r00r00         [24] 1744 	lcall	__sdcc_banked_call
      0002E6 15 81            [12] 1745 	dec	sp
      0002E8 15 81            [12] 1746 	dec	sp
                                   1747 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:324: return transmit(payload_len);
      0002EA E5 81            [12] 1748 	mov	a,sp
      0002EC 24 FC            [12] 1749 	add	a,#0xfc
      0002EE F8               [12] 1750 	mov	r0,a
      0002EF 86 82            [24] 1751 	mov	dpl,@r0
      0002F1 08               [12] 1752 	inc	r0
      0002F2 86 83            [24] 1753 	mov	dph,@r0
      0002F4 78r79            [12] 1754 	mov	r0,#_transmit
      0002F6 79s01            [12] 1755 	mov	r1,#(_transmit >> 8)
      0002F8 7As00            [12] 1756 	mov	r2,#(_transmit >> 16)
      0002FA 12r00r00         [24] 1757 	lcall	__sdcc_banked_call
      0002FD AE 82            [24] 1758 	mov	r6,dpl
      0002FF AF 83            [24] 1759 	mov  r7,dph
      000301 02r00r00         [24] 1760 	ljmp	__sdcc_banked_ret
                                   1761 ;------------------------------------------------------------
                                   1762 ;Allocation info for local variables in function 'read'
                                   1763 ;------------------------------------------------------------
                                   1764 ;bufsize                   Allocated to stack - sp -7
                                   1765 ;buf                       Allocated to stack - sp -2
                                   1766 ;i                         Allocated to registers r3 
                                   1767 ;len                       Allocated to registers r4 
                                   1768 ;crc_corr                  Allocated to registers r6 
                                   1769 ;rssi                      Allocated to registers r7 
                                   1770 ;sloc0                     Allocated to stack - sp +5
                                   1771 ;------------------------------------------------------------
                                   1772 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:328: read(void *buf, unsigned short bufsize)
                                   1773 ;	-----------------------------------------
                                   1774 ;	 function read
                                   1775 ;	-----------------------------------------
      000304                       1776 _read:
      000304 C0 82            [24] 1777 	push	dpl
      000306 C0 83            [24] 1778 	push	dph
      000308 C0 F0            [24] 1779 	push	b
                                   1780 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:338: len = RFD;
                                   1781 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:341: if(len > CC2530_RF_MAX_PACKET_LEN) {
      00030A E5 D9            [12] 1782 	mov	a,_RFD
      00030C FC               [12] 1783 	mov	r4,a
      00030D 24 80            [12] 1784 	add	a,#0xff - 0x7F
      00030F 50 35            [24] 1785 	jnc	00105$
                                   1786 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:345: RIMESTATS_ADD(badsynch);
      000311 90r00r30         [24] 1787 	mov	dptr,#(_rimestats + 0x0030)
      000314 E0               [24] 1788 	movx	a,@dptr
      000315 FF               [12] 1789 	mov	r7,a
      000316 A3               [24] 1790 	inc	dptr
      000317 E0               [24] 1791 	movx	a,@dptr
      000318 FE               [12] 1792 	mov	r6,a
      000319 A3               [24] 1793 	inc	dptr
      00031A E0               [24] 1794 	movx	a,@dptr
      00031B FD               [12] 1795 	mov	r5,a
      00031C A3               [24] 1796 	inc	dptr
      00031D E0               [24] 1797 	movx	a,@dptr
      00031E FC               [12] 1798 	mov	r4,a
      00031F 0F               [12] 1799 	inc	r7
      000320 BF 00 09         [24] 1800 	cjne	r7,#0x00,00161$
      000323 0E               [12] 1801 	inc	r6
      000324 BE 00 05         [24] 1802 	cjne	r6,#0x00,00161$
      000327 0D               [12] 1803 	inc	r5
      000328 BD 00 01         [24] 1804 	cjne	r5,#0x00,00161$
      00032B 0C               [12] 1805 	inc	r4
      00032C                       1806 00161$:
      00032C 90r00r30         [24] 1807 	mov	dptr,#(_rimestats + 0x0030)
      00032F EF               [12] 1808 	mov	a,r7
      000330 F0               [24] 1809 	movx	@dptr,a
      000331 EE               [12] 1810 	mov	a,r6
      000332 A3               [24] 1811 	inc	dptr
      000333 F0               [24] 1812 	movx	@dptr,a
      000334 ED               [12] 1813 	mov	a,r5
      000335 A3               [24] 1814 	inc	dptr
      000336 F0               [24] 1815 	movx	@dptr,a
      000337 EC               [12] 1816 	mov	a,r4
      000338 A3               [24] 1817 	inc	dptr
      000339 F0               [24] 1818 	movx	@dptr,a
                                   1819 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:346: CC2530_CSP_ISFLUSHRX();
      00033A 75 E1 ED         [24] 1820 	mov	_RFST,#0xED
      00033D 75 E1 ED         [24] 1821 	mov	_RFST,#0xED
                                   1822 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:347: return 0;
      000340 90 00 00         [24] 1823 	mov	dptr,#0x0000
      000343 02r04rC2         [24] 1824 	ljmp	00133$
      000346                       1825 00105$:
                                   1826 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:350: if(len <= CC2530_RF_MIN_PACKET_LEN) {
      000346 EC               [12] 1827 	mov	a,r4
      000347 24 FB            [12] 1828 	add	a,#0xff - 0x04
      000349 40 35            [24] 1829 	jc	00110$
                                   1830 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:353: RIMESTATS_ADD(tooshort);
      00034B 90r00r2C         [24] 1831 	mov	dptr,#(_rimestats + 0x002c)
      00034E E0               [24] 1832 	movx	a,@dptr
      00034F FF               [12] 1833 	mov	r7,a
      000350 A3               [24] 1834 	inc	dptr
      000351 E0               [24] 1835 	movx	a,@dptr
      000352 FE               [12] 1836 	mov	r6,a
      000353 A3               [24] 1837 	inc	dptr
      000354 E0               [24] 1838 	movx	a,@dptr
      000355 FD               [12] 1839 	mov	r5,a
      000356 A3               [24] 1840 	inc	dptr
      000357 E0               [24] 1841 	movx	a,@dptr
      000358 FC               [12] 1842 	mov	r4,a
      000359 0F               [12] 1843 	inc	r7
      00035A BF 00 09         [24] 1844 	cjne	r7,#0x00,00163$
      00035D 0E               [12] 1845 	inc	r6
      00035E BE 00 05         [24] 1846 	cjne	r6,#0x00,00163$
      000361 0D               [12] 1847 	inc	r5
      000362 BD 00 01         [24] 1848 	cjne	r5,#0x00,00163$
      000365 0C               [12] 1849 	inc	r4
      000366                       1850 00163$:
      000366 90r00r2C         [24] 1851 	mov	dptr,#(_rimestats + 0x002c)
      000369 EF               [12] 1852 	mov	a,r7
      00036A F0               [24] 1853 	movx	@dptr,a
      00036B EE               [12] 1854 	mov	a,r6
      00036C A3               [24] 1855 	inc	dptr
      00036D F0               [24] 1856 	movx	@dptr,a
      00036E ED               [12] 1857 	mov	a,r5
      00036F A3               [24] 1858 	inc	dptr
      000370 F0               [24] 1859 	movx	@dptr,a
      000371 EC               [12] 1860 	mov	a,r4
      000372 A3               [24] 1861 	inc	dptr
      000373 F0               [24] 1862 	movx	@dptr,a
                                   1863 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:354: CC2530_CSP_ISFLUSHRX();
      000374 75 E1 ED         [24] 1864 	mov	_RFST,#0xED
      000377 75 E1 ED         [24] 1865 	mov	_RFST,#0xED
                                   1866 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:355: return 0;
      00037A 90 00 00         [24] 1867 	mov	dptr,#0x0000
      00037D 02r04rC2         [24] 1868 	ljmp	00133$
      000380                       1869 00110$:
                                   1870 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:358: if(len - CHECKSUM_LEN > bufsize) {
      000380 8C 02            [24] 1871 	mov	ar2,r4
      000382 7B 00            [12] 1872 	mov	r3,#0x00
      000384 EA               [12] 1873 	mov	a,r2
      000385 24 FE            [12] 1874 	add	a,#0xFE
      000387 FA               [12] 1875 	mov	r2,a
      000388 EB               [12] 1876 	mov	a,r3
      000389 34 FF            [12] 1877 	addc	a,#0xFF
      00038B FB               [12] 1878 	mov	r3,a
      00038C E5 81            [12] 1879 	mov	a,sp
      00038E 24 F9            [12] 1880 	add	a,#0xf9
      000390 F8               [12] 1881 	mov	r0,a
      000391 C3               [12] 1882 	clr	c
      000392 E6               [12] 1883 	mov	a,@r0
      000393 9A               [12] 1884 	subb	a,r2
      000394 08               [12] 1885 	inc	r0
      000395 E6               [12] 1886 	mov	a,@r0
      000396 9B               [12] 1887 	subb	a,r3
      000397 50 35            [24] 1888 	jnc	00115$
                                   1889 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:361: RIMESTATS_ADD(toolong);
      000399 90r00r28         [24] 1890 	mov	dptr,#(_rimestats + 0x0028)
      00039C E0               [24] 1891 	movx	a,@dptr
      00039D FF               [12] 1892 	mov	r7,a
      00039E A3               [24] 1893 	inc	dptr
      00039F E0               [24] 1894 	movx	a,@dptr
      0003A0 FE               [12] 1895 	mov	r6,a
      0003A1 A3               [24] 1896 	inc	dptr
      0003A2 E0               [24] 1897 	movx	a,@dptr
      0003A3 FD               [12] 1898 	mov	r5,a
      0003A4 A3               [24] 1899 	inc	dptr
      0003A5 E0               [24] 1900 	movx	a,@dptr
      0003A6 FC               [12] 1901 	mov	r4,a
      0003A7 0F               [12] 1902 	inc	r7
      0003A8 BF 00 09         [24] 1903 	cjne	r7,#0x00,00165$
      0003AB 0E               [12] 1904 	inc	r6
      0003AC BE 00 05         [24] 1905 	cjne	r6,#0x00,00165$
      0003AF 0D               [12] 1906 	inc	r5
      0003B0 BD 00 01         [24] 1907 	cjne	r5,#0x00,00165$
      0003B3 0C               [12] 1908 	inc	r4
      0003B4                       1909 00165$:
      0003B4 90r00r28         [24] 1910 	mov	dptr,#(_rimestats + 0x0028)
      0003B7 EF               [12] 1911 	mov	a,r7
      0003B8 F0               [24] 1912 	movx	@dptr,a
      0003B9 EE               [12] 1913 	mov	a,r6
      0003BA A3               [24] 1914 	inc	dptr
      0003BB F0               [24] 1915 	movx	@dptr,a
      0003BC ED               [12] 1916 	mov	a,r5
      0003BD A3               [24] 1917 	inc	dptr
      0003BE F0               [24] 1918 	movx	@dptr,a
      0003BF EC               [12] 1919 	mov	a,r4
      0003C0 A3               [24] 1920 	inc	dptr
      0003C1 F0               [24] 1921 	movx	@dptr,a
                                   1922 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:362: CC2530_CSP_ISFLUSHRX();
      0003C2 75 E1 ED         [24] 1923 	mov	_RFST,#0xED
      0003C5 75 E1 ED         [24] 1924 	mov	_RFST,#0xED
                                   1925 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:363: return 0;
      0003C8 90 00 00         [24] 1926 	mov	dptr,#0x0000
      0003CB 02r04rC2         [24] 1927 	ljmp	00133$
      0003CE                       1928 00115$:
                                   1929 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:380: len -= CHECKSUM_LEN;
      0003CE 1C               [12] 1930 	dec	r4
      0003CF 1C               [12] 1931 	dec	r4
                                   1932 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:381: for(i = 0; i < len; ++i) {
      0003D0 7B 00            [12] 1933 	mov	r3,#0x00
      0003D2                       1934 00131$:
      0003D2 C3               [12] 1935 	clr	c
      0003D3 EB               [12] 1936 	mov	a,r3
      0003D4 9C               [12] 1937 	subb	a,r4
      0003D5 50 25            [24] 1938 	jnc	00116$
                                   1939 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:382: ((unsigned char *)(buf))[i] = RFD;
      0003D7 C0 04            [24] 1940 	push	ar4
      0003D9 E5 81            [12] 1941 	mov	a,sp
      0003DB 24 FD            [12] 1942 	add	a,#0xfd
      0003DD F8               [12] 1943 	mov	r0,a
      0003DE 86 02            [24] 1944 	mov	ar2,@r0
      0003E0 08               [12] 1945 	inc	r0
      0003E1 86 04            [24] 1946 	mov	ar4,@r0
      0003E3 08               [12] 1947 	inc	r0
      0003E4 86 07            [24] 1948 	mov	ar7,@r0
      0003E6 EB               [12] 1949 	mov	a,r3
      0003E7 2A               [12] 1950 	add	a,r2
      0003E8 FA               [12] 1951 	mov	r2,a
      0003E9 E4               [12] 1952 	clr	a
      0003EA 3C               [12] 1953 	addc	a,r4
      0003EB FC               [12] 1954 	mov	r4,a
      0003EC 8A 82            [24] 1955 	mov	dpl,r2
      0003EE 8C 83            [24] 1956 	mov	dph,r4
      0003F0 8F F0            [24] 1957 	mov	b,r7
      0003F2 E5 D9            [12] 1958 	mov	a,_RFD
      0003F4 12r00r00         [24] 1959 	lcall	__gptrput
                                   1960 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:381: for(i = 0; i < len; ++i) {
      0003F7 0B               [12] 1961 	inc	r3
      0003F8 D0 04            [24] 1962 	pop	ar4
      0003FA 80 D6            [24] 1963 	sjmp	00131$
      0003FC                       1964 00116$:
                                   1965 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:391: rssi = ((int8_t) RFD) - RSSI_OFFSET;
      0003FC E5 D9            [12] 1966 	mov	a,_RFD
      0003FE 24 B7            [12] 1967 	add	a,#0xB7
      000400 FF               [12] 1968 	mov	r7,a
                                   1969 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:392: crc_corr = RFD;
                                   1970 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:401: if(crc_corr & CRC_BIT_MASK) {
      000401 E5 D9            [12] 1971 	mov	a,_RFD
      000403 FE               [12] 1972 	mov	r6,a
      000404 30 E7 69         [24] 1973 	jnb	acc.7,00121$
                                   1974 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:402: packetbuf_set_attr(PACKETBUF_ATTR_RSSI, rssi);
      000407 EF               [12] 1975 	mov	a,r7
      000408 33               [12] 1976 	rlc	a
      000409 95 E0            [12] 1977 	subb	a,acc
      00040B FD               [12] 1978 	mov	r5,a
      00040C C0 06            [24] 1979 	push	ar6
      00040E C0 04            [24] 1980 	push	ar4
      000410 C0 07            [24] 1981 	push	ar7
      000412 C0 05            [24] 1982 	push	ar5
      000414 75 82 04         [24] 1983 	mov	dpl,#0x04
      000417 78r00            [12] 1984 	mov	r0,#_packetbuf_set_attr
      000419 79s00            [12] 1985 	mov	r1,#(_packetbuf_set_attr >> 8)
      00041B 7As00            [12] 1986 	mov	r2,#(_packetbuf_set_attr >> 16)
      00041D 12r00r00         [24] 1987 	lcall	__sdcc_banked_call
      000420 15 81            [12] 1988 	dec	sp
      000422 15 81            [12] 1989 	dec	sp
      000424 D0 04            [24] 1990 	pop	ar4
      000426 D0 06            [24] 1991 	pop	ar6
                                   1992 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:403: packetbuf_set_attr(PACKETBUF_ATTR_LINK_QUALITY, crc_corr & LQI_BIT_MASK);
      000428 53 06 7F         [24] 1993 	anl	ar6,#0x7F
      00042B 7F 00            [12] 1994 	mov	r7,#0x00
      00042D C0 04            [24] 1995 	push	ar4
      00042F C0 06            [24] 1996 	push	ar6
      000431 C0 07            [24] 1997 	push	ar7
      000433 75 82 03         [24] 1998 	mov	dpl,#0x03
      000436 78r00            [12] 1999 	mov	r0,#_packetbuf_set_attr
      000438 79s00            [12] 2000 	mov	r1,#(_packetbuf_set_attr >> 8)
      00043A 7As00            [12] 2001 	mov	r2,#(_packetbuf_set_attr >> 16)
      00043C 12r00r00         [24] 2002 	lcall	__sdcc_banked_call
      00043F 15 81            [12] 2003 	dec	sp
      000441 15 81            [12] 2004 	dec	sp
      000443 D0 04            [24] 2005 	pop	ar4
                                   2006 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:404: RIMESTATS_ADD(llrx);
      000445 90r00r44         [24] 2007 	mov	dptr,#(_rimestats + 0x0044)
      000448 E0               [24] 2008 	movx	a,@dptr
      000449 FB               [12] 2009 	mov	r3,a
      00044A A3               [24] 2010 	inc	dptr
      00044B E0               [24] 2011 	movx	a,@dptr
      00044C FD               [12] 2012 	mov	r5,a
      00044D A3               [24] 2013 	inc	dptr
      00044E E0               [24] 2014 	movx	a,@dptr
      00044F FE               [12] 2015 	mov	r6,a
      000450 A3               [24] 2016 	inc	dptr
      000451 E0               [24] 2017 	movx	a,@dptr
      000452 FF               [12] 2018 	mov	r7,a
      000453 0B               [12] 2019 	inc	r3
      000454 BB 00 09         [24] 2020 	cjne	r3,#0x00,00168$
      000457 0D               [12] 2021 	inc	r5
      000458 BD 00 05         [24] 2022 	cjne	r5,#0x00,00168$
      00045B 0E               [12] 2023 	inc	r6
      00045C BE 00 01         [24] 2024 	cjne	r6,#0x00,00168$
      00045F 0F               [12] 2025 	inc	r7
      000460                       2026 00168$:
      000460 90r00r44         [24] 2027 	mov	dptr,#(_rimestats + 0x0044)
      000463 EB               [12] 2028 	mov	a,r3
      000464 F0               [24] 2029 	movx	@dptr,a
      000465 ED               [12] 2030 	mov	a,r5
      000466 A3               [24] 2031 	inc	dptr
      000467 F0               [24] 2032 	movx	@dptr,a
      000468 EE               [12] 2033 	mov	a,r6
      000469 A3               [24] 2034 	inc	dptr
      00046A F0               [24] 2035 	movx	@dptr,a
      00046B EF               [12] 2036 	mov	a,r7
      00046C A3               [24] 2037 	inc	dptr
      00046D F0               [24] 2038 	movx	@dptr,a
      00046E 80 34            [24] 2039 	sjmp	00122$
      000470                       2040 00121$:
                                   2041 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:406: RIMESTATS_ADD(badcrc);
      000470 90r00r34         [24] 2042 	mov	dptr,#(_rimestats + 0x0034)
      000473 E0               [24] 2043 	movx	a,@dptr
      000474 FB               [12] 2044 	mov	r3,a
      000475 A3               [24] 2045 	inc	dptr
      000476 E0               [24] 2046 	movx	a,@dptr
      000477 FD               [12] 2047 	mov	r5,a
      000478 A3               [24] 2048 	inc	dptr
      000479 E0               [24] 2049 	movx	a,@dptr
      00047A FE               [12] 2050 	mov	r6,a
      00047B A3               [24] 2051 	inc	dptr
      00047C E0               [24] 2052 	movx	a,@dptr
      00047D FF               [12] 2053 	mov	r7,a
      00047E 0B               [12] 2054 	inc	r3
      00047F BB 00 09         [24] 2055 	cjne	r3,#0x00,00169$
      000482 0D               [12] 2056 	inc	r5
      000483 BD 00 05         [24] 2057 	cjne	r5,#0x00,00169$
      000486 0E               [12] 2058 	inc	r6
      000487 BE 00 01         [24] 2059 	cjne	r6,#0x00,00169$
      00048A 0F               [12] 2060 	inc	r7
      00048B                       2061 00169$:
      00048B 90r00r34         [24] 2062 	mov	dptr,#(_rimestats + 0x0034)
      00048E EB               [12] 2063 	mov	a,r3
      00048F F0               [24] 2064 	movx	@dptr,a
      000490 ED               [12] 2065 	mov	a,r5
      000491 A3               [24] 2066 	inc	dptr
      000492 F0               [24] 2067 	movx	@dptr,a
      000493 EE               [12] 2068 	mov	a,r6
      000494 A3               [24] 2069 	inc	dptr
      000495 F0               [24] 2070 	movx	@dptr,a
      000496 EF               [12] 2071 	mov	a,r7
      000497 A3               [24] 2072 	inc	dptr
      000498 F0               [24] 2073 	movx	@dptr,a
                                   2074 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:407: CC2530_CSP_ISFLUSHRX();
      000499 75 E1 ED         [24] 2075 	mov	_RFST,#0xED
      00049C 75 E1 ED         [24] 2076 	mov	_RFST,#0xED
                                   2077 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:409: return 0;
      00049F 90 00 00         [24] 2078 	mov	dptr,#0x0000
      0004A2 80 1E            [24] 2079 	sjmp	00133$
      0004A4                       2080 00122$:
                                   2081 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:413: if((FSMSTAT1 & (FSMSTAT1_FIFO | FSMSTAT1_FIFOP)) == FSMSTAT1_FIFOP) {
      0004A4 90 61 93         [24] 2082 	mov	dptr,#_FSMSTAT1
      0004A7 E0               [24] 2083 	movx	a,@dptr
      0004A8 FF               [12] 2084 	mov	r7,a
      0004A9 53 07 C0         [24] 2085 	anl	ar7,#0xC0
      0004AC BF 40 0D         [24] 2086 	cjne	r7,#0x40,00129$
                                   2087 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:421: if(!RXFIFOCNT) {
      0004AF 90 61 9B         [24] 2088 	mov	dptr,#_RXFIFOCNT
      0004B2 E0               [24] 2089 	movx	a,@dptr
      0004B3 FF               [12] 2090 	mov	r7,a
      0004B4 70 06            [24] 2091 	jnz	00129$
                                   2092 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:422: CC2530_CSP_ISFLUSHRX();
      0004B6 75 E1 ED         [24] 2093 	mov	_RFST,#0xED
      0004B9 75 E1 ED         [24] 2094 	mov	_RFST,#0xED
      0004BC                       2095 00129$:
                                   2096 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:428: return (len);
      0004BC 7F 00            [12] 2097 	mov	r7,#0x00
      0004BE 8C 82            [24] 2098 	mov	dpl,r4
      0004C0 8F 83            [24] 2099 	mov	dph,r7
      0004C2                       2100 00133$:
      0004C2 15 81            [12] 2101 	dec	sp
      0004C4 15 81            [12] 2102 	dec	sp
      0004C6 15 81            [12] 2103 	dec	sp
      0004C8 02r00r00         [24] 2104 	ljmp	__sdcc_banked_ret
                                   2105 ;------------------------------------------------------------
                                   2106 ;Allocation info for local variables in function 'channel_clear'
                                   2107 ;------------------------------------------------------------
                                   2108 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:432: channel_clear(void)
                                   2109 ;	-----------------------------------------
                                   2110 ;	 function channel_clear
                                   2111 ;	-----------------------------------------
      0004CB                       2112 _channel_clear:
                                   2113 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:434: if(FSMSTAT1 & FSMSTAT1_CCA) {
      0004CB 90 61 93         [24] 2114 	mov	dptr,#_FSMSTAT1
      0004CE E0               [24] 2115 	movx	a,@dptr
      0004CF FF               [12] 2116 	mov	r7,a
      0004D0 30 E4 05         [24] 2117 	jnb	acc.4,00102$
                                   2118 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:435: return CC2530_RF_CCA_CLEAR;
      0004D3 90 00 01         [24] 2119 	mov	dptr,#0x0001
      0004D6 80 03            [24] 2120 	sjmp	00103$
      0004D8                       2121 00102$:
                                   2122 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:437: return CC2530_RF_CCA_BUSY;
      0004D8 90 00 00         [24] 2123 	mov	dptr,#0x0000
      0004DB                       2124 00103$:
      0004DB 02r00r00         [24] 2125 	ljmp	__sdcc_banked_ret
                                   2126 ;------------------------------------------------------------
                                   2127 ;Allocation info for local variables in function 'receiving_packet'
                                   2128 ;------------------------------------------------------------
                                   2129 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:441: receiving_packet(void)
                                   2130 ;	-----------------------------------------
                                   2131 ;	 function receiving_packet
                                   2132 ;	-----------------------------------------
      0004DE                       2133 _receiving_packet:
                                   2134 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:451: return (FSMSTAT1 & (FSMSTAT1_TX_ACTIVE | FSMSTAT1_SFD) == FSMSTAT1_SFD);
      0004DE 90 61 93         [24] 2135 	mov	dptr,#_FSMSTAT1
      0004E1 E0               [24] 2136 	movx	a,@dptr
      0004E2 90 00 00         [24] 2137 	mov	dptr,#0x0000
      0004E5 02r00r00         [24] 2138 	ljmp	__sdcc_banked_ret
                                   2139 ;------------------------------------------------------------
                                   2140 ;Allocation info for local variables in function 'pending_packet'
                                   2141 ;------------------------------------------------------------
                                   2142 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:455: pending_packet(void)
                                   2143 ;	-----------------------------------------
                                   2144 ;	 function pending_packet
                                   2145 ;	-----------------------------------------
      0004E8                       2146 _pending_packet:
                                   2147 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:457: return (FSMSTAT1 & FSMSTAT1_FIFOP);
      0004E8 90 61 93         [24] 2148 	mov	dptr,#_FSMSTAT1
      0004EB E0               [24] 2149 	movx	a,@dptr
      0004EC FF               [12] 2150 	mov	r7,a
      0004ED 53 07 40         [24] 2151 	anl	ar7,#0x40
      0004F0 7E 00            [12] 2152 	mov	r6,#0x00
      0004F2 8F 82            [24] 2153 	mov	dpl,r7
      0004F4 8E 83            [24] 2154 	mov	dph,r6
      0004F6 02r00r00         [24] 2155 	ljmp	__sdcc_banked_ret
                                   2156 ;------------------------------------------------------------
                                   2157 ;Allocation info for local variables in function 'on'
                                   2158 ;------------------------------------------------------------
                                   2159 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:461: on(void)
                                   2160 ;	-----------------------------------------
                                   2161 ;	 function on
                                   2162 ;	-----------------------------------------
      0004F9                       2163 _on:
                                   2164 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:463: if(!(rf_flags & RX_ACTIVE)) {
      0004F9 E5*00            [12] 2165 	mov	a,_rf_flags
      0004FB 20 E7 0C         [24] 2166 	jb	acc.7,00109$
                                   2167 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:464: CC2530_CSP_ISFLUSHRX();
      0004FE 75 E1 ED         [24] 2168 	mov	_RFST,#0xED
      000501 75 E1 ED         [24] 2169 	mov	_RFST,#0xED
                                   2170 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:465: CC2530_CSP_ISRXON();
      000504 75 E1 E3         [24] 2171 	mov	_RFST,#0xE3
                                   2172 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:467: rf_flags |= RX_ACTIVE;
      000507 43*00 80         [24] 2173 	orl	_rf_flags,#0x80
                                   2174 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:470: ENERGEST_ON(ENERGEST_TYPE_LISTEN);
      00050A                       2175 00109$:
                                   2176 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:471: return 1;
      00050A 90 00 01         [24] 2177 	mov	dptr,#0x0001
      00050D 02r00r00         [24] 2178 	ljmp	__sdcc_banked_ret
                                   2179 ;------------------------------------------------------------
                                   2180 ;Allocation info for local variables in function 'off'
                                   2181 ;------------------------------------------------------------
                                   2182 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:475: off(void)
                                   2183 ;	-----------------------------------------
                                   2184 ;	 function off
                                   2185 ;	-----------------------------------------
      000510                       2186 _off:
                                   2187 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:477: CC2530_CSP_ISRFOFF();
      000510 75 E1 EF         [24] 2188 	mov	_RFST,#0xEF
                                   2189 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:478: CC2530_CSP_ISFLUSHRX();
      000513 75 E1 ED         [24] 2190 	mov	_RFST,#0xED
      000516 75 E1 ED         [24] 2191 	mov	_RFST,#0xED
                                   2192 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:480: rf_flags &= ~RX_ACTIVE;
      000519 AF*00            [24] 2193 	mov	r7,_rf_flags
      00051B 74 7F            [12] 2194 	mov	a,#0x7F
      00051D 5F               [12] 2195 	anl	a,r7
      00051E F5*00            [12] 2196 	mov	_rf_flags,a
                                   2197 ;	../../../../cpu/cc253x/dev/cc2530-rf.c:483: return 1;
      000520 90 00 01         [24] 2198 	mov	dptr,#0x0001
      000523 02r00r00         [24] 2199 	ljmp	__sdcc_banked_ret
                                   2200 	.area CSEG    (CODE)
                                   2201 	.area CONST   (CODE)
      000000                       2202 _cc2530_rf_driver:
      000000r9Es00s00              2203 	.byte _init,(_init >> 8),(_init >> 16)
      000003r06s01s00              2204 	.byte _prepare,(_prepare >> 8),(_prepare >> 16)
      000006r79s01s00              2205 	.byte _transmit,(_transmit >> 8),(_transmit >> 16)
      000009rC5s02s00              2206 	.byte _send,(_send >> 8),(_send >> 16)
      00000Cr04s03s00              2207 	.byte _read,(_read >> 8),(_read >> 16)
      00000FrCBs04s00              2208 	.byte _channel_clear,(_channel_clear >> 8),(_channel_clear >> 16)
      000012rDEs04s00              2209 	.byte _receiving_packet,(_receiving_packet >> 8),(_receiving_packet >> 16)
      000015rE8s04s00              2210 	.byte _pending_packet,(_pending_packet >> 8),(_pending_packet >> 16)
      000018rF9s04s00              2211 	.byte _on,(_on >> 8),(_on >> 16)
      00001Br10s05s00              2212 	.byte _off,(_off >> 8),(_off >> 16)
                                   2213 	.area XINIT   (CODE)
                                   2214 	.area CABS    (ABS,CODE)
