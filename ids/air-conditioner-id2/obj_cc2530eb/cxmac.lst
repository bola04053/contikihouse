                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8804 (Aug  6 2013) (Linux)
                                      4 ; This file was generated Mon Aug 25 04:16:18 2014
                                      5 ;--------------------------------------------------------
                                      6 	.module cxmac
                                      7 	.optsdcc -mmcs51 --model-huge
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _cxmac_driver
                                     13 	.globl _cxmac_init
                                     14 	.globl _cxmac_set_announcement_radio_txpower
                                     15 	.globl _memb_alloc
                                     16 	.globl _memb_init
                                     17 	.globl _list_item_next
                                     18 	.globl _list_add
                                     19 	.globl _list_head
                                     20 	.globl _list_init
                                     21 	.globl _queuebuf_free
                                     22 	.globl _queuebuf_to_packetbuf
                                     23 	.globl _queuebuf_new_from_packetbuf
                                     24 	.globl _packetbuf_addr
                                     25 	.globl _packetbuf_set_addr
                                     26 	.globl _packetbuf_attr
                                     27 	.globl _packetbuf_compact
                                     28 	.globl _packetbuf_set_datalen
                                     29 	.globl _packetbuf_totlen
                                     30 	.globl _packetbuf_hdrptr
                                     31 	.globl _packetbuf_dataptr
                                     32 	.globl _packetbuf_clear
                                     33 	.globl _ctimer_set
                                     34 	.globl _rimeaddr_cmp
                                     35 	.globl _rimeaddr_copy
                                     36 	.globl _memcpy
                                     37 	.globl _watchdog_periodic
                                     38 	.globl _watchdog_start
                                     39 	.globl _ACTIVE
                                     40 	.globl _TX_BYTE
                                     41 	.globl _RX_BYTE
                                     42 	.globl _ERR
                                     43 	.globl _FE
                                     44 	.globl _SLAVE
                                     45 	.globl _RE
                                     46 	.globl _MODE
                                     47 	.globl _T3OVFIF
                                     48 	.globl _T3CH0IF
                                     49 	.globl _T3CH1IF
                                     50 	.globl _T4OVFIF
                                     51 	.globl _T4CH0IF
                                     52 	.globl _T4CH1IF
                                     53 	.globl _OVFIM
                                     54 	.globl _B_0
                                     55 	.globl _B_1
                                     56 	.globl _B_2
                                     57 	.globl _B_3
                                     58 	.globl _B_4
                                     59 	.globl _B_5
                                     60 	.globl _B_6
                                     61 	.globl _B_7
                                     62 	.globl _P2IF
                                     63 	.globl _UTX0IF
                                     64 	.globl _UTX1IF
                                     65 	.globl _P1IF
                                     66 	.globl _WDTIF
                                     67 	.globl _ACC_0
                                     68 	.globl _ACC_1
                                     69 	.globl _ACC_2
                                     70 	.globl _ACC_3
                                     71 	.globl _ACC_4
                                     72 	.globl _ACC_5
                                     73 	.globl _ACC_6
                                     74 	.globl _ACC_7
                                     75 	.globl _P
                                     76 	.globl _F1
                                     77 	.globl _OV
                                     78 	.globl _RS0
                                     79 	.globl _RS1
                                     80 	.globl _F0
                                     81 	.globl _AC
                                     82 	.globl _CY
                                     83 	.globl _DMAIF
                                     84 	.globl _T1IF
                                     85 	.globl _T2IF
                                     86 	.globl _T3IF
                                     87 	.globl _T4IF
                                     88 	.globl _P0IF
                                     89 	.globl _STIF
                                     90 	.globl _DMAIE
                                     91 	.globl _T1IE
                                     92 	.globl _T2IE
                                     93 	.globl _T3IE
                                     94 	.globl _T4IE
                                     95 	.globl _P0IE
                                     96 	.globl _RFERRIE
                                     97 	.globl _ADCIE
                                     98 	.globl _URX0IE
                                     99 	.globl _URX1IE
                                    100 	.globl _ENCIE
                                    101 	.globl _STIE
                                    102 	.globl _EA
                                    103 	.globl _P2_0
                                    104 	.globl _P2_1
                                    105 	.globl _P2_2
                                    106 	.globl _P2_3
                                    107 	.globl _P2_4
                                    108 	.globl _P2_5
                                    109 	.globl _P2_6
                                    110 	.globl _P2_7
                                    111 	.globl _ENCIF_0
                                    112 	.globl _ENCIF_1
                                    113 	.globl _P1_0
                                    114 	.globl _P1_1
                                    115 	.globl _P1_2
                                    116 	.globl _P1_3
                                    117 	.globl _P1_4
                                    118 	.globl _P1_5
                                    119 	.globl _P1_6
                                    120 	.globl _P1_7
                                    121 	.globl _IT0
                                    122 	.globl _RFERRIF
                                    123 	.globl _IT1
                                    124 	.globl _URX0IF
                                    125 	.globl _ADCIF
                                    126 	.globl _URX1IF
                                    127 	.globl _P0_0
                                    128 	.globl _P0_1
                                    129 	.globl _P0_2
                                    130 	.globl _P0_3
                                    131 	.globl _P0_4
                                    132 	.globl _P0_5
                                    133 	.globl _P0_6
                                    134 	.globl _P0_7
                                    135 	.globl _WDCTL
                                    136 	.globl _U1GCR
                                    137 	.globl _U1UCR
                                    138 	.globl _U1BAUD
                                    139 	.globl _U1DBUF
                                    140 	.globl _U1CSR
                                    141 	.globl _U0GCR
                                    142 	.globl _U0UCR
                                    143 	.globl _U0BAUD
                                    144 	.globl _U0DBUF
                                    145 	.globl _U0CSR
                                    146 	.globl _TIMIF
                                    147 	.globl _T4CC1
                                    148 	.globl _T4CCTL1
                                    149 	.globl _T4CC0
                                    150 	.globl _T4CCTL0
                                    151 	.globl _T4CTL
                                    152 	.globl _T4CNT
                                    153 	.globl _T3CC1
                                    154 	.globl _T3CCTL1
                                    155 	.globl _T3CC0
                                    156 	.globl _T3CCTL0
                                    157 	.globl _T3CTL
                                    158 	.globl _T3CNT
                                    159 	.globl _T2MSEL
                                    160 	.globl _T2IRQM
                                    161 	.globl _T2MOVF2
                                    162 	.globl _T2MOVF1
                                    163 	.globl _T2MOVF0
                                    164 	.globl _T2M1
                                    165 	.globl _T2M0
                                    166 	.globl _T2IRQF
                                    167 	.globl _T2EVTCFG
                                    168 	.globl _T2CTRL
                                    169 	.globl _T1STAT
                                    170 	.globl _T1CCTL2
                                    171 	.globl _T1CCTL1
                                    172 	.globl _T1CCTL0
                                    173 	.globl _T1CTL
                                    174 	.globl _T1CNTH
                                    175 	.globl _T1CNTL
                                    176 	.globl _T1CC2H
                                    177 	.globl _T1CC2L
                                    178 	.globl _T1CC1H
                                    179 	.globl _T1CC1L
                                    180 	.globl _T1CC0H
                                    181 	.globl _T1CC0L
                                    182 	.globl _CLKCONSTA
                                    183 	.globl _CLKCONCMD
                                    184 	.globl _SLEEPSTA
                                    185 	.globl _SLEEPCMD
                                    186 	.globl _STLOAD
                                    187 	.globl _ST2
                                    188 	.globl _ST1
                                    189 	.globl _ST0
                                    190 	.globl _RFERRF
                                    191 	.globl _RFIRQF0
                                    192 	.globl _RFST
                                    193 	.globl _RFD
                                    194 	.globl _RFIRQF1
                                    195 	.globl _PSBANK
                                    196 	.globl _FMAP
                                    197 	.globl _MEMCTR
                                    198 	.globl __XPAGE
                                    199 	.globl _MPAGE
                                    200 	.globl _PMUX
                                    201 	.globl _P2DIR
                                    202 	.globl _P1DIR
                                    203 	.globl _P0DIR
                                    204 	.globl _P2INP
                                    205 	.globl _P1INP
                                    206 	.globl _P2SEL
                                    207 	.globl _P1SEL
                                    208 	.globl _P0SEL
                                    209 	.globl _APCFG
                                    210 	.globl _PERCFG
                                    211 	.globl _P0INP
                                    212 	.globl _P2IEN
                                    213 	.globl _P1IEN
                                    214 	.globl _P0IEN
                                    215 	.globl _PICTL
                                    216 	.globl _P2IFG
                                    217 	.globl _P1IFG
                                    218 	.globl _P0IFG
                                    219 	.globl _DMAREQ
                                    220 	.globl _DMAARM
                                    221 	.globl _DMA0CFGH
                                    222 	.globl _DMA0CFGL
                                    223 	.globl _DMA1CFGH
                                    224 	.globl _DMA1CFGL
                                    225 	.globl _DMAIRQ
                                    226 	.globl _ENCCS
                                    227 	.globl _ENCDO
                                    228 	.globl _ENCDI
                                    229 	.globl _RNDH
                                    230 	.globl _RNDL
                                    231 	.globl _ADCH
                                    232 	.globl _ADCL
                                    233 	.globl _ADCCON3
                                    234 	.globl _ADCCON2
                                    235 	.globl _ADCCON1
                                    236 	.globl _B
                                    237 	.globl _IRCON2
                                    238 	.globl _ACC
                                    239 	.globl _PSW
                                    240 	.globl _IRCON
                                    241 	.globl _IP1
                                    242 	.globl _IEN1
                                    243 	.globl _IP0
                                    244 	.globl _IEN0
                                    245 	.globl _P2
                                    246 	.globl _S1CON
                                    247 	.globl _IEN2
                                    248 	.globl _S0CON
                                    249 	.globl _DPS
                                    250 	.globl _P1
                                    251 	.globl _TCON
                                    252 	.globl _PCON
                                    253 	.globl _DPH1
                                    254 	.globl _DPL1
                                    255 	.globl _DPH0
                                    256 	.globl _DPL0
                                    257 	.globl _SP
                                    258 	.globl _P0
                                    259 	.globl _cxmac_config
                                    260 	.globl _X_IEEE_ADDR
                                    261 	.globl _X_INFOPAGE
                                    262 	.globl _X_P2DIR
                                    263 	.globl _X_P1DIR
                                    264 	.globl _X_P0DIR
                                    265 	.globl _X_U1GCR
                                    266 	.globl _X_U1UCR
                                    267 	.globl _X_U1BAUD
                                    268 	.globl _X_U1DBUF
                                    269 	.globl _X_U1CSR
                                    270 	.globl _X_P2INP
                                    271 	.globl _X_P1INP
                                    272 	.globl _X_P2SEL
                                    273 	.globl _X_P1SEL
                                    274 	.globl _X_P0SEL
                                    275 	.globl _X_APCFG
                                    276 	.globl _X_PERCFG
                                    277 	.globl _X_T4CC1
                                    278 	.globl _X_T4CCTL1
                                    279 	.globl _X_T4CC0
                                    280 	.globl _X_T4CCTL0
                                    281 	.globl _X_T4CTL
                                    282 	.globl _X_T4CNT
                                    283 	.globl _X_RFIRQF0
                                    284 	.globl _X_T1CCTL2
                                    285 	.globl _X_T1CCTL1
                                    286 	.globl _X_T1CCTL0
                                    287 	.globl _X_T1CTL
                                    288 	.globl _X_T1CNTH
                                    289 	.globl _X_T1CNTL
                                    290 	.globl _X_RFST
                                    291 	.globl _X_T1CC2H
                                    292 	.globl _X_T1CC2L
                                    293 	.globl _X_T1CC1H
                                    294 	.globl _X_T1CC1L
                                    295 	.globl _X_T1CC0H
                                    296 	.globl _X_T1CC0L
                                    297 	.globl _X_RFD
                                    298 	.globl _X_TIMIF
                                    299 	.globl _X_DMAREQ
                                    300 	.globl _X_DMAARM
                                    301 	.globl _X_DMA0CFGH
                                    302 	.globl _X_DMA0CFGL
                                    303 	.globl _X_DMA1CFGH
                                    304 	.globl _X_DMA1CFGL
                                    305 	.globl _X_DMAIRQ
                                    306 	.globl _X_T3CC1
                                    307 	.globl _X_T3CCTL1
                                    308 	.globl _X_T3CC0
                                    309 	.globl _X_T3CCTL0
                                    310 	.globl _X_T3CTL
                                    311 	.globl _X_T3CNT
                                    312 	.globl _X_WDCTL
                                    313 	.globl _X_MEMCTR
                                    314 	.globl _X_CLKCONCMD
                                    315 	.globl _X_U0GCR
                                    316 	.globl _X_U0UCR
                                    317 	.globl _X_T2MSEL
                                    318 	.globl _X_U0BAUD
                                    319 	.globl _X_U0DBUF
                                    320 	.globl _X_RFERRF
                                    321 	.globl _X_SLEEPCMD
                                    322 	.globl _X_RNDH
                                    323 	.globl _X_RNDL
                                    324 	.globl _X_ADCH
                                    325 	.globl _X_ADCL
                                    326 	.globl _X_ADCCON3
                                    327 	.globl _X_ADCCON2
                                    328 	.globl _X_ADCCON1
                                    329 	.globl _X_ENCCS
                                    330 	.globl _X_ENCDO
                                    331 	.globl _X_ENCDI
                                    332 	.globl _X_T1STAT
                                    333 	.globl _X_PMUX
                                    334 	.globl _X_STLOAD
                                    335 	.globl _X_P2IEN
                                    336 	.globl _X_P0IEN
                                    337 	.globl _X_T2IRQM
                                    338 	.globl _X_T2MOVF2
                                    339 	.globl _X_T2MOVF1
                                    340 	.globl _X_T2MOVF0
                                    341 	.globl _X_T2M1
                                    342 	.globl _X_T2M0
                                    343 	.globl _X_T2IRQF
                                    344 	.globl _X_P2
                                    345 	.globl _X_PSBANK
                                    346 	.globl _X_FMAP
                                    347 	.globl _X_CLKCONSTA
                                    348 	.globl _X_SLEEPSTA
                                    349 	.globl _X_T2EVTCFG
                                    350 	.globl _X_ST2
                                    351 	.globl _X_ST1
                                    352 	.globl _X_ST0
                                    353 	.globl _X_T2CTRL
                                    354 	.globl _X__XPAGE
                                    355 	.globl _X_MPAGE
                                    356 	.globl _X_RFIRQF1
                                    357 	.globl _X_P1
                                    358 	.globl _X_P0INP
                                    359 	.globl _X_P1IEN
                                    360 	.globl _X_PICTL
                                    361 	.globl _X_P2IFG
                                    362 	.globl _X_P1IFG
                                    363 	.globl _X_P0IFG
                                    364 	.globl _X_U0CSR
                                    365 	.globl _X_P0
                                    366 	.globl _USBF5
                                    367 	.globl _USBF4
                                    368 	.globl _USBF3
                                    369 	.globl _USBF2
                                    370 	.globl _USBF1
                                    371 	.globl _USBF0
                                    372 	.globl _USBCNTH
                                    373 	.globl _USBCNTL
                                    374 	.globl _USBCNT0
                                    375 	.globl _USBCSOH
                                    376 	.globl _USBCSOL
                                    377 	.globl _USBMAXO
                                    378 	.globl _USBCSIH
                                    379 	.globl _USBCSIL
                                    380 	.globl _USBCS0
                                    381 	.globl _USBMAXI
                                    382 	.globl _USBCTRL
                                    383 	.globl _USBINDEX
                                    384 	.globl _USBFRMH
                                    385 	.globl _USBFRML
                                    386 	.globl _USBCIE
                                    387 	.globl _USBOIE
                                    388 	.globl _USBIIE
                                    389 	.globl _USBCIF
                                    390 	.globl _USBOIF
                                    391 	.globl _USBIIF
                                    392 	.globl _USBPOW
                                    393 	.globl _USBADDR
                                    394 	.globl _CSPT
                                    395 	.globl _CSPZ
                                    396 	.globl _CSPY
                                    397 	.globl _CSPX
                                    398 	.globl _CSPSTAT
                                    399 	.globl _CSPCTRL
                                    400 	.globl _CSPPROG23
                                    401 	.globl _CSPPROG22
                                    402 	.globl _CSPPROG21
                                    403 	.globl _CSPPROG20
                                    404 	.globl _CSPPROG19
                                    405 	.globl _CSPPROG18
                                    406 	.globl _CSPPROG17
                                    407 	.globl _CSPPROG16
                                    408 	.globl _CSPPROG15
                                    409 	.globl _CSPPROG14
                                    410 	.globl _CSPPROG13
                                    411 	.globl _CSPPROG12
                                    412 	.globl _CSPPROG11
                                    413 	.globl _CSPPROG10
                                    414 	.globl _CSPPROG9
                                    415 	.globl _CSPPROG8
                                    416 	.globl _CSPPROG7
                                    417 	.globl _CSPPROG6
                                    418 	.globl _CSPPROG5
                                    419 	.globl _CSPPROG4
                                    420 	.globl _CSPPROG3
                                    421 	.globl _CSPPROG2
                                    422 	.globl _CSPPROG1
                                    423 	.globl _CSPPROG0
                                    424 	.globl _RFC_OBS_CTRL2
                                    425 	.globl _RFC_OBS_CTRL1
                                    426 	.globl _RFC_OBS_CTRL0
                                    427 	.globl _TXFILTCFG
                                    428 	.globl _PTEST1
                                    429 	.globl _PTEST0
                                    430 	.globl _ATEST
                                    431 	.globl _DACTEST2
                                    432 	.globl _DACTEST1
                                    433 	.globl _DACTEST0
                                    434 	.globl _MDMTEST1
                                    435 	.globl _MDMTEST0
                                    436 	.globl _ADCTEST2
                                    437 	.globl _ADCTEST1
                                    438 	.globl _ADCTEST0
                                    439 	.globl _AGCCTRL3
                                    440 	.globl _AGCCTRL2
                                    441 	.globl _AGCCTRL1
                                    442 	.globl _AGCCTRL0
                                    443 	.globl _FSCAL3
                                    444 	.globl _FSCAL2
                                    445 	.globl _FSCAL1
                                    446 	.globl _FSCAL0
                                    447 	.globl _FSCTRL
                                    448 	.globl _RXCTRL
                                    449 	.globl _FREQEST
                                    450 	.globl _MDMCTRL1
                                    451 	.globl _MDMCTRL0
                                    452 	.globl _RFRND
                                    453 	.globl _RFERRM
                                    454 	.globl _RFIRQM1
                                    455 	.globl _RFIRQM0
                                    456 	.globl _TXLAST_PTR
                                    457 	.globl _TXFIRST_PTR
                                    458 	.globl _RXP1_PTR
                                    459 	.globl _RXLAST_PTR
                                    460 	.globl _RXFIRST_PTR
                                    461 	.globl _TXFIFOCNT
                                    462 	.globl _RXFIFOCNT
                                    463 	.globl _RXFIRST
                                    464 	.globl _RSSISTAT
                                    465 	.globl _RSSI
                                    466 	.globl _CCACTRL1
                                    467 	.globl _CCACTRL0
                                    468 	.globl _FSMCTRL
                                    469 	.globl _FIFOPCTRL
                                    470 	.globl _FSMSTAT1
                                    471 	.globl _FSMSTAT0
                                    472 	.globl _TXCTRL
                                    473 	.globl _TXPOWER
                                    474 	.globl _FREQCTRL
                                    475 	.globl _FREQTUNE
                                    476 	.globl _RXMASKCLR
                                    477 	.globl _RXMASKSET
                                    478 	.globl _RXENABLE
                                    479 	.globl _FRMCTRL1
                                    480 	.globl _FRMCTRL0
                                    481 	.globl _SRCEXTEN2
                                    482 	.globl _SRCEXTEN1
                                    483 	.globl _SRCEXTEN0
                                    484 	.globl _SRCSHORTEN2
                                    485 	.globl _SRCSHORTEN1
                                    486 	.globl _SRCSHORTEN0
                                    487 	.globl _SRCMATCH
                                    488 	.globl _FRMFILT1
                                    489 	.globl _FRMFILT0
                                    490 	.globl _SHORT_ADDR1
                                    491 	.globl _SHORT_ADDR0
                                    492 	.globl _PAN_ID1
                                    493 	.globl _PAN_ID0
                                    494 	.globl _EXT_ADDR7
                                    495 	.globl _EXT_ADDR6
                                    496 	.globl _EXT_ADDR5
                                    497 	.globl _EXT_ADDR4
                                    498 	.globl _EXT_ADDR3
                                    499 	.globl _EXT_ADDR2
                                    500 	.globl _EXT_ADDR1
                                    501 	.globl _EXT_ADDR0
                                    502 	.globl _SRCSHORTPENDEN2
                                    503 	.globl _SRCSHORTPENDEN1
                                    504 	.globl _SRCSHORTPENDEN0
                                    505 	.globl _SRCEXTPENDEN2
                                    506 	.globl _SRCEXTPENDEN1
                                    507 	.globl _SRCEXTPENDEN0
                                    508 	.globl _SRCRESINDEX
                                    509 	.globl _SRCRESMASK2
                                    510 	.globl _SRCRESMASK1
                                    511 	.globl _SRCRESMASK0
                                    512 	.globl _SRC_ADDR_TABLE
                                    513 	.globl _TXFIFO
                                    514 	.globl _RXFIFO
                                    515 	.globl _RFCORE_RAM
                                    516 	.globl _CMPCTL
                                    517 	.globl _OPAMPS
                                    518 	.globl _OPAMPC
                                    519 	.globl _STCV2
                                    520 	.globl _STCV1
                                    521 	.globl _STCV0
                                    522 	.globl _STCS
                                    523 	.globl _STCC
                                    524 	.globl _T1CC4H
                                    525 	.globl _T1CC4L
                                    526 	.globl _T1CC3H
                                    527 	.globl _T1CC3L
                                    528 	.globl _XX_T1CC2H
                                    529 	.globl _XX_T1CC2L
                                    530 	.globl _XX_T1CC1H
                                    531 	.globl _XX_T1CC1L
                                    532 	.globl _XX_T1CC0H
                                    533 	.globl _XX_T1CC0L
                                    534 	.globl _T1CCTL4
                                    535 	.globl _T1CCTL3
                                    536 	.globl _XX_T1CCTL2
                                    537 	.globl _XX_T1CCTL1
                                    538 	.globl _XX_T1CCTL0
                                    539 	.globl _CLD
                                    540 	.globl _IRCTL
                                    541 	.globl _CHIPINFO1
                                    542 	.globl _CHIPINFO0
                                    543 	.globl _FWDATA
                                    544 	.globl _FADDRH
                                    545 	.globl _FADDRL
                                    546 	.globl _FCTL
                                    547 	.globl _IVCTRL
                                    548 	.globl _BATTMON
                                    549 	.globl _SRCRC
                                    550 	.globl _DBGDATA
                                    551 	.globl _TESTREG0
                                    552 	.globl _CHIPID
                                    553 	.globl _CHVER
                                    554 	.globl _OBSSEL5
                                    555 	.globl _OBSSEL4
                                    556 	.globl _OBSSEL3
                                    557 	.globl _OBSSEL2
                                    558 	.globl _OBSSEL1
                                    559 	.globl _OBSSEL0
                                    560 	.globl _I2CIO
                                    561 	.globl _I2CWC
                                    562 	.globl _I2CADDR
                                    563 	.globl _I2CDATA
                                    564 	.globl _I2CSTAT
                                    565 	.globl _I2CCFG
                                    566 	.globl _OPAMPMC
                                    567 	.globl _MONMUX
                                    568 ;--------------------------------------------------------
                                    569 ; special function registers
                                    570 ;--------------------------------------------------------
                                    571 	.area RSEG    (ABS,DATA)
      000000                        572 	.org 0x0000
                           000080   573 _P0	=	0x0080
                           000081   574 _SP	=	0x0081
                           000082   575 _DPL0	=	0x0082
                           000083   576 _DPH0	=	0x0083
                           000084   577 _DPL1	=	0x0084
                           000085   578 _DPH1	=	0x0085
                           000087   579 _PCON	=	0x0087
                           000088   580 _TCON	=	0x0088
                           000090   581 _P1	=	0x0090
                           000092   582 _DPS	=	0x0092
                           000098   583 _S0CON	=	0x0098
                           00009A   584 _IEN2	=	0x009a
                           00009B   585 _S1CON	=	0x009b
                           0000A0   586 _P2	=	0x00a0
                           0000A8   587 _IEN0	=	0x00a8
                           0000A9   588 _IP0	=	0x00a9
                           0000B8   589 _IEN1	=	0x00b8
                           0000B9   590 _IP1	=	0x00b9
                           0000C0   591 _IRCON	=	0x00c0
                           0000D0   592 _PSW	=	0x00d0
                           0000E0   593 _ACC	=	0x00e0
                           0000E8   594 _IRCON2	=	0x00e8
                           0000F0   595 _B	=	0x00f0
                           0000B4   596 _ADCCON1	=	0x00b4
                           0000B5   597 _ADCCON2	=	0x00b5
                           0000B6   598 _ADCCON3	=	0x00b6
                           0000BA   599 _ADCL	=	0x00ba
                           0000BB   600 _ADCH	=	0x00bb
                           0000BC   601 _RNDL	=	0x00bc
                           0000BD   602 _RNDH	=	0x00bd
                           0000B1   603 _ENCDI	=	0x00b1
                           0000B2   604 _ENCDO	=	0x00b2
                           0000B3   605 _ENCCS	=	0x00b3
                           0000D1   606 _DMAIRQ	=	0x00d1
                           0000D2   607 _DMA1CFGL	=	0x00d2
                           0000D3   608 _DMA1CFGH	=	0x00d3
                           0000D4   609 _DMA0CFGL	=	0x00d4
                           0000D5   610 _DMA0CFGH	=	0x00d5
                           0000D6   611 _DMAARM	=	0x00d6
                           0000D7   612 _DMAREQ	=	0x00d7
                           000089   613 _P0IFG	=	0x0089
                           00008A   614 _P1IFG	=	0x008a
                           00008B   615 _P2IFG	=	0x008b
                           00008C   616 _PICTL	=	0x008c
                           0000AB   617 _P0IEN	=	0x00ab
                           00008D   618 _P1IEN	=	0x008d
                           0000AC   619 _P2IEN	=	0x00ac
                           00008F   620 _P0INP	=	0x008f
                           0000F1   621 _PERCFG	=	0x00f1
                           0000F2   622 _APCFG	=	0x00f2
                           0000F3   623 _P0SEL	=	0x00f3
                           0000F4   624 _P1SEL	=	0x00f4
                           0000F5   625 _P2SEL	=	0x00f5
                           0000F6   626 _P1INP	=	0x00f6
                           0000F7   627 _P2INP	=	0x00f7
                           0000FD   628 _P0DIR	=	0x00fd
                           0000FE   629 _P1DIR	=	0x00fe
                           0000FF   630 _P2DIR	=	0x00ff
                           0000AE   631 _PMUX	=	0x00ae
                           000093   632 _MPAGE	=	0x0093
                           000093   633 __XPAGE	=	0x0093
                           0000C7   634 _MEMCTR	=	0x00c7
                           00009F   635 _FMAP	=	0x009f
                           00009F   636 _PSBANK	=	0x009f
                           000091   637 _RFIRQF1	=	0x0091
                           0000D9   638 _RFD	=	0x00d9
                           0000E1   639 _RFST	=	0x00e1
                           0000E9   640 _RFIRQF0	=	0x00e9
                           0000BF   641 _RFERRF	=	0x00bf
                           000095   642 _ST0	=	0x0095
                           000096   643 _ST1	=	0x0096
                           000097   644 _ST2	=	0x0097
                           0000AD   645 _STLOAD	=	0x00ad
                           0000BE   646 _SLEEPCMD	=	0x00be
                           00009D   647 _SLEEPSTA	=	0x009d
                           0000C6   648 _CLKCONCMD	=	0x00c6
                           00009E   649 _CLKCONSTA	=	0x009e
                           0000DA   650 _T1CC0L	=	0x00da
                           0000DB   651 _T1CC0H	=	0x00db
                           0000DC   652 _T1CC1L	=	0x00dc
                           0000DD   653 _T1CC1H	=	0x00dd
                           0000DE   654 _T1CC2L	=	0x00de
                           0000DF   655 _T1CC2H	=	0x00df
                           0000E2   656 _T1CNTL	=	0x00e2
                           0000E3   657 _T1CNTH	=	0x00e3
                           0000E4   658 _T1CTL	=	0x00e4
                           0000E5   659 _T1CCTL0	=	0x00e5
                           0000E6   660 _T1CCTL1	=	0x00e6
                           0000E7   661 _T1CCTL2	=	0x00e7
                           0000AF   662 _T1STAT	=	0x00af
                           000094   663 _T2CTRL	=	0x0094
                           00009C   664 _T2EVTCFG	=	0x009c
                           0000A1   665 _T2IRQF	=	0x00a1
                           0000A2   666 _T2M0	=	0x00a2
                           0000A3   667 _T2M1	=	0x00a3
                           0000A4   668 _T2MOVF0	=	0x00a4
                           0000A5   669 _T2MOVF1	=	0x00a5
                           0000A6   670 _T2MOVF2	=	0x00a6
                           0000A7   671 _T2IRQM	=	0x00a7
                           0000C3   672 _T2MSEL	=	0x00c3
                           0000CA   673 _T3CNT	=	0x00ca
                           0000CB   674 _T3CTL	=	0x00cb
                           0000CC   675 _T3CCTL0	=	0x00cc
                           0000CD   676 _T3CC0	=	0x00cd
                           0000CE   677 _T3CCTL1	=	0x00ce
                           0000CF   678 _T3CC1	=	0x00cf
                           0000EA   679 _T4CNT	=	0x00ea
                           0000EB   680 _T4CTL	=	0x00eb
                           0000EC   681 _T4CCTL0	=	0x00ec
                           0000ED   682 _T4CC0	=	0x00ed
                           0000EE   683 _T4CCTL1	=	0x00ee
                           0000EF   684 _T4CC1	=	0x00ef
                           0000D8   685 _TIMIF	=	0x00d8
                           000086   686 _U0CSR	=	0x0086
                           0000C1   687 _U0DBUF	=	0x00c1
                           0000C2   688 _U0BAUD	=	0x00c2
                           0000C4   689 _U0UCR	=	0x00c4
                           0000C5   690 _U0GCR	=	0x00c5
                           0000F8   691 _U1CSR	=	0x00f8
                           0000F9   692 _U1DBUF	=	0x00f9
                           0000FA   693 _U1BAUD	=	0x00fa
                           0000FB   694 _U1UCR	=	0x00fb
                           0000FC   695 _U1GCR	=	0x00fc
                           0000C9   696 _WDCTL	=	0x00c9
                                    697 ;--------------------------------------------------------
                                    698 ; special function bits
                                    699 ;--------------------------------------------------------
                                    700 	.area RSEG    (ABS,DATA)
      000000                        701 	.org 0x0000
                           000087   702 _P0_7	=	0x0087
                           000086   703 _P0_6	=	0x0086
                           000085   704 _P0_5	=	0x0085
                           000084   705 _P0_4	=	0x0084
                           000083   706 _P0_3	=	0x0083
                           000082   707 _P0_2	=	0x0082
                           000081   708 _P0_1	=	0x0081
                           000080   709 _P0_0	=	0x0080
                           00008F   710 _URX1IF	=	0x008f
                           00008D   711 _ADCIF	=	0x008d
                           00008B   712 _URX0IF	=	0x008b
                           00008A   713 _IT1	=	0x008a
                           000089   714 _RFERRIF	=	0x0089
                           000088   715 _IT0	=	0x0088
                           000097   716 _P1_7	=	0x0097
                           000096   717 _P1_6	=	0x0096
                           000095   718 _P1_5	=	0x0095
                           000094   719 _P1_4	=	0x0094
                           000093   720 _P1_3	=	0x0093
                           000092   721 _P1_2	=	0x0092
                           000091   722 _P1_1	=	0x0091
                           000090   723 _P1_0	=	0x0090
                           000099   724 _ENCIF_1	=	0x0099
                           000098   725 _ENCIF_0	=	0x0098
                           0000A7   726 _P2_7	=	0x00a7
                           0000A6   727 _P2_6	=	0x00a6
                           0000A5   728 _P2_5	=	0x00a5
                           0000A4   729 _P2_4	=	0x00a4
                           0000A3   730 _P2_3	=	0x00a3
                           0000A2   731 _P2_2	=	0x00a2
                           0000A1   732 _P2_1	=	0x00a1
                           0000A0   733 _P2_0	=	0x00a0
                           0000AF   734 _EA	=	0x00af
                           0000AD   735 _STIE	=	0x00ad
                           0000AC   736 _ENCIE	=	0x00ac
                           0000AB   737 _URX1IE	=	0x00ab
                           0000AA   738 _URX0IE	=	0x00aa
                           0000A9   739 _ADCIE	=	0x00a9
                           0000A8   740 _RFERRIE	=	0x00a8
                           0000BD   741 _P0IE	=	0x00bd
                           0000BC   742 _T4IE	=	0x00bc
                           0000BB   743 _T3IE	=	0x00bb
                           0000BA   744 _T2IE	=	0x00ba
                           0000B9   745 _T1IE	=	0x00b9
                           0000B8   746 _DMAIE	=	0x00b8
                           0000C7   747 _STIF	=	0x00c7
                           0000C5   748 _P0IF	=	0x00c5
                           0000C4   749 _T4IF	=	0x00c4
                           0000C3   750 _T3IF	=	0x00c3
                           0000C2   751 _T2IF	=	0x00c2
                           0000C1   752 _T1IF	=	0x00c1
                           0000C0   753 _DMAIF	=	0x00c0
                           0000D7   754 _CY	=	0x00d7
                           0000D6   755 _AC	=	0x00d6
                           0000D5   756 _F0	=	0x00d5
                           0000D4   757 _RS1	=	0x00d4
                           0000D3   758 _RS0	=	0x00d3
                           0000D2   759 _OV	=	0x00d2
                           0000D1   760 _F1	=	0x00d1
                           0000D0   761 _P	=	0x00d0
                           0000E7   762 _ACC_7	=	0x00e7
                           0000E6   763 _ACC_6	=	0x00e6
                           0000E5   764 _ACC_5	=	0x00e5
                           0000E4   765 _ACC_4	=	0x00e4
                           0000E3   766 _ACC_3	=	0x00e3
                           0000E2   767 _ACC_2	=	0x00e2
                           0000E1   768 _ACC_1	=	0x00e1
                           0000E0   769 _ACC_0	=	0x00e0
                           0000EC   770 _WDTIF	=	0x00ec
                           0000EB   771 _P1IF	=	0x00eb
                           0000EA   772 _UTX1IF	=	0x00ea
                           0000E9   773 _UTX0IF	=	0x00e9
                           0000E8   774 _P2IF	=	0x00e8
                           0000F7   775 _B_7	=	0x00f7
                           0000F6   776 _B_6	=	0x00f6
                           0000F5   777 _B_5	=	0x00f5
                           0000F4   778 _B_4	=	0x00f4
                           0000F3   779 _B_3	=	0x00f3
                           0000F2   780 _B_2	=	0x00f2
                           0000F1   781 _B_1	=	0x00f1
                           0000F0   782 _B_0	=	0x00f0
                           0000DE   783 _OVFIM	=	0x00de
                           0000DD   784 _T4CH1IF	=	0x00dd
                           0000DC   785 _T4CH0IF	=	0x00dc
                           0000DB   786 _T4OVFIF	=	0x00db
                           0000DA   787 _T3CH1IF	=	0x00da
                           0000D9   788 _T3CH0IF	=	0x00d9
                           0000D8   789 _T3OVFIF	=	0x00d8
                           0000FF   790 _MODE	=	0x00ff
                           0000FE   791 _RE	=	0x00fe
                           0000FD   792 _SLAVE	=	0x00fd
                           0000FC   793 _FE	=	0x00fc
                           0000FB   794 _ERR	=	0x00fb
                           0000FA   795 _RX_BYTE	=	0x00fa
                           0000F9   796 _TX_BYTE	=	0x00f9
                           0000F8   797 _ACTIVE	=	0x00f8
                                    798 ;--------------------------------------------------------
                                    799 ; overlayable register banks
                                    800 ;--------------------------------------------------------
                                    801 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        802 	.ds 8
                                    803 ;--------------------------------------------------------
                                    804 ; internal ram data
                                    805 ;--------------------------------------------------------
                                    806 	.area DSEG    (DATA)
                                    807 ;--------------------------------------------------------
                                    808 ; overlayable items in internal ram 
                                    809 ;--------------------------------------------------------
                                    810 ;--------------------------------------------------------
                                    811 ; indirectly addressable internal ram data
                                    812 ;--------------------------------------------------------
                                    813 	.area ISEG    (DATA)
                                    814 ;--------------------------------------------------------
                                    815 ; absolute internal ram data
                                    816 ;--------------------------------------------------------
                                    817 	.area IABS    (ABS,DATA)
                                    818 	.area IABS    (ABS,DATA)
                                    819 ;--------------------------------------------------------
                                    820 ; bit data
                                    821 ;--------------------------------------------------------
                                    822 	.area BSEG    (BIT)
                                    823 ;--------------------------------------------------------
                                    824 ; paged external ram data
                                    825 ;--------------------------------------------------------
                                    826 	.area PSEG    (PAG,XDATA)
                                    827 ;--------------------------------------------------------
                                    828 ; external ram data
                                    829 ;--------------------------------------------------------
                                    830 	.area XSEG    (XDATA)
                           0061A6   831 _MONMUX	=	0x61a6
                           0061A6   832 _OPAMPMC	=	0x61a6
                           006230   833 _I2CCFG	=	0x6230
                           006231   834 _I2CSTAT	=	0x6231
                           006232   835 _I2CDATA	=	0x6232
                           006233   836 _I2CADDR	=	0x6233
                           006234   837 _I2CWC	=	0x6234
                           006235   838 _I2CIO	=	0x6235
                           006243   839 _OBSSEL0	=	0x6243
                           006244   840 _OBSSEL1	=	0x6244
                           006245   841 _OBSSEL2	=	0x6245
                           006246   842 _OBSSEL3	=	0x6246
                           006247   843 _OBSSEL4	=	0x6247
                           006248   844 _OBSSEL5	=	0x6248
                           006249   845 _CHVER	=	0x6249
                           00624A   846 _CHIPID	=	0x624a
                           00624B   847 _TESTREG0	=	0x624b
                           006260   848 _DBGDATA	=	0x6260
                           006262   849 _SRCRC	=	0x6262
                           006264   850 _BATTMON	=	0x6264
                           006265   851 _IVCTRL	=	0x6265
                           006270   852 _FCTL	=	0x6270
                           006271   853 _FADDRL	=	0x6271
                           006272   854 _FADDRH	=	0x6272
                           006273   855 _FWDATA	=	0x6273
                           006276   856 _CHIPINFO0	=	0x6276
                           006277   857 _CHIPINFO1	=	0x6277
                           006281   858 _IRCTL	=	0x6281
                           006290   859 _CLD	=	0x6290
                           0062A0   860 _XX_T1CCTL0	=	0x62a0
                           0062A1   861 _XX_T1CCTL1	=	0x62a1
                           0062A2   862 _XX_T1CCTL2	=	0x62a2
                           0062A3   863 _T1CCTL3	=	0x62a3
                           0062A4   864 _T1CCTL4	=	0x62a4
                           0062A6   865 _XX_T1CC0L	=	0x62a6
                           0062A7   866 _XX_T1CC0H	=	0x62a7
                           0062A8   867 _XX_T1CC1L	=	0x62a8
                           0062A9   868 _XX_T1CC1H	=	0x62a9
                           0062AA   869 _XX_T1CC2L	=	0x62aa
                           0062AB   870 _XX_T1CC2H	=	0x62ab
                           0062AC   871 _T1CC3L	=	0x62ac
                           0062AD   872 _T1CC3H	=	0x62ad
                           0062AE   873 _T1CC4L	=	0x62ae
                           0062AF   874 _T1CC4H	=	0x62af
                           0062B0   875 _STCC	=	0x62b0
                           0062B1   876 _STCS	=	0x62b1
                           0062B2   877 _STCV0	=	0x62b2
                           0062B3   878 _STCV1	=	0x62b3
                           0062B4   879 _STCV2	=	0x62b4
                           0062C0   880 _OPAMPC	=	0x62c0
                           0062C1   881 _OPAMPS	=	0x62c1
                           0062D0   882 _CMPCTL	=	0x62d0
                           006000   883 _RFCORE_RAM	=	0x6000
                           006000   884 _RXFIFO	=	0x6000
                           006080   885 _TXFIFO	=	0x6080
                           006100   886 _SRC_ADDR_TABLE	=	0x6100
                           006160   887 _SRCRESMASK0	=	0x6160
                           006161   888 _SRCRESMASK1	=	0x6161
                           006162   889 _SRCRESMASK2	=	0x6162
                           006163   890 _SRCRESINDEX	=	0x6163
                           006164   891 _SRCEXTPENDEN0	=	0x6164
                           006165   892 _SRCEXTPENDEN1	=	0x6165
                           006166   893 _SRCEXTPENDEN2	=	0x6166
                           006167   894 _SRCSHORTPENDEN0	=	0x6167
                           006168   895 _SRCSHORTPENDEN1	=	0x6168
                           006169   896 _SRCSHORTPENDEN2	=	0x6169
                           00616A   897 _EXT_ADDR0	=	0x616a
                           00616B   898 _EXT_ADDR1	=	0x616b
                           00616C   899 _EXT_ADDR2	=	0x616c
                           00616D   900 _EXT_ADDR3	=	0x616d
                           00616E   901 _EXT_ADDR4	=	0x616e
                           00616F   902 _EXT_ADDR5	=	0x616f
                           006170   903 _EXT_ADDR6	=	0x6170
                           006171   904 _EXT_ADDR7	=	0x6171
                           006172   905 _PAN_ID0	=	0x6172
                           006173   906 _PAN_ID1	=	0x6173
                           006174   907 _SHORT_ADDR0	=	0x6174
                           006175   908 _SHORT_ADDR1	=	0x6175
                           006180   909 _FRMFILT0	=	0x6180
                           006181   910 _FRMFILT1	=	0x6181
                           006182   911 _SRCMATCH	=	0x6182
                           006183   912 _SRCSHORTEN0	=	0x6183
                           006184   913 _SRCSHORTEN1	=	0x6184
                           006185   914 _SRCSHORTEN2	=	0x6185
                           006186   915 _SRCEXTEN0	=	0x6186
                           006187   916 _SRCEXTEN1	=	0x6187
                           006188   917 _SRCEXTEN2	=	0x6188
                           006189   918 _FRMCTRL0	=	0x6189
                           00618A   919 _FRMCTRL1	=	0x618a
                           00618B   920 _RXENABLE	=	0x618b
                           00618C   921 _RXMASKSET	=	0x618c
                           00618D   922 _RXMASKCLR	=	0x618d
                           00618E   923 _FREQTUNE	=	0x618e
                           00618F   924 _FREQCTRL	=	0x618f
                           006190   925 _TXPOWER	=	0x6190
                           006191   926 _TXCTRL	=	0x6191
                           006192   927 _FSMSTAT0	=	0x6192
                           006193   928 _FSMSTAT1	=	0x6193
                           006194   929 _FIFOPCTRL	=	0x6194
                           006195   930 _FSMCTRL	=	0x6195
                           006196   931 _CCACTRL0	=	0x6196
                           006197   932 _CCACTRL1	=	0x6197
                           006198   933 _RSSI	=	0x6198
                           006199   934 _RSSISTAT	=	0x6199
                           00619A   935 _RXFIRST	=	0x619a
                           00619B   936 _RXFIFOCNT	=	0x619b
                           00619C   937 _TXFIFOCNT	=	0x619c
                           00619D   938 _RXFIRST_PTR	=	0x619d
                           00619E   939 _RXLAST_PTR	=	0x619e
                           00619F   940 _RXP1_PTR	=	0x619f
                           0061A1   941 _TXFIRST_PTR	=	0x61a1
                           0061A2   942 _TXLAST_PTR	=	0x61a2
                           0061A3   943 _RFIRQM0	=	0x61a3
                           0061A4   944 _RFIRQM1	=	0x61a4
                           0061A5   945 _RFERRM	=	0x61a5
                           0061A7   946 _RFRND	=	0x61a7
                           0061A8   947 _MDMCTRL0	=	0x61a8
                           0061A9   948 _MDMCTRL1	=	0x61a9
                           0061AA   949 _FREQEST	=	0x61aa
                           0061AB   950 _RXCTRL	=	0x61ab
                           0061AC   951 _FSCTRL	=	0x61ac
                           0061AD   952 _FSCAL0	=	0x61ad
                           0061AE   953 _FSCAL1	=	0x61ae
                           0061AF   954 _FSCAL2	=	0x61af
                           0061B0   955 _FSCAL3	=	0x61b0
                           0061B1   956 _AGCCTRL0	=	0x61b1
                           0061B2   957 _AGCCTRL1	=	0x61b2
                           0061B3   958 _AGCCTRL2	=	0x61b3
                           0061B4   959 _AGCCTRL3	=	0x61b4
                           0061B5   960 _ADCTEST0	=	0x61b5
                           0061B6   961 _ADCTEST1	=	0x61b6
                           0061B7   962 _ADCTEST2	=	0x61b7
                           0061B8   963 _MDMTEST0	=	0x61b8
                           0061B9   964 _MDMTEST1	=	0x61b9
                           0061BA   965 _DACTEST0	=	0x61ba
                           0061BB   966 _DACTEST1	=	0x61bb
                           0061BC   967 _DACTEST2	=	0x61bc
                           0061BD   968 _ATEST	=	0x61bd
                           0061BE   969 _PTEST0	=	0x61be
                           0061BF   970 _PTEST1	=	0x61bf
                           0061FA   971 _TXFILTCFG	=	0x61fa
                           0061EB   972 _RFC_OBS_CTRL0	=	0x61eb
                           0061EC   973 _RFC_OBS_CTRL1	=	0x61ec
                           0061ED   974 _RFC_OBS_CTRL2	=	0x61ed
                           0061C0   975 _CSPPROG0	=	0x61c0
                           0061C1   976 _CSPPROG1	=	0x61c1
                           0061C2   977 _CSPPROG2	=	0x61c2
                           0061C3   978 _CSPPROG3	=	0x61c3
                           0061C4   979 _CSPPROG4	=	0x61c4
                           0061C5   980 _CSPPROG5	=	0x61c5
                           0061C6   981 _CSPPROG6	=	0x61c6
                           0061C7   982 _CSPPROG7	=	0x61c7
                           0061C8   983 _CSPPROG8	=	0x61c8
                           0061C9   984 _CSPPROG9	=	0x61c9
                           0061CA   985 _CSPPROG10	=	0x61ca
                           0061CB   986 _CSPPROG11	=	0x61cb
                           0061CC   987 _CSPPROG12	=	0x61cc
                           0061CD   988 _CSPPROG13	=	0x61cd
                           0061CE   989 _CSPPROG14	=	0x61ce
                           0061CF   990 _CSPPROG15	=	0x61cf
                           0061D0   991 _CSPPROG16	=	0x61d0
                           0061D1   992 _CSPPROG17	=	0x61d1
                           0061D2   993 _CSPPROG18	=	0x61d2
                           0061D3   994 _CSPPROG19	=	0x61d3
                           0061D4   995 _CSPPROG20	=	0x61d4
                           0061D5   996 _CSPPROG21	=	0x61d5
                           0061D6   997 _CSPPROG22	=	0x61d6
                           0061D7   998 _CSPPROG23	=	0x61d7
                           0061E0   999 _CSPCTRL	=	0x61e0
                           0061E1  1000 _CSPSTAT	=	0x61e1
                           0061E2  1001 _CSPX	=	0x61e2
                           0061E3  1002 _CSPY	=	0x61e3
                           0061E4  1003 _CSPZ	=	0x61e4
                           0061E5  1004 _CSPT	=	0x61e5
                           006200  1005 _USBADDR	=	0x6200
                           006201  1006 _USBPOW	=	0x6201
                           006202  1007 _USBIIF	=	0x6202
                           006204  1008 _USBOIF	=	0x6204
                           006206  1009 _USBCIF	=	0x6206
                           006207  1010 _USBIIE	=	0x6207
                           006209  1011 _USBOIE	=	0x6209
                           00620B  1012 _USBCIE	=	0x620b
                           00620C  1013 _USBFRML	=	0x620c
                           00620D  1014 _USBFRMH	=	0x620d
                           00620E  1015 _USBINDEX	=	0x620e
                           00620F  1016 _USBCTRL	=	0x620f
                           006210  1017 _USBMAXI	=	0x6210
                           006211  1018 _USBCS0	=	0x6211
                           006211  1019 _USBCSIL	=	0x6211
                           006212  1020 _USBCSIH	=	0x6212
                           006213  1021 _USBMAXO	=	0x6213
                           006214  1022 _USBCSOL	=	0x6214
                           006215  1023 _USBCSOH	=	0x6215
                           006216  1024 _USBCNT0	=	0x6216
                           006216  1025 _USBCNTL	=	0x6216
                           006217  1026 _USBCNTH	=	0x6217
                           006220  1027 _USBF0	=	0x6220
                           006222  1028 _USBF1	=	0x6222
                           006224  1029 _USBF2	=	0x6224
                           006226  1030 _USBF3	=	0x6226
                           006228  1031 _USBF4	=	0x6228
                           00622A  1032 _USBF5	=	0x622a
                           007080  1033 _X_P0	=	0x7080
                           007086  1034 _X_U0CSR	=	0x7086
                           007089  1035 _X_P0IFG	=	0x7089
                           00708A  1036 _X_P1IFG	=	0x708a
                           00708B  1037 _X_P2IFG	=	0x708b
                           00708C  1038 _X_PICTL	=	0x708c
                           00708D  1039 _X_P1IEN	=	0x708d
                           00708F  1040 _X_P0INP	=	0x708f
                           007090  1041 _X_P1	=	0x7090
                           007091  1042 _X_RFIRQF1	=	0x7091
                           007093  1043 _X_MPAGE	=	0x7093
                           007093  1044 _X__XPAGE	=	0x7093
                           007094  1045 _X_T2CTRL	=	0x7094
                           007095  1046 _X_ST0	=	0x7095
                           007096  1047 _X_ST1	=	0x7096
                           007097  1048 _X_ST2	=	0x7097
                           00709C  1049 _X_T2EVTCFG	=	0x709c
                           00709D  1050 _X_SLEEPSTA	=	0x709d
                           00709E  1051 _X_CLKCONSTA	=	0x709e
                           00709F  1052 _X_FMAP	=	0x709f
                           00709F  1053 _X_PSBANK	=	0x709f
                           0070A0  1054 _X_P2	=	0x70a0
                           0070A1  1055 _X_T2IRQF	=	0x70a1
                           0070A2  1056 _X_T2M0	=	0x70a2
                           0070A3  1057 _X_T2M1	=	0x70a3
                           0070A4  1058 _X_T2MOVF0	=	0x70a4
                           0070A5  1059 _X_T2MOVF1	=	0x70a5
                           0070A6  1060 _X_T2MOVF2	=	0x70a6
                           0070A7  1061 _X_T2IRQM	=	0x70a7
                           0070AB  1062 _X_P0IEN	=	0x70ab
                           0070AC  1063 _X_P2IEN	=	0x70ac
                           0070AD  1064 _X_STLOAD	=	0x70ad
                           0070AE  1065 _X_PMUX	=	0x70ae
                           0070AF  1066 _X_T1STAT	=	0x70af
                           0070B1  1067 _X_ENCDI	=	0x70b1
                           0070B2  1068 _X_ENCDO	=	0x70b2
                           0070B3  1069 _X_ENCCS	=	0x70b3
                           0070B4  1070 _X_ADCCON1	=	0x70b4
                           0070B5  1071 _X_ADCCON2	=	0x70b5
                           0070B6  1072 _X_ADCCON3	=	0x70b6
                           0070BA  1073 _X_ADCL	=	0x70ba
                           0070BB  1074 _X_ADCH	=	0x70bb
                           0070BC  1075 _X_RNDL	=	0x70bc
                           0070BD  1076 _X_RNDH	=	0x70bd
                           0070BE  1077 _X_SLEEPCMD	=	0x70be
                           0070BF  1078 _X_RFERRF	=	0x70bf
                           0070C1  1079 _X_U0DBUF	=	0x70c1
                           0070C2  1080 _X_U0BAUD	=	0x70c2
                           0070C3  1081 _X_T2MSEL	=	0x70c3
                           0070C4  1082 _X_U0UCR	=	0x70c4
                           0070C5  1083 _X_U0GCR	=	0x70c5
                           0070C6  1084 _X_CLKCONCMD	=	0x70c6
                           0070C7  1085 _X_MEMCTR	=	0x70c7
                           0070C9  1086 _X_WDCTL	=	0x70c9
                           0070CA  1087 _X_T3CNT	=	0x70ca
                           0070CB  1088 _X_T3CTL	=	0x70cb
                           0070CC  1089 _X_T3CCTL0	=	0x70cc
                           0070CD  1090 _X_T3CC0	=	0x70cd
                           0070CE  1091 _X_T3CCTL1	=	0x70ce
                           0070CF  1092 _X_T3CC1	=	0x70cf
                           0070D1  1093 _X_DMAIRQ	=	0x70d1
                           0070D2  1094 _X_DMA1CFGL	=	0x70d2
                           0070D3  1095 _X_DMA1CFGH	=	0x70d3
                           0070D4  1096 _X_DMA0CFGL	=	0x70d4
                           0070D5  1097 _X_DMA0CFGH	=	0x70d5
                           0070D6  1098 _X_DMAARM	=	0x70d6
                           0070D7  1099 _X_DMAREQ	=	0x70d7
                           0070D8  1100 _X_TIMIF	=	0x70d8
                           0070D9  1101 _X_RFD	=	0x70d9
                           0070DA  1102 _X_T1CC0L	=	0x70da
                           0070DB  1103 _X_T1CC0H	=	0x70db
                           0070DC  1104 _X_T1CC1L	=	0x70dc
                           0070DD  1105 _X_T1CC1H	=	0x70dd
                           0070DE  1106 _X_T1CC2L	=	0x70de
                           0070DF  1107 _X_T1CC2H	=	0x70df
                           0070E1  1108 _X_RFST	=	0x70e1
                           0070E2  1109 _X_T1CNTL	=	0x70e2
                           0070E3  1110 _X_T1CNTH	=	0x70e3
                           0070E4  1111 _X_T1CTL	=	0x70e4
                           0070E5  1112 _X_T1CCTL0	=	0x70e5
                           0070E6  1113 _X_T1CCTL1	=	0x70e6
                           0070E7  1114 _X_T1CCTL2	=	0x70e7
                           0070E9  1115 _X_RFIRQF0	=	0x70e9
                           0070EA  1116 _X_T4CNT	=	0x70ea
                           0070EB  1117 _X_T4CTL	=	0x70eb
                           0070EC  1118 _X_T4CCTL0	=	0x70ec
                           0070ED  1119 _X_T4CC0	=	0x70ed
                           0070EE  1120 _X_T4CCTL1	=	0x70ee
                           0070EF  1121 _X_T4CC1	=	0x70ef
                           0070F1  1122 _X_PERCFG	=	0x70f1
                           0070F2  1123 _X_APCFG	=	0x70f2
                           0070F3  1124 _X_P0SEL	=	0x70f3
                           0070F4  1125 _X_P1SEL	=	0x70f4
                           0070F5  1126 _X_P2SEL	=	0x70f5
                           0070F6  1127 _X_P1INP	=	0x70f6
                           0070F7  1128 _X_P2INP	=	0x70f7
                           0070F8  1129 _X_U1CSR	=	0x70f8
                           0070F9  1130 _X_U1DBUF	=	0x70f9
                           0070FA  1131 _X_U1BAUD	=	0x70fa
                           0070FB  1132 _X_U1UCR	=	0x70fb
                           0070FC  1133 _X_U1GCR	=	0x70fc
                           0070FD  1134 _X_P0DIR	=	0x70fd
                           0070FE  1135 _X_P1DIR	=	0x70fe
                           0070FF  1136 _X_P2DIR	=	0x70ff
                           007800  1137 _X_INFOPAGE	=	0x7800
                           00780C  1138 _X_IEEE_ADDR	=	0x780c
      000000                       1139 _pt:
      000000                       1140 	.ds 2
      000002                       1141 _is_listening:
      000002                       1142 	.ds 1
      000003                       1143 _encounter_memb_memb_count:
      000003                       1144 	.ds 4
      000007                       1145 _encounter_memb_memb_mem:
      000007                       1146 	.ds 52
      00003B                       1147 _is_streaming:
      00003B                       1148 	.ds 1
      00003C                       1149 _is_streaming_to:
      00003C                       1150 	.ds 8
      000044                       1151 _is_streaming_to_too:
      000044                       1152 	.ds 8
      00004C                       1153 _stream_until:
      00004C                       1154 	.ds 2
      00004E                       1155 _cpowercycle_ctimer:
      00004E                       1156 	.ds 22
                                   1157 ;--------------------------------------------------------
                                   1158 ; absolute external ram data
                                   1159 ;--------------------------------------------------------
                                   1160 	.area XABS    (ABS,XDATA)
                                   1161 ;--------------------------------------------------------
                                   1162 ; external initialized ram data
                                   1163 ;--------------------------------------------------------
                                   1164 	.area XISEG   (XDATA)
      000000                       1165 _cxmac_config::
      000000                       1166 	.ds 8
      000008                       1167 _cxmac_is_on:
      000008                       1168 	.ds 1
      000009                       1169 _waiting_for_packet:
      000009                       1170 	.ds 1
      00000A                       1171 _someone_is_sending:
      00000A                       1172 	.ds 1
      00000B                       1173 _we_are_sending:
      00000B                       1174 	.ds 1
      00000C                       1175 _radio_is_on:
      00000C                       1176 	.ds 1
      00000D                       1177 _encounter_list_list:
      00000D                       1178 	.ds 3
      000010                       1179 _encounter_list:
      000010                       1180 	.ds 3
      000013                       1181 _encounter_memb:
      000013                       1182 	.ds 10
                                   1183 	.area HOME    (CODE)
                                   1184 	.area GSINIT0 (CODE)
                                   1185 	.area GSINIT1 (CODE)
                                   1186 	.area GSINIT2 (CODE)
                                   1187 	.area GSINIT3 (CODE)
                                   1188 	.area GSINIT4 (CODE)
                                   1189 	.area GSINIT5 (CODE)
                                   1190 	.area GSINIT  (CODE)
                                   1191 	.area GSFINAL (CODE)
                                   1192 	.area CSEG    (CODE)
                                   1193 ;--------------------------------------------------------
                                   1194 ; global & static initialisations
                                   1195 ;--------------------------------------------------------
                                   1196 	.area HOME    (CODE)
                                   1197 	.area GSINIT  (CODE)
                                   1198 	.area GSFINAL (CODE)
                                   1199 	.area GSINIT  (CODE)
                                   1200 ;--------------------------------------------------------
                                   1201 ; Home
                                   1202 ;--------------------------------------------------------
                                   1203 	.area HOME    (CODE)
                                   1204 	.area HOME    (CODE)
                                   1205 ;--------------------------------------------------------
                                   1206 ; code
                                   1207 ;--------------------------------------------------------
                                   1208 	.area BANK1   (CODE)
                                   1209 ;------------------------------------------------------------
                                   1210 ;Allocation info for local variables in function 'on'
                                   1211 ;------------------------------------------------------------
                                   1212 ;	../../../../core/net/mac/cxmac.c:224: on(void)
                                   1213 ;	-----------------------------------------
                                   1214 ;	 function on
                                   1215 ;	-----------------------------------------
      000000                       1216 _on:
                           000007  1217 	ar7 = 0x07
                           000006  1218 	ar6 = 0x06
                           000005  1219 	ar5 = 0x05
                           000004  1220 	ar4 = 0x04
                           000003  1221 	ar3 = 0x03
                           000002  1222 	ar2 = 0x02
                           000001  1223 	ar1 = 0x01
                           000000  1224 	ar0 = 0x00
                                   1225 ;	../../../../core/net/mac/cxmac.c:226: if(cxmac_is_on && radio_is_on == 0) {
      000000 90r00r08         [24] 1226 	mov	dptr,#_cxmac_is_on
      000003 E0               [24] 1227 	movx	a,@dptr
      000004 FF               [12] 1228 	mov	r7,a
      000005 60 36            [24] 1229 	jz	00104$
      000007 90r00r0C         [24] 1230 	mov	dptr,#_radio_is_on
      00000A E0               [24] 1231 	movx	a,@dptr
      00000B FF               [12] 1232 	mov	r7,a
      00000C 70 2F            [24] 1233 	jnz	00104$
                                   1234 ;	../../../../core/net/mac/cxmac.c:227: radio_is_on = 1;
      00000E 90r00r0C         [24] 1235 	mov	dptr,#_radio_is_on
      000011 74 01            [12] 1236 	mov	a,#0x01
      000013 F0               [24] 1237 	movx	@dptr,a
                                   1238 ;	../../../../core/net/mac/cxmac.c:228: NETSTACK_RADIO.on();
      000014 90r00r18         [24] 1239 	mov	dptr,#(_cc2530_rf_driver + 0x0018)
      000017 E4               [12] 1240 	clr	a
      000018 93               [24] 1241 	movc	a,@a+dptr
      000019 FD               [12] 1242 	mov	r5,a
      00001A A3               [24] 1243 	inc	dptr
      00001B E4               [12] 1244 	clr	a
      00001C 93               [24] 1245 	movc	a,@a+dptr
      00001D FE               [12] 1246 	mov	r6,a
      00001E A3               [24] 1247 	inc	dptr
      00001F E4               [12] 1248 	clr	a
      000020 93               [24] 1249 	movc	a,@a+dptr
      000021 FF               [12] 1250 	mov	r7,a
      000022 C0 07            [24] 1251 	push	ar7
      000024 C0 06            [24] 1252 	push	ar6
      000026 C0 05            [24] 1253 	push	ar5
      000028 C0 05            [24] 1254 	push	ar5
      00002A C0 06            [24] 1255 	push	ar6
      00002C C0 07            [24] 1256 	push	ar7
      00002E D0 02            [24] 1257 	pop	ar2
      000030 D0 01            [24] 1258 	pop	ar1
      000032 D0 00            [24] 1259 	pop	ar0
      000034 12r00r00         [24] 1260 	lcall	__sdcc_banked_call
      000037 D0 05            [24] 1261 	pop	ar5
      000039 D0 06            [24] 1262 	pop	ar6
      00003B D0 07            [24] 1263 	pop	ar7
      00003D                       1264 00104$:
      00003D 02r00r00         [24] 1265 	ljmp	__sdcc_banked_ret
                                   1266 ;------------------------------------------------------------
                                   1267 ;Allocation info for local variables in function 'off'
                                   1268 ;------------------------------------------------------------
                                   1269 ;	../../../../core/net/mac/cxmac.c:234: off(void)
                                   1270 ;	-----------------------------------------
                                   1271 ;	 function off
                                   1272 ;	-----------------------------------------
      000040                       1273 _off:
                                   1274 ;	../../../../core/net/mac/cxmac.c:236: if(cxmac_is_on && radio_is_on != 0 && is_listening == 0 &&
      000040 90r00r08         [24] 1275 	mov	dptr,#_cxmac_is_on
      000043 E0               [24] 1276 	movx	a,@dptr
      000044 FF               [12] 1277 	mov	r7,a
      000045 60 43            [24] 1278 	jz	00106$
      000047 90r00r0C         [24] 1279 	mov	dptr,#_radio_is_on
      00004A E0               [24] 1280 	movx	a,@dptr
      00004B FF               [12] 1281 	mov	r7,a
      00004C 60 3C            [24] 1282 	jz	00106$
      00004E 90r00r02         [24] 1283 	mov	dptr,#_is_listening
      000051 E0               [24] 1284 	movx	a,@dptr
      000052 FF               [12] 1285 	mov	r7,a
      000053 70 35            [24] 1286 	jnz	00106$
                                   1287 ;	../../../../core/net/mac/cxmac.c:237: is_streaming == 0) {
      000055 90r00r3B         [24] 1288 	mov	dptr,#_is_streaming
      000058 E0               [24] 1289 	movx	a,@dptr
      000059 FF               [12] 1290 	mov	r7,a
      00005A 70 2E            [24] 1291 	jnz	00106$
                                   1292 ;	../../../../core/net/mac/cxmac.c:238: radio_is_on = 0;
      00005C 90r00r0C         [24] 1293 	mov	dptr,#_radio_is_on
      00005F E4               [12] 1294 	clr	a
      000060 F0               [24] 1295 	movx	@dptr,a
                                   1296 ;	../../../../core/net/mac/cxmac.c:239: NETSTACK_RADIO.off();
      000061 90r00r1B         [24] 1297 	mov	dptr,#(_cc2530_rf_driver + 0x001b)
      000064 E4               [12] 1298 	clr	a
      000065 93               [24] 1299 	movc	a,@a+dptr
      000066 FD               [12] 1300 	mov	r5,a
      000067 A3               [24] 1301 	inc	dptr
      000068 E4               [12] 1302 	clr	a
      000069 93               [24] 1303 	movc	a,@a+dptr
      00006A FE               [12] 1304 	mov	r6,a
      00006B A3               [24] 1305 	inc	dptr
      00006C E4               [12] 1306 	clr	a
      00006D 93               [24] 1307 	movc	a,@a+dptr
      00006E FF               [12] 1308 	mov	r7,a
      00006F C0 07            [24] 1309 	push	ar7
      000071 C0 06            [24] 1310 	push	ar6
      000073 C0 05            [24] 1311 	push	ar5
      000075 C0 05            [24] 1312 	push	ar5
      000077 C0 06            [24] 1313 	push	ar6
      000079 C0 07            [24] 1314 	push	ar7
      00007B D0 02            [24] 1315 	pop	ar2
      00007D D0 01            [24] 1316 	pop	ar1
      00007F D0 00            [24] 1317 	pop	ar0
      000081 12r00r00         [24] 1318 	lcall	__sdcc_banked_call
      000084 D0 05            [24] 1319 	pop	ar5
      000086 D0 06            [24] 1320 	pop	ar6
      000088 D0 07            [24] 1321 	pop	ar7
      00008A                       1322 00106$:
      00008A 02r00r00         [24] 1323 	ljmp	__sdcc_banked_ret
                                   1324 ;------------------------------------------------------------
                                   1325 ;Allocation info for local variables in function 'powercycle_turn_radio_off'
                                   1326 ;------------------------------------------------------------
                                   1327 ;	../../../../core/net/mac/cxmac.c:245: powercycle_turn_radio_off(void)
                                   1328 ;	-----------------------------------------
                                   1329 ;	 function powercycle_turn_radio_off
                                   1330 ;	-----------------------------------------
      00008D                       1331 _powercycle_turn_radio_off:
                                   1332 ;	../../../../core/net/mac/cxmac.c:247: if(we_are_sending == 0 &&
      00008D 90r00r0B         [24] 1333 	mov	dptr,#_we_are_sending
      000090 E0               [24] 1334 	movx	a,@dptr
      000091 FF               [12] 1335 	mov	r7,a
      000092 70 10            [24] 1336 	jnz	00104$
                                   1337 ;	../../../../core/net/mac/cxmac.c:248: waiting_for_packet == 0) {
      000094 90r00r09         [24] 1338 	mov	dptr,#_waiting_for_packet
      000097 E0               [24] 1339 	movx	a,@dptr
      000098 FF               [12] 1340 	mov	r7,a
      000099 70 09            [24] 1341 	jnz	00104$
                                   1342 ;	../../../../core/net/mac/cxmac.c:249: off();
      00009B 78r40            [12] 1343 	mov	r0,#_off
      00009D 79s00            [12] 1344 	mov	r1,#(_off >> 8)
      00009F 7As00            [12] 1345 	mov	r2,#(_off >> 16)
      0000A1 12r00r00         [24] 1346 	lcall	__sdcc_banked_call
      0000A4                       1347 00104$:
      0000A4 02r00r00         [24] 1348 	ljmp	__sdcc_banked_ret
                                   1349 ;------------------------------------------------------------
                                   1350 ;Allocation info for local variables in function 'powercycle_turn_radio_on'
                                   1351 ;------------------------------------------------------------
                                   1352 ;	../../../../core/net/mac/cxmac.c:256: powercycle_turn_radio_on(void)
                                   1353 ;	-----------------------------------------
                                   1354 ;	 function powercycle_turn_radio_on
                                   1355 ;	-----------------------------------------
      0000A7                       1356 _powercycle_turn_radio_on:
                                   1357 ;	../../../../core/net/mac/cxmac.c:258: if(we_are_sending == 0 &&
      0000A7 90r00r0B         [24] 1358 	mov	dptr,#_we_are_sending
      0000AA E0               [24] 1359 	movx	a,@dptr
      0000AB FF               [12] 1360 	mov	r7,a
      0000AC 70 10            [24] 1361 	jnz	00104$
                                   1362 ;	../../../../core/net/mac/cxmac.c:259: waiting_for_packet == 0) {
      0000AE 90r00r09         [24] 1363 	mov	dptr,#_waiting_for_packet
      0000B1 E0               [24] 1364 	movx	a,@dptr
      0000B2 FF               [12] 1365 	mov	r7,a
      0000B3 70 09            [24] 1366 	jnz	00104$
                                   1367 ;	../../../../core/net/mac/cxmac.c:260: on();
      0000B5 78r00            [12] 1368 	mov	r0,#_on
      0000B7 79s00            [12] 1369 	mov	r1,#(_on >> 8)
      0000B9 7As00            [12] 1370 	mov	r2,#(_on >> 16)
      0000BB 12r00r00         [24] 1371 	lcall	__sdcc_banked_call
      0000BE                       1372 00104$:
      0000BE 02r00r00         [24] 1373 	ljmp	__sdcc_banked_ret
                                   1374 ;------------------------------------------------------------
                                   1375 ;Allocation info for local variables in function 'cschedule_powercycle'
                                   1376 ;------------------------------------------------------------
                                   1377 ;time                      Allocated to registers r6 r7 
                                   1378 ;------------------------------------------------------------
                                   1379 ;	../../../../core/net/mac/cxmac.c:268: cschedule_powercycle(clock_time_t time)
                                   1380 ;	-----------------------------------------
                                   1381 ;	 function cschedule_powercycle
                                   1382 ;	-----------------------------------------
      0000C1                       1383 _cschedule_powercycle:
      0000C1 AE 82            [24] 1384 	mov	r6,dpl
      0000C3 AF 83            [24] 1385 	mov	r7,dph
                                   1386 ;	../../../../core/net/mac/cxmac.c:271: if(cxmac_is_on) {
      0000C5 90r00r08         [24] 1387 	mov	dptr,#_cxmac_is_on
      0000C8 E0               [24] 1388 	movx	a,@dptr
      0000C9 FD               [12] 1389 	mov	r5,a
      0000CA 60 33            [24] 1390 	jz	00105$
                                   1391 ;	../../../../core/net/mac/cxmac.c:272: if(time == 0) {
      0000CC EE               [12] 1392 	mov	a,r6
      0000CD 4F               [12] 1393 	orl	a,r7
                                   1394 ;	../../../../core/net/mac/cxmac.c:273: time = 1;
      0000CE 70 03            [24] 1395 	jnz	00102$
      0000D0 7E 01            [12] 1396 	mov	r6,#0x01
      0000D2 FF               [12] 1397 	mov	r7,a
      0000D3                       1398 00102$:
                                   1399 ;	../../../../core/net/mac/cxmac.c:276: (void (*)(void *))cpowercycle, NULL);
      0000D3 7Br02            [12] 1400 	mov	r3,#_cpowercycle
      0000D5 7Cs01            [12] 1401 	mov	r4,#(_cpowercycle >> 8)
      0000D7 7Ds00            [12] 1402 	mov	r5,#(_cpowercycle >> 16)
                                   1403 ;	../../../../core/net/mac/cxmac.c:275: ctimer_set(&cpowercycle_ctimer, time,
      0000D9 E4               [12] 1404 	clr	a
      0000DA C0 E0            [24] 1405 	push	acc
      0000DC C0 E0            [24] 1406 	push	acc
      0000DE C0 E0            [24] 1407 	push	acc
      0000E0 C0 03            [24] 1408 	push	ar3
      0000E2 C0 04            [24] 1409 	push	ar4
      0000E4 C0 05            [24] 1410 	push	ar5
      0000E6 C0 06            [24] 1411 	push	ar6
      0000E8 C0 07            [24] 1412 	push	ar7
      0000EA 90r00r4E         [24] 1413 	mov	dptr,#_cpowercycle_ctimer
      0000ED 75 F0 00         [24] 1414 	mov	b,#0x00
      0000F0 78r00            [12] 1415 	mov	r0,#_ctimer_set
      0000F2 79s00            [12] 1416 	mov	r1,#(_ctimer_set >> 8)
      0000F4 7As00            [12] 1417 	mov	r2,#(_ctimer_set >> 16)
      0000F6 12r00r00         [24] 1418 	lcall	__sdcc_banked_call
      0000F9 E5 81            [12] 1419 	mov	a,sp
      0000FB 24 F8            [12] 1420 	add	a,#0xf8
      0000FD F5 81            [12] 1421 	mov	sp,a
      0000FF                       1422 00105$:
      0000FF 02r00r00         [24] 1423 	ljmp	__sdcc_banked_ret
                                   1424 ;------------------------------------------------------------
                                   1425 ;Allocation info for local variables in function 'cpowercycle'
                                   1426 ;------------------------------------------------------------
                                   1427 ;ptr                       Allocated to registers 
                                   1428 ;PT_YIELD_FLAG             Allocated to registers r7 
                                   1429 ;------------------------------------------------------------
                                   1430 ;	../../../../core/net/mac/cxmac.c:281: cpowercycle(void *ptr)
                                   1431 ;	-----------------------------------------
                                   1432 ;	 function cpowercycle
                                   1433 ;	-----------------------------------------
      000102                       1434 _cpowercycle:
                                   1435 ;	../../../../core/net/mac/cxmac.c:283: if(is_streaming) {
      000102 90r00r3B         [24] 1436 	mov	dptr,#_is_streaming
      000105 E0               [24] 1437 	movx	a,@dptr
      000106 FF               [12] 1438 	mov	r7,a
      000107 60 67            [24] 1439 	jz	00104$
                                   1440 ;	../../../../core/net/mac/cxmac.c:284: if(!RTIMER_CLOCK_LT(RTIMER_NOW(), stream_until)) {
      000109 AE E2            [24] 1441 	mov	r6,_T1CNTL
      00010B 7F 00            [12] 1442 	mov	r7,#0x00
      00010D AC E3            [24] 1443 	mov	r4,_T1CNTH
      00010F 8C 05            [24] 1444 	mov	ar5,r4
      000111 E4               [12] 1445 	clr	a
      000112 2E               [12] 1446 	add	a,r6
      000113 FE               [12] 1447 	mov	r6,a
      000114 ED               [12] 1448 	mov	a,r5
      000115 3F               [12] 1449 	addc	a,r7
      000116 FF               [12] 1450 	mov	r7,a
      000117 90r00r4C         [24] 1451 	mov	dptr,#_stream_until
      00011A E0               [24] 1452 	movx	a,@dptr
      00011B FC               [12] 1453 	mov	r4,a
      00011C A3               [24] 1454 	inc	dptr
      00011D E0               [24] 1455 	movx	a,@dptr
      00011E FD               [12] 1456 	mov	r5,a
      00011F EE               [12] 1457 	mov	a,r6
      000120 C3               [12] 1458 	clr	c
      000121 9C               [12] 1459 	subb	a,r4
      000122 FC               [12] 1460 	mov	r4,a
      000123 EF               [12] 1461 	mov	a,r7
      000124 9D               [12] 1462 	subb	a,r5
      000125 FD               [12] 1463 	mov	r5,a
      000126 20 E7 47         [24] 1464 	jb	acc.7,00104$
                                   1465 ;	../../../../core/net/mac/cxmac.c:285: is_streaming = 0;
      000129 90r00r3B         [24] 1466 	mov	dptr,#_is_streaming
      00012C E4               [12] 1467 	clr	a
      00012D F0               [24] 1468 	movx	@dptr,a
                                   1469 ;	../../../../core/net/mac/cxmac.c:286: rimeaddr_copy(&is_streaming_to, &rimeaddr_null);
      00012E 74r00            [12] 1470 	mov	a,#_rimeaddr_null
      000130 C0 E0            [24] 1471 	push	acc
      000132 74s00            [12] 1472 	mov	a,#(_rimeaddr_null >> 8)
      000134 C0 E0            [24] 1473 	push	acc
      000136 74 80            [12] 1474 	mov	a,#0x80
      000138 C0 E0            [24] 1475 	push	acc
      00013A 90r00r3C         [24] 1476 	mov	dptr,#_is_streaming_to
      00013D 75 F0 00         [24] 1477 	mov	b,#0x00
      000140 78r00            [12] 1478 	mov	r0,#_rimeaddr_copy
      000142 79s00            [12] 1479 	mov	r1,#(_rimeaddr_copy >> 8)
      000144 7As00            [12] 1480 	mov	r2,#(_rimeaddr_copy >> 16)
      000146 12r00r00         [24] 1481 	lcall	__sdcc_banked_call
      000149 15 81            [12] 1482 	dec	sp
      00014B 15 81            [12] 1483 	dec	sp
      00014D 15 81            [12] 1484 	dec	sp
                                   1485 ;	../../../../core/net/mac/cxmac.c:287: rimeaddr_copy(&is_streaming_to_too, &rimeaddr_null);
      00014F 74r00            [12] 1486 	mov	a,#_rimeaddr_null
      000151 C0 E0            [24] 1487 	push	acc
      000153 74s00            [12] 1488 	mov	a,#(_rimeaddr_null >> 8)
      000155 C0 E0            [24] 1489 	push	acc
      000157 74 80            [12] 1490 	mov	a,#0x80
      000159 C0 E0            [24] 1491 	push	acc
      00015B 90r00r44         [24] 1492 	mov	dptr,#_is_streaming_to_too
      00015E 75 F0 00         [24] 1493 	mov	b,#0x00
      000161 78r00            [12] 1494 	mov	r0,#_rimeaddr_copy
      000163 79s00            [12] 1495 	mov	r1,#(_rimeaddr_copy >> 8)
      000165 7As00            [12] 1496 	mov	r2,#(_rimeaddr_copy >> 16)
      000167 12r00r00         [24] 1497 	lcall	__sdcc_banked_call
      00016A 15 81            [12] 1498 	dec	sp
      00016C 15 81            [12] 1499 	dec	sp
      00016E 15 81            [12] 1500 	dec	sp
      000170                       1501 00104$:
                                   1502 ;	../../../../core/net/mac/cxmac.c:291: PT_BEGIN(&pt);
      000170 7F 01            [12] 1503 	mov	r7,#0x01
      000172 90r00r00         [24] 1504 	mov	dptr,#_pt
      000175 E0               [24] 1505 	movx	a,@dptr
      000176 FD               [12] 1506 	mov	r5,a
      000177 A3               [24] 1507 	inc	dptr
      000178 E0               [24] 1508 	movx	a,@dptr
      000179 FE               [12] 1509 	mov	r6,a
      00017A BD 00 05         [24] 1510 	cjne	r5,#0x00,00170$
      00017D BE 00 02         [24] 1511 	cjne	r6,#0x00,00170$
      000180 80 14            [24] 1512 	sjmp	00127$
      000182                       1513 00170$:
      000182 BD 2E 05         [24] 1514 	cjne	r5,#0x2E,00171$
      000185 BE 01 02         [24] 1515 	cjne	r6,#0x01,00171$
      000188 80 3D            [24] 1516 	sjmp	00108$
      00018A                       1517 00171$:
      00018A BD 3D 06         [24] 1518 	cjne	r5,#0x3D,00172$
      00018D BE 01 03         [24] 1519 	cjne	r6,#0x01,00172$
      000190 02r02r20         [24] 1520 	ljmp	00118$
      000193                       1521 00172$:
      000193 02r02r2B         [24] 1522 	ljmp	00129$
                                   1523 ;	../../../../core/net/mac/cxmac.c:293: while(1) {
      000196                       1524 00127$:
                                   1525 ;	../../../../core/net/mac/cxmac.c:295: if(someone_is_sending > 0) {
      000196 90r00r0A         [24] 1526 	mov	dptr,#_someone_is_sending
      000199 E0               [24] 1527 	movx	a,@dptr
      00019A FE               [12] 1528 	mov	r6,a
      00019B 60 09            [24] 1529 	jz	00107$
                                   1530 ;	../../../../core/net/mac/cxmac.c:296: someone_is_sending--;
      00019D 90r00r0A         [24] 1531 	mov	dptr,#_someone_is_sending
      0001A0 E0               [24] 1532 	movx	a,@dptr
      0001A1 14               [12] 1533 	dec	a
      0001A2 90r00r0A         [24] 1534 	mov	dptr,#_someone_is_sending
      0001A5 F0               [24] 1535 	movx	@dptr,a
      0001A6                       1536 00107$:
                                   1537 ;	../../../../core/net/mac/cxmac.c:300: powercycle_turn_radio_on();
      0001A6 78rA7            [12] 1538 	mov	r0,#_powercycle_turn_radio_on
      0001A8 79s00            [12] 1539 	mov	r1,#(_powercycle_turn_radio_on >> 8)
      0001AA 7As00            [12] 1540 	mov	r2,#(_powercycle_turn_radio_on >> 16)
      0001AC 12r00r00         [24] 1541 	lcall	__sdcc_banked_call
                                   1542 ;	../../../../core/net/mac/cxmac.c:301: CSCHEDULE_POWERCYCLE(DEFAULT_ON_TIME);
      0001AF 90 00 00         [24] 1543 	mov	dptr,#0x0000
      0001B2 78rC1            [12] 1544 	mov	r0,#_cschedule_powercycle
      0001B4 79s00            [12] 1545 	mov	r1,#(_cschedule_powercycle >> 8)
      0001B6 7As00            [12] 1546 	mov	r2,#(_cschedule_powercycle >> 16)
      0001B8 12r00r00         [24] 1547 	lcall	__sdcc_banked_call
                                   1548 ;	../../../../core/net/mac/cxmac.c:302: PT_YIELD(&pt);
      0001BB 7F 00            [12] 1549 	mov	r7,#0x00
      0001BD 90r00r00         [24] 1550 	mov	dptr,#_pt
      0001C0 74 2E            [12] 1551 	mov	a,#0x2E
      0001C2 F0               [24] 1552 	movx	@dptr,a
      0001C3 74 01            [12] 1553 	mov	a,#0x01
      0001C5 A3               [24] 1554 	inc	dptr
      0001C6 F0               [24] 1555 	movx	@dptr,a
      0001C7                       1556 00108$:
      0001C7 EF               [12] 1557 	mov	a,r7
      0001C8 70 05            [24] 1558 	jnz	00112$
      0001CA 75 82 01         [24] 1559 	mov	dpl,#0x01
      0001CD 80 67            [24] 1560 	sjmp	00130$
      0001CF                       1561 00112$:
                                   1562 ;	../../../../core/net/mac/cxmac.c:304: if(cxmac_config.off_time > 0) {
      0001CF 90r00r02         [24] 1563 	mov	dptr,#(_cxmac_config + 0x0002)
      0001D2 E0               [24] 1564 	movx	a,@dptr
      0001D3 FD               [12] 1565 	mov	r5,a
      0001D4 A3               [24] 1566 	inc	dptr
      0001D5 E0               [24] 1567 	movx	a,@dptr
      0001D6 FE               [12] 1568 	mov	r6,a
      0001D7 4D               [12] 1569 	orl	a,r5
      0001D8 60 BC            [24] 1570 	jz	00127$
                                   1571 ;	../../../../core/net/mac/cxmac.c:305: powercycle_turn_radio_off();
      0001DA 78r8D            [12] 1572 	mov	r0,#_powercycle_turn_radio_off
      0001DC 79s00            [12] 1573 	mov	r1,#(_powercycle_turn_radio_off >> 8)
      0001DE 7As00            [12] 1574 	mov	r2,#(_powercycle_turn_radio_off >> 16)
      0001E0 12r00r00         [24] 1575 	lcall	__sdcc_banked_call
                                   1576 ;	../../../../core/net/mac/cxmac.c:306: if(waiting_for_packet != 0) {
      0001E3 90r00r09         [24] 1577 	mov	dptr,#_waiting_for_packet
      0001E6 E0               [24] 1578 	movx	a,@dptr
      0001E7 FE               [12] 1579 	mov	r6,a
      0001E8 60 1E            [24] 1580 	jz	00117$
                                   1581 ;	../../../../core/net/mac/cxmac.c:307: waiting_for_packet++;
      0001EA 90r00r09         [24] 1582 	mov	dptr,#_waiting_for_packet
      0001ED E0               [24] 1583 	movx	a,@dptr
      0001EE 24 01            [12] 1584 	add	a,#0x01
      0001F0 F0               [24] 1585 	movx	@dptr,a
                                   1586 ;	../../../../core/net/mac/cxmac.c:308: if(waiting_for_packet > 2) {
      0001F1 90r00r09         [24] 1587 	mov	dptr,#_waiting_for_packet
      0001F4 E0               [24] 1588 	movx	a,@dptr
      0001F5 FE               [12] 1589 	mov  r6,a
      0001F6 24 FD            [12] 1590 	add	a,#0xff - 0x02
      0001F8 50 0E            [24] 1591 	jnc	00117$
                                   1592 ;	../../../../core/net/mac/cxmac.c:312: waiting_for_packet = 0;
      0001FA 90r00r09         [24] 1593 	mov	dptr,#_waiting_for_packet
      0001FD E4               [12] 1594 	clr	a
      0001FE F0               [24] 1595 	movx	@dptr,a
                                   1596 ;	../../../../core/net/mac/cxmac.c:313: powercycle_turn_radio_off();
      0001FF 78r8D            [12] 1597 	mov	r0,#_powercycle_turn_radio_off
      000201 79s00            [12] 1598 	mov	r1,#(_powercycle_turn_radio_off >> 8)
      000203 7As00            [12] 1599 	mov	r2,#(_powercycle_turn_radio_off >> 16)
      000205 12r00r00         [24] 1600 	lcall	__sdcc_banked_call
      000208                       1601 00117$:
                                   1602 ;	../../../../core/net/mac/cxmac.c:316: CSCHEDULE_POWERCYCLE(DEFAULT_OFF_TIME);
      000208 90 00 0F         [24] 1603 	mov	dptr,#0x000F
      00020B 78rC1            [12] 1604 	mov	r0,#_cschedule_powercycle
      00020D 79s00            [12] 1605 	mov	r1,#(_cschedule_powercycle >> 8)
      00020F 7As00            [12] 1606 	mov	r2,#(_cschedule_powercycle >> 16)
      000211 12r00r00         [24] 1607 	lcall	__sdcc_banked_call
                                   1608 ;	../../../../core/net/mac/cxmac.c:317: PT_YIELD(&pt);
      000214 7F 00            [12] 1609 	mov	r7,#0x00
      000216 90r00r00         [24] 1610 	mov	dptr,#_pt
      000219 74 3D            [12] 1611 	mov	a,#0x3D
      00021B F0               [24] 1612 	movx	@dptr,a
      00021C 74 01            [12] 1613 	mov	a,#0x01
      00021E A3               [24] 1614 	inc	dptr
      00021F F0               [24] 1615 	movx	@dptr,a
      000220                       1616 00118$:
      000220 EF               [12] 1617 	mov	a,r7
      000221 60 03            [24] 1618 	jz	00178$
      000223 02r01r96         [24] 1619 	ljmp	00127$
      000226                       1620 00178$:
      000226 75 82 01         [24] 1621 	mov	dpl,#0x01
                                   1622 ;	../../../../core/net/mac/cxmac.c:321: PT_END(&pt);
      000229 80 0B            [24] 1623 	sjmp	00130$
      00022B                       1624 00129$:
      00022B 90r00r00         [24] 1625 	mov	dptr,#_pt
      00022E E4               [12] 1626 	clr	a
      00022F F0               [24] 1627 	movx	@dptr,a
      000230 E4               [12] 1628 	clr	a
      000231 A3               [24] 1629 	inc	dptr
      000232 F0               [24] 1630 	movx	@dptr,a
      000233 75 82 03         [24] 1631 	mov	dpl,#0x03
      000236                       1632 00130$:
      000236 02r00r00         [24] 1633 	ljmp	__sdcc_banked_ret
                                   1634 ;------------------------------------------------------------
                                   1635 ;Allocation info for local variables in function 'register_encounter'
                                   1636 ;------------------------------------------------------------
                                   1637 ;time                      Allocated to stack - sp -7
                                   1638 ;neighbor                  Allocated to stack - sp -2
                                   1639 ;e                         Allocated to registers r2 r3 r4 
                                   1640 ;------------------------------------------------------------
                                   1641 ;	../../../../core/net/mac/cxmac.c:386: register_encounter(const rimeaddr_t *neighbor, rtimer_clock_t time)
                                   1642 ;	-----------------------------------------
                                   1643 ;	 function register_encounter
                                   1644 ;	-----------------------------------------
      000239                       1645 _register_encounter:
      000239 C0 82            [24] 1646 	push	dpl
      00023B C0 83            [24] 1647 	push	dph
      00023D C0 F0            [24] 1648 	push	b
                                   1649 ;	../../../../core/net/mac/cxmac.c:391: for(e = list_head(encounter_list); e != NULL; e = list_item_next(e)) {
      00023F 90r00r10         [24] 1650 	mov	dptr,#_encounter_list
      000242 E0               [24] 1651 	movx	a,@dptr
      000243 FA               [12] 1652 	mov	r2,a
      000244 A3               [24] 1653 	inc	dptr
      000245 E0               [24] 1654 	movx	a,@dptr
      000246 FB               [12] 1655 	mov	r3,a
      000247 A3               [24] 1656 	inc	dptr
      000248 E0               [24] 1657 	movx	a,@dptr
      000249 FC               [12] 1658 	mov	r4,a
      00024A 8A 82            [24] 1659 	mov	dpl,r2
      00024C 8B 83            [24] 1660 	mov	dph,r3
      00024E 8C F0            [24] 1661 	mov	b,r4
      000250 78r00            [12] 1662 	mov	r0,#_list_head
      000252 79s00            [12] 1663 	mov	r1,#(_list_head >> 8)
      000254 7As00            [12] 1664 	mov	r2,#(_list_head >> 16)
      000256 12r00r00         [24] 1665 	lcall	__sdcc_banked_call
      000259 AA 82            [24] 1666 	mov	r2,dpl
      00025B AB 83            [24] 1667 	mov	r3,dph
      00025D AC F0            [24] 1668 	mov	r4,b
      00025F                       1669 00109$:
      00025F E4               [12] 1670 	clr	a
      000260 C0 E0            [24] 1671 	push	acc
      000262 E4               [12] 1672 	clr	a
      000263 C0 E0            [24] 1673 	push	acc
      000265 E4               [12] 1674 	clr	a
      000266 C0 E0            [24] 1675 	push	acc
      000268 8A 82            [24] 1676 	mov	dpl,r2
      00026A 8B 83            [24] 1677 	mov	dph,r3
      00026C 8C F0            [24] 1678 	mov	b,r4
      00026E 12r00r00         [24] 1679 	lcall	___gptr_cmp
      000271 15 81            [12] 1680 	dec	sp
      000273 15 81            [12] 1681 	dec	sp
      000275 15 81            [12] 1682 	dec	sp
      000277 70 03            [24] 1683 	jnz	00128$
      000279 02r02rFF         [24] 1684 	ljmp	00103$
      00027C                       1685 00128$:
                                   1686 ;	../../../../core/net/mac/cxmac.c:392: if(rimeaddr_cmp(neighbor, &e->neighbor)) {
      00027C 74 03            [12] 1687 	mov	a,#0x03
      00027E 2A               [12] 1688 	add	a,r2
      00027F FD               [12] 1689 	mov	r5,a
      000280 E4               [12] 1690 	clr	a
      000281 3B               [12] 1691 	addc	a,r3
      000282 FE               [12] 1692 	mov	r6,a
      000283 8C 07            [24] 1693 	mov	ar7,r4
      000285 C0 04            [24] 1694 	push	ar4
      000287 C0 03            [24] 1695 	push	ar3
      000289 C0 02            [24] 1696 	push	ar2
      00028B C0 05            [24] 1697 	push	ar5
      00028D C0 06            [24] 1698 	push	ar6
      00028F C0 07            [24] 1699 	push	ar7
      000291 E5 81            [12] 1700 	mov	a,sp
      000293 24 F8            [12] 1701 	add	a,#0xf8
      000295 F8               [12] 1702 	mov	r0,a
      000296 86 82            [24] 1703 	mov	dpl,@r0
      000298 08               [12] 1704 	inc	r0
      000299 86 83            [24] 1705 	mov	dph,@r0
      00029B 08               [12] 1706 	inc	r0
      00029C 86 F0            [24] 1707 	mov	b,@r0
      00029E 78r00            [12] 1708 	mov	r0,#_rimeaddr_cmp
      0002A0 79s00            [12] 1709 	mov	r1,#(_rimeaddr_cmp >> 8)
      0002A2 7As00            [12] 1710 	mov	r2,#(_rimeaddr_cmp >> 16)
      0002A4 12r00r00         [24] 1711 	lcall	__sdcc_banked_call
      0002A7 AE 82            [24] 1712 	mov	r6,dpl
      0002A9 AF 83            [24] 1713 	mov	r7,dph
      0002AB 15 81            [12] 1714 	dec	sp
      0002AD 15 81            [12] 1715 	dec	sp
      0002AF 15 81            [12] 1716 	dec	sp
      0002B1 D0 02            [24] 1717 	pop	ar2
      0002B3 D0 03            [24] 1718 	pop	ar3
      0002B5 D0 04            [24] 1719 	pop	ar4
      0002B7 EE               [12] 1720 	mov	a,r6
      0002B8 4F               [12] 1721 	orl	a,r7
      0002B9 60 20            [24] 1722 	jz	00110$
                                   1723 ;	../../../../core/net/mac/cxmac.c:393: e->time = time;
      0002BB 74 0B            [12] 1724 	mov	a,#0x0B
      0002BD 2A               [12] 1725 	add	a,r2
      0002BE FD               [12] 1726 	mov	r5,a
      0002BF E4               [12] 1727 	clr	a
      0002C0 3B               [12] 1728 	addc	a,r3
      0002C1 FE               [12] 1729 	mov	r6,a
      0002C2 8C 07            [24] 1730 	mov	ar7,r4
      0002C4 8D 82            [24] 1731 	mov	dpl,r5
      0002C6 8E 83            [24] 1732 	mov	dph,r6
      0002C8 8F F0            [24] 1733 	mov	b,r7
      0002CA E5 81            [12] 1734 	mov	a,sp
      0002CC 24 F9            [12] 1735 	add	a,#0xf9
      0002CE F8               [12] 1736 	mov	r0,a
      0002CF E6               [12] 1737 	mov	a,@r0
      0002D0 12r00r00         [24] 1738 	lcall	__gptrput
      0002D3 A3               [24] 1739 	inc	dptr
      0002D4 08               [12] 1740 	inc	r0
      0002D5 E6               [12] 1741 	mov	a,@r0
      0002D6 12r00r00         [24] 1742 	lcall	__gptrput
                                   1743 ;	../../../../core/net/mac/cxmac.c:394: break;
      0002D9 80 24            [24] 1744 	sjmp	00103$
      0002DB                       1745 00110$:
                                   1746 ;	../../../../core/net/mac/cxmac.c:391: for(e = list_head(encounter_list); e != NULL; e = list_item_next(e)) {
      0002DB 8A 05            [24] 1747 	mov	ar5,r2
      0002DD 8B 06            [24] 1748 	mov	ar6,r3
      0002DF 8C 07            [24] 1749 	mov	ar7,r4
      0002E1 8D 82            [24] 1750 	mov	dpl,r5
      0002E3 8E 83            [24] 1751 	mov	dph,r6
      0002E5 8F F0            [24] 1752 	mov	b,r7
      0002E7 78r00            [12] 1753 	mov	r0,#_list_item_next
      0002E9 79s00            [12] 1754 	mov	r1,#(_list_item_next >> 8)
      0002EB 7As00            [12] 1755 	mov	r2,#(_list_item_next >> 16)
      0002ED 12r00r00         [24] 1756 	lcall	__sdcc_banked_call
      0002F0 AD 82            [24] 1757 	mov	r5,dpl
      0002F2 AE 83            [24] 1758 	mov	r6,dph
      0002F4 AF F0            [24] 1759 	mov	r7,b
      0002F6 8D 02            [24] 1760 	mov	ar2,r5
      0002F8 8E 03            [24] 1761 	mov	ar3,r6
      0002FA 8F 04            [24] 1762 	mov	ar4,r7
      0002FC 02r02r5F         [24] 1763 	ljmp	00109$
      0002FF                       1764 00103$:
                                   1765 ;	../../../../core/net/mac/cxmac.c:398: if(e == NULL) {
      0002FF EA               [12] 1766 	mov	a,r2
      000300 4B               [12] 1767 	orl	a,r3
      000301 60 03            [24] 1768 	jz	00130$
      000303 02r03rA6         [24] 1769 	ljmp	00111$
      000306                       1770 00130$:
                                   1771 ;	../../../../core/net/mac/cxmac.c:399: e = memb_alloc(&encounter_memb);
      000306 90r00r13         [24] 1772 	mov	dptr,#_encounter_memb
      000309 75 F0 00         [24] 1773 	mov	b,#0x00
      00030C 78r00            [12] 1774 	mov	r0,#_memb_alloc
      00030E 79s00            [12] 1775 	mov	r1,#(_memb_alloc >> 8)
      000310 7As00            [12] 1776 	mov	r2,#(_memb_alloc >> 16)
      000312 12r00r00         [24] 1777 	lcall	__sdcc_banked_call
      000315 AD 82            [24] 1778 	mov	r5,dpl
      000317 AE 83            [24] 1779 	mov	r6,dph
      000319 AF F0            [24] 1780 	mov	r7,b
      00031B 8D 02            [24] 1781 	mov	ar2,r5
      00031D 8E 03            [24] 1782 	mov	ar3,r6
      00031F 8F 04            [24] 1783 	mov	ar4,r7
                                   1784 ;	../../../../core/net/mac/cxmac.c:400: if(e == NULL) {
      000321 EA               [12] 1785 	mov	a,r2
      000322 4B               [12] 1786 	orl	a,r3
      000323 70 03            [24] 1787 	jnz	00105$
                                   1788 ;	../../../../core/net/mac/cxmac.c:402: return;
      000325 02r03rA6         [24] 1789 	ljmp	00111$
      000328                       1790 00105$:
                                   1791 ;	../../../../core/net/mac/cxmac.c:404: rimeaddr_copy(&e->neighbor, neighbor);
      000328 74 03            [12] 1792 	mov	a,#0x03
      00032A 2A               [12] 1793 	add	a,r2
      00032B FD               [12] 1794 	mov	r5,a
      00032C E4               [12] 1795 	clr	a
      00032D 3B               [12] 1796 	addc	a,r3
      00032E FE               [12] 1797 	mov	r6,a
      00032F 8C 07            [24] 1798 	mov	ar7,r4
      000331 C0 04            [24] 1799 	push	ar4
      000333 C0 03            [24] 1800 	push	ar3
      000335 C0 02            [24] 1801 	push	ar2
      000337 E5 81            [12] 1802 	mov	a,sp
      000339 24 FB            [12] 1803 	add	a,#0xfb
      00033B F8               [12] 1804 	mov	r0,a
      00033C E6               [12] 1805 	mov	a,@r0
      00033D C0 E0            [24] 1806 	push	acc
      00033F 08               [12] 1807 	inc	r0
      000340 E6               [12] 1808 	mov	a,@r0
      000341 C0 E0            [24] 1809 	push	acc
      000343 08               [12] 1810 	inc	r0
      000344 E6               [12] 1811 	mov	a,@r0
      000345 C0 E0            [24] 1812 	push	acc
      000347 8D 82            [24] 1813 	mov	dpl,r5
      000349 8E 83            [24] 1814 	mov	dph,r6
      00034B 8F F0            [24] 1815 	mov	b,r7
      00034D 78r00            [12] 1816 	mov	r0,#_rimeaddr_copy
      00034F 79s00            [12] 1817 	mov	r1,#(_rimeaddr_copy >> 8)
      000351 7As00            [12] 1818 	mov	r2,#(_rimeaddr_copy >> 16)
      000353 12r00r00         [24] 1819 	lcall	__sdcc_banked_call
      000356 15 81            [12] 1820 	dec	sp
      000358 15 81            [12] 1821 	dec	sp
      00035A 15 81            [12] 1822 	dec	sp
      00035C D0 02            [24] 1823 	pop	ar2
      00035E D0 03            [24] 1824 	pop	ar3
      000360 D0 04            [24] 1825 	pop	ar4
                                   1826 ;	../../../../core/net/mac/cxmac.c:405: e->time = time;
      000362 74 0B            [12] 1827 	mov	a,#0x0B
      000364 2A               [12] 1828 	add	a,r2
      000365 FD               [12] 1829 	mov	r5,a
      000366 E4               [12] 1830 	clr	a
      000367 3B               [12] 1831 	addc	a,r3
      000368 FE               [12] 1832 	mov	r6,a
      000369 8C 07            [24] 1833 	mov	ar7,r4
      00036B 8D 82            [24] 1834 	mov	dpl,r5
      00036D 8E 83            [24] 1835 	mov	dph,r6
      00036F 8F F0            [24] 1836 	mov	b,r7
      000371 E5 81            [12] 1837 	mov	a,sp
      000373 24 F9            [12] 1838 	add	a,#0xf9
      000375 F8               [12] 1839 	mov	r0,a
      000376 E6               [12] 1840 	mov	a,@r0
      000377 12r00r00         [24] 1841 	lcall	__gptrput
      00037A A3               [24] 1842 	inc	dptr
      00037B 08               [12] 1843 	inc	r0
      00037C E6               [12] 1844 	mov	a,@r0
      00037D 12r00r00         [24] 1845 	lcall	__gptrput
                                   1846 ;	../../../../core/net/mac/cxmac.c:406: list_add(encounter_list, e);
      000380 90r00r10         [24] 1847 	mov	dptr,#_encounter_list
      000383 E0               [24] 1848 	movx	a,@dptr
      000384 FD               [12] 1849 	mov	r5,a
      000385 A3               [24] 1850 	inc	dptr
      000386 E0               [24] 1851 	movx	a,@dptr
      000387 FE               [12] 1852 	mov	r6,a
      000388 A3               [24] 1853 	inc	dptr
      000389 E0               [24] 1854 	movx	a,@dptr
      00038A FF               [12] 1855 	mov	r7,a
      00038B C0 02            [24] 1856 	push	ar2
      00038D C0 03            [24] 1857 	push	ar3
      00038F C0 04            [24] 1858 	push	ar4
      000391 8D 82            [24] 1859 	mov	dpl,r5
      000393 8E 83            [24] 1860 	mov	dph,r6
      000395 8F F0            [24] 1861 	mov	b,r7
      000397 78r00            [12] 1862 	mov	r0,#_list_add
      000399 79s00            [12] 1863 	mov	r1,#(_list_add >> 8)
      00039B 7As00            [12] 1864 	mov	r2,#(_list_add >> 16)
      00039D 12r00r00         [24] 1865 	lcall	__sdcc_banked_call
      0003A0 15 81            [12] 1866 	dec	sp
      0003A2 15 81            [12] 1867 	dec	sp
      0003A4 15 81            [12] 1868 	dec	sp
      0003A6                       1869 00111$:
      0003A6 15 81            [12] 1870 	dec	sp
      0003A8 15 81            [12] 1871 	dec	sp
      0003AA 15 81            [12] 1872 	dec	sp
      0003AC 02r00r00         [24] 1873 	ljmp	__sdcc_banked_ret
                                   1874 ;------------------------------------------------------------
                                   1875 ;Allocation info for local variables in function 'send_packet'
                                   1876 ;------------------------------------------------------------
                                   1877 ;t0                        Allocated to registers r6 r7 
                                   1878 ;t                         Allocated to stack - sp -74
                                   1879 ;encounter_time            Allocated to stack - sp -72
                                   1880 ;strobes                   Allocated to registers 
                                   1881 ;hdr                       Allocated to registers r2 r3 r7 
                                   1882 ;got_strobe_ack            Allocated to stack - sp -70
                                   1883 ;strobe                    Allocated to stack - sp -68
                                   1884 ;strobe_len                Allocated to stack - sp -18
                                   1885 ;len                       Allocated to stack - sp -16
                                   1886 ;is_broadcast              Allocated to stack - sp -14
                                   1887 ;is_dispatch               Allocated to stack - sp -12
                                   1888 ;is_strobe_ack             Allocated to registers r2 r5 
                                   1889 ;e                         Allocated to stack - sp -10
                                   1890 ;packet                    Allocated to stack - sp -7
                                   1891 ;is_already_streaming      Allocated to stack - sp -4
                                   1892 ;collisions                Allocated to stack - sp -2
                                   1893 ;neighbor                  Allocated to registers r7 r6 r5 
                                   1894 ;wait                      Allocated to registers 
                                   1895 ;now                       Allocated to registers r3 r4 
                                   1896 ;expected                  Allocated to registers r3 r2 
                                   1897 ;now                       Allocated to stack - sp -1
                                   1898 ;sloc0                     Allocated to stack - sp -78
                                   1899 ;sloc1                     Allocated to stack - sp -77
                                   1900 ;------------------------------------------------------------
                                   1901 ;	../../../../core/net/mac/cxmac.c:412: send_packet(void)
                                   1902 ;	-----------------------------------------
                                   1903 ;	 function send_packet
                                   1904 ;	-----------------------------------------
      0003AF                       1905 _send_packet:
      0003AF E5 81            [12] 1906 	mov	a,sp
      0003B1 24 4F            [12] 1907 	add	a,#0x4F
                                   1908 ;	../../../../core/net/mac/cxmac.c:416: rtimer_clock_t encounter_time = 0;
      0003B3 F5 81            [12] 1909 	mov	sp,a
      0003B5 24 B8            [12] 1910 	add	a,#0xb8
      0003B7 F8               [12] 1911 	mov	r0,a
      0003B8 E4               [12] 1912 	clr	a
      0003B9 F6               [12] 1913 	mov	@r0,a
      0003BA 08               [12] 1914 	inc	r0
      0003BB F6               [12] 1915 	mov	@r0,a
                                   1916 ;	../../../../core/net/mac/cxmac.c:419: int got_strobe_ack = 0;
      0003BC E5 81            [12] 1917 	mov	a,sp
      0003BE 24 BA            [12] 1918 	add	a,#0xba
      0003C0 F8               [12] 1919 	mov	r0,a
      0003C1 E4               [12] 1920 	clr	a
      0003C2 F6               [12] 1921 	mov	@r0,a
      0003C3 08               [12] 1922 	inc	r0
      0003C4 F6               [12] 1923 	mov	@r0,a
                                   1924 ;	../../../../core/net/mac/cxmac.c:422: int is_broadcast = 0;
      0003C5 E5 81            [12] 1925 	mov	a,sp
      0003C7 24 F2            [12] 1926 	add	a,#0xf2
      0003C9 F8               [12] 1927 	mov	r0,a
      0003CA E4               [12] 1928 	clr	a
      0003CB F6               [12] 1929 	mov	@r0,a
      0003CC 08               [12] 1930 	inc	r0
      0003CD F6               [12] 1931 	mov	@r0,a
                                   1932 ;	../../../../core/net/mac/cxmac.c:427: int is_already_streaming = 0;
      0003CE E5 81            [12] 1933 	mov	a,sp
      0003D0 24 FC            [12] 1934 	add	a,#0xfc
      0003D2 F8               [12] 1935 	mov	r0,a
      0003D3 E4               [12] 1936 	clr	a
      0003D4 F6               [12] 1937 	mov	@r0,a
      0003D5 08               [12] 1938 	inc	r0
      0003D6 F6               [12] 1939 	mov	@r0,a
                                   1940 ;	../../../../core/net/mac/cxmac.c:432: packetbuf_set_addr(PACKETBUF_ADDR_SENDER, &rimeaddr_node_addr);
      0003D7 74r00            [12] 1941 	mov	a,#_rimeaddr_node_addr
      0003D9 C0 E0            [24] 1942 	push	acc
      0003DB 74s00            [12] 1943 	mov	a,#(_rimeaddr_node_addr >> 8)
      0003DD C0 E0            [24] 1944 	push	acc
      0003DF E4               [12] 1945 	clr	a
      0003E0 C0 E0            [24] 1946 	push	acc
      0003E2 75 82 18         [24] 1947 	mov	dpl,#0x18
      0003E5 78r00            [12] 1948 	mov	r0,#_packetbuf_set_addr
      0003E7 79s00            [12] 1949 	mov	r1,#(_packetbuf_set_addr >> 8)
      0003E9 7As00            [12] 1950 	mov	r2,#(_packetbuf_set_addr >> 16)
      0003EB 12r00r00         [24] 1951 	lcall	__sdcc_banked_call
      0003EE 15 81            [12] 1952 	dec	sp
      0003F0 15 81            [12] 1953 	dec	sp
      0003F2 15 81            [12] 1954 	dec	sp
                                   1955 ;	../../../../core/net/mac/cxmac.c:433: if(rimeaddr_cmp(packetbuf_addr(PACKETBUF_ADDR_RECEIVER), &rimeaddr_null)) {
      0003F4 75 82 19         [24] 1956 	mov	dpl,#0x19
      0003F7 78r00            [12] 1957 	mov	r0,#_packetbuf_addr
      0003F9 79s00            [12] 1958 	mov	r1,#(_packetbuf_addr >> 8)
      0003FB 7As00            [12] 1959 	mov	r2,#(_packetbuf_addr >> 16)
      0003FD 12r00r00         [24] 1960 	lcall	__sdcc_banked_call
      000400 AB 82            [24] 1961 	mov	r3,dpl
      000402 AE 83            [24] 1962 	mov	r6,dph
      000404 AF F0            [24] 1963 	mov	r7,b
      000406 74r00            [12] 1964 	mov	a,#_rimeaddr_null
      000408 C0 E0            [24] 1965 	push	acc
      00040A 74s00            [12] 1966 	mov	a,#(_rimeaddr_null >> 8)
      00040C C0 E0            [24] 1967 	push	acc
      00040E 74 80            [12] 1968 	mov	a,#0x80
      000410 C0 E0            [24] 1969 	push	acc
      000412 8B 82            [24] 1970 	mov	dpl,r3
      000414 8E 83            [24] 1971 	mov	dph,r6
      000416 8F F0            [24] 1972 	mov	b,r7
      000418 78r00            [12] 1973 	mov	r0,#_rimeaddr_cmp
      00041A 79s00            [12] 1974 	mov	r1,#(_rimeaddr_cmp >> 8)
      00041C 7As00            [12] 1975 	mov	r2,#(_rimeaddr_cmp >> 16)
      00041E 12r00r00         [24] 1976 	lcall	__sdcc_banked_call
      000421 AE 82            [24] 1977 	mov	r6,dpl
      000423 AF 83            [24] 1978 	mov	r7,dph
      000425 15 81            [12] 1979 	dec	sp
      000427 15 81            [12] 1980 	dec	sp
      000429 15 81            [12] 1981 	dec	sp
      00042B EE               [12] 1982 	mov	a,r6
      00042C 4F               [12] 1983 	orl	a,r7
      00042D 60 0A            [24] 1984 	jz	00102$
                                   1985 ;	../../../../core/net/mac/cxmac.c:434: is_broadcast = 1;
      00042F E5 81            [12] 1986 	mov	a,sp
      000431 24 F2            [12] 1987 	add	a,#0xf2
      000433 F8               [12] 1988 	mov	r0,a
      000434 76 01            [12] 1989 	mov	@r0,#0x01
      000436 08               [12] 1990 	inc	r0
      000437 76 00            [12] 1991 	mov	@r0,#0x00
      000439                       1992 00102$:
                                   1993 ;	../../../../core/net/mac/cxmac.c:455: len = NETSTACK_FRAMER.create();
      000439 90r00r00         [24] 1994 	mov	dptr,#_framer_802154
      00043C E4               [12] 1995 	clr	a
      00043D 93               [24] 1996 	movc	a,@a+dptr
      00043E FB               [12] 1997 	mov	r3,a
      00043F A3               [24] 1998 	inc	dptr
      000440 E4               [12] 1999 	clr	a
      000441 93               [24] 2000 	movc	a,@a+dptr
      000442 FE               [12] 2001 	mov	r6,a
      000443 A3               [24] 2002 	inc	dptr
      000444 E4               [12] 2003 	clr	a
      000445 93               [24] 2004 	movc	a,@a+dptr
      000446 FF               [12] 2005 	mov	r7,a
      000447 C0 07            [24] 2006 	push	ar7
      000449 C0 03            [24] 2007 	push	ar3
      00044B C0 06            [24] 2008 	push	ar6
      00044D C0 07            [24] 2009 	push	ar7
      00044F D0 02            [24] 2010 	pop	ar2
      000451 D0 01            [24] 2011 	pop	ar1
      000453 D0 00            [24] 2012 	pop	ar0
      000455 12r00r00         [24] 2013 	lcall	__sdcc_banked_call
      000458 AB 82            [24] 2014 	mov	r3,dpl
      00045A AE 83            [24] 2015 	mov	r6,dph
      00045C D0 07            [24] 2016 	pop	ar7
      00045E E5 81            [12] 2017 	mov	a,sp
      000460 24 F0            [12] 2018 	add	a,#0xf0
      000462 F8               [12] 2019 	mov	r0,a
      000463 A6 03            [24] 2020 	mov	@r0,ar3
      000465 08               [12] 2021 	inc	r0
      000466 A6 06            [24] 2022 	mov	@r0,ar6
                                   2023 ;	../../../../core/net/mac/cxmac.c:456: strobe_len = len + sizeof(struct cxmac_hdr);
      000468 E5 81            [12] 2024 	mov	a,sp
      00046A 24 F0            [12] 2025 	add	a,#0xf0
      00046C F8               [12] 2026 	mov	r0,a
      00046D E5 81            [12] 2027 	mov	a,sp
      00046F 24 EE            [12] 2028 	add	a,#0xee
      000471 F9               [12] 2029 	mov	r1,a
      000472 74 02            [12] 2030 	mov	a,#0x02
      000474 26               [12] 2031 	add	a,@r0
      000475 F7               [12] 2032 	mov	@r1,a
      000476 E4               [12] 2033 	clr	a
      000477 08               [12] 2034 	inc	r0
      000478 36               [12] 2035 	addc	a,@r0
      000479 09               [12] 2036 	inc	r1
      00047A F7               [12] 2037 	mov	@r1,a
                                   2038 ;	../../../../core/net/mac/cxmac.c:457: if(len < 0 || strobe_len > (int)sizeof(strobe)) {
      00047B E5 81            [12] 2039 	mov	a,sp
      00047D 24 F0            [12] 2040 	add	a,#0xf0
      00047F F8               [12] 2041 	mov	r0,a
      000480 08               [12] 2042 	inc	r0
      000481 E6               [12] 2043 	mov	a,@r0
      000482 20 E7 16         [24] 2044 	jb	acc.7,00103$
      000485 E5 81            [12] 2045 	mov	a,sp
      000487 24 EE            [12] 2046 	add	a,#0xee
      000489 F8               [12] 2047 	mov	r0,a
      00048A C3               [12] 2048 	clr	c
      00048B 74 32            [12] 2049 	mov	a,#0x32
      00048D 96               [12] 2050 	subb	a,@r0
      00048E E4               [12] 2051 	clr	a
      00048F 64 80            [12] 2052 	xrl	a,#0x80
      000491 08               [12] 2053 	inc	r0
      000492 86 F0            [24] 2054 	mov	b,@r0
      000494 63 F0 80         [24] 2055 	xrl	b,#0x80
      000497 95 F0            [12] 2056 	subb	a,b
      000499 50 06            [24] 2057 	jnc	00104$
      00049B                       2058 00103$:
                                   2059 ;	../../../../core/net/mac/cxmac.c:460: return MAC_TX_ERR_FATAL;
      00049B 90 00 05         [24] 2060 	mov	dptr,#0x0005
      00049E 02r0Er1E         [24] 2061 	ljmp	00180$
      0004A1                       2062 00104$:
                                   2063 ;	../../../../core/net/mac/cxmac.c:462: memcpy(strobe, packetbuf_hdrptr(), len);
      0004A1 78r00            [12] 2064 	mov	r0,#_packetbuf_hdrptr
      0004A3 79s00            [12] 2065 	mov	r1,#(_packetbuf_hdrptr >> 8)
      0004A5 7As00            [12] 2066 	mov	r2,#(_packetbuf_hdrptr >> 16)
      0004A7 12r00r00         [24] 2067 	lcall	__sdcc_banked_call
      0004AA AA 82            [24] 2068 	mov	r2,dpl
      0004AC AB 83            [24] 2069 	mov	r3,dph
      0004AE AF F0            [24] 2070 	mov	r7,b
      0004B0 E5 81            [12] 2071 	mov	a,sp
      0004B2 24 B2            [12] 2072 	add	a,#0xb2
      0004B4 F8               [12] 2073 	mov	r0,a
      0004B5 E5 81            [12] 2074 	mov	a,sp
      0004B7 24 BC            [12] 2075 	add	a,#0xBC
      0004B9 F6               [12] 2076 	mov	@r0,a
      0004BA E5 81            [12] 2077 	mov	a,sp
      0004BC 24 B2            [12] 2078 	add	a,#0xb2
      0004BE F8               [12] 2079 	mov	r0,a
      0004BF 86 04            [24] 2080 	mov	ar4,@r0
      0004C1 7D 00            [12] 2081 	mov	r5,#0x00
      0004C3 7E 40            [12] 2082 	mov	r6,#0x40
      0004C5 E5 81            [12] 2083 	mov	a,sp
      0004C7 24 F0            [12] 2084 	add	a,#0xf0
      0004C9 F8               [12] 2085 	mov	r0,a
      0004CA E6               [12] 2086 	mov	a,@r0
      0004CB C0 E0            [24] 2087 	push	acc
      0004CD 08               [12] 2088 	inc	r0
      0004CE E6               [12] 2089 	mov	a,@r0
      0004CF C0 E0            [24] 2090 	push	acc
      0004D1 C0 02            [24] 2091 	push	ar2
      0004D3 C0 03            [24] 2092 	push	ar3
      0004D5 C0 07            [24] 2093 	push	ar7
      0004D7 8C 82            [24] 2094 	mov	dpl,r4
      0004D9 8D 83            [24] 2095 	mov	dph,r5
      0004DB 8E F0            [24] 2096 	mov	b,r6
      0004DD 78r00            [12] 2097 	mov	r0,#_memcpy
      0004DF 79s00            [12] 2098 	mov	r1,#(_memcpy >> 8)
      0004E1 7As00            [12] 2099 	mov	r2,#(_memcpy >> 16)
      0004E3 12r00r00         [24] 2100 	lcall	__sdcc_banked_call
      0004E6 E5 81            [12] 2101 	mov	a,sp
      0004E8 24 FB            [12] 2102 	add	a,#0xfb
                                   2103 ;	../../../../core/net/mac/cxmac.c:463: strobe[len] = DISPATCH; /* dispatch */
      0004EA F5 81            [12] 2104 	mov	sp,a
      0004EC 24 B2            [12] 2105 	add	a,#0xb2
      0004EE F8               [12] 2106 	mov	r0,a
      0004EF E5 81            [12] 2107 	mov	a,sp
      0004F1 24 F0            [12] 2108 	add	a,#0xf0
      0004F3 F9               [12] 2109 	mov	r1,a
      0004F4 E7               [12] 2110 	mov	a,@r1
      0004F5 26               [12] 2111 	add	a,@r0
      0004F6 F8               [12] 2112 	mov	r0,a
      0004F7 76 00            [12] 2113 	mov	@r0,#0x00
                                   2114 ;	../../../../core/net/mac/cxmac.c:464: strobe[len + 1] = TYPE_STROBE; /* type */
      0004F9 E5 81            [12] 2115 	mov	a,sp
      0004FB 24 F0            [12] 2116 	add	a,#0xf0
      0004FD F8               [12] 2117 	mov	r0,a
      0004FE E6               [12] 2118 	mov	a,@r0
      0004FF 04               [12] 2119 	inc	a
      000500 C8               [12] 2120 	xch	a,r0
      000501 E5 81            [12] 2121 	mov	a,sp
      000503 24 B2            [12] 2122 	add	a,#0xb2
      000505 C8               [12] 2123 	xch	a,r0
      000506 26               [12] 2124 	add	a,@r0
      000507 F8               [12] 2125 	mov	r0,a
      000508 76 10            [12] 2126 	mov	@r0,#0x10
                                   2127 ;	../../../../core/net/mac/cxmac.c:466: packetbuf_compact();
      00050A 78r00            [12] 2128 	mov	r0,#_packetbuf_compact
      00050C 79s00            [12] 2129 	mov	r1,#(_packetbuf_compact >> 8)
      00050E 7As00            [12] 2130 	mov	r2,#(_packetbuf_compact >> 16)
      000510 12r00r00         [24] 2131 	lcall	__sdcc_banked_call
                                   2132 ;	../../../../core/net/mac/cxmac.c:467: packet = queuebuf_new_from_packetbuf();
      000513 78r00            [12] 2133 	mov	r0,#_queuebuf_new_from_packetbuf
      000515 79s00            [12] 2134 	mov	r1,#(_queuebuf_new_from_packetbuf >> 8)
      000517 7As00            [12] 2135 	mov	r2,#(_queuebuf_new_from_packetbuf >> 16)
      000519 12r00r00         [24] 2136 	lcall	__sdcc_banked_call
      00051C AD 82            [24] 2137 	mov	r5,dpl
      00051E AE 83            [24] 2138 	mov	r6,dph
      000520 AF F0            [24] 2139 	mov	r7,b
      000522 E5 81            [12] 2140 	mov	a,sp
      000524 24 F9            [12] 2141 	add	a,#0xf9
      000526 F8               [12] 2142 	mov	r0,a
      000527 A6 05            [24] 2143 	mov	@r0,ar5
      000529 08               [12] 2144 	inc	r0
      00052A A6 06            [24] 2145 	mov	@r0,ar6
      00052C 08               [12] 2146 	inc	r0
      00052D A6 07            [24] 2147 	mov	@r0,ar7
                                   2148 ;	../../../../core/net/mac/cxmac.c:468: if(packet == NULL) {
      00052F E5 81            [12] 2149 	mov	a,sp
      000531 24 F9            [12] 2150 	add	a,#0xf9
      000533 F8               [12] 2151 	mov	r0,a
      000534 E6               [12] 2152 	mov	a,@r0
      000535 08               [12] 2153 	inc	r0
      000536 46               [12] 2154 	orl	a,@r0
      000537 70 06            [24] 2155 	jnz	00107$
                                   2156 ;	../../../../core/net/mac/cxmac.c:472: return MAC_TX_ERR;
      000539 90 00 04         [24] 2157 	mov	dptr,#0x0004
      00053C 02r0Er1E         [24] 2158 	ljmp	00180$
      00053F                       2159 00107$:
                                   2160 ;	../../../../core/net/mac/cxmac.c:476: if(is_streaming == 1 &&
      00053F 90r00r3B         [24] 2161 	mov	dptr,#_is_streaming
      000542 E0               [24] 2162 	movx	a,@dptr
      000543 FF               [12] 2163 	mov	r7,a
      000544 BF 01 02         [24] 2164 	cjne	r7,#0x01,00307$
      000547 80 03            [24] 2165 	sjmp	00308$
      000549                       2166 00307$:
      000549 02r05rCA         [24] 2167 	ljmp	00109$
      00054C                       2168 00308$:
                                   2169 ;	../../../../core/net/mac/cxmac.c:478: &is_streaming_to) ||
                                   2170 ;	../../../../core/net/mac/cxmac.c:477: (rimeaddr_cmp(packetbuf_addr(PACKETBUF_ADDR_RECEIVER),
      00054C 75 82 19         [24] 2171 	mov	dpl,#0x19
      00054F 78r00            [12] 2172 	mov	r0,#_packetbuf_addr
      000551 79s00            [12] 2173 	mov	r1,#(_packetbuf_addr >> 8)
      000553 7As00            [12] 2174 	mov	r2,#(_packetbuf_addr >> 16)
      000555 12r00r00         [24] 2175 	lcall	__sdcc_banked_call
      000558 AD 82            [24] 2176 	mov	r5,dpl
      00055A AE 83            [24] 2177 	mov	r6,dph
      00055C AF F0            [24] 2178 	mov	r7,b
      00055E 74r3C            [12] 2179 	mov	a,#_is_streaming_to
      000560 C0 E0            [24] 2180 	push	acc
      000562 74s00            [12] 2181 	mov	a,#(_is_streaming_to >> 8)
      000564 C0 E0            [24] 2182 	push	acc
      000566 E4               [12] 2183 	clr	a
      000567 C0 E0            [24] 2184 	push	acc
      000569 8D 82            [24] 2185 	mov	dpl,r5
      00056B 8E 83            [24] 2186 	mov	dph,r6
      00056D 8F F0            [24] 2187 	mov	b,r7
      00056F 78r00            [12] 2188 	mov	r0,#_rimeaddr_cmp
      000571 79s00            [12] 2189 	mov	r1,#(_rimeaddr_cmp >> 8)
      000573 7As00            [12] 2190 	mov	r2,#(_rimeaddr_cmp >> 16)
      000575 12r00r00         [24] 2191 	lcall	__sdcc_banked_call
      000578 AE 82            [24] 2192 	mov	r6,dpl
      00057A AF 83            [24] 2193 	mov	r7,dph
      00057C 15 81            [12] 2194 	dec	sp
      00057E 15 81            [12] 2195 	dec	sp
      000580 15 81            [12] 2196 	dec	sp
      000582 EE               [12] 2197 	mov	a,r6
      000583 4F               [12] 2198 	orl	a,r7
      000584 70 3A            [24] 2199 	jnz	00108$
                                   2200 ;	../../../../core/net/mac/cxmac.c:480: &is_streaming_to_too))) {
                                   2201 ;	../../../../core/net/mac/cxmac.c:479: rimeaddr_cmp(packetbuf_addr(PACKETBUF_ADDR_RECEIVER),
      000586 75 82 19         [24] 2202 	mov	dpl,#0x19
      000589 78r00            [12] 2203 	mov	r0,#_packetbuf_addr
      00058B 79s00            [12] 2204 	mov	r1,#(_packetbuf_addr >> 8)
      00058D 7As00            [12] 2205 	mov	r2,#(_packetbuf_addr >> 16)
      00058F 12r00r00         [24] 2206 	lcall	__sdcc_banked_call
      000592 AD 82            [24] 2207 	mov	r5,dpl
      000594 AE 83            [24] 2208 	mov	r6,dph
      000596 AF F0            [24] 2209 	mov	r7,b
      000598 74r44            [12] 2210 	mov	a,#_is_streaming_to_too
      00059A C0 E0            [24] 2211 	push	acc
      00059C 74s00            [12] 2212 	mov	a,#(_is_streaming_to_too >> 8)
      00059E C0 E0            [24] 2213 	push	acc
      0005A0 E4               [12] 2214 	clr	a
      0005A1 C0 E0            [24] 2215 	push	acc
      0005A3 8D 82            [24] 2216 	mov	dpl,r5
      0005A5 8E 83            [24] 2217 	mov	dph,r6
      0005A7 8F F0            [24] 2218 	mov	b,r7
      0005A9 78r00            [12] 2219 	mov	r0,#_rimeaddr_cmp
      0005AB 79s00            [12] 2220 	mov	r1,#(_rimeaddr_cmp >> 8)
      0005AD 7As00            [12] 2221 	mov	r2,#(_rimeaddr_cmp >> 16)
      0005AF 12r00r00         [24] 2222 	lcall	__sdcc_banked_call
      0005B2 AE 82            [24] 2223 	mov	r6,dpl
      0005B4 AF 83            [24] 2224 	mov	r7,dph
      0005B6 15 81            [12] 2225 	dec	sp
      0005B8 15 81            [12] 2226 	dec	sp
      0005BA 15 81            [12] 2227 	dec	sp
      0005BC EE               [12] 2228 	mov	a,r6
      0005BD 4F               [12] 2229 	orl	a,r7
      0005BE 60 0A            [24] 2230 	jz	00109$
      0005C0                       2231 00108$:
                                   2232 ;	../../../../core/net/mac/cxmac.c:481: is_already_streaming = 1;
      0005C0 E5 81            [12] 2233 	mov	a,sp
      0005C2 24 FC            [12] 2234 	add	a,#0xfc
      0005C4 F8               [12] 2235 	mov	r0,a
      0005C5 76 01            [12] 2236 	mov	@r0,#0x01
      0005C7 08               [12] 2237 	inc	r0
      0005C8 76 00            [12] 2238 	mov	@r0,#0x00
      0005CA                       2239 00109$:
                                   2240 ;	../../../../core/net/mac/cxmac.c:483: if(packetbuf_attr(PACKETBUF_ATTR_PACKET_TYPE) ==
      0005CA 75 82 0E         [24] 2241 	mov	dpl,#0x0E
      0005CD 78r00            [12] 2242 	mov	r0,#_packetbuf_attr
      0005CF 79s00            [12] 2243 	mov	r1,#(_packetbuf_attr >> 8)
      0005D1 7As00            [12] 2244 	mov	r2,#(_packetbuf_attr >> 16)
      0005D3 12r00r00         [24] 2245 	lcall	__sdcc_banked_call
      0005D6 AE 82            [24] 2246 	mov	r6,dpl
      0005D8 AF 83            [24] 2247 	mov	r7,dph
      0005DA BE 02 05         [24] 2248 	cjne	r6,#0x02,00311$
      0005DD BF 00 02         [24] 2249 	cjne	r7,#0x00,00311$
      0005E0 80 03            [24] 2250 	sjmp	00312$
      0005E2                       2251 00311$:
      0005E2 02r06rC0         [24] 2252 	ljmp	00118$
      0005E5                       2253 00312$:
                                   2254 ;	../../../../core/net/mac/cxmac.c:485: is_streaming = 1;
      0005E5 90r00r3B         [24] 2255 	mov	dptr,#_is_streaming
      0005E8 74 01            [12] 2256 	mov	a,#0x01
      0005EA F0               [24] 2257 	movx	@dptr,a
                                   2258 ;	../../../../core/net/mac/cxmac.c:486: if(rimeaddr_cmp(&is_streaming_to, &rimeaddr_null)) {
      0005EB 74r00            [12] 2259 	mov	a,#_rimeaddr_null
      0005ED C0 E0            [24] 2260 	push	acc
      0005EF 74s00            [12] 2261 	mov	a,#(_rimeaddr_null >> 8)
      0005F1 C0 E0            [24] 2262 	push	acc
      0005F3 74 80            [12] 2263 	mov	a,#0x80
      0005F5 C0 E0            [24] 2264 	push	acc
      0005F7 90r00r3C         [24] 2265 	mov	dptr,#_is_streaming_to
      0005FA 75 F0 00         [24] 2266 	mov	b,#0x00
      0005FD 78r00            [12] 2267 	mov	r0,#_rimeaddr_cmp
      0005FF 79s00            [12] 2268 	mov	r1,#(_rimeaddr_cmp >> 8)
      000601 7As00            [12] 2269 	mov	r2,#(_rimeaddr_cmp >> 16)
      000603 12r00r00         [24] 2270 	lcall	__sdcc_banked_call
      000606 AE 82            [24] 2271 	mov	r6,dpl
      000608 AF 83            [24] 2272 	mov	r7,dph
      00060A 15 81            [12] 2273 	dec	sp
      00060C 15 81            [12] 2274 	dec	sp
      00060E 15 81            [12] 2275 	dec	sp
      000610 EE               [12] 2276 	mov	a,r6
      000611 4F               [12] 2277 	orl	a,r7
      000612 60 2F            [24] 2278 	jz	00115$
                                   2279 ;	../../../../core/net/mac/cxmac.c:487: rimeaddr_copy(&is_streaming_to, packetbuf_addr(PACKETBUF_ADDR_RECEIVER));
      000614 75 82 19         [24] 2280 	mov	dpl,#0x19
      000617 78r00            [12] 2281 	mov	r0,#_packetbuf_addr
      000619 79s00            [12] 2282 	mov	r1,#(_packetbuf_addr >> 8)
      00061B 7As00            [12] 2283 	mov	r2,#(_packetbuf_addr >> 16)
      00061D 12r00r00         [24] 2284 	lcall	__sdcc_banked_call
      000620 AD 82            [24] 2285 	mov	r5,dpl
      000622 AE 83            [24] 2286 	mov	r6,dph
      000624 AF F0            [24] 2287 	mov	r7,b
      000626 C0 05            [24] 2288 	push	ar5
      000628 C0 06            [24] 2289 	push	ar6
      00062A C0 07            [24] 2290 	push	ar7
      00062C 90r00r3C         [24] 2291 	mov	dptr,#_is_streaming_to
      00062F 75 F0 00         [24] 2292 	mov	b,#0x00
      000632 78r00            [12] 2293 	mov	r0,#_rimeaddr_copy
      000634 79s00            [12] 2294 	mov	r1,#(_rimeaddr_copy >> 8)
      000636 7As00            [12] 2295 	mov	r2,#(_rimeaddr_copy >> 16)
      000638 12r00r00         [24] 2296 	lcall	__sdcc_banked_call
      00063B 15 81            [12] 2297 	dec	sp
      00063D 15 81            [12] 2298 	dec	sp
      00063F 15 81            [12] 2299 	dec	sp
      000641 80 62            [24] 2300 	sjmp	00116$
      000643                       2301 00115$:
                                   2302 ;	../../../../core/net/mac/cxmac.c:488: } else if(!rimeaddr_cmp(&is_streaming_to, packetbuf_addr(PACKETBUF_ADDR_RECEIVER))) {
      000643 75 82 19         [24] 2303 	mov	dpl,#0x19
      000646 78r00            [12] 2304 	mov	r0,#_packetbuf_addr
      000648 79s00            [12] 2305 	mov	r1,#(_packetbuf_addr >> 8)
      00064A 7As00            [12] 2306 	mov	r2,#(_packetbuf_addr >> 16)
      00064C 12r00r00         [24] 2307 	lcall	__sdcc_banked_call
      00064F AD 82            [24] 2308 	mov	r5,dpl
      000651 AE 83            [24] 2309 	mov	r6,dph
      000653 AF F0            [24] 2310 	mov	r7,b
      000655 C0 05            [24] 2311 	push	ar5
      000657 C0 06            [24] 2312 	push	ar6
      000659 C0 07            [24] 2313 	push	ar7
      00065B 90r00r3C         [24] 2314 	mov	dptr,#_is_streaming_to
      00065E 75 F0 00         [24] 2315 	mov	b,#0x00
      000661 78r00            [12] 2316 	mov	r0,#_rimeaddr_cmp
      000663 79s00            [12] 2317 	mov	r1,#(_rimeaddr_cmp >> 8)
      000665 7As00            [12] 2318 	mov	r2,#(_rimeaddr_cmp >> 16)
      000667 12r00r00         [24] 2319 	lcall	__sdcc_banked_call
      00066A AE 82            [24] 2320 	mov	r6,dpl
      00066C AF 83            [24] 2321 	mov	r7,dph
      00066E 15 81            [12] 2322 	dec	sp
      000670 15 81            [12] 2323 	dec	sp
      000672 15 81            [12] 2324 	dec	sp
      000674 EE               [12] 2325 	mov	a,r6
      000675 4F               [12] 2326 	orl	a,r7
      000676 70 2D            [24] 2327 	jnz	00116$
                                   2328 ;	../../../../core/net/mac/cxmac.c:489: rimeaddr_copy(&is_streaming_to_too, packetbuf_addr(PACKETBUF_ADDR_RECEIVER));
      000678 75 82 19         [24] 2329 	mov	dpl,#0x19
      00067B 78r00            [12] 2330 	mov	r0,#_packetbuf_addr
      00067D 79s00            [12] 2331 	mov	r1,#(_packetbuf_addr >> 8)
      00067F 7As00            [12] 2332 	mov	r2,#(_packetbuf_addr >> 16)
      000681 12r00r00         [24] 2333 	lcall	__sdcc_banked_call
      000684 AD 82            [24] 2334 	mov	r5,dpl
      000686 AE 83            [24] 2335 	mov	r6,dph
      000688 AF F0            [24] 2336 	mov	r7,b
      00068A C0 05            [24] 2337 	push	ar5
      00068C C0 06            [24] 2338 	push	ar6
      00068E C0 07            [24] 2339 	push	ar7
      000690 90r00r44         [24] 2340 	mov	dptr,#_is_streaming_to_too
      000693 75 F0 00         [24] 2341 	mov	b,#0x00
      000696 78r00            [12] 2342 	mov	r0,#_rimeaddr_copy
      000698 79s00            [12] 2343 	mov	r1,#(_rimeaddr_copy >> 8)
      00069A 7As00            [12] 2344 	mov	r2,#(_rimeaddr_copy >> 16)
      00069C 12r00r00         [24] 2345 	lcall	__sdcc_banked_call
      00069F 15 81            [12] 2346 	dec	sp
      0006A1 15 81            [12] 2347 	dec	sp
      0006A3 15 81            [12] 2348 	dec	sp
      0006A5                       2349 00116$:
                                   2350 ;	../../../../core/net/mac/cxmac.c:491: stream_until = RTIMER_NOW() + DEFAULT_STREAM_TIME;
      0006A5 AE E2            [24] 2351 	mov	r6,_T1CNTL
      0006A7 7F 00            [12] 2352 	mov	r7,#0x00
      0006A9 AC E3            [24] 2353 	mov	r4,_T1CNTH
      0006AB 8C 05            [24] 2354 	mov	ar5,r4
      0006AD E4               [12] 2355 	clr	a
      0006AE FC               [12] 2356 	mov	r4,a
      0006AF 2E               [12] 2357 	add	a,r6
      0006B0 FE               [12] 2358 	mov	r6,a
      0006B1 ED               [12] 2359 	mov	a,r5
      0006B2 3F               [12] 2360 	addc	a,r7
      0006B3 FF               [12] 2361 	mov	r7,a
      0006B4 90r00r4C         [24] 2362 	mov	dptr,#_stream_until
      0006B7 74 09            [12] 2363 	mov	a,#0x09
      0006B9 2E               [12] 2364 	add	a,r6
      0006BA F0               [24] 2365 	movx	@dptr,a
      0006BB 74 3D            [12] 2366 	mov	a,#0x3D
      0006BD 3F               [12] 2367 	addc	a,r7
      0006BE A3               [24] 2368 	inc	dptr
      0006BF F0               [24] 2369 	movx	@dptr,a
      0006C0                       2370 00118$:
                                   2371 ;	../../../../core/net/mac/cxmac.c:495: off();
      0006C0 78r40            [12] 2372 	mov	r0,#_off
      0006C2 79s00            [12] 2373 	mov	r1,#(_off >> 8)
      0006C4 7As00            [12] 2374 	mov	r2,#(_off >> 16)
      0006C6 12r00r00         [24] 2375 	lcall	__sdcc_banked_call
                                   2376 ;	../../../../core/net/mac/cxmac.c:502: for(e = list_head(encounter_list); e != NULL; e = list_item_next(e)) {
      0006C9 90r00r10         [24] 2377 	mov	dptr,#_encounter_list
      0006CC E0               [24] 2378 	movx	a,@dptr
      0006CD FD               [12] 2379 	mov	r5,a
      0006CE A3               [24] 2380 	inc	dptr
      0006CF E0               [24] 2381 	movx	a,@dptr
      0006D0 FE               [12] 2382 	mov	r6,a
      0006D1 A3               [24] 2383 	inc	dptr
      0006D2 E0               [24] 2384 	movx	a,@dptr
      0006D3 FF               [12] 2385 	mov	r7,a
      0006D4 8D 82            [24] 2386 	mov	dpl,r5
      0006D6 8E 83            [24] 2387 	mov	dph,r6
      0006D8 8F F0            [24] 2388 	mov	b,r7
      0006DA 78r00            [12] 2389 	mov	r0,#_list_head
      0006DC 79s00            [12] 2390 	mov	r1,#(_list_head >> 8)
      0006DE 7As00            [12] 2391 	mov	r2,#(_list_head >> 16)
      0006E0 12r00r00         [24] 2392 	lcall	__sdcc_banked_call
      0006E3 AD 82            [24] 2393 	mov	r5,dpl
      0006E5 AE 83            [24] 2394 	mov	r6,dph
      0006E7 AF F0            [24] 2395 	mov	r7,b
      0006E9 E5 81            [12] 2396 	mov	a,sp
      0006EB 24 F6            [12] 2397 	add	a,#0xf6
      0006ED F8               [12] 2398 	mov	r0,a
      0006EE A6 05            [24] 2399 	mov	@r0,ar5
      0006F0 08               [12] 2400 	inc	r0
      0006F1 A6 06            [24] 2401 	mov	@r0,ar6
      0006F3 08               [12] 2402 	inc	r0
      0006F4 A6 07            [24] 2403 	mov	@r0,ar7
      0006F6                       2404 00173$:
      0006F6 E5 81            [12] 2405 	mov	a,sp
      0006F8 24 F6            [12] 2406 	add	a,#0xf6
      0006FA F8               [12] 2407 	mov	r0,a
      0006FB E4               [12] 2408 	clr	a
      0006FC C0 E0            [24] 2409 	push	acc
      0006FE E4               [12] 2410 	clr	a
      0006FF C0 E0            [24] 2411 	push	acc
      000701 E4               [12] 2412 	clr	a
      000702 C0 E0            [24] 2413 	push	acc
      000704 86 82            [24] 2414 	mov	dpl,@r0
      000706 08               [12] 2415 	inc	r0
      000707 86 83            [24] 2416 	mov	dph,@r0
      000709 08               [12] 2417 	inc	r0
      00070A 86 F0            [24] 2418 	mov	b,@r0
      00070C 12r00r00         [24] 2419 	lcall	___gptr_cmp
      00070F 15 81            [12] 2420 	dec	sp
      000711 15 81            [12] 2421 	dec	sp
      000713 15 81            [12] 2422 	dec	sp
      000715 70 03            [24] 2423 	jnz	00315$
      000717 02r08r35         [24] 2424 	ljmp	00127$
      00071A                       2425 00315$:
                                   2426 ;	../../../../core/net/mac/cxmac.c:503: const rimeaddr_t *neighbor = packetbuf_addr(PACKETBUF_ADDR_RECEIVER);
      00071A 75 82 19         [24] 2427 	mov	dpl,#0x19
      00071D 78r00            [12] 2428 	mov	r0,#_packetbuf_addr
      00071F 79s00            [12] 2429 	mov	r1,#(_packetbuf_addr >> 8)
      000721 7As00            [12] 2430 	mov	r2,#(_packetbuf_addr >> 16)
      000723 12r00r00         [24] 2431 	lcall	__sdcc_banked_call
      000726 AF 82            [24] 2432 	mov	r7,dpl
      000728 AE 83            [24] 2433 	mov	r6,dph
      00072A AD F0            [24] 2434 	mov	r5,b
                                   2435 ;	../../../../core/net/mac/cxmac.c:505: if(rimeaddr_cmp(neighbor, &e->neighbor)) {
      00072C E5 81            [12] 2436 	mov	a,sp
      00072E 24 F6            [12] 2437 	add	a,#0xf6
      000730 F8               [12] 2438 	mov	r0,a
      000731 74 03            [12] 2439 	mov	a,#0x03
      000733 26               [12] 2440 	add	a,@r0
      000734 FA               [12] 2441 	mov	r2,a
      000735 E4               [12] 2442 	clr	a
      000736 08               [12] 2443 	inc	r0
      000737 36               [12] 2444 	addc	a,@r0
      000738 FB               [12] 2445 	mov	r3,a
      000739 08               [12] 2446 	inc	r0
      00073A 86 04            [24] 2447 	mov	ar4,@r0
      00073C C0 02            [24] 2448 	push	ar2
      00073E C0 03            [24] 2449 	push	ar3
      000740 C0 04            [24] 2450 	push	ar4
      000742 8F 82            [24] 2451 	mov	dpl,r7
      000744 8E 83            [24] 2452 	mov	dph,r6
      000746 8D F0            [24] 2453 	mov	b,r5
      000748 78r00            [12] 2454 	mov	r0,#_rimeaddr_cmp
      00074A 79s00            [12] 2455 	mov	r1,#(_rimeaddr_cmp >> 8)
      00074C 7As00            [12] 2456 	mov	r2,#(_rimeaddr_cmp >> 16)
      00074E 12r00r00         [24] 2457 	lcall	__sdcc_banked_call
      000751 AB 82            [24] 2458 	mov	r3,dpl
      000753 AC 83            [24] 2459 	mov	r4,dph
      000755 15 81            [12] 2460 	dec	sp
      000757 15 81            [12] 2461 	dec	sp
      000759 15 81            [12] 2462 	dec	sp
      00075B EB               [12] 2463 	mov	a,r3
      00075C 4C               [12] 2464 	orl	a,r4
      00075D 70 03            [24] 2465 	jnz	00316$
      00075F 02r08r03         [24] 2466 	ljmp	00174$
      000762                       2467 00316$:
                                   2468 ;	../../../../core/net/mac/cxmac.c:515: now = RTIMER_NOW();
      000762 AB E2            [24] 2469 	mov	r3,_T1CNTL
      000764 7C 00            [12] 2470 	mov	r4,#0x00
      000766 AA E3            [24] 2471 	mov	r2,_T1CNTH
      000768 8A 07            [24] 2472 	mov	ar7,r2
      00076A E4               [12] 2473 	clr	a
      00076B 2B               [12] 2474 	add	a,r3
      00076C FB               [12] 2475 	mov	r3,a
      00076D EF               [12] 2476 	mov	a,r7
      00076E 3C               [12] 2477 	addc	a,r4
      00076F FC               [12] 2478 	mov	r4,a
                                   2479 ;	../../../../core/net/mac/cxmac.c:516: wait = ((rtimer_clock_t)(e->time - now)) % (DEFAULT_PERIOD);
      000770 E5 81            [12] 2480 	mov	a,sp
      000772 24 F6            [12] 2481 	add	a,#0xf6
      000774 F8               [12] 2482 	mov	r0,a
      000775 74 0B            [12] 2483 	mov	a,#0x0B
      000777 26               [12] 2484 	add	a,@r0
      000778 FD               [12] 2485 	mov	r5,a
      000779 E4               [12] 2486 	clr	a
      00077A 08               [12] 2487 	inc	r0
      00077B 36               [12] 2488 	addc	a,@r0
      00077C FE               [12] 2489 	mov	r6,a
      00077D 08               [12] 2490 	inc	r0
      00077E 86 07            [24] 2491 	mov	ar7,@r0
      000780 8D 82            [24] 2492 	mov	dpl,r5
      000782 8E 83            [24] 2493 	mov	dph,r6
      000784 8F F0            [24] 2494 	mov	b,r7
      000786 12r00r00         [24] 2495 	lcall	__gptrget
      000789 FD               [12] 2496 	mov	r5,a
      00078A A3               [24] 2497 	inc	dptr
      00078B 12r00r00         [24] 2498 	lcall	__gptrget
      00078E FE               [12] 2499 	mov	r6,a
      00078F ED               [12] 2500 	mov	a,r5
      000790 C3               [12] 2501 	clr	c
      000791 9B               [12] 2502 	subb	a,r3
      000792 FD               [12] 2503 	mov	r5,a
      000793 EE               [12] 2504 	mov	a,r6
      000794 9C               [12] 2505 	subb	a,r4
      000795 FE               [12] 2506 	mov	r6,a
      000796 C0 04            [24] 2507 	push	ar4
      000798 C0 03            [24] 2508 	push	ar3
      00079A 74 A1            [12] 2509 	mov	a,#0xA1
      00079C C0 E0            [24] 2510 	push	acc
      00079E 74 07            [12] 2511 	mov	a,#0x07
      0007A0 C0 E0            [24] 2512 	push	acc
      0007A2 8D 82            [24] 2513 	mov	dpl,r5
      0007A4 8E 83            [24] 2514 	mov	dph,r6
      0007A6 12r00r00         [24] 2515 	lcall	__moduint
      0007A9 AE 82            [24] 2516 	mov	r6,dpl
      0007AB AF 83            [24] 2517 	mov	r7,dph
      0007AD 15 81            [12] 2518 	dec	sp
      0007AF 15 81            [12] 2519 	dec	sp
      0007B1 D0 03            [24] 2520 	pop	ar3
      0007B3 D0 04            [24] 2521 	pop	ar4
                                   2522 ;	../../../../core/net/mac/cxmac.c:517: expected = now + wait - 2 * DEFAULT_ON_TIME;
      0007B5 EE               [12] 2523 	mov	a,r6
      0007B6 2B               [12] 2524 	add	a,r3
      0007B7 FB               [12] 2525 	mov	r3,a
      0007B8 EF               [12] 2526 	mov	a,r7
      0007B9 3C               [12] 2527 	addc	a,r4
      0007BA FC               [12] 2528 	mov	r4,a
      0007BB EB               [12] 2529 	mov	a,r3
      0007BC 24 3E            [12] 2530 	add	a,#0x3E
      0007BE FB               [12] 2531 	mov	r3,a
      0007BF EC               [12] 2532 	mov	a,r4
      0007C0 34 FF            [12] 2533 	addc	a,#0xFF
      0007C2 FA               [12] 2534 	mov	r2,a
                                   2535 ;	../../../../core/net/mac/cxmac.c:521: if(packetbuf_attr(PACKETBUF_ATTR_PACKET_TYPE) !=
      0007C3 75 82 0E         [24] 2536 	mov	dpl,#0x0E
      0007C6 C0 03            [24] 2537 	push	ar3
      0007C8 C0 02            [24] 2538 	push	ar2
      0007CA 78r00            [12] 2539 	mov	r0,#_packetbuf_attr
      0007CC 79s00            [12] 2540 	mov	r1,#(_packetbuf_attr >> 8)
      0007CE 7As00            [12] 2541 	mov	r2,#(_packetbuf_attr >> 16)
      0007D0 12r00r00         [24] 2542 	lcall	__sdcc_banked_call
      0007D3 AE 82            [24] 2543 	mov	r6,dpl
      0007D5 AF 83            [24] 2544 	mov	r7,dph
      0007D7 D0 02            [24] 2545 	pop	ar2
      0007D9 D0 03            [24] 2546 	pop	ar3
      0007DB BE 01 05         [24] 2547 	cjne	r6,#0x01,00317$
      0007DE BF 00 02         [24] 2548 	cjne	r7,#0x00,00317$
      0007E1 80 20            [24] 2549 	sjmp	00174$
      0007E3                       2550 00317$:
                                   2551 ;	../../../../core/net/mac/cxmac.c:523: is_streaming == 0) {
      0007E3 90r00r3B         [24] 2552 	mov	dptr,#_is_streaming
      0007E6 E0               [24] 2553 	movx	a,@dptr
      0007E7 FF               [12] 2554 	mov	r7,a
      0007E8 70 19            [24] 2555 	jnz	00174$
                                   2556 ;	../../../../core/net/mac/cxmac.c:526: while(RTIMER_CLOCK_LT(RTIMER_NOW(), expected));
      0007EA                       2557 00119$:
      0007EA AE E2            [24] 2558 	mov	r6,_T1CNTL
      0007EC 7F 00            [12] 2559 	mov	r7,#0x00
      0007EE AC E3            [24] 2560 	mov	r4,_T1CNTH
      0007F0 8C 05            [24] 2561 	mov	ar5,r4
      0007F2 E4               [12] 2562 	clr	a
      0007F3 FC               [12] 2563 	mov	r4,a
      0007F4 2E               [12] 2564 	add	a,r6
      0007F5 FE               [12] 2565 	mov	r6,a
      0007F6 ED               [12] 2566 	mov	a,r5
      0007F7 3F               [12] 2567 	addc	a,r7
      0007F8 FF               [12] 2568 	mov	r7,a
      0007F9 EE               [12] 2569 	mov	a,r6
      0007FA C3               [12] 2570 	clr	c
      0007FB 9B               [12] 2571 	subb	a,r3
      0007FC FE               [12] 2572 	mov	r6,a
      0007FD EF               [12] 2573 	mov	a,r7
      0007FE 9A               [12] 2574 	subb	a,r2
      0007FF FF               [12] 2575 	mov	r7,a
      000800 20 E7 E7         [24] 2576 	jb	acc.7,00119$
      000803                       2577 00174$:
                                   2578 ;	../../../../core/net/mac/cxmac.c:502: for(e = list_head(encounter_list); e != NULL; e = list_item_next(e)) {
      000803 E5 81            [12] 2579 	mov	a,sp
      000805 24 F6            [12] 2580 	add	a,#0xf6
      000807 F8               [12] 2581 	mov	r0,a
      000808 86 05            [24] 2582 	mov	ar5,@r0
      00080A 08               [12] 2583 	inc	r0
      00080B 86 06            [24] 2584 	mov	ar6,@r0
      00080D 08               [12] 2585 	inc	r0
      00080E 86 07            [24] 2586 	mov	ar7,@r0
      000810 8D 82            [24] 2587 	mov	dpl,r5
      000812 8E 83            [24] 2588 	mov	dph,r6
      000814 8F F0            [24] 2589 	mov	b,r7
      000816 78r00            [12] 2590 	mov	r0,#_list_item_next
      000818 79s00            [12] 2591 	mov	r1,#(_list_item_next >> 8)
      00081A 7As00            [12] 2592 	mov	r2,#(_list_item_next >> 16)
      00081C 12r00r00         [24] 2593 	lcall	__sdcc_banked_call
      00081F AD 82            [24] 2594 	mov	r5,dpl
      000821 AE 83            [24] 2595 	mov	r6,dph
      000823 AF F0            [24] 2596 	mov	r7,b
      000825 E5 81            [12] 2597 	mov	a,sp
      000827 24 F6            [12] 2598 	add	a,#0xf6
      000829 F8               [12] 2599 	mov	r0,a
      00082A A6 05            [24] 2600 	mov	@r0,ar5
      00082C 08               [12] 2601 	inc	r0
      00082D A6 06            [24] 2602 	mov	@r0,ar6
      00082F 08               [12] 2603 	inc	r0
      000830 A6 07            [24] 2604 	mov	@r0,ar7
      000832 02r06rF6         [24] 2605 	ljmp	00173$
      000835                       2606 00127$:
                                   2607 ;	../../../../core/net/mac/cxmac.c:538: we_are_sending = 1;
      000835 90r00r0B         [24] 2608 	mov	dptr,#_we_are_sending
      000838 74 01            [12] 2609 	mov	a,#0x01
      00083A F0               [24] 2610 	movx	@dptr,a
                                   2611 ;	../../../../core/net/mac/cxmac.c:540: t0 = RTIMER_NOW();
      00083B AE E2            [24] 2612 	mov	r6,_T1CNTL
      00083D 7F 00            [12] 2613 	mov	r7,#0x00
      00083F AC E3            [24] 2614 	mov	r4,_T1CNTH
      000841 8C 05            [24] 2615 	mov	ar5,r4
      000843 E4               [12] 2616 	clr	a
      000844 2E               [12] 2617 	add	a,r6
      000845 FE               [12] 2618 	mov	r6,a
      000846 ED               [12] 2619 	mov	a,r5
      000847 3F               [12] 2620 	addc	a,r7
      000848 FF               [12] 2621 	mov	r7,a
                                   2622 ;	../../../../core/net/mac/cxmac.c:548: on();
      000849 C0 07            [24] 2623 	push	ar7
      00084B C0 06            [24] 2624 	push	ar6
      00084D 78r00            [12] 2625 	mov	r0,#_on
      00084F 79s00            [12] 2626 	mov	r1,#(_on >> 8)
      000851 7As00            [12] 2627 	mov	r2,#(_on >> 16)
      000853 12r00r00         [24] 2628 	lcall	__sdcc_banked_call
      000856 D0 06            [24] 2629 	pop	ar6
      000858 D0 07            [24] 2630 	pop	ar7
                                   2631 ;	../../../../core/net/mac/cxmac.c:549: collisions = 0;
      00085A A8 81            [24] 2632 	mov	r0,sp
      00085C 18               [12] 2633 	dec	r0
      00085D 18               [12] 2634 	dec	r0
      00085E 76 00            [12] 2635 	mov	@r0,#0x00
                                   2636 ;	../../../../core/net/mac/cxmac.c:550: if(!is_already_streaming) {
      000860 E5 81            [12] 2637 	mov	a,sp
      000862 24 FC            [12] 2638 	add	a,#0xfc
      000864 F8               [12] 2639 	mov	r0,a
      000865 E6               [12] 2640 	mov	a,@r0
      000866 08               [12] 2641 	inc	r0
      000867 46               [12] 2642 	orl	a,@r0
      000868 60 03            [24] 2643 	jz	00320$
      00086A 02r0Cr7F         [24] 2644 	ljmp	00150$
      00086D                       2645 00320$:
                                   2646 ;	../../../../core/net/mac/cxmac.c:551: watchdog_stop();
      00086D C0 06            [24] 2647 	push	ar6
      00086F C0 07            [24] 2648 	push	ar7
      000871 C0 07            [24] 2649 	push	ar7
      000873 C0 06            [24] 2650 	push	ar6
      000875 78r00            [12] 2651 	mov	r0,#_watchdog_periodic
      000877 79s00            [12] 2652 	mov	r1,#(_watchdog_periodic >> 8)
      000879 7As00            [12] 2653 	mov	r2,#(_watchdog_periodic >> 16)
      00087B 12r00r00         [24] 2654 	lcall	__sdcc_banked_call
      00087E D0 06            [24] 2655 	pop	ar6
      000880 D0 07            [24] 2656 	pop	ar7
                                   2657 ;	../../../../core/net/mac/cxmac.c:552: got_strobe_ack = 0;
      000882 E5 81            [12] 2658 	mov	a,sp
      000884 24 B8            [12] 2659 	add	a,#0xb8
      000886 F8               [12] 2660 	mov	r0,a
      000887 E4               [12] 2661 	clr	a
      000888 F6               [12] 2662 	mov	@r0,a
      000889 08               [12] 2663 	inc	r0
      00088A F6               [12] 2664 	mov	@r0,a
                                   2665 ;	../../../../core/net/mac/cxmac.c:553: t = RTIMER_NOW();
      00088B AC E2            [24] 2666 	mov	r4,_T1CNTL
      00088D 7F 00            [12] 2667 	mov	r7,#0x00
      00088F AB E3            [24] 2668 	mov	r3,_T1CNTH
      000891 8B 06            [24] 2669 	mov	ar6,r3
      000893 E4               [12] 2670 	clr	a
      000894 FB               [12] 2671 	mov	r3,a
      000895 2C               [12] 2672 	add	a,r4
      000896 FC               [12] 2673 	mov	r4,a
      000897 EE               [12] 2674 	mov	a,r6
      000898 3F               [12] 2675 	addc	a,r7
      000899 FF               [12] 2676 	mov	r7,a
      00089A E5 81            [12] 2677 	mov	a,sp
      00089C 24 B4            [12] 2678 	add	a,#0xb4
      00089E F8               [12] 2679 	mov	r0,a
      00089F A6 04            [24] 2680 	mov	@r0,ar4
      0008A1 08               [12] 2681 	inc	r0
      0008A2 A6 07            [24] 2682 	mov	@r0,ar7
                                   2683 ;	../../../../core/net/mac/cxmac.c:554: for(strobes = 0, collisions = 0;
      0008A4 E5 81            [12] 2684 	mov	a,sp
      0008A6 24 FC            [12] 2685 	add	a,#0xfc
      0008A8 F8               [12] 2686 	mov	r0,a
      0008A9 76 00            [12] 2687 	mov	@r0,#0x00
      0008AB E5 81            [12] 2688 	mov	a,sp
      0008AD 24 B0            [12] 2689 	add	a,#0xb0
      0008AF F8               [12] 2690 	mov	r0,a
                                   2691 ;	../../../../core/net/mac/cxmac.c:682: return MAC_TX_COLLISION;
      0008B0 D0 07            [24] 2692 	pop	ar7
      0008B2 D0 06            [24] 2693 	pop	ar6
                                   2694 ;	../../../../core/net/mac/cxmac.c:554: for(strobes = 0, collisions = 0;
      0008B4                       2695 00178$:
                                   2696 ;	../../../../core/net/mac/cxmac.c:555: got_strobe_ack == 0 && collisions == 0 &&
      0008B4 E5 81            [12] 2697 	mov	a,sp
      0008B6 24 BA            [12] 2698 	add	a,#0xba
      0008B8 F8               [12] 2699 	mov	r0,a
      0008B9 B6 00 06         [24] 2700 	cjne	@r0,#0x00,00321$
      0008BC 08               [12] 2701 	inc	r0
      0008BD B6 00 02         [24] 2702 	cjne	@r0,#0x00,00321$
      0008C0 80 03            [24] 2703 	sjmp	00322$
      0008C2                       2704 00321$:
      0008C2 02r0Cr7F         [24] 2705 	ljmp	00150$
      0008C5                       2706 00322$:
      0008C5 A8 81            [24] 2707 	mov	r0,sp
      0008C7 18               [12] 2708 	dec	r0
      0008C8 18               [12] 2709 	dec	r0
      0008C9 B6 00 02         [24] 2710 	cjne	@r0,#0x00,00323$
      0008CC 80 03            [24] 2711 	sjmp	00324$
      0008CE                       2712 00323$:
      0008CE 02r0Cr7F         [24] 2713 	ljmp	00150$
      0008D1                       2714 00324$:
                                   2715 ;	../../../../core/net/mac/cxmac.c:556: RTIMER_CLOCK_LT(RTIMER_NOW(), t0 + cxmac_config.strobe_time);
      0008D1 AB E2            [24] 2716 	mov	r3,_T1CNTL
      0008D3 7C 00            [12] 2717 	mov	r4,#0x00
      0008D5 AA E3            [24] 2718 	mov	r2,_T1CNTH
      0008D7 8A 05            [24] 2719 	mov	ar5,r2
      0008D9 E4               [12] 2720 	clr	a
      0008DA 2B               [12] 2721 	add	a,r3
      0008DB FB               [12] 2722 	mov	r3,a
      0008DC ED               [12] 2723 	mov	a,r5
      0008DD 3C               [12] 2724 	addc	a,r4
      0008DE FC               [12] 2725 	mov	r4,a
      0008DF 90r00r04         [24] 2726 	mov	dptr,#(_cxmac_config + 0x0004)
      0008E2 E0               [24] 2727 	movx	a,@dptr
      0008E3 FA               [12] 2728 	mov	r2,a
      0008E4 A3               [24] 2729 	inc	dptr
      0008E5 E0               [24] 2730 	movx	a,@dptr
      0008E6 FD               [12] 2731 	mov	r5,a
      0008E7 EA               [12] 2732 	mov	a,r2
      0008E8 2E               [12] 2733 	add	a,r6
      0008E9 FA               [12] 2734 	mov	r2,a
      0008EA ED               [12] 2735 	mov	a,r5
      0008EB 3F               [12] 2736 	addc	a,r7
      0008EC FD               [12] 2737 	mov	r5,a
      0008ED EB               [12] 2738 	mov	a,r3
      0008EE C3               [12] 2739 	clr	c
      0008EF 9A               [12] 2740 	subb	a,r2
      0008F0 FA               [12] 2741 	mov	r2,a
      0008F1 EC               [12] 2742 	mov	a,r4
      0008F2 9D               [12] 2743 	subb	a,r5
      0008F3 FD               [12] 2744 	mov	r5,a
      0008F4 20 E7 03         [24] 2745 	jb	acc.7,00325$
      0008F7 02r0Cr7F         [24] 2746 	ljmp	00150$
      0008FA                       2747 00325$:
                                   2748 ;	../../../../core/net/mac/cxmac.c:559: while(got_strobe_ack == 0 &&
      0008FA A8 81            [24] 2749 	mov	r0,sp
      0008FC 18               [12] 2750 	dec	r0
      0008FD 18               [12] 2751 	dec	r0
      0008FE 86 04            [24] 2752 	mov	ar4,@r0
      000900                       2753 00139$:
      000900 E5 81            [12] 2754 	mov	a,sp
      000902 24 BA            [12] 2755 	add	a,#0xba
      000904 F8               [12] 2756 	mov	r0,a
      000905 E6               [12] 2757 	mov	a,@r0
      000906 08               [12] 2758 	inc	r0
      000907 46               [12] 2759 	orl	a,@r0
      000908 60 03            [24] 2760 	jz	00326$
      00090A 02r0Br1E         [24] 2761 	ljmp	00221$
      00090D                       2762 00326$:
                                   2763 ;	../../../../core/net/mac/cxmac.c:560: RTIMER_CLOCK_LT(RTIMER_NOW(), t + cxmac_config.strobe_wait_time)) {
      00090D C0 06            [24] 2764 	push	ar6
      00090F C0 07            [24] 2765 	push	ar7
      000911 AA E2            [24] 2766 	mov	r2,_T1CNTL
      000913 7B 00            [12] 2767 	mov	r3,#0x00
      000915 AE E3            [24] 2768 	mov	r6,_T1CNTH
      000917 8E 07            [24] 2769 	mov	ar7,r6
      000919 E4               [12] 2770 	clr	a
      00091A 2A               [12] 2771 	add	a,r2
      00091B FA               [12] 2772 	mov	r2,a
      00091C EF               [12] 2773 	mov	a,r7
      00091D 3B               [12] 2774 	addc	a,r3
      00091E FB               [12] 2775 	mov	r3,a
      00091F 90r00r06         [24] 2776 	mov	dptr,#(_cxmac_config + 0x0006)
      000922 E0               [24] 2777 	movx	a,@dptr
      000923 FE               [12] 2778 	mov	r6,a
      000924 A3               [24] 2779 	inc	dptr
      000925 E0               [24] 2780 	movx	a,@dptr
      000926 FF               [12] 2781 	mov	r7,a
      000927 E5 81            [12] 2782 	mov	a,sp
      000929 24 B4            [12] 2783 	add	a,#0xb4
      00092B F8               [12] 2784 	mov	r0,a
      00092C EE               [12] 2785 	mov	a,r6
      00092D 26               [12] 2786 	add	a,@r0
      00092E FE               [12] 2787 	mov	r6,a
      00092F EF               [12] 2788 	mov	a,r7
      000930 08               [12] 2789 	inc	r0
      000931 36               [12] 2790 	addc	a,@r0
      000932 FF               [12] 2791 	mov	r7,a
      000933 EA               [12] 2792 	mov	a,r2
      000934 C3               [12] 2793 	clr	c
      000935 9E               [12] 2794 	subb	a,r6
      000936 EB               [12] 2795 	mov	a,r3
      000937 9F               [12] 2796 	subb	a,r7
      000938 D0 07            [24] 2797 	pop	ar7
      00093A D0 06            [24] 2798 	pop	ar6
      00093C 20 E7 03         [24] 2799 	jb	acc.7,00327$
      00093F 02r0Br1E         [24] 2800 	ljmp	00221$
      000942                       2801 00327$:
                                   2802 ;	../../../../core/net/mac/cxmac.c:561: rtimer_clock_t now = RTIMER_NOW();
      000942 C0 06            [24] 2803 	push	ar6
      000944 C0 07            [24] 2804 	push	ar7
      000946 AA E2            [24] 2805 	mov	r2,_T1CNTL
      000948 7B 00            [12] 2806 	mov	r3,#0x00
      00094A AE E3            [24] 2807 	mov	r6,_T1CNTH
      00094C 8E 07            [24] 2808 	mov	ar7,r6
      00094E E4               [12] 2809 	clr	a
      00094F FE               [12] 2810 	mov	r6,a
      000950 2A               [12] 2811 	add	a,r2
      000951 FA               [12] 2812 	mov	r2,a
      000952 EF               [12] 2813 	mov	a,r7
      000953 3B               [12] 2814 	addc	a,r3
      000954 FB               [12] 2815 	mov	r3,a
      000955 E5 81            [12] 2816 	mov	a,sp
      000957 24 FD            [12] 2817 	add	a,#0xfd
      000959 F8               [12] 2818 	mov	r0,a
      00095A A6 02            [24] 2819 	mov	@r0,ar2
      00095C 08               [12] 2820 	inc	r0
      00095D A6 03            [24] 2821 	mov	@r0,ar3
                                   2822 ;	../../../../core/net/mac/cxmac.c:564: packetbuf_clear();
      00095F C0 07            [24] 2823 	push	ar7
      000961 C0 06            [24] 2824 	push	ar6
      000963 C0 04            [24] 2825 	push	ar4
      000965 78r00            [12] 2826 	mov	r0,#_packetbuf_clear
      000967 79s00            [12] 2827 	mov	r1,#(_packetbuf_clear >> 8)
      000969 7As00            [12] 2828 	mov	r2,#(_packetbuf_clear >> 16)
      00096B 12r00r00         [24] 2829 	lcall	__sdcc_banked_call
      00096E D0 04            [24] 2830 	pop	ar4
      000970 D0 06            [24] 2831 	pop	ar6
      000972 D0 07            [24] 2832 	pop	ar7
                                   2833 ;	../../../../core/net/mac/cxmac.c:565: len = NETSTACK_RADIO.read(packetbuf_dataptr(), PACKETBUF_SIZE);
      000974 90r00r0C         [24] 2834 	mov	dptr,#(_cc2530_rf_driver + 0x000c)
      000977 E5 81            [12] 2835 	mov	a,sp
      000979 24 B1            [12] 2836 	add	a,#0xb1
      00097B F8               [12] 2837 	mov	r0,a
      00097C E4               [12] 2838 	clr	a
      00097D 93               [24] 2839 	movc	a,@a+dptr
      00097E F6               [12] 2840 	mov	@r0,a
      00097F A3               [24] 2841 	inc	dptr
      000980 E4               [12] 2842 	clr	a
      000981 93               [24] 2843 	movc	a,@a+dptr
      000982 08               [12] 2844 	inc	r0
      000983 F6               [12] 2845 	mov	@r0,a
      000984 A3               [24] 2846 	inc	dptr
      000985 E4               [12] 2847 	clr	a
      000986 93               [24] 2848 	movc	a,@a+dptr
      000987 08               [12] 2849 	inc	r0
      000988 F6               [12] 2850 	mov	@r0,a
      000989 C0 04            [24] 2851 	push	ar4
      00098B 78r00            [12] 2852 	mov	r0,#_packetbuf_dataptr
      00098D 79s00            [12] 2853 	mov	r1,#(_packetbuf_dataptr >> 8)
      00098F 7As00            [12] 2854 	mov	r2,#(_packetbuf_dataptr >> 16)
      000991 12r00r00         [24] 2855 	lcall	__sdcc_banked_call
      000994 AA 82            [24] 2856 	mov	r2,dpl
      000996 AE 83            [24] 2857 	mov	r6,dph
      000998 AF F0            [24] 2858 	mov	r7,b
      00099A 74 80            [12] 2859 	mov	a,#0x80
      00099C C0 E0            [24] 2860 	push	acc
      00099E E4               [12] 2861 	clr	a
      00099F C0 E0            [24] 2862 	push	acc
      0009A1 E5 81            [12] 2863 	mov	a,sp
      0009A3 24 AE            [12] 2864 	add	a,#0xae
      0009A5 F8               [12] 2865 	mov	r0,a
      0009A6 E6               [12] 2866 	mov	a,@r0
      0009A7 C0 E0            [24] 2867 	push	acc
      0009A9 08               [12] 2868 	inc	r0
      0009AA E6               [12] 2869 	mov	a,@r0
      0009AB C0 E0            [24] 2870 	push	acc
      0009AD 08               [12] 2871 	inc	r0
      0009AE E6               [12] 2872 	mov	a,@r0
      0009AF C0 E0            [24] 2873 	push	acc
      0009B1 8A 82            [24] 2874 	mov	dpl,r2
      0009B3 8E 83            [24] 2875 	mov	dph,r6
      0009B5 8F F0            [24] 2876 	mov	b,r7
      0009B7 D0 02            [24] 2877 	pop	ar2
      0009B9 D0 01            [24] 2878 	pop	ar1
      0009BB D0 00            [24] 2879 	pop	ar0
      0009BD 12r00r00         [24] 2880 	lcall	__sdcc_banked_call
      0009C0 AE 82            [24] 2881 	mov	r6,dpl
      0009C2 AF 83            [24] 2882 	mov	r7,dph
      0009C4 15 81            [12] 2883 	dec	sp
      0009C6 15 81            [12] 2884 	dec	sp
      0009C8 D0 04            [24] 2885 	pop	ar4
      0009CA E5 81            [12] 2886 	mov	a,sp
      0009CC 24 EE            [12] 2887 	add	a,#0xee
      0009CE F8               [12] 2888 	mov	r0,a
      0009CF A6 06            [24] 2889 	mov	@r0,ar6
      0009D1 08               [12] 2890 	inc	r0
      0009D2 A6 07            [24] 2891 	mov	@r0,ar7
                                   2892 ;	../../../../core/net/mac/cxmac.c:566: if(len > 0) {
      0009D4 E5 81            [12] 2893 	mov	a,sp
      0009D6 24 EE            [12] 2894 	add	a,#0xee
      0009D8 F8               [12] 2895 	mov	r0,a
      0009D9 C3               [12] 2896 	clr	c
      0009DA E4               [12] 2897 	clr	a
      0009DB 96               [12] 2898 	subb	a,@r0
      0009DC E4               [12] 2899 	clr	a
      0009DD 64 80            [12] 2900 	xrl	a,#0x80
      0009DF 08               [12] 2901 	inc	r0
      0009E0 86 F0            [24] 2902 	mov	b,@r0
      0009E2 63 F0 80         [24] 2903 	xrl	b,#0x80
      0009E5 95 F0            [12] 2904 	subb	a,b
      0009E7 D0 07            [24] 2905 	pop	ar7
      0009E9 D0 06            [24] 2906 	pop	ar6
      0009EB 40 03            [24] 2907 	jc	00328$
      0009ED 02r09r00         [24] 2908 	ljmp	00139$
      0009F0                       2909 00328$:
                                   2910 ;	../../../../core/net/mac/cxmac.c:567: packetbuf_set_datalen(len);
      0009F0 C0 06            [24] 2911 	push	ar6
      0009F2 C0 07            [24] 2912 	push	ar7
      0009F4 E5 81            [12] 2913 	mov	a,sp
      0009F6 24 EE            [12] 2914 	add	a,#0xee
      0009F8 F8               [12] 2915 	mov	r0,a
      0009F9 86 82            [24] 2916 	mov	dpl,@r0
      0009FB 08               [12] 2917 	inc	r0
      0009FC 86 83            [24] 2918 	mov	dph,@r0
      0009FE C0 07            [24] 2919 	push	ar7
      000A00 C0 06            [24] 2920 	push	ar6
      000A02 C0 04            [24] 2921 	push	ar4
      000A04 78r00            [12] 2922 	mov	r0,#_packetbuf_set_datalen
      000A06 79s00            [12] 2923 	mov	r1,#(_packetbuf_set_datalen >> 8)
      000A08 7As00            [12] 2924 	mov	r2,#(_packetbuf_set_datalen >> 16)
      000A0A 12r00r00         [24] 2925 	lcall	__sdcc_banked_call
      000A0D D0 04            [24] 2926 	pop	ar4
      000A0F D0 06            [24] 2927 	pop	ar6
      000A11 D0 07            [24] 2928 	pop	ar7
                                   2929 ;	../../../../core/net/mac/cxmac.c:568: if(NETSTACK_FRAMER.parse() >= 0) {
      000A13 90r00r03         [24] 2930 	mov	dptr,#(_framer_802154 + 0x0003)
      000A16 E4               [12] 2931 	clr	a
      000A17 93               [24] 2932 	movc	a,@a+dptr
      000A18 FA               [12] 2933 	mov	r2,a
      000A19 A3               [24] 2934 	inc	dptr
      000A1A E4               [12] 2935 	clr	a
      000A1B 93               [24] 2936 	movc	a,@a+dptr
      000A1C FB               [12] 2937 	mov	r3,a
      000A1D A3               [24] 2938 	inc	dptr
      000A1E E4               [12] 2939 	clr	a
      000A1F 93               [24] 2940 	movc	a,@a+dptr
      000A20 FF               [12] 2941 	mov	r7,a
      000A21 C0 07            [24] 2942 	push	ar7
      000A23 C0 06            [24] 2943 	push	ar6
      000A25 C0 04            [24] 2944 	push	ar4
      000A27 C0 02            [24] 2945 	push	ar2
      000A29 C0 03            [24] 2946 	push	ar3
      000A2B C0 07            [24] 2947 	push	ar7
      000A2D D0 02            [24] 2948 	pop	ar2
      000A2F D0 01            [24] 2949 	pop	ar1
      000A31 D0 00            [24] 2950 	pop	ar0
      000A33 12r00r00         [24] 2951 	lcall	__sdcc_banked_call
      000A36 AA 82            [24] 2952 	mov	r2,dpl
      000A38 AB 83            [24] 2953 	mov	r3,dph
      000A3A D0 04            [24] 2954 	pop	ar4
      000A3C D0 06            [24] 2955 	pop	ar6
      000A3E D0 07            [24] 2956 	pop	ar7
      000A40 EB               [12] 2957 	mov	a,r3
      000A41 D0 07            [24] 2958 	pop	ar7
      000A43 D0 06            [24] 2959 	pop	ar6
      000A45 30 E7 03         [24] 2960 	jnb	acc.7,00329$
      000A48 02r09r00         [24] 2961 	ljmp	00139$
      000A4B                       2962 00329$:
                                   2963 ;	../../../../core/net/mac/cxmac.c:569: hdr = packetbuf_dataptr();
      000A4B C0 06            [24] 2964 	push	ar6
      000A4D C0 07            [24] 2965 	push	ar7
      000A4F C0 06            [24] 2966 	push	ar6
      000A51 C0 04            [24] 2967 	push	ar4
      000A53 78r00            [12] 2968 	mov	r0,#_packetbuf_dataptr
      000A55 79s00            [12] 2969 	mov	r1,#(_packetbuf_dataptr >> 8)
      000A57 7As00            [12] 2970 	mov	r2,#(_packetbuf_dataptr >> 16)
      000A59 12r00r00         [24] 2971 	lcall	__sdcc_banked_call
      000A5C AA 82            [24] 2972 	mov	r2,dpl
      000A5E AB 83            [24] 2973 	mov	r3,dph
      000A60 AF F0            [24] 2974 	mov	r7,b
      000A62 D0 04            [24] 2975 	pop	ar4
      000A64 D0 06            [24] 2976 	pop	ar6
                                   2977 ;	../../../../core/net/mac/cxmac.c:570: is_dispatch = hdr->dispatch == DISPATCH;
      000A66 8A 82            [24] 2978 	mov	dpl,r2
      000A68 8B 83            [24] 2979 	mov	dph,r3
      000A6A 8F F0            [24] 2980 	mov	b,r7
      000A6C 12r00r00         [24] 2981 	lcall	__gptrget
      000A6F FE               [12] 2982 	mov	r6,a
      000A70 E4               [12] 2983 	clr	a
      000A71 BE 00 01         [24] 2984 	cjne	r6,#0x00,00330$
      000A74 04               [12] 2985 	inc	a
      000A75                       2986 00330$:
      000A75 FE               [12] 2987 	mov	r6,a
      000A76 E5 81            [12] 2988 	mov	a,sp
      000A78 24 F2            [12] 2989 	add	a,#0xf2
      000A7A F8               [12] 2990 	mov	r0,a
      000A7B A6 06            [24] 2991 	mov	@r0,ar6
      000A7D EE               [12] 2992 	mov	a,r6
      000A7E 33               [12] 2993 	rlc	a
      000A7F 95 E0            [12] 2994 	subb	a,acc
      000A81 08               [12] 2995 	inc	r0
      000A82 F6               [12] 2996 	mov	@r0,a
                                   2997 ;	../../../../core/net/mac/cxmac.c:571: is_strobe_ack = hdr->type == TYPE_STROBE_ACK;
      000A83 0A               [12] 2998 	inc	r2
      000A84 BA 00 01         [24] 2999 	cjne	r2,#0x00,00332$
      000A87 0B               [12] 3000 	inc	r3
      000A88                       3001 00332$:
      000A88 8A 82            [24] 3002 	mov	dpl,r2
      000A8A 8B 83            [24] 3003 	mov	dph,r3
      000A8C 8F F0            [24] 3004 	mov	b,r7
      000A8E 12r00r00         [24] 3005 	lcall	__gptrget
      000A91 FA               [12] 3006 	mov	r2,a
      000A92 E4               [12] 3007 	clr	a
      000A93 BA 13 01         [24] 3008 	cjne	r2,#0x13,00333$
      000A96 04               [12] 3009 	inc	a
      000A97                       3010 00333$:
      000A97 FA               [12] 3011 	mov	r2,a
      000A98 33               [12] 3012 	rlc	a
      000A99 95 E0            [12] 3013 	subb	a,acc
      000A9B FD               [12] 3014 	mov	r5,a
                                   3015 ;	../../../../core/net/mac/cxmac.c:572: if(is_dispatch && is_strobe_ack) {
      000A9C D0 07            [24] 3016 	pop	ar7
      000A9E D0 06            [24] 3017 	pop	ar6
      000AA0 E5 81            [12] 3018 	mov	a,sp
      000AA2 24 F4            [12] 3019 	add	a,#0xf4
      000AA4 F8               [12] 3020 	mov	r0,a
      000AA5 E6               [12] 3021 	mov	a,@r0
      000AA6 08               [12] 3022 	inc	r0
      000AA7 46               [12] 3023 	orl	a,@r0
      000AA8 60 70            [24] 3024 	jz	00131$
      000AAA EA               [12] 3025 	mov	a,r2
      000AAB 4D               [12] 3026 	orl	a,r5
      000AAC 60 6C            [24] 3027 	jz	00131$
                                   3028 ;	../../../../core/net/mac/cxmac.c:574: &rimeaddr_node_addr)) {
      000AAE C0 06            [24] 3029 	push	ar6
      000AB0 C0 07            [24] 3030 	push	ar7
                                   3031 ;	../../../../core/net/mac/cxmac.c:573: if(rimeaddr_cmp(packetbuf_addr(PACKETBUF_ADDR_RECEIVER),
      000AB2 75 82 19         [24] 3032 	mov	dpl,#0x19
      000AB5 C0 06            [24] 3033 	push	ar6
      000AB7 C0 04            [24] 3034 	push	ar4
      000AB9 78r00            [12] 3035 	mov	r0,#_packetbuf_addr
      000ABB 79s00            [12] 3036 	mov	r1,#(_packetbuf_addr >> 8)
      000ABD 7As00            [12] 3037 	mov	r2,#(_packetbuf_addr >> 16)
      000ABF 12r00r00         [24] 3038 	lcall	__sdcc_banked_call
      000AC2 AA 82            [24] 3039 	mov	r2,dpl
      000AC4 AB 83            [24] 3040 	mov	r3,dph
      000AC6 AF F0            [24] 3041 	mov	r7,b
      000AC8 D0 04            [24] 3042 	pop	ar4
      000ACA D0 06            [24] 3043 	pop	ar6
      000ACC C0 04            [24] 3044 	push	ar4
      000ACE 74r00            [12] 3045 	mov	a,#_rimeaddr_node_addr
      000AD0 C0 E0            [24] 3046 	push	acc
      000AD2 74s00            [12] 3047 	mov	a,#(_rimeaddr_node_addr >> 8)
      000AD4 C0 E0            [24] 3048 	push	acc
      000AD6 E4               [12] 3049 	clr	a
      000AD7 C0 E0            [24] 3050 	push	acc
      000AD9 8A 82            [24] 3051 	mov	dpl,r2
      000ADB 8B 83            [24] 3052 	mov	dph,r3
      000ADD 8F F0            [24] 3053 	mov	b,r7
      000ADF 78r00            [12] 3054 	mov	r0,#_rimeaddr_cmp
      000AE1 79s00            [12] 3055 	mov	r1,#(_rimeaddr_cmp >> 8)
      000AE3 7As00            [12] 3056 	mov	r2,#(_rimeaddr_cmp >> 16)
      000AE5 12r00r00         [24] 3057 	lcall	__sdcc_banked_call
      000AE8 AE 82            [24] 3058 	mov	r6,dpl
      000AEA AF 83            [24] 3059 	mov	r7,dph
      000AEC 15 81            [12] 3060 	dec	sp
      000AEE 15 81            [12] 3061 	dec	sp
      000AF0 15 81            [12] 3062 	dec	sp
      000AF2 D0 04            [24] 3063 	pop	ar4
      000AF4 EE               [12] 3064 	mov	a,r6
      000AF5 4F               [12] 3065 	orl	a,r7
      000AF6 D0 07            [24] 3066 	pop	ar7
      000AF8 D0 06            [24] 3067 	pop	ar6
      000AFA 70 03            [24] 3068 	jnz	00337$
      000AFC 02r09r00         [24] 3069 	ljmp	00139$
      000AFF                       3070 00337$:
                                   3071 ;	../../../../core/net/mac/cxmac.c:577: got_strobe_ack = 1;
      000AFF E5 81            [12] 3072 	mov	a,sp
      000B01 24 BA            [12] 3073 	add	a,#0xba
      000B03 F8               [12] 3074 	mov	r0,a
      000B04 76 01            [12] 3075 	mov	@r0,#0x01
      000B06 08               [12] 3076 	inc	r0
      000B07 76 00            [12] 3077 	mov	@r0,#0x00
                                   3078 ;	../../../../core/net/mac/cxmac.c:578: encounter_time = now;
      000B09 A8 81            [24] 3079 	mov	r0,sp
      000B0B 18               [12] 3080 	dec	r0
      000B0C E5 81            [12] 3081 	mov	a,sp
      000B0E 24 B8            [12] 3082 	add	a,#0xb8
      000B10 F9               [12] 3083 	mov	r1,a
      000B11 E6               [12] 3084 	mov	a,@r0
      000B12 F7               [12] 3085 	mov	@r1,a
      000B13 08               [12] 3086 	inc	r0
      000B14 09               [12] 3087 	inc	r1
      000B15 E6               [12] 3088 	mov	a,@r0
      000B16 F7               [12] 3089 	mov	@r1,a
      000B17 02r09r00         [24] 3090 	ljmp	00139$
      000B1A                       3091 00131$:
                                   3092 ;	../../../../core/net/mac/cxmac.c:584: collisions++;
      000B1A 0C               [12] 3093 	inc	r4
      000B1B 02r09r00         [24] 3094 	ljmp	00139$
      000B1E                       3095 00221$:
      000B1E C0 06            [24] 3096 	push	ar6
      000B20 C0 07            [24] 3097 	push	ar7
      000B22 E5 81            [12] 3098 	mov	a,sp
      000B24 24 FC            [12] 3099 	add	a,#0xfc
      000B26 F8               [12] 3100 	mov	r0,a
      000B27 A6 04            [24] 3101 	mov	@r0,ar4
                                   3102 ;	../../../../core/net/mac/cxmac.c:592: t = RTIMER_NOW();
      000B29 AA E2            [24] 3103 	mov	r2,_T1CNTL
      000B2B 7B 00            [12] 3104 	mov	r3,#0x00
      000B2D AE E3            [24] 3105 	mov	r6,_T1CNTH
      000B2F 8E 07            [24] 3106 	mov	ar7,r6
      000B31 E4               [12] 3107 	clr	a
      000B32 2A               [12] 3108 	add	a,r2
      000B33 FA               [12] 3109 	mov	r2,a
      000B34 EF               [12] 3110 	mov	a,r7
      000B35 3B               [12] 3111 	addc	a,r3
      000B36 FB               [12] 3112 	mov	r3,a
      000B37 E5 81            [12] 3113 	mov	a,sp
      000B39 24 B4            [12] 3114 	add	a,#0xb4
      000B3B F8               [12] 3115 	mov	r0,a
      000B3C A6 02            [24] 3116 	mov	@r0,ar2
      000B3E 08               [12] 3117 	inc	r0
      000B3F A6 03            [24] 3118 	mov	@r0,ar3
                                   3119 ;	../../../../core/net/mac/cxmac.c:594: if(got_strobe_ack == 0 && collisions == 0) {
      000B41 D0 07            [24] 3120 	pop	ar7
      000B43 D0 06            [24] 3121 	pop	ar6
      000B45 E5 81            [12] 3122 	mov	a,sp
      000B47 24 BA            [12] 3123 	add	a,#0xba
      000B49 F8               [12] 3124 	mov	r0,a
      000B4A E6               [12] 3125 	mov	a,@r0
      000B4B 08               [12] 3126 	inc	r0
      000B4C 46               [12] 3127 	orl	a,@r0
      000B4D 60 03            [24] 3128 	jz	00338$
      000B4F 02r08rB4         [24] 3129 	ljmp	00178$
      000B52                       3130 00338$:
      000B52 EC               [12] 3131 	mov	a,r4
      000B53 60 03            [24] 3132 	jz	00339$
      000B55 02r08rB4         [24] 3133 	ljmp	00178$
      000B58                       3134 00339$:
                                   3135 ;	../../../../core/net/mac/cxmac.c:595: if(is_broadcast) {
      000B58 E5 81            [12] 3136 	mov	a,sp
      000B5A 24 F2            [12] 3137 	add	a,#0xf2
      000B5C F8               [12] 3138 	mov	r0,a
      000B5D E6               [12] 3139 	mov	a,@r0
      000B5E 08               [12] 3140 	inc	r0
      000B5F 46               [12] 3141 	orl	a,@r0
      000B60 70 03            [24] 3142 	jnz	00340$
      000B62 02r0Cr19         [24] 3143 	ljmp	00143$
      000B65                       3144 00340$:
                                   3145 ;	../../../../core/net/mac/cxmac.c:600: queuebuf_to_packetbuf(packet);
      000B65 C0 06            [24] 3146 	push	ar6
      000B67 C0 07            [24] 3147 	push	ar7
      000B69 E5 81            [12] 3148 	mov	a,sp
      000B6B 24 F7            [12] 3149 	add	a,#0xf7
      000B6D F8               [12] 3150 	mov	r0,a
      000B6E 86 82            [24] 3151 	mov	dpl,@r0
      000B70 08               [12] 3152 	inc	r0
      000B71 86 83            [24] 3153 	mov	dph,@r0
      000B73 08               [12] 3154 	inc	r0
      000B74 86 F0            [24] 3155 	mov	b,@r0
      000B76 C0 07            [24] 3156 	push	ar7
      000B78 C0 06            [24] 3157 	push	ar6
      000B7A 78r00            [12] 3158 	mov	r0,#_queuebuf_to_packetbuf
      000B7C 79s00            [12] 3159 	mov	r1,#(_queuebuf_to_packetbuf >> 8)
      000B7E 7As00            [12] 3160 	mov	r2,#(_queuebuf_to_packetbuf >> 16)
      000B80 12r00r00         [24] 3161 	lcall	__sdcc_banked_call
                                   3162 ;	../../../../core/net/mac/cxmac.c:601: NETSTACK_RADIO.send(packetbuf_hdrptr(), packetbuf_totlen());
      000B83 90r00r09         [24] 3163 	mov	dptr,#(_cc2530_rf_driver + 0x0009)
      000B86 E4               [12] 3164 	clr	a
      000B87 93               [24] 3165 	movc	a,@a+dptr
      000B88 FA               [12] 3166 	mov	r2,a
      000B89 A3               [24] 3167 	inc	dptr
      000B8A E4               [12] 3168 	clr	a
      000B8B 93               [24] 3169 	movc	a,@a+dptr
      000B8C FB               [12] 3170 	mov	r3,a
      000B8D A3               [24] 3171 	inc	dptr
      000B8E E4               [12] 3172 	clr	a
      000B8F 93               [24] 3173 	movc	a,@a+dptr
      000B90 FC               [12] 3174 	mov	r4,a
      000B91 C0 04            [24] 3175 	push	ar4
      000B93 C0 03            [24] 3176 	push	ar3
      000B95 C0 02            [24] 3177 	push	ar2
      000B97 78r00            [12] 3178 	mov	r0,#_packetbuf_totlen
      000B99 79s00            [12] 3179 	mov	r1,#(_packetbuf_totlen >> 8)
      000B9B 7As00            [12] 3180 	mov	r2,#(_packetbuf_totlen >> 16)
      000B9D 12r00r00         [24] 3181 	lcall	__sdcc_banked_call
      000BA0 C8               [12] 3182 	xch	a,r0
      000BA1 E5 81            [12] 3183 	mov	a,sp
      000BA3 24 AC            [12] 3184 	add	a,#0xac
      000BA5 C8               [12] 3185 	xch	a,r0
      000BA6 A6 82            [24] 3186 	mov	@r0,dpl
      000BA8 08               [12] 3187 	inc	r0
      000BA9 A6 83            [24] 3188 	mov	@r0,dph
      000BAB D0 02            [24] 3189 	pop	ar2
      000BAD D0 03            [24] 3190 	pop	ar3
      000BAF D0 04            [24] 3191 	pop	ar4
      000BB1 D0 06            [24] 3192 	pop	ar6
      000BB3 D0 07            [24] 3193 	pop	ar7
      000BB5 C0 04            [24] 3194 	push	ar4
      000BB7 C0 03            [24] 3195 	push	ar3
      000BB9 C0 02            [24] 3196 	push	ar2
      000BBB 78r00            [12] 3197 	mov	r0,#_packetbuf_hdrptr
      000BBD 79s00            [12] 3198 	mov	r1,#(_packetbuf_hdrptr >> 8)
      000BBF 7As00            [12] 3199 	mov	r2,#(_packetbuf_hdrptr >> 16)
      000BC1 12r00r00         [24] 3200 	lcall	__sdcc_banked_call
      000BC4 AD 82            [24] 3201 	mov	r5,dpl
      000BC6 AE 83            [24] 3202 	mov	r6,dph
      000BC8 AF F0            [24] 3203 	mov	r7,b
      000BCA D0 02            [24] 3204 	pop	ar2
      000BCC D0 03            [24] 3205 	pop	ar3
      000BCE D0 04            [24] 3206 	pop	ar4
      000BD0 C0 07            [24] 3207 	push	ar7
      000BD2 C0 06            [24] 3208 	push	ar6
      000BD4 C0 04            [24] 3209 	push	ar4
      000BD6 C0 03            [24] 3210 	push	ar3
      000BD8 C0 02            [24] 3211 	push	ar2
      000BDA E5 81            [12] 3212 	mov	a,sp
      000BDC 24 AC            [12] 3213 	add	a,#0xac
      000BDE F8               [12] 3214 	mov	r0,a
      000BDF E6               [12] 3215 	mov	a,@r0
      000BE0 C0 E0            [24] 3216 	push	acc
      000BE2 08               [12] 3217 	inc	r0
      000BE3 E6               [12] 3218 	mov	a,@r0
      000BE4 C0 E0            [24] 3219 	push	acc
      000BE6 C0 02            [24] 3220 	push	ar2
      000BE8 C0 03            [24] 3221 	push	ar3
      000BEA C0 04            [24] 3222 	push	ar4
      000BEC 8D 82            [24] 3223 	mov	dpl,r5
      000BEE 8E 83            [24] 3224 	mov	dph,r6
      000BF0 8F F0            [24] 3225 	mov	b,r7
      000BF2 D0 02            [24] 3226 	pop	ar2
      000BF4 D0 01            [24] 3227 	pop	ar1
      000BF6 D0 00            [24] 3228 	pop	ar0
      000BF8 12r00r00         [24] 3229 	lcall	__sdcc_banked_call
      000BFB 15 81            [12] 3230 	dec	sp
      000BFD 15 81            [12] 3231 	dec	sp
      000BFF D0 02            [24] 3232 	pop	ar2
      000C01 D0 03            [24] 3233 	pop	ar3
      000C03 D0 04            [24] 3234 	pop	ar4
                                   3235 ;	../../../../core/net/mac/cxmac.c:603: off();
      000C05 78r40            [12] 3236 	mov	r0,#_off
      000C07 79s00            [12] 3237 	mov	r1,#(_off >> 8)
      000C09 7As00            [12] 3238 	mov	r2,#(_off >> 16)
      000C0B 12r00r00         [24] 3239 	lcall	__sdcc_banked_call
      000C0E D0 06            [24] 3240 	pop	ar6
      000C10 D0 07            [24] 3241 	pop	ar7
      000C12 D0 07            [24] 3242 	pop	ar7
      000C14 D0 06            [24] 3243 	pop	ar6
      000C16 02r08rB4         [24] 3244 	ljmp	00178$
      000C19                       3245 00143$:
                                   3246 ;	../../../../core/net/mac/cxmac.c:605: NETSTACK_RADIO.send(strobe, strobe_len);
      000C19 C0 06            [24] 3247 	push	ar6
      000C1B C0 07            [24] 3248 	push	ar7
      000C1D 90r00r09         [24] 3249 	mov	dptr,#(_cc2530_rf_driver + 0x0009)
      000C20 E4               [12] 3250 	clr	a
      000C21 93               [24] 3251 	movc	a,@a+dptr
      000C22 FB               [12] 3252 	mov	r3,a
      000C23 A3               [24] 3253 	inc	dptr
      000C24 E4               [12] 3254 	clr	a
      000C25 93               [24] 3255 	movc	a,@a+dptr
      000C26 FC               [12] 3256 	mov	r4,a
      000C27 A3               [24] 3257 	inc	dptr
      000C28 E4               [12] 3258 	clr	a
      000C29 93               [24] 3259 	movc	a,@a+dptr
      000C2A FD               [12] 3260 	mov	r5,a
      000C2B E5 81            [12] 3261 	mov	a,sp
      000C2D 24 B0            [12] 3262 	add	a,#0xb0
      000C2F F8               [12] 3263 	mov	r0,a
      000C30 86 02            [24] 3264 	mov	ar2,@r0
      000C32 7E 00            [12] 3265 	mov	r6,#0x00
      000C34 7F 40            [12] 3266 	mov	r7,#0x40
      000C36 C0 07            [24] 3267 	push	ar7
      000C38 C0 06            [24] 3268 	push	ar6
      000C3A C0 05            [24] 3269 	push	ar5
      000C3C C0 04            [24] 3270 	push	ar4
      000C3E C0 03            [24] 3271 	push	ar3
      000C40 E5 81            [12] 3272 	mov	a,sp
      000C42 24 E7            [12] 3273 	add	a,#0xe7
      000C44 F8               [12] 3274 	mov	r0,a
      000C45 E6               [12] 3275 	mov	a,@r0
      000C46 C0 E0            [24] 3276 	push	acc
      000C48 08               [12] 3277 	inc	r0
      000C49 E6               [12] 3278 	mov	a,@r0
      000C4A C0 E0            [24] 3279 	push	acc
      000C4C C0 03            [24] 3280 	push	ar3
      000C4E C0 04            [24] 3281 	push	ar4
      000C50 C0 05            [24] 3282 	push	ar5
      000C52 8A 82            [24] 3283 	mov	dpl,r2
      000C54 8E 83            [24] 3284 	mov	dph,r6
      000C56 8F F0            [24] 3285 	mov	b,r7
      000C58 D0 02            [24] 3286 	pop	ar2
      000C5A D0 01            [24] 3287 	pop	ar1
      000C5C D0 00            [24] 3288 	pop	ar0
      000C5E 12r00r00         [24] 3289 	lcall	__sdcc_banked_call
      000C61 15 81            [12] 3290 	dec	sp
      000C63 15 81            [12] 3291 	dec	sp
      000C65 D0 03            [24] 3292 	pop	ar3
      000C67 D0 04            [24] 3293 	pop	ar4
      000C69 D0 05            [24] 3294 	pop	ar5
                                   3295 ;	../../../../core/net/mac/cxmac.c:614: on();
      000C6B 78r00            [12] 3296 	mov	r0,#_on
      000C6D 79s00            [12] 3297 	mov	r1,#(_on >> 8)
      000C6F 7As00            [12] 3298 	mov	r2,#(_on >> 16)
      000C71 12r00r00         [24] 3299 	lcall	__sdcc_banked_call
      000C74 D0 06            [24] 3300 	pop	ar6
      000C76 D0 07            [24] 3301 	pop	ar7
                                   3302 ;	../../../../core/net/mac/cxmac.c:557: strobes++) {
      000C78 D0 07            [24] 3303 	pop	ar7
      000C7A D0 06            [24] 3304 	pop	ar6
      000C7C 02r08rB4         [24] 3305 	ljmp	00178$
      000C7F                       3306 00150$:
                                   3307 ;	../../../../core/net/mac/cxmac.c:624: if(got_strobe_ack && (packetbuf_attr(PACKETBUF_ATTR_RELIABLE) ||
      000C7F E5 81            [12] 3308 	mov	a,sp
      000C81 24 BA            [12] 3309 	add	a,#0xba
      000C83 F8               [12] 3310 	mov	r0,a
      000C84 E6               [12] 3311 	mov	a,@r0
      000C85 08               [12] 3312 	inc	r0
      000C86 46               [12] 3313 	orl	a,@r0
      000C87 60 51            [24] 3314 	jz	00152$
      000C89 75 82 0C         [24] 3315 	mov	dpl,#0x0C
      000C8C 78r00            [12] 3316 	mov	r0,#_packetbuf_attr
      000C8E 79s00            [12] 3317 	mov	r1,#(_packetbuf_attr >> 8)
      000C90 7As00            [12] 3318 	mov	r2,#(_packetbuf_attr >> 16)
      000C92 12r00r00         [24] 3319 	lcall	__sdcc_banked_call
      000C95 E5 82            [12] 3320 	mov	a,dpl
      000C97 85 83 F0         [24] 3321 	mov	b,dph
      000C9A 45 F0            [12] 3322 	orl	a,b
      000C9C 70 2B            [24] 3323 	jnz	00151$
                                   3324 ;	../../../../core/net/mac/cxmac.c:625: packetbuf_attr(PACKETBUF_ATTR_ERELIABLE) ||
      000C9E 75 82 17         [24] 3325 	mov	dpl,#0x17
      000CA1 78r00            [12] 3326 	mov	r0,#_packetbuf_attr
      000CA3 79s00            [12] 3327 	mov	r1,#(_packetbuf_attr >> 8)
      000CA5 7As00            [12] 3328 	mov	r2,#(_packetbuf_attr >> 16)
      000CA7 12r00r00         [24] 3329 	lcall	__sdcc_banked_call
      000CAA E5 82            [12] 3330 	mov	a,dpl
      000CAC 85 83 F0         [24] 3331 	mov	b,dph
      000CAF 45 F0            [12] 3332 	orl	a,b
      000CB1 70 16            [24] 3333 	jnz	00151$
                                   3334 ;	../../../../core/net/mac/cxmac.c:626: packetbuf_attr(PACKETBUF_ATTR_PACKET_TYPE) ==
      000CB3 75 82 0E         [24] 3335 	mov	dpl,#0x0E
      000CB6 78r00            [12] 3336 	mov	r0,#_packetbuf_attr
      000CB8 79s00            [12] 3337 	mov	r1,#(_packetbuf_attr >> 8)
      000CBA 7As00            [12] 3338 	mov	r2,#(_packetbuf_attr >> 16)
      000CBC 12r00r00         [24] 3339 	lcall	__sdcc_banked_call
      000CBF AE 82            [24] 3340 	mov	r6,dpl
      000CC1 AF 83            [24] 3341 	mov	r7,dph
      000CC3 BE 02 14         [24] 3342 	cjne	r6,#0x02,00152$
      000CC6 BF 00 11         [24] 3343 	cjne	r7,#0x00,00152$
      000CC9                       3344 00151$:
                                   3345 ;	../../../../core/net/mac/cxmac.c:628: on(); /* Wait for ACK packet */
      000CC9 78r00            [12] 3346 	mov	r0,#_on
      000CCB 79s00            [12] 3347 	mov	r1,#(_on >> 8)
      000CCD 7As00            [12] 3348 	mov	r2,#(_on >> 16)
      000CCF 12r00r00         [24] 3349 	lcall	__sdcc_banked_call
                                   3350 ;	../../../../core/net/mac/cxmac.c:629: waiting_for_packet = 1;
      000CD2 90r00r09         [24] 3351 	mov	dptr,#_waiting_for_packet
      000CD5 74 01            [12] 3352 	mov	a,#0x01
      000CD7 F0               [24] 3353 	movx	@dptr,a
      000CD8 80 09            [24] 3354 	sjmp	00153$
      000CDA                       3355 00152$:
                                   3356 ;	../../../../core/net/mac/cxmac.c:631: off();
      000CDA 78r40            [12] 3357 	mov	r0,#_off
      000CDC 79s00            [12] 3358 	mov	r1,#(_off >> 8)
      000CDE 7As00            [12] 3359 	mov	r2,#(_off >> 16)
      000CE0 12r00r00         [24] 3360 	lcall	__sdcc_banked_call
      000CE3                       3361 00153$:
                                   3362 ;	../../../../core/net/mac/cxmac.c:638: queuebuf_to_packetbuf(packet);
      000CE3 E5 81            [12] 3363 	mov	a,sp
      000CE5 24 F9            [12] 3364 	add	a,#0xf9
      000CE7 F8               [12] 3365 	mov	r0,a
      000CE8 86 82            [24] 3366 	mov	dpl,@r0
      000CEA 08               [12] 3367 	inc	r0
      000CEB 86 83            [24] 3368 	mov	dph,@r0
      000CED 08               [12] 3369 	inc	r0
      000CEE 86 F0            [24] 3370 	mov	b,@r0
      000CF0 78r00            [12] 3371 	mov	r0,#_queuebuf_to_packetbuf
      000CF2 79s00            [12] 3372 	mov	r1,#(_queuebuf_to_packetbuf >> 8)
      000CF4 7As00            [12] 3373 	mov	r2,#(_queuebuf_to_packetbuf >> 16)
      000CF6 12r00r00         [24] 3374 	lcall	__sdcc_banked_call
                                   3375 ;	../../../../core/net/mac/cxmac.c:639: queuebuf_free(packet);
      000CF9 E5 81            [12] 3376 	mov	a,sp
      000CFB 24 F9            [12] 3377 	add	a,#0xf9
      000CFD F8               [12] 3378 	mov	r0,a
      000CFE 86 82            [24] 3379 	mov	dpl,@r0
      000D00 08               [12] 3380 	inc	r0
      000D01 86 83            [24] 3381 	mov	dph,@r0
      000D03 08               [12] 3382 	inc	r0
      000D04 86 F0            [24] 3383 	mov	b,@r0
      000D06 78r00            [12] 3384 	mov	r0,#_queuebuf_free
      000D08 79s00            [12] 3385 	mov	r1,#(_queuebuf_free >> 8)
      000D0A 7As00            [12] 3386 	mov	r2,#(_queuebuf_free >> 16)
      000D0C 12r00r00         [24] 3387 	lcall	__sdcc_banked_call
                                   3388 ;	../../../../core/net/mac/cxmac.c:642: if((is_broadcast || got_strobe_ack || is_streaming) && collisions == 0) {
      000D0F E5 81            [12] 3389 	mov	a,sp
      000D11 24 F2            [12] 3390 	add	a,#0xf2
      000D13 F8               [12] 3391 	mov	r0,a
      000D14 E6               [12] 3392 	mov	a,@r0
      000D15 08               [12] 3393 	inc	r0
      000D16 46               [12] 3394 	orl	a,@r0
      000D17 70 11            [24] 3395 	jnz	00161$
      000D19 E5 81            [12] 3396 	mov	a,sp
      000D1B 24 BA            [12] 3397 	add	a,#0xba
      000D1D F8               [12] 3398 	mov	r0,a
      000D1E E6               [12] 3399 	mov	a,@r0
      000D1F 08               [12] 3400 	inc	r0
      000D20 46               [12] 3401 	orl	a,@r0
      000D21 70 07            [24] 3402 	jnz	00161$
      000D23 90r00r3B         [24] 3403 	mov	dptr,#_is_streaming
      000D26 E0               [24] 3404 	movx	a,@dptr
      000D27 FF               [12] 3405 	mov	r7,a
      000D28 60 75            [24] 3406 	jz	00158$
      000D2A                       3407 00161$:
      000D2A A8 81            [24] 3408 	mov	r0,sp
      000D2C 18               [12] 3409 	dec	r0
      000D2D 18               [12] 3410 	dec	r0
      000D2E E6               [12] 3411 	mov	a,@r0
      000D2F 70 6E            [24] 3412 	jnz	00158$
                                   3413 ;	../../../../core/net/mac/cxmac.c:643: NETSTACK_RADIO.send(packetbuf_hdrptr(), packetbuf_totlen());
      000D31 90r00r09         [24] 3414 	mov	dptr,#(_cc2530_rf_driver + 0x0009)
      000D34 E4               [12] 3415 	clr	a
      000D35 93               [24] 3416 	movc	a,@a+dptr
      000D36 FD               [12] 3417 	mov	r5,a
      000D37 A3               [24] 3418 	inc	dptr
      000D38 E4               [12] 3419 	clr	a
      000D39 93               [24] 3420 	movc	a,@a+dptr
      000D3A FE               [12] 3421 	mov	r6,a
      000D3B A3               [24] 3422 	inc	dptr
      000D3C E4               [12] 3423 	clr	a
      000D3D 93               [24] 3424 	movc	a,@a+dptr
      000D3E FF               [12] 3425 	mov	r7,a
      000D3F C0 07            [24] 3426 	push	ar7
      000D41 C0 06            [24] 3427 	push	ar6
      000D43 C0 05            [24] 3428 	push	ar5
      000D45 78r00            [12] 3429 	mov	r0,#_packetbuf_totlen
      000D47 79s00            [12] 3430 	mov	r1,#(_packetbuf_totlen >> 8)
      000D49 7As00            [12] 3431 	mov	r2,#(_packetbuf_totlen >> 16)
      000D4B 12r00r00         [24] 3432 	lcall	__sdcc_banked_call
      000D4E C8               [12] 3433 	xch	a,r0
      000D4F E5 81            [12] 3434 	mov	a,sp
      000D51 24 B0            [12] 3435 	add	a,#0xb0
      000D53 C8               [12] 3436 	xch	a,r0
      000D54 A6 82            [24] 3437 	mov	@r0,dpl
      000D56 08               [12] 3438 	inc	r0
      000D57 A6 83            [24] 3439 	mov	@r0,dph
      000D59 78r00            [12] 3440 	mov	r0,#_packetbuf_hdrptr
      000D5B 79s00            [12] 3441 	mov	r1,#(_packetbuf_hdrptr >> 8)
      000D5D 7As00            [12] 3442 	mov	r2,#(_packetbuf_hdrptr >> 16)
      000D5F 12r00r00         [24] 3443 	lcall	__sdcc_banked_call
      000D62 AA 82            [24] 3444 	mov	r2,dpl
      000D64 AB 83            [24] 3445 	mov	r3,dph
      000D66 AC F0            [24] 3446 	mov	r4,b
      000D68 D0 05            [24] 3447 	pop	ar5
      000D6A D0 06            [24] 3448 	pop	ar6
      000D6C D0 07            [24] 3449 	pop	ar7
      000D6E C0 07            [24] 3450 	push	ar7
      000D70 C0 06            [24] 3451 	push	ar6
      000D72 C0 05            [24] 3452 	push	ar5
      000D74 E5 81            [12] 3453 	mov	a,sp
      000D76 24 B0            [12] 3454 	add	a,#0xb0
      000D78 F8               [12] 3455 	mov	r0,a
      000D79 E6               [12] 3456 	mov	a,@r0
      000D7A C0 E0            [24] 3457 	push	acc
      000D7C 08               [12] 3458 	inc	r0
      000D7D E6               [12] 3459 	mov	a,@r0
      000D7E C0 E0            [24] 3460 	push	acc
      000D80 C0 05            [24] 3461 	push	ar5
      000D82 C0 06            [24] 3462 	push	ar6
      000D84 C0 07            [24] 3463 	push	ar7
      000D86 8A 82            [24] 3464 	mov	dpl,r2
      000D88 8B 83            [24] 3465 	mov	dph,r3
      000D8A 8C F0            [24] 3466 	mov	b,r4
      000D8C D0 02            [24] 3467 	pop	ar2
      000D8E D0 01            [24] 3468 	pop	ar1
      000D90 D0 00            [24] 3469 	pop	ar0
      000D92 12r00r00         [24] 3470 	lcall	__sdcc_banked_call
      000D95 15 81            [12] 3471 	dec	sp
      000D97 15 81            [12] 3472 	dec	sp
      000D99 D0 05            [24] 3473 	pop	ar5
      000D9B D0 06            [24] 3474 	pop	ar6
      000D9D D0 07            [24] 3475 	pop	ar7
      000D9F                       3476 00158$:
                                   3477 ;	../../../../core/net/mac/cxmac.c:647: if(got_strobe_ack && !is_streaming) {
      000D9F E5 81            [12] 3478 	mov	a,sp
      000DA1 24 BA            [12] 3479 	add	a,#0xba
      000DA3 F8               [12] 3480 	mov	r0,a
      000DA4 E6               [12] 3481 	mov	a,@r0
      000DA5 08               [12] 3482 	inc	r0
      000DA6 46               [12] 3483 	orl	a,@r0
      000DA7 60 38            [24] 3484 	jz	00163$
      000DA9 90r00r3B         [24] 3485 	mov	dptr,#_is_streaming
      000DAC E0               [24] 3486 	movx	a,@dptr
      000DAD FF               [12] 3487 	mov	r7,a
      000DAE 70 31            [24] 3488 	jnz	00163$
                                   3489 ;	../../../../core/net/mac/cxmac.c:648: register_encounter(packetbuf_addr(PACKETBUF_ADDR_RECEIVER), encounter_time);
      000DB0 75 82 19         [24] 3490 	mov	dpl,#0x19
      000DB3 78r00            [12] 3491 	mov	r0,#_packetbuf_addr
      000DB5 79s00            [12] 3492 	mov	r1,#(_packetbuf_addr >> 8)
      000DB7 7As00            [12] 3493 	mov	r2,#(_packetbuf_addr >> 16)
      000DB9 12r00r00         [24] 3494 	lcall	__sdcc_banked_call
      000DBC AD 82            [24] 3495 	mov	r5,dpl
      000DBE AE 83            [24] 3496 	mov	r6,dph
      000DC0 AF F0            [24] 3497 	mov	r7,b
      000DC2 E5 81            [12] 3498 	mov	a,sp
      000DC4 24 B8            [12] 3499 	add	a,#0xb8
      000DC6 F8               [12] 3500 	mov	r0,a
      000DC7 E6               [12] 3501 	mov	a,@r0
      000DC8 C0 E0            [24] 3502 	push	acc
      000DCA 08               [12] 3503 	inc	r0
      000DCB E6               [12] 3504 	mov	a,@r0
      000DCC C0 E0            [24] 3505 	push	acc
      000DCE 8D 82            [24] 3506 	mov	dpl,r5
      000DD0 8E 83            [24] 3507 	mov	dph,r6
      000DD2 8F F0            [24] 3508 	mov	b,r7
      000DD4 78r39            [12] 3509 	mov	r0,#_register_encounter
      000DD6 79s02            [12] 3510 	mov	r1,#(_register_encounter >> 8)
      000DD8 7As00            [12] 3511 	mov	r2,#(_register_encounter >> 16)
      000DDA 12r00r00         [24] 3512 	lcall	__sdcc_banked_call
      000DDD 15 81            [12] 3513 	dec	sp
      000DDF 15 81            [12] 3514 	dec	sp
      000DE1                       3515 00163$:
                                   3516 ;	../../../../core/net/mac/cxmac.c:651: watchdog_start();
      000DE1 78r00            [12] 3517 	mov	r0,#_watchdog_start
      000DE3 79s00            [12] 3518 	mov	r1,#(_watchdog_start >> 8)
      000DE5 7As00            [12] 3519 	mov	r2,#(_watchdog_start >> 16)
      000DE7 12r00r00         [24] 3520 	lcall	__sdcc_banked_call
                                   3521 ;	../../../../core/net/mac/cxmac.c:671: we_are_sending = 0;
      000DEA 90r00r0B         [24] 3522 	mov	dptr,#_we_are_sending
      000DED E4               [12] 3523 	clr	a
      000DEE F0               [24] 3524 	movx	@dptr,a
                                   3525 ;	../../../../core/net/mac/cxmac.c:674: if(collisions == 0) {
      000DEF A8 81            [24] 3526 	mov	r0,sp
      000DF1 18               [12] 3527 	dec	r0
      000DF2 18               [12] 3528 	dec	r0
      000DF3 E6               [12] 3529 	mov	a,@r0
      000DF4 70 1E            [24] 3530 	jnz	00170$
                                   3531 ;	../../../../core/net/mac/cxmac.c:675: if(!is_broadcast && !got_strobe_ack) {
      000DF6 E5 81            [12] 3532 	mov	a,sp
      000DF8 24 F2            [12] 3533 	add	a,#0xf2
      000DFA F8               [12] 3534 	mov	r0,a
      000DFB E6               [12] 3535 	mov	a,@r0
      000DFC 08               [12] 3536 	inc	r0
      000DFD 46               [12] 3537 	orl	a,@r0
      000DFE 70 0F            [24] 3538 	jnz	00166$
      000E00 E5 81            [12] 3539 	mov	a,sp
      000E02 24 BA            [12] 3540 	add	a,#0xba
      000E04 F8               [12] 3541 	mov	r0,a
      000E05 E6               [12] 3542 	mov	a,@r0
      000E06 08               [12] 3543 	inc	r0
      000E07 46               [12] 3544 	orl	a,@r0
      000E08 70 05            [24] 3545 	jnz	00166$
                                   3546 ;	../../../../core/net/mac/cxmac.c:676: return MAC_TX_NOACK;
      000E0A 90 00 02         [24] 3547 	mov	dptr,#0x0002
      000E0D 80 0F            [24] 3548 	sjmp	00180$
      000E0F                       3549 00166$:
                                   3550 ;	../../../../core/net/mac/cxmac.c:678: return MAC_TX_OK;
      000E0F 90 00 00         [24] 3551 	mov	dptr,#0x0000
      000E12 80 0A            [24] 3552 	sjmp	00180$
      000E14                       3553 00170$:
                                   3554 ;	../../../../core/net/mac/cxmac.c:681: someone_is_sending++;
      000E14 90r00r0A         [24] 3555 	mov	dptr,#_someone_is_sending
      000E17 E0               [24] 3556 	movx	a,@dptr
      000E18 24 01            [12] 3557 	add	a,#0x01
      000E1A F0               [24] 3558 	movx	@dptr,a
                                   3559 ;	../../../../core/net/mac/cxmac.c:682: return MAC_TX_COLLISION;
      000E1B 90 00 01         [24] 3560 	mov	dptr,#0x0001
      000E1E                       3561 00180$:
      000E1E E5 81            [12] 3562 	mov	a,sp
      000E20 24 B1            [12] 3563 	add	a,#0xB1
      000E22 F5 81            [12] 3564 	mov	sp,a
      000E24 02r00r00         [24] 3565 	ljmp	__sdcc_banked_ret
                                   3566 ;------------------------------------------------------------
                                   3567 ;Allocation info for local variables in function 'qsend_packet'
                                   3568 ;------------------------------------------------------------
                                   3569 ;ptr                       Allocated to stack - sp -7
                                   3570 ;sent                      Allocated to registers r5 r6 r7 
                                   3571 ;ret                       Allocated to stack - sp -1
                                   3572 ;sloc0                     Allocated to stack - sp -1
                                   3573 ;------------------------------------------------------------
                                   3574 ;	../../../../core/net/mac/cxmac.c:688: qsend_packet(mac_callback_t sent, void *ptr)
                                   3575 ;	-----------------------------------------
                                   3576 ;	 function qsend_packet
                                   3577 ;	-----------------------------------------
      000E27                       3578 _qsend_packet:
      000E27 05 81            [12] 3579 	inc	sp
      000E29 05 81            [12] 3580 	inc	sp
      000E2B AD 82            [24] 3581 	mov	r5,dpl
      000E2D AE 83            [24] 3582 	mov	r6,dph
      000E2F AF F0            [24] 3583 	mov	r7,b
                                   3584 ;	../../../../core/net/mac/cxmac.c:691: if(someone_is_sending) {
      000E31 90r00r0A         [24] 3585 	mov	dptr,#_someone_is_sending
      000E34 E0               [24] 3586 	movx	a,@dptr
      000E35 FC               [12] 3587 	mov	r4,a
      000E36 60 41            [24] 3588 	jz	00102$
                                   3589 ;	../../../../core/net/mac/cxmac.c:694: RIMESTATS_ADD(sendingdrop);
      000E38 C0 05            [24] 3590 	push	ar5
      000E3A C0 06            [24] 3591 	push	ar6
      000E3C C0 07            [24] 3592 	push	ar7
      000E3E 90r00r3C         [24] 3593 	mov	dptr,#(_rimestats + 0x003c)
      000E41 E0               [24] 3594 	movx	a,@dptr
      000E42 FA               [12] 3595 	mov	r2,a
      000E43 A3               [24] 3596 	inc	dptr
      000E44 E0               [24] 3597 	movx	a,@dptr
      000E45 FB               [12] 3598 	mov	r3,a
      000E46 A3               [24] 3599 	inc	dptr
      000E47 E0               [24] 3600 	movx	a,@dptr
      000E48 FC               [12] 3601 	mov	r4,a
      000E49 A3               [24] 3602 	inc	dptr
      000E4A E0               [24] 3603 	movx	a,@dptr
      000E4B FF               [12] 3604 	mov	r7,a
      000E4C 0A               [12] 3605 	inc	r2
      000E4D BA 00 09         [24] 3606 	cjne	r2,#0x00,00118$
      000E50 0B               [12] 3607 	inc	r3
      000E51 BB 00 05         [24] 3608 	cjne	r3,#0x00,00118$
      000E54 0C               [12] 3609 	inc	r4
      000E55 BC 00 01         [24] 3610 	cjne	r4,#0x00,00118$
      000E58 0F               [12] 3611 	inc	r7
      000E59                       3612 00118$:
      000E59 90r00r3C         [24] 3613 	mov	dptr,#(_rimestats + 0x003c)
      000E5C EA               [12] 3614 	mov	a,r2
      000E5D F0               [24] 3615 	movx	@dptr,a
      000E5E EB               [12] 3616 	mov	a,r3
      000E5F A3               [24] 3617 	inc	dptr
      000E60 F0               [24] 3618 	movx	@dptr,a
      000E61 EC               [12] 3619 	mov	a,r4
      000E62 A3               [24] 3620 	inc	dptr
      000E63 F0               [24] 3621 	movx	@dptr,a
      000E64 EF               [12] 3622 	mov	a,r7
      000E65 A3               [24] 3623 	inc	dptr
      000E66 F0               [24] 3624 	movx	@dptr,a
                                   3625 ;	../../../../core/net/mac/cxmac.c:695: ret = MAC_TX_COLLISION;
      000E67 E5 81            [12] 3626 	mov	a,sp
      000E69 24 FC            [12] 3627 	add	a,#0xfc
      000E6B F8               [12] 3628 	mov	r0,a
      000E6C 76 01            [12] 3629 	mov	@r0,#0x01
      000E6E 08               [12] 3630 	inc	r0
      000E6F 76 00            [12] 3631 	mov	@r0,#0x00
      000E71 D0 07            [24] 3632 	pop	ar7
      000E73 D0 06            [24] 3633 	pop	ar6
      000E75 D0 05            [24] 3634 	pop	ar5
      000E77 80 21            [24] 3635 	sjmp	00106$
      000E79                       3636 00102$:
                                   3637 ;	../../../../core/net/mac/cxmac.c:698: ret = send_packet();
      000E79 C0 07            [24] 3638 	push	ar7
      000E7B C0 06            [24] 3639 	push	ar6
      000E7D C0 05            [24] 3640 	push	ar5
      000E7F 78rAF            [12] 3641 	mov	r0,#_send_packet
      000E81 79s03            [12] 3642 	mov	r1,#(_send_packet >> 8)
      000E83 7As00            [12] 3643 	mov	r2,#(_send_packet >> 16)
      000E85 12r00r00         [24] 3644 	lcall	__sdcc_banked_call
      000E88 AB 82            [24] 3645 	mov	r3,dpl
      000E8A AC 83            [24] 3646 	mov	r4,dph
      000E8C D0 05            [24] 3647 	pop	ar5
      000E8E D0 06            [24] 3648 	pop	ar6
      000E90 D0 07            [24] 3649 	pop	ar7
      000E92 A8 81            [24] 3650 	mov	r0,sp
      000E94 18               [12] 3651 	dec	r0
      000E95 A6 03            [24] 3652 	mov	@r0,ar3
      000E97 08               [12] 3653 	inc	r0
      000E98 A6 04            [24] 3654 	mov	@r0,ar4
                                   3655 ;	../../../../core/net/mac/cxmac.c:701: mac_call_sent_callback(sent, ptr, ret, 1);
      000E9A                       3656 00106$:
      000E9A ED               [12] 3657 	mov	a,r5
      000E9B 4E               [12] 3658 	orl	a,r6
      000E9C 60 41            [24] 3659 	jz	00109$
      000E9E C0 07            [24] 3660 	push	ar7
      000EA0 C0 06            [24] 3661 	push	ar6
      000EA2 C0 05            [24] 3662 	push	ar5
      000EA4 74 01            [12] 3663 	mov	a,#0x01
      000EA6 C0 E0            [24] 3664 	push	acc
      000EA8 E4               [12] 3665 	clr	a
      000EA9 C0 E0            [24] 3666 	push	acc
      000EAB E5 81            [12] 3667 	mov	a,sp
      000EAD 24 FA            [12] 3668 	add	a,#0xfa
      000EAF F8               [12] 3669 	mov	r0,a
      000EB0 E6               [12] 3670 	mov	a,@r0
      000EB1 C0 E0            [24] 3671 	push	acc
      000EB3 08               [12] 3672 	inc	r0
      000EB4 E6               [12] 3673 	mov	a,@r0
      000EB5 C0 E0            [24] 3674 	push	acc
      000EB7 C0 05            [24] 3675 	push	ar5
      000EB9 C0 06            [24] 3676 	push	ar6
      000EBB C0 07            [24] 3677 	push	ar7
      000EBD E5 81            [12] 3678 	mov	a,sp
      000EBF 24 EF            [12] 3679 	add	a,#0xef
      000EC1 F8               [12] 3680 	mov	r0,a
      000EC2 86 82            [24] 3681 	mov	dpl,@r0
      000EC4 08               [12] 3682 	inc	r0
      000EC5 86 83            [24] 3683 	mov	dph,@r0
      000EC7 08               [12] 3684 	inc	r0
      000EC8 86 F0            [24] 3685 	mov	b,@r0
      000ECA D0 02            [24] 3686 	pop	ar2
      000ECC D0 01            [24] 3687 	pop	ar1
      000ECE D0 00            [24] 3688 	pop	ar0
      000ED0 12r00r00         [24] 3689 	lcall	__sdcc_banked_call
      000ED3 E5 81            [12] 3690 	mov	a,sp
      000ED5 24 FC            [12] 3691 	add	a,#0xfc
      000ED7 F5 81            [12] 3692 	mov	sp,a
      000ED9 D0 05            [24] 3693 	pop	ar5
      000EDB D0 06            [24] 3694 	pop	ar6
      000EDD D0 07            [24] 3695 	pop	ar7
      000EDF                       3696 00109$:
      000EDF 15 81            [12] 3697 	dec	sp
      000EE1 15 81            [12] 3698 	dec	sp
      000EE3 02r00r00         [24] 3699 	ljmp	__sdcc_banked_ret
                                   3700 ;------------------------------------------------------------
                                   3701 ;Allocation info for local variables in function 'qsend_list'
                                   3702 ;------------------------------------------------------------
                                   3703 ;ptr                       Allocated to stack - sp -5
                                   3704 ;buf_list                  Allocated to stack - sp -8
                                   3705 ;sent                      Allocated to registers r5 r6 r7 
                                   3706 ;------------------------------------------------------------
                                   3707 ;	../../../../core/net/mac/cxmac.c:705: qsend_list(mac_callback_t sent, void *ptr, struct rdc_buf_list *buf_list)
                                   3708 ;	-----------------------------------------
                                   3709 ;	 function qsend_list
                                   3710 ;	-----------------------------------------
      000EE6                       3711 _qsend_list:
      000EE6 AD 82            [24] 3712 	mov	r5,dpl
      000EE8 AE 83            [24] 3713 	mov	r6,dph
      000EEA AF F0            [24] 3714 	mov	r7,b
                                   3715 ;	../../../../core/net/mac/cxmac.c:707: if(buf_list != NULL) {
      000EEC E5 81            [12] 3716 	mov	a,sp
      000EEE 24 F8            [12] 3717 	add	a,#0xf8
      000EF0 F8               [12] 3718 	mov	r0,a
      000EF1 E6               [12] 3719 	mov	a,@r0
      000EF2 08               [12] 3720 	inc	r0
      000EF3 46               [12] 3721 	orl	a,@r0
      000EF4 60 68            [24] 3722 	jz	00103$
                                   3723 ;	../../../../core/net/mac/cxmac.c:708: queuebuf_to_packetbuf(buf_list->buf);
      000EF6 E5 81            [12] 3724 	mov	a,sp
      000EF8 24 F8            [12] 3725 	add	a,#0xf8
      000EFA F8               [12] 3726 	mov	r0,a
      000EFB 86 02            [24] 3727 	mov	ar2,@r0
      000EFD 08               [12] 3728 	inc	r0
      000EFE 86 03            [24] 3729 	mov	ar3,@r0
      000F00 08               [12] 3730 	inc	r0
      000F01 86 04            [24] 3731 	mov	ar4,@r0
      000F03 74 03            [12] 3732 	mov	a,#0x03
      000F05 2A               [12] 3733 	add	a,r2
      000F06 FA               [12] 3734 	mov	r2,a
      000F07 E4               [12] 3735 	clr	a
      000F08 3B               [12] 3736 	addc	a,r3
      000F09 FB               [12] 3737 	mov	r3,a
      000F0A 8A 82            [24] 3738 	mov	dpl,r2
      000F0C 8B 83            [24] 3739 	mov	dph,r3
      000F0E 8C F0            [24] 3740 	mov	b,r4
      000F10 12r00r00         [24] 3741 	lcall	__gptrget
      000F13 FA               [12] 3742 	mov	r2,a
      000F14 A3               [24] 3743 	inc	dptr
      000F15 12r00r00         [24] 3744 	lcall	__gptrget
      000F18 FB               [12] 3745 	mov	r3,a
      000F19 A3               [24] 3746 	inc	dptr
      000F1A 12r00r00         [24] 3747 	lcall	__gptrget
      000F1D FC               [12] 3748 	mov	r4,a
      000F1E 8A 82            [24] 3749 	mov	dpl,r2
      000F20 8B 83            [24] 3750 	mov	dph,r3
      000F22 8C F0            [24] 3751 	mov	b,r4
      000F24 C0 07            [24] 3752 	push	ar7
      000F26 C0 06            [24] 3753 	push	ar6
      000F28 C0 05            [24] 3754 	push	ar5
      000F2A 78r00            [12] 3755 	mov	r0,#_queuebuf_to_packetbuf
      000F2C 79s00            [12] 3756 	mov	r1,#(_queuebuf_to_packetbuf >> 8)
      000F2E 7As00            [12] 3757 	mov	r2,#(_queuebuf_to_packetbuf >> 16)
      000F30 12r00r00         [24] 3758 	lcall	__sdcc_banked_call
      000F33 D0 05            [24] 3759 	pop	ar5
      000F35 D0 06            [24] 3760 	pop	ar6
      000F37 D0 07            [24] 3761 	pop	ar7
                                   3762 ;	../../../../core/net/mac/cxmac.c:709: qsend_packet(sent, ptr);
      000F39 E5 81            [12] 3763 	mov	a,sp
      000F3B 24 FB            [12] 3764 	add	a,#0xfb
      000F3D F8               [12] 3765 	mov	r0,a
      000F3E E6               [12] 3766 	mov	a,@r0
      000F3F C0 E0            [24] 3767 	push	acc
      000F41 08               [12] 3768 	inc	r0
      000F42 E6               [12] 3769 	mov	a,@r0
      000F43 C0 E0            [24] 3770 	push	acc
      000F45 08               [12] 3771 	inc	r0
      000F46 E6               [12] 3772 	mov	a,@r0
      000F47 C0 E0            [24] 3773 	push	acc
      000F49 8D 82            [24] 3774 	mov	dpl,r5
      000F4B 8E 83            [24] 3775 	mov	dph,r6
      000F4D 8F F0            [24] 3776 	mov	b,r7
      000F4F 78r27            [12] 3777 	mov	r0,#_qsend_packet
      000F51 79s0E            [12] 3778 	mov	r1,#(_qsend_packet >> 8)
      000F53 7As00            [12] 3779 	mov	r2,#(_qsend_packet >> 16)
      000F55 12r00r00         [24] 3780 	lcall	__sdcc_banked_call
      000F58 15 81            [12] 3781 	dec	sp
      000F5A 15 81            [12] 3782 	dec	sp
      000F5C 15 81            [12] 3783 	dec	sp
      000F5E                       3784 00103$:
      000F5E 02r00r00         [24] 3785 	ljmp	__sdcc_banked_ret
                                   3786 ;------------------------------------------------------------
                                   3787 ;Allocation info for local variables in function 'input_packet'
                                   3788 ;------------------------------------------------------------
                                   3789 ;hdr                       Allocated to registers r5 r6 r7 
                                   3790 ;sloc0                     Allocated to stack - sp -1
                                   3791 ;------------------------------------------------------------
                                   3792 ;	../../../../core/net/mac/cxmac.c:714: input_packet(void)
                                   3793 ;	-----------------------------------------
                                   3794 ;	 function input_packet
                                   3795 ;	-----------------------------------------
      000F61                       3796 _input_packet:
      000F61 05 81            [12] 3797 	inc	sp
      000F63 05 81            [12] 3798 	inc	sp
                                   3799 ;	../../../../core/net/mac/cxmac.c:718: if(NETSTACK_FRAMER.parse() >= 0) {
      000F65 90r00r03         [24] 3800 	mov	dptr,#(_framer_802154 + 0x0003)
      000F68 E4               [12] 3801 	clr	a
      000F69 93               [24] 3802 	movc	a,@a+dptr
      000F6A FD               [12] 3803 	mov	r5,a
      000F6B A3               [24] 3804 	inc	dptr
      000F6C E4               [12] 3805 	clr	a
      000F6D 93               [24] 3806 	movc	a,@a+dptr
      000F6E FE               [12] 3807 	mov	r6,a
      000F6F A3               [24] 3808 	inc	dptr
      000F70 E4               [12] 3809 	clr	a
      000F71 93               [24] 3810 	movc	a,@a+dptr
      000F72 FF               [12] 3811 	mov	r7,a
      000F73 C0 07            [24] 3812 	push	ar7
      000F75 C0 05            [24] 3813 	push	ar5
      000F77 C0 06            [24] 3814 	push	ar6
      000F79 C0 07            [24] 3815 	push	ar7
      000F7B D0 02            [24] 3816 	pop	ar2
      000F7D D0 01            [24] 3817 	pop	ar1
      000F7F D0 00            [24] 3818 	pop	ar0
      000F81 12r00r00         [24] 3819 	lcall	__sdcc_banked_call
      000F84 AD 82            [24] 3820 	mov	r5,dpl
      000F86 AE 83            [24] 3821 	mov	r6,dph
      000F88 D0 07            [24] 3822 	pop	ar7
      000F8A EE               [12] 3823 	mov	a,r6
      000F8B 30 E7 03         [24] 3824 	jnb	acc.7,00142$
      000F8E 02r12r1B         [24] 3825 	ljmp	00119$
      000F91                       3826 00142$:
                                   3827 ;	../../../../core/net/mac/cxmac.c:719: hdr = packetbuf_dataptr();
      000F91 78r00            [12] 3828 	mov	r0,#_packetbuf_dataptr
      000F93 79s00            [12] 3829 	mov	r1,#(_packetbuf_dataptr >> 8)
      000F95 7As00            [12] 3830 	mov	r2,#(_packetbuf_dataptr >> 16)
      000F97 12r00r00         [24] 3831 	lcall	__sdcc_banked_call
                                   3832 ;	../../../../core/net/mac/cxmac.c:721: if(hdr->dispatch != DISPATCH) {
      000F9A AD 82            [24] 3833 	mov	r5,dpl
      000F9C AE 83            [24] 3834 	mov	r6,dph
      000F9E AF F0            [24] 3835 	mov	r7,b
      000FA0 12r00r00         [24] 3836 	lcall	__gptrget
      000FA3 70 03            [24] 3837 	jnz	00143$
      000FA5 02r10r5F         [24] 3838 	ljmp	00115$
      000FA8                       3839 00143$:
                                   3840 ;	../../../../core/net/mac/cxmac.c:722: someone_is_sending = 0;
      000FA8 90r00r0A         [24] 3841 	mov	dptr,#_someone_is_sending
      000FAB E4               [12] 3842 	clr	a
      000FAC F0               [24] 3843 	movx	@dptr,a
                                   3844 ;	../../../../core/net/mac/cxmac.c:724: &rimeaddr_node_addr) ||
                                   3845 ;	../../../../core/net/mac/cxmac.c:723: if(rimeaddr_cmp(packetbuf_addr(PACKETBUF_ADDR_RECEIVER),
      000FAD 75 82 19         [24] 3846 	mov	dpl,#0x19
      000FB0 78r00            [12] 3847 	mov	r0,#_packetbuf_addr
      000FB2 79s00            [12] 3848 	mov	r1,#(_packetbuf_addr >> 8)
      000FB4 7As00            [12] 3849 	mov	r2,#(_packetbuf_addr >> 16)
      000FB6 12r00r00         [24] 3850 	lcall	__sdcc_banked_call
      000FB9 AA 82            [24] 3851 	mov	r2,dpl
      000FBB AB 83            [24] 3852 	mov	r3,dph
      000FBD AC F0            [24] 3853 	mov	r4,b
      000FBF 74r00            [12] 3854 	mov	a,#_rimeaddr_node_addr
      000FC1 C0 E0            [24] 3855 	push	acc
      000FC3 74s00            [12] 3856 	mov	a,#(_rimeaddr_node_addr >> 8)
      000FC5 C0 E0            [24] 3857 	push	acc
      000FC7 E4               [12] 3858 	clr	a
      000FC8 C0 E0            [24] 3859 	push	acc
      000FCA 8A 82            [24] 3860 	mov	dpl,r2
      000FCC 8B 83            [24] 3861 	mov	dph,r3
      000FCE 8C F0            [24] 3862 	mov	b,r4
      000FD0 78r00            [12] 3863 	mov	r0,#_rimeaddr_cmp
      000FD2 79s00            [12] 3864 	mov	r1,#(_rimeaddr_cmp >> 8)
      000FD4 7As00            [12] 3865 	mov	r2,#(_rimeaddr_cmp >> 16)
      000FD6 12r00r00         [24] 3866 	lcall	__sdcc_banked_call
      000FD9 AB 82            [24] 3867 	mov	r3,dpl
      000FDB AC 83            [24] 3868 	mov	r4,dph
      000FDD 15 81            [12] 3869 	dec	sp
      000FDF 15 81            [12] 3870 	dec	sp
      000FE1 15 81            [12] 3871 	dec	sp
      000FE3 EB               [12] 3872 	mov	a,r3
      000FE4 4C               [12] 3873 	orl	a,r4
      000FE5 70 3E            [24] 3874 	jnz	00101$
                                   3875 ;	../../../../core/net/mac/cxmac.c:726: &rimeaddr_null)) {
                                   3876 ;	../../../../core/net/mac/cxmac.c:725: rimeaddr_cmp(packetbuf_addr(PACKETBUF_ADDR_RECEIVER),
      000FE7 75 82 19         [24] 3877 	mov	dpl,#0x19
      000FEA 78r00            [12] 3878 	mov	r0,#_packetbuf_addr
      000FEC 79s00            [12] 3879 	mov	r1,#(_packetbuf_addr >> 8)
      000FEE 7As00            [12] 3880 	mov	r2,#(_packetbuf_addr >> 16)
      000FF0 12r00r00         [24] 3881 	lcall	__sdcc_banked_call
      000FF3 AA 82            [24] 3882 	mov	r2,dpl
      000FF5 AB 83            [24] 3883 	mov	r3,dph
      000FF7 AC F0            [24] 3884 	mov	r4,b
      000FF9 74r00            [12] 3885 	mov	a,#_rimeaddr_null
      000FFB C0 E0            [24] 3886 	push	acc
      000FFD 74s00            [12] 3887 	mov	a,#(_rimeaddr_null >> 8)
      000FFF C0 E0            [24] 3888 	push	acc
      001001 74 80            [12] 3889 	mov	a,#0x80
      001003 C0 E0            [24] 3890 	push	acc
      001005 8A 82            [24] 3891 	mov	dpl,r2
      001007 8B 83            [24] 3892 	mov	dph,r3
      001009 8C F0            [24] 3893 	mov	b,r4
      00100B 78r00            [12] 3894 	mov	r0,#_rimeaddr_cmp
      00100D 79s00            [12] 3895 	mov	r1,#(_rimeaddr_cmp >> 8)
      00100F 7As00            [12] 3896 	mov	r2,#(_rimeaddr_cmp >> 16)
      001011 12r00r00         [24] 3897 	lcall	__sdcc_banked_call
      001014 AB 82            [24] 3898 	mov	r3,dpl
      001016 AC 83            [24] 3899 	mov	r4,dph
      001018 15 81            [12] 3900 	dec	sp
      00101A 15 81            [12] 3901 	dec	sp
      00101C 15 81            [12] 3902 	dec	sp
      00101E EB               [12] 3903 	mov	a,r3
      00101F 4C               [12] 3904 	orl	a,r4
      001020 70 03            [24] 3905 	jnz	00145$
      001022 02r12r1B         [24] 3906 	ljmp	00119$
      001025                       3907 00145$:
      001025                       3908 00101$:
                                   3909 ;	../../../../core/net/mac/cxmac.c:732: off();
      001025 78r40            [12] 3910 	mov	r0,#_off
      001027 79s00            [12] 3911 	mov	r1,#(_off >> 8)
      001029 7As00            [12] 3912 	mov	r2,#(_off >> 16)
      00102B 12r00r00         [24] 3913 	lcall	__sdcc_banked_call
                                   3914 ;	../../../../core/net/mac/cxmac.c:748: waiting_for_packet = 0;
      00102E 90r00r09         [24] 3915 	mov	dptr,#_waiting_for_packet
      001031 E4               [12] 3916 	clr	a
      001032 F0               [24] 3917 	movx	@dptr,a
                                   3918 ;	../../../../core/net/mac/cxmac.c:751: NETSTACK_MAC.input();
      001033 90r00r09         [24] 3919 	mov	dptr,#(_csma_driver + 0x0009)
      001036 E4               [12] 3920 	clr	a
      001037 93               [24] 3921 	movc	a,@a+dptr
      001038 FA               [12] 3922 	mov	r2,a
      001039 A3               [24] 3923 	inc	dptr
      00103A E4               [12] 3924 	clr	a
      00103B 93               [24] 3925 	movc	a,@a+dptr
      00103C FB               [12] 3926 	mov	r3,a
      00103D A3               [24] 3927 	inc	dptr
      00103E E4               [12] 3928 	clr	a
      00103F 93               [24] 3929 	movc	a,@a+dptr
      001040 FC               [12] 3930 	mov	r4,a
      001041 C0 04            [24] 3931 	push	ar4
      001043 C0 03            [24] 3932 	push	ar3
      001045 C0 02            [24] 3933 	push	ar2
      001047 C0 02            [24] 3934 	push	ar2
      001049 C0 03            [24] 3935 	push	ar3
      00104B C0 04            [24] 3936 	push	ar4
      00104D D0 02            [24] 3937 	pop	ar2
      00104F D0 01            [24] 3938 	pop	ar1
      001051 D0 00            [24] 3939 	pop	ar0
      001053 12r00r00         [24] 3940 	lcall	__sdcc_banked_call
      001056 D0 02            [24] 3941 	pop	ar2
      001058 D0 03            [24] 3942 	pop	ar3
      00105A D0 04            [24] 3943 	pop	ar4
                                   3944 ;	../../../../core/net/mac/cxmac.c:752: return;
      00105C 02r12r1B         [24] 3945 	ljmp	00119$
      00105F                       3946 00115$:
                                   3947 ;	../../../../core/net/mac/cxmac.c:757: } else if(hdr->type == TYPE_STROBE) {
      00105F 0D               [12] 3948 	inc	r5
      001060 BD 00 01         [24] 3949 	cjne	r5,#0x00,00146$
      001063 0E               [12] 3950 	inc	r6
      001064                       3951 00146$:
      001064 8D 82            [24] 3952 	mov	dpl,r5
      001066 8E 83            [24] 3953 	mov	dph,r6
      001068 8F F0            [24] 3954 	mov	b,r7
      00106A 12r00r00         [24] 3955 	lcall	__gptrget
      00106D FC               [12] 3956 	mov	r4,a
      00106E BC 10 02         [24] 3957 	cjne	r4,#0x10,00147$
      001071 80 03            [24] 3958 	sjmp	00148$
      001073                       3959 00147$:
      001073 02r12r1B         [24] 3960 	ljmp	00119$
      001076                       3961 00148$:
                                   3962 ;	../../../../core/net/mac/cxmac.c:758: someone_is_sending = 2;
      001076 90r00r0A         [24] 3963 	mov	dptr,#_someone_is_sending
      001079 74 02            [12] 3964 	mov	a,#0x02
      00107B F0               [24] 3965 	movx	@dptr,a
                                   3966 ;	../../../../core/net/mac/cxmac.c:761: &rimeaddr_node_addr)) {
                                   3967 ;	../../../../core/net/mac/cxmac.c:760: if(rimeaddr_cmp(packetbuf_addr(PACKETBUF_ADDR_RECEIVER),
      00107C 75 82 19         [24] 3968 	mov	dpl,#0x19
      00107F C0 07            [24] 3969 	push	ar7
      001081 C0 06            [24] 3970 	push	ar6
      001083 C0 05            [24] 3971 	push	ar5
      001085 78r00            [12] 3972 	mov	r0,#_packetbuf_addr
      001087 79s00            [12] 3973 	mov	r1,#(_packetbuf_addr >> 8)
      001089 7As00            [12] 3974 	mov	r2,#(_packetbuf_addr >> 16)
      00108B 12r00r00         [24] 3975 	lcall	__sdcc_banked_call
      00108E AA 82            [24] 3976 	mov	r2,dpl
      001090 AB 83            [24] 3977 	mov	r3,dph
      001092 AC F0            [24] 3978 	mov	r4,b
      001094 74r00            [12] 3979 	mov	a,#_rimeaddr_node_addr
      001096 C0 E0            [24] 3980 	push	acc
      001098 74s00            [12] 3981 	mov	a,#(_rimeaddr_node_addr >> 8)
      00109A C0 E0            [24] 3982 	push	acc
      00109C E4               [12] 3983 	clr	a
      00109D C0 E0            [24] 3984 	push	acc
      00109F 8A 82            [24] 3985 	mov	dpl,r2
      0010A1 8B 83            [24] 3986 	mov	dph,r3
      0010A3 8C F0            [24] 3987 	mov	b,r4
      0010A5 78r00            [12] 3988 	mov	r0,#_rimeaddr_cmp
      0010A7 79s00            [12] 3989 	mov	r1,#(_rimeaddr_cmp >> 8)
      0010A9 7As00            [12] 3990 	mov	r2,#(_rimeaddr_cmp >> 16)
      0010AB 12r00r00         [24] 3991 	lcall	__sdcc_banked_call
      0010AE AB 82            [24] 3992 	mov	r3,dpl
      0010B0 AC 83            [24] 3993 	mov	r4,dph
      0010B2 15 81            [12] 3994 	dec	sp
      0010B4 15 81            [12] 3995 	dec	sp
      0010B6 15 81            [12] 3996 	dec	sp
      0010B8 D0 05            [24] 3997 	pop	ar5
      0010BA D0 06            [24] 3998 	pop	ar6
      0010BC D0 07            [24] 3999 	pop	ar7
      0010BE EB               [12] 4000 	mov	a,r3
      0010BF 4C               [12] 4001 	orl	a,r4
      0010C0 70 03            [24] 4002 	jnz	00149$
      0010C2 02r11rD1         [24] 4003 	ljmp	00109$
      0010C5                       4004 00149$:
                                   4005 ;	../../../../core/net/mac/cxmac.c:768: hdr->type = TYPE_STROBE_ACK;
      0010C5 8D 82            [24] 4006 	mov	dpl,r5
      0010C7 8E 83            [24] 4007 	mov	dph,r6
      0010C9 8F F0            [24] 4008 	mov	b,r7
      0010CB 74 13            [12] 4009 	mov	a,#0x13
      0010CD 12r00r00         [24] 4010 	lcall	__gptrput
                                   4011 ;	../../../../core/net/mac/cxmac.c:770: packetbuf_addr(PACKETBUF_ADDR_SENDER));
      0010D0 75 82 18         [24] 4012 	mov	dpl,#0x18
      0010D3 78r00            [12] 4013 	mov	r0,#_packetbuf_addr
      0010D5 79s00            [12] 4014 	mov	r1,#(_packetbuf_addr >> 8)
      0010D7 7As00            [12] 4015 	mov	r2,#(_packetbuf_addr >> 16)
      0010D9 12r00r00         [24] 4016 	lcall	__sdcc_banked_call
      0010DC AD 82            [24] 4017 	mov	r5,dpl
      0010DE AE 83            [24] 4018 	mov	r6,dph
      0010E0 AF F0            [24] 4019 	mov	r7,b
                                   4020 ;	../../../../core/net/mac/cxmac.c:769: packetbuf_set_addr(PACKETBUF_ADDR_RECEIVER,
      0010E2 C0 05            [24] 4021 	push	ar5
      0010E4 C0 06            [24] 4022 	push	ar6
      0010E6 C0 07            [24] 4023 	push	ar7
      0010E8 75 82 19         [24] 4024 	mov	dpl,#0x19
      0010EB 78r00            [12] 4025 	mov	r0,#_packetbuf_set_addr
      0010ED 79s00            [12] 4026 	mov	r1,#(_packetbuf_set_addr >> 8)
      0010EF 7As00            [12] 4027 	mov	r2,#(_packetbuf_set_addr >> 16)
      0010F1 12r00r00         [24] 4028 	lcall	__sdcc_banked_call
      0010F4 15 81            [12] 4029 	dec	sp
      0010F6 15 81            [12] 4030 	dec	sp
      0010F8 15 81            [12] 4031 	dec	sp
                                   4032 ;	../../../../core/net/mac/cxmac.c:771: packetbuf_set_addr(PACKETBUF_ADDR_SENDER, &rimeaddr_node_addr);
      0010FA 74r00            [12] 4033 	mov	a,#_rimeaddr_node_addr
      0010FC C0 E0            [24] 4034 	push	acc
      0010FE 74s00            [12] 4035 	mov	a,#(_rimeaddr_node_addr >> 8)
      001100 C0 E0            [24] 4036 	push	acc
      001102 E4               [12] 4037 	clr	a
      001103 C0 E0            [24] 4038 	push	acc
      001105 75 82 18         [24] 4039 	mov	dpl,#0x18
      001108 78r00            [12] 4040 	mov	r0,#_packetbuf_set_addr
      00110A 79s00            [12] 4041 	mov	r1,#(_packetbuf_set_addr >> 8)
      00110C 7As00            [12] 4042 	mov	r2,#(_packetbuf_set_addr >> 16)
      00110E 12r00r00         [24] 4043 	lcall	__sdcc_banked_call
      001111 15 81            [12] 4044 	dec	sp
      001113 15 81            [12] 4045 	dec	sp
      001115 15 81            [12] 4046 	dec	sp
                                   4047 ;	../../../../core/net/mac/cxmac.c:772: packetbuf_compact();
      001117 78r00            [12] 4048 	mov	r0,#_packetbuf_compact
      001119 79s00            [12] 4049 	mov	r1,#(_packetbuf_compact >> 8)
      00111B 7As00            [12] 4050 	mov	r2,#(_packetbuf_compact >> 16)
      00111D 12r00r00         [24] 4051 	lcall	__sdcc_banked_call
                                   4052 ;	../../../../core/net/mac/cxmac.c:773: if(NETSTACK_FRAMER.create() >= 0) {
      001120 90r00r00         [24] 4053 	mov	dptr,#_framer_802154
      001123 E4               [12] 4054 	clr	a
      001124 93               [24] 4055 	movc	a,@a+dptr
      001125 FD               [12] 4056 	mov	r5,a
      001126 A3               [24] 4057 	inc	dptr
      001127 E4               [12] 4058 	clr	a
      001128 93               [24] 4059 	movc	a,@a+dptr
      001129 FE               [12] 4060 	mov	r6,a
      00112A A3               [24] 4061 	inc	dptr
      00112B E4               [12] 4062 	clr	a
      00112C 93               [24] 4063 	movc	a,@a+dptr
      00112D FF               [12] 4064 	mov	r7,a
      00112E C0 07            [24] 4065 	push	ar7
      001130 C0 05            [24] 4066 	push	ar5
      001132 C0 06            [24] 4067 	push	ar6
      001134 C0 07            [24] 4068 	push	ar7
      001136 D0 02            [24] 4069 	pop	ar2
      001138 D0 01            [24] 4070 	pop	ar1
      00113A D0 00            [24] 4071 	pop	ar0
      00113C 12r00r00         [24] 4072 	lcall	__sdcc_banked_call
      00113F AD 82            [24] 4073 	mov	r5,dpl
      001141 AE 83            [24] 4074 	mov	r6,dph
      001143 D0 07            [24] 4075 	pop	ar7
      001145 EE               [12] 4076 	mov	a,r6
      001146 30 E7 03         [24] 4077 	jnb	acc.7,00150$
      001149 02r12r1B         [24] 4078 	ljmp	00110$
      00114C                       4079 00150$:
                                   4080 ;	../../../../core/net/mac/cxmac.c:776: someone_is_sending = 1;
      00114C 90r00r0A         [24] 4081 	mov	dptr,#_someone_is_sending
      00114F 74 01            [12] 4082 	mov	a,#0x01
      001151 F0               [24] 4083 	movx	@dptr,a
                                   4084 ;	../../../../core/net/mac/cxmac.c:777: waiting_for_packet = 1;
      001152 90r00r09         [24] 4085 	mov	dptr,#_waiting_for_packet
      001155 74 01            [12] 4086 	mov	a,#0x01
      001157 F0               [24] 4087 	movx	@dptr,a
                                   4088 ;	../../../../core/net/mac/cxmac.c:778: on();
      001158 78r00            [12] 4089 	mov	r0,#_on
      00115A 79s00            [12] 4090 	mov	r1,#(_on >> 8)
      00115C 7As00            [12] 4091 	mov	r2,#(_on >> 16)
      00115E 12r00r00         [24] 4092 	lcall	__sdcc_banked_call
                                   4093 ;	../../../../core/net/mac/cxmac.c:779: NETSTACK_RADIO.send(packetbuf_hdrptr(), packetbuf_totlen());
      001161 90r00r09         [24] 4094 	mov	dptr,#(_cc2530_rf_driver + 0x0009)
      001164 E4               [12] 4095 	clr	a
      001165 93               [24] 4096 	movc	a,@a+dptr
      001166 FD               [12] 4097 	mov	r5,a
      001167 A3               [24] 4098 	inc	dptr
      001168 E4               [12] 4099 	clr	a
      001169 93               [24] 4100 	movc	a,@a+dptr
      00116A FE               [12] 4101 	mov	r6,a
      00116B A3               [24] 4102 	inc	dptr
      00116C E4               [12] 4103 	clr	a
      00116D 93               [24] 4104 	movc	a,@a+dptr
      00116E FF               [12] 4105 	mov	r7,a
      00116F C0 07            [24] 4106 	push	ar7
      001171 C0 06            [24] 4107 	push	ar6
      001173 C0 05            [24] 4108 	push	ar5
      001175 78r00            [12] 4109 	mov	r0,#_packetbuf_totlen
      001177 79s00            [12] 4110 	mov	r1,#(_packetbuf_totlen >> 8)
      001179 7As00            [12] 4111 	mov	r2,#(_packetbuf_totlen >> 16)
      00117B 12r00r00         [24] 4112 	lcall	__sdcc_banked_call
      00117E C8               [12] 4113 	xch	a,r0
      00117F E5 81            [12] 4114 	mov	a,sp
      001181 24 FC            [12] 4115 	add	a,#0xfc
      001183 C8               [12] 4116 	xch	a,r0
      001184 A6 82            [24] 4117 	mov	@r0,dpl
      001186 08               [12] 4118 	inc	r0
      001187 A6 83            [24] 4119 	mov	@r0,dph
      001189 78r00            [12] 4120 	mov	r0,#_packetbuf_hdrptr
      00118B 79s00            [12] 4121 	mov	r1,#(_packetbuf_hdrptr >> 8)
      00118D 7As00            [12] 4122 	mov	r2,#(_packetbuf_hdrptr >> 16)
      00118F 12r00r00         [24] 4123 	lcall	__sdcc_banked_call
      001192 AA 82            [24] 4124 	mov	r2,dpl
      001194 AB 83            [24] 4125 	mov	r3,dph
      001196 AC F0            [24] 4126 	mov	r4,b
      001198 D0 05            [24] 4127 	pop	ar5
      00119A D0 06            [24] 4128 	pop	ar6
      00119C D0 07            [24] 4129 	pop	ar7
      00119E C0 07            [24] 4130 	push	ar7
      0011A0 C0 06            [24] 4131 	push	ar6
      0011A2 C0 05            [24] 4132 	push	ar5
      0011A4 E5 81            [12] 4133 	mov	a,sp
      0011A6 24 FC            [12] 4134 	add	a,#0xfc
      0011A8 F8               [12] 4135 	mov	r0,a
      0011A9 E6               [12] 4136 	mov	a,@r0
      0011AA C0 E0            [24] 4137 	push	acc
      0011AC 08               [12] 4138 	inc	r0
      0011AD E6               [12] 4139 	mov	a,@r0
      0011AE C0 E0            [24] 4140 	push	acc
      0011B0 C0 05            [24] 4141 	push	ar5
      0011B2 C0 06            [24] 4142 	push	ar6
      0011B4 C0 07            [24] 4143 	push	ar7
      0011B6 8A 82            [24] 4144 	mov	dpl,r2
      0011B8 8B 83            [24] 4145 	mov	dph,r3
      0011BA 8C F0            [24] 4146 	mov	b,r4
      0011BC D0 02            [24] 4147 	pop	ar2
      0011BE D0 01            [24] 4148 	pop	ar1
      0011C0 D0 00            [24] 4149 	pop	ar0
      0011C2 12r00r00         [24] 4150 	lcall	__sdcc_banked_call
      0011C5 15 81            [12] 4151 	dec	sp
      0011C7 15 81            [12] 4152 	dec	sp
      0011C9 D0 05            [24] 4153 	pop	ar5
      0011CB D0 06            [24] 4154 	pop	ar6
      0011CD D0 07            [24] 4155 	pop	ar7
      0011CF 80 4A            [24] 4156 	sjmp	00110$
      0011D1                       4157 00109$:
                                   4158 ;	../../../../core/net/mac/cxmac.c:785: &rimeaddr_null)) {
                                   4159 ;	../../../../core/net/mac/cxmac.c:784: } else if(rimeaddr_cmp(packetbuf_addr(PACKETBUF_ADDR_RECEIVER),
      0011D1 75 82 19         [24] 4160 	mov	dpl,#0x19
      0011D4 78r00            [12] 4161 	mov	r0,#_packetbuf_addr
      0011D6 79s00            [12] 4162 	mov	r1,#(_packetbuf_addr >> 8)
      0011D8 7As00            [12] 4163 	mov	r2,#(_packetbuf_addr >> 16)
      0011DA 12r00r00         [24] 4164 	lcall	__sdcc_banked_call
      0011DD AD 82            [24] 4165 	mov	r5,dpl
      0011DF AE 83            [24] 4166 	mov	r6,dph
      0011E1 AF F0            [24] 4167 	mov	r7,b
      0011E3 74r00            [12] 4168 	mov	a,#_rimeaddr_null
      0011E5 C0 E0            [24] 4169 	push	acc
      0011E7 74s00            [12] 4170 	mov	a,#(_rimeaddr_null >> 8)
      0011E9 C0 E0            [24] 4171 	push	acc
      0011EB 74 80            [12] 4172 	mov	a,#0x80
      0011ED C0 E0            [24] 4173 	push	acc
      0011EF 8D 82            [24] 4174 	mov	dpl,r5
      0011F1 8E 83            [24] 4175 	mov	dph,r6
      0011F3 8F F0            [24] 4176 	mov	b,r7
      0011F5 78r00            [12] 4177 	mov	r0,#_rimeaddr_cmp
      0011F7 79s00            [12] 4178 	mov	r1,#(_rimeaddr_cmp >> 8)
      0011F9 7As00            [12] 4179 	mov	r2,#(_rimeaddr_cmp >> 16)
      0011FB 12r00r00         [24] 4180 	lcall	__sdcc_banked_call
      0011FE AE 82            [24] 4181 	mov	r6,dpl
      001200 AF 83            [24] 4182 	mov	r7,dph
      001202 15 81            [12] 4183 	dec	sp
      001204 15 81            [12] 4184 	dec	sp
      001206 15 81            [12] 4185 	dec	sp
      001208 EE               [12] 4186 	mov	a,r6
      001209 4F               [12] 4187 	orl	a,r7
      00120A 60 0F            [24] 4188 	jz	00110$
                                   4189 ;	../../../../core/net/mac/cxmac.c:790: waiting_for_packet = 1;
      00120C 90r00r09         [24] 4190 	mov	dptr,#_waiting_for_packet
      00120F 74 01            [12] 4191 	mov	a,#0x01
      001211 F0               [24] 4192 	movx	@dptr,a
                                   4193 ;	../../../../core/net/mac/cxmac.c:791: on();
      001212 78r00            [12] 4194 	mov	r0,#_on
      001214 79s00            [12] 4195 	mov	r1,#(_on >> 8)
      001216 7As00            [12] 4196 	mov	r2,#(_on >> 16)
      001218 12r00r00         [24] 4197 	lcall	__sdcc_banked_call
      00121B                       4198 00110$:
                                   4199 ;	../../../../core/net/mac/cxmac.c:798: return;
                                   4200 ;	../../../../core/net/mac/cxmac.c:804: } else if(hdr->type == TYPE_STROBE_ACK) {
      00121B                       4201 00119$:
      00121B 15 81            [12] 4202 	dec	sp
      00121D 15 81            [12] 4203 	dec	sp
      00121F 02r00r00         [24] 4204 	ljmp	__sdcc_banked_ret
                                   4205 ;------------------------------------------------------------
                                   4206 ;Allocation info for local variables in function 'cxmac_set_announcement_radio_txpower'
                                   4207 ;------------------------------------------------------------
                                   4208 ;txpower                   Allocated to registers 
                                   4209 ;------------------------------------------------------------
                                   4210 ;	../../../../core/net/mac/cxmac.c:864: cxmac_set_announcement_radio_txpower(int txpower)
                                   4211 ;	-----------------------------------------
                                   4212 ;	 function cxmac_set_announcement_radio_txpower
                                   4213 ;	-----------------------------------------
      001222                       4214 _cxmac_set_announcement_radio_txpower:
                                   4215 ;	../../../../core/net/mac/cxmac.c:869: }
      001222 02r00r00         [24] 4216 	ljmp	__sdcc_banked_ret
                                   4217 ;------------------------------------------------------------
                                   4218 ;Allocation info for local variables in function 'cxmac_init'
                                   4219 ;------------------------------------------------------------
                                   4220 ;	../../../../core/net/mac/cxmac.c:872: cxmac_init(void)
                                   4221 ;	-----------------------------------------
                                   4222 ;	 function cxmac_init
                                   4223 ;	-----------------------------------------
      001225                       4224 _cxmac_init:
                                   4225 ;	../../../../core/net/mac/cxmac.c:874: radio_is_on = 0;
      001225 90r00r0C         [24] 4226 	mov	dptr,#_radio_is_on
                                   4227 ;	../../../../core/net/mac/cxmac.c:875: waiting_for_packet = 0;
                                   4228 ;	../../../../core/net/mac/cxmac.c:876: PT_INIT(&pt);
      001228 E4               [12] 4229 	clr	a
      001229 F0               [24] 4230 	movx	@dptr,a
      00122A 90r00r09         [24] 4231 	mov	dptr,#_waiting_for_packet
      00122D F0               [24] 4232 	movx	@dptr,a
      00122E 90r00r00         [24] 4233 	mov	dptr,#_pt
      001231 F0               [24] 4234 	movx	@dptr,a
      001232 E4               [12] 4235 	clr	a
      001233 A3               [24] 4236 	inc	dptr
      001234 F0               [24] 4237 	movx	@dptr,a
                                   4238 ;	../../../../core/net/mac/cxmac.c:880: cxmac_is_on = 1;
      001235 90r00r08         [24] 4239 	mov	dptr,#_cxmac_is_on
      001238 74 01            [12] 4240 	mov	a,#0x01
      00123A F0               [24] 4241 	movx	@dptr,a
                                   4242 ;	../../../../core/net/mac/cxmac.c:883: list_init(encounter_list);
      00123B 90r00r10         [24] 4243 	mov	dptr,#_encounter_list
      00123E E0               [24] 4244 	movx	a,@dptr
      00123F FD               [12] 4245 	mov	r5,a
      001240 A3               [24] 4246 	inc	dptr
      001241 E0               [24] 4247 	movx	a,@dptr
      001242 FE               [12] 4248 	mov	r6,a
      001243 A3               [24] 4249 	inc	dptr
      001244 E0               [24] 4250 	movx	a,@dptr
      001245 FF               [12] 4251 	mov	r7,a
      001246 8D 82            [24] 4252 	mov	dpl,r5
      001248 8E 83            [24] 4253 	mov	dph,r6
      00124A 8F F0            [24] 4254 	mov	b,r7
      00124C 78r00            [12] 4255 	mov	r0,#_list_init
      00124E 79s00            [12] 4256 	mov	r1,#(_list_init >> 8)
      001250 7As00            [12] 4257 	mov	r2,#(_list_init >> 16)
      001252 12r00r00         [24] 4258 	lcall	__sdcc_banked_call
                                   4259 ;	../../../../core/net/mac/cxmac.c:884: memb_init(&encounter_memb);
      001255 90r00r13         [24] 4260 	mov	dptr,#_encounter_memb
      001258 75 F0 00         [24] 4261 	mov	b,#0x00
      00125B 78r00            [12] 4262 	mov	r0,#_memb_init
      00125D 79s00            [12] 4263 	mov	r1,#(_memb_init >> 8)
      00125F 7As00            [12] 4264 	mov	r2,#(_memb_init >> 16)
      001261 12r00r00         [24] 4265 	lcall	__sdcc_banked_call
                                   4266 ;	../../../../core/net/mac/cxmac.c:893: CSCHEDULE_POWERCYCLE(DEFAULT_OFF_TIME);
      001264 90 00 0F         [24] 4267 	mov	dptr,#0x000F
      001267 78rC1            [12] 4268 	mov	r0,#_cschedule_powercycle
      001269 79s00            [12] 4269 	mov	r1,#(_cschedule_powercycle >> 8)
      00126B 7As00            [12] 4270 	mov	r2,#(_cschedule_powercycle >> 16)
      00126D 12r00r00         [24] 4271 	lcall	__sdcc_banked_call
      001270 02r00r00         [24] 4272 	ljmp	__sdcc_banked_ret
                                   4273 ;------------------------------------------------------------
                                   4274 ;Allocation info for local variables in function 'turn_on'
                                   4275 ;------------------------------------------------------------
                                   4276 ;	../../../../core/net/mac/cxmac.c:897: turn_on(void)
                                   4277 ;	-----------------------------------------
                                   4278 ;	 function turn_on
                                   4279 ;	-----------------------------------------
      001273                       4280 _turn_on:
                                   4281 ;	../../../../core/net/mac/cxmac.c:899: cxmac_is_on = 1;
      001273 90r00r08         [24] 4282 	mov	dptr,#_cxmac_is_on
      001276 74 01            [12] 4283 	mov	a,#0x01
      001278 F0               [24] 4284 	movx	@dptr,a
                                   4285 ;	../../../../core/net/mac/cxmac.c:902: CSCHEDULE_POWERCYCLE(DEFAULT_OFF_TIME);
      001279 90 00 0F         [24] 4286 	mov	dptr,#0x000F
      00127C 78rC1            [12] 4287 	mov	r0,#_cschedule_powercycle
      00127E 79s00            [12] 4288 	mov	r1,#(_cschedule_powercycle >> 8)
      001280 7As00            [12] 4289 	mov	r2,#(_cschedule_powercycle >> 16)
      001282 12r00r00         [24] 4290 	lcall	__sdcc_banked_call
                                   4291 ;	../../../../core/net/mac/cxmac.c:903: return 1;
      001285 90 00 01         [24] 4292 	mov	dptr,#0x0001
      001288 02r00r00         [24] 4293 	ljmp	__sdcc_banked_ret
                                   4294 ;------------------------------------------------------------
                                   4295 ;Allocation info for local variables in function 'turn_off'
                                   4296 ;------------------------------------------------------------
                                   4297 ;keep_radio_on             Allocated to registers r6 r7 
                                   4298 ;------------------------------------------------------------
                                   4299 ;	../../../../core/net/mac/cxmac.c:907: turn_off(int keep_radio_on)
                                   4300 ;	-----------------------------------------
                                   4301 ;	 function turn_off
                                   4302 ;	-----------------------------------------
      00128B                       4303 _turn_off:
      00128B AE 82            [24] 4304 	mov	r6,dpl
      00128D AF 83            [24] 4305 	mov	r7,dph
                                   4306 ;	../../../../core/net/mac/cxmac.c:909: cxmac_is_on = 0;
      00128F 90r00r08         [24] 4307 	mov	dptr,#_cxmac_is_on
      001292 E4               [12] 4308 	clr	a
      001293 F0               [24] 4309 	movx	@dptr,a
                                   4310 ;	../../../../core/net/mac/cxmac.c:910: if(keep_radio_on) {
      001294 EE               [12] 4311 	mov	a,r6
      001295 4F               [12] 4312 	orl	a,r7
      001296 60 2B            [24] 4313 	jz	00102$
                                   4314 ;	../../../../core/net/mac/cxmac.c:911: return NETSTACK_RADIO.on();
      001298 90r00r18         [24] 4315 	mov	dptr,#(_cc2530_rf_driver + 0x0018)
      00129B E4               [12] 4316 	clr	a
      00129C 93               [24] 4317 	movc	a,@a+dptr
      00129D FD               [12] 4318 	mov	r5,a
      00129E A3               [24] 4319 	inc	dptr
      00129F E4               [12] 4320 	clr	a
      0012A0 93               [24] 4321 	movc	a,@a+dptr
      0012A1 FE               [12] 4322 	mov	r6,a
      0012A2 A3               [24] 4323 	inc	dptr
      0012A3 E4               [12] 4324 	clr	a
      0012A4 93               [24] 4325 	movc	a,@a+dptr
      0012A5 FF               [12] 4326 	mov	r7,a
      0012A6 C0 07            [24] 4327 	push	ar7
      0012A8 C0 05            [24] 4328 	push	ar5
      0012AA C0 06            [24] 4329 	push	ar6
      0012AC C0 07            [24] 4330 	push	ar7
      0012AE D0 02            [24] 4331 	pop	ar2
      0012B0 D0 01            [24] 4332 	pop	ar1
      0012B2 D0 00            [24] 4333 	pop	ar0
      0012B4 12r00r00         [24] 4334 	lcall	__sdcc_banked_call
      0012B7 AD 82            [24] 4335 	mov	r5,dpl
      0012B9 AE 83            [24] 4336 	mov	r6,dph
      0012BB D0 07            [24] 4337 	pop	ar7
      0012BD 8D 82            [24] 4338 	mov	dpl,r5
      0012BF 8E 83            [24] 4339 	mov	dph,r6
      0012C1 80 29            [24] 4340 	sjmp	00104$
      0012C3                       4341 00102$:
                                   4342 ;	../../../../core/net/mac/cxmac.c:913: return NETSTACK_RADIO.off();
      0012C3 90r00r1B         [24] 4343 	mov	dptr,#(_cc2530_rf_driver + 0x001b)
      0012C6 E4               [12] 4344 	clr	a
      0012C7 93               [24] 4345 	movc	a,@a+dptr
      0012C8 FD               [12] 4346 	mov	r5,a
      0012C9 A3               [24] 4347 	inc	dptr
      0012CA E4               [12] 4348 	clr	a
      0012CB 93               [24] 4349 	movc	a,@a+dptr
      0012CC FE               [12] 4350 	mov	r6,a
      0012CD A3               [24] 4351 	inc	dptr
      0012CE E4               [12] 4352 	clr	a
      0012CF 93               [24] 4353 	movc	a,@a+dptr
      0012D0 FF               [12] 4354 	mov	r7,a
      0012D1 C0 07            [24] 4355 	push	ar7
      0012D3 C0 05            [24] 4356 	push	ar5
      0012D5 C0 06            [24] 4357 	push	ar6
      0012D7 C0 07            [24] 4358 	push	ar7
      0012D9 D0 02            [24] 4359 	pop	ar2
      0012DB D0 01            [24] 4360 	pop	ar1
      0012DD D0 00            [24] 4361 	pop	ar0
      0012DF 12r00r00         [24] 4362 	lcall	__sdcc_banked_call
      0012E2 AD 82            [24] 4363 	mov	r5,dpl
      0012E4 AE 83            [24] 4364 	mov	r6,dph
      0012E6 D0 07            [24] 4365 	pop	ar7
      0012E8 8D 82            [24] 4366 	mov	dpl,r5
      0012EA 8E 83            [24] 4367 	mov	dph,r6
      0012EC                       4368 00104$:
      0012EC 02r00r00         [24] 4369 	ljmp	__sdcc_banked_ret
                                   4370 ;------------------------------------------------------------
                                   4371 ;Allocation info for local variables in function 'channel_check_interval'
                                   4372 ;------------------------------------------------------------
                                   4373 ;	../../../../core/net/mac/cxmac.c:918: channel_check_interval(void)
                                   4374 ;	-----------------------------------------
                                   4375 ;	 function channel_check_interval
                                   4376 ;	-----------------------------------------
      0012EF                       4377 _channel_check_interval:
                                   4378 ;	../../../../core/net/mac/cxmac.c:920: return (1ul * CLOCK_SECOND * DEFAULT_PERIOD) / RTIMER_ARCH_SECOND;
      0012EF 90 00 0F         [24] 4379 	mov	dptr,#0x000F
      0012F2 02r00r00         [24] 4380 	ljmp	__sdcc_banked_ret
                                   4381 	.area CSEG    (CODE)
                                   4382 	.area CONST   (CODE)
      000000                       4383 _cxmac_driver:
      000000r18s00 80              4384 	.byte _str_0,(_str_0 >> 8),#0x80
      000003r25s12s00              4385 	.byte _cxmac_init,(_cxmac_init >> 8),(_cxmac_init >> 16)
      000006r27s0Es00              4386 	.byte _qsend_packet,(_qsend_packet >> 8),(_qsend_packet >> 16)
      000009rE6s0Es00              4387 	.byte _qsend_list,(_qsend_list >> 8),(_qsend_list >> 16)
      00000Cr61s0Fs00              4388 	.byte _input_packet,(_input_packet >> 8),(_input_packet >> 16)
      00000Fr73s12s00              4389 	.byte _turn_on,(_turn_on >> 8),(_turn_on >> 16)
      000012r8Bs12s00              4390 	.byte _turn_off,(_turn_off >> 8),(_turn_off >> 16)
      000015rEFs12s00              4391 	.byte _channel_check_interval,(_channel_check_interval >> 8),(_channel_check_interval >> 16)
      000018                       4392 _str_0:
      000018 43 58 2D 4D 41 43     4393 	.ascii "CX-MAC"
      00001E 00                    4394 	.db 0x00
                                   4395 	.area XINIT   (CODE)
      000000                       4396 __xinit__cxmac_config:
      000000 61 00                 4397 	.byte #0x61,#0x00	; 97
      000002 40 07                 4398 	.byte #0x40,#0x07	; 1856
      000004 C4 08                 4399 	.byte #0xC4,#0x08	; 2244
      000006 54 00                 4400 	.byte #0x54,#0x00	; 84
      000008                       4401 __xinit__cxmac_is_on:
      000008 00                    4402 	.db #0x00	; 0
      000009                       4403 __xinit__waiting_for_packet:
      000009 00                    4404 	.db #0x00	; 0
      00000A                       4405 __xinit__someone_is_sending:
      00000A 00                    4406 	.db #0x00	; 0
      00000B                       4407 __xinit__we_are_sending:
      00000B 00                    4408 	.db #0x00	; 0
      00000C                       4409 __xinit__radio_is_on:
      00000C 00                    4410 	.db #0x00	; 0
      00000D                       4411 __xinit__encounter_list_list:
                                   4412 ; generic printIvalPtr
      00000D 00 00 00              4413 	.byte #0x00,#0x00,#0x00
      000010                       4414 __xinit__encounter_list:
      000010r0Ds00 00              4415 	.byte _encounter_list_list,(_encounter_list_list >> 8),#0x00
      000013                       4416 __xinit__encounter_memb:
      000013 0D 00                 4417 	.byte #0x0D,#0x00	; 13
      000015 04 00                 4418 	.byte #0x04,#0x00	; 4
      000017r03s00 00              4419 	.byte _encounter_memb_memb_count,(_encounter_memb_memb_count >> 8),#0x00
      00001Ar07s00 00              4420 	.byte _encounter_memb_memb_mem,(_encounter_memb_memb_mem >> 8),#0x00
                                   4421 	.area CABS    (ABS,CODE)
