                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8804 (Aug  6 2013) (Linux)
                                      4 ; This file was generated Mon Aug 25 04:16:54 2014
                                      5 ;--------------------------------------------------------
                                      6 	.module viztool
                                      7 	.optsdcc -mmcs51 --model-huge
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _uip_ds6_route_list_head
                                     13 	.globl _uip_ds6_route_num_routes
                                     14 	.globl _uip_ds6_defrt_choose
                                     15 	.globl _uip_ds6_defrt_lookup
                                     16 	.globl _uip_udp_packet_send
                                     17 	.globl _udp_new
                                     18 	.globl _uip_htonl
                                     19 	.globl _list_item_next
                                     20 	.globl _memset
                                     21 	.globl _memcpy
                                     22 	.globl _ACTIVE
                                     23 	.globl _TX_BYTE
                                     24 	.globl _RX_BYTE
                                     25 	.globl _ERR
                                     26 	.globl _FE
                                     27 	.globl _SLAVE
                                     28 	.globl _RE
                                     29 	.globl _MODE
                                     30 	.globl _T3OVFIF
                                     31 	.globl _T3CH0IF
                                     32 	.globl _T3CH1IF
                                     33 	.globl _T4OVFIF
                                     34 	.globl _T4CH0IF
                                     35 	.globl _T4CH1IF
                                     36 	.globl _OVFIM
                                     37 	.globl _B_0
                                     38 	.globl _B_1
                                     39 	.globl _B_2
                                     40 	.globl _B_3
                                     41 	.globl _B_4
                                     42 	.globl _B_5
                                     43 	.globl _B_6
                                     44 	.globl _B_7
                                     45 	.globl _P2IF
                                     46 	.globl _UTX0IF
                                     47 	.globl _UTX1IF
                                     48 	.globl _P1IF
                                     49 	.globl _WDTIF
                                     50 	.globl _ACC_0
                                     51 	.globl _ACC_1
                                     52 	.globl _ACC_2
                                     53 	.globl _ACC_3
                                     54 	.globl _ACC_4
                                     55 	.globl _ACC_5
                                     56 	.globl _ACC_6
                                     57 	.globl _ACC_7
                                     58 	.globl _P
                                     59 	.globl _F1
                                     60 	.globl _OV
                                     61 	.globl _RS0
                                     62 	.globl _RS1
                                     63 	.globl _F0
                                     64 	.globl _AC
                                     65 	.globl _CY
                                     66 	.globl _DMAIF
                                     67 	.globl _T1IF
                                     68 	.globl _T2IF
                                     69 	.globl _T3IF
                                     70 	.globl _T4IF
                                     71 	.globl _P0IF
                                     72 	.globl _STIF
                                     73 	.globl _DMAIE
                                     74 	.globl _T1IE
                                     75 	.globl _T2IE
                                     76 	.globl _T3IE
                                     77 	.globl _T4IE
                                     78 	.globl _P0IE
                                     79 	.globl _RFERRIE
                                     80 	.globl _ADCIE
                                     81 	.globl _URX0IE
                                     82 	.globl _URX1IE
                                     83 	.globl _ENCIE
                                     84 	.globl _STIE
                                     85 	.globl _EA
                                     86 	.globl _P2_0
                                     87 	.globl _P2_1
                                     88 	.globl _P2_2
                                     89 	.globl _P2_3
                                     90 	.globl _P2_4
                                     91 	.globl _P2_5
                                     92 	.globl _P2_6
                                     93 	.globl _P2_7
                                     94 	.globl _ENCIF_0
                                     95 	.globl _ENCIF_1
                                     96 	.globl _P1_0
                                     97 	.globl _P1_1
                                     98 	.globl _P1_2
                                     99 	.globl _P1_3
                                    100 	.globl _P1_4
                                    101 	.globl _P1_5
                                    102 	.globl _P1_6
                                    103 	.globl _P1_7
                                    104 	.globl _IT0
                                    105 	.globl _RFERRIF
                                    106 	.globl _IT1
                                    107 	.globl _URX0IF
                                    108 	.globl _ADCIF
                                    109 	.globl _URX1IF
                                    110 	.globl _P0_0
                                    111 	.globl _P0_1
                                    112 	.globl _P0_2
                                    113 	.globl _P0_3
                                    114 	.globl _P0_4
                                    115 	.globl _P0_5
                                    116 	.globl _P0_6
                                    117 	.globl _P0_7
                                    118 	.globl _WDCTL
                                    119 	.globl _U1GCR
                                    120 	.globl _U1UCR
                                    121 	.globl _U1BAUD
                                    122 	.globl _U1DBUF
                                    123 	.globl _U1CSR
                                    124 	.globl _U0GCR
                                    125 	.globl _U0UCR
                                    126 	.globl _U0BAUD
                                    127 	.globl _U0DBUF
                                    128 	.globl _U0CSR
                                    129 	.globl _TIMIF
                                    130 	.globl _T4CC1
                                    131 	.globl _T4CCTL1
                                    132 	.globl _T4CC0
                                    133 	.globl _T4CCTL0
                                    134 	.globl _T4CTL
                                    135 	.globl _T4CNT
                                    136 	.globl _T3CC1
                                    137 	.globl _T3CCTL1
                                    138 	.globl _T3CC0
                                    139 	.globl _T3CCTL0
                                    140 	.globl _T3CTL
                                    141 	.globl _T3CNT
                                    142 	.globl _T2MSEL
                                    143 	.globl _T2IRQM
                                    144 	.globl _T2MOVF2
                                    145 	.globl _T2MOVF1
                                    146 	.globl _T2MOVF0
                                    147 	.globl _T2M1
                                    148 	.globl _T2M0
                                    149 	.globl _T2IRQF
                                    150 	.globl _T2EVTCFG
                                    151 	.globl _T2CTRL
                                    152 	.globl _T1STAT
                                    153 	.globl _T1CCTL2
                                    154 	.globl _T1CCTL1
                                    155 	.globl _T1CCTL0
                                    156 	.globl _T1CTL
                                    157 	.globl _T1CNTH
                                    158 	.globl _T1CNTL
                                    159 	.globl _T1CC2H
                                    160 	.globl _T1CC2L
                                    161 	.globl _T1CC1H
                                    162 	.globl _T1CC1L
                                    163 	.globl _T1CC0H
                                    164 	.globl _T1CC0L
                                    165 	.globl _CLKCONSTA
                                    166 	.globl _CLKCONCMD
                                    167 	.globl _SLEEPSTA
                                    168 	.globl _SLEEPCMD
                                    169 	.globl _STLOAD
                                    170 	.globl _ST2
                                    171 	.globl _ST1
                                    172 	.globl _ST0
                                    173 	.globl _RFERRF
                                    174 	.globl _RFIRQF0
                                    175 	.globl _RFST
                                    176 	.globl _RFD
                                    177 	.globl _RFIRQF1
                                    178 	.globl _PSBANK
                                    179 	.globl _FMAP
                                    180 	.globl _MEMCTR
                                    181 	.globl __XPAGE
                                    182 	.globl _MPAGE
                                    183 	.globl _PMUX
                                    184 	.globl _P2DIR
                                    185 	.globl _P1DIR
                                    186 	.globl _P0DIR
                                    187 	.globl _P2INP
                                    188 	.globl _P1INP
                                    189 	.globl _P2SEL
                                    190 	.globl _P1SEL
                                    191 	.globl _P0SEL
                                    192 	.globl _APCFG
                                    193 	.globl _PERCFG
                                    194 	.globl _P0INP
                                    195 	.globl _P2IEN
                                    196 	.globl _P1IEN
                                    197 	.globl _P0IEN
                                    198 	.globl _PICTL
                                    199 	.globl _P2IFG
                                    200 	.globl _P1IFG
                                    201 	.globl _P0IFG
                                    202 	.globl _DMAREQ
                                    203 	.globl _DMAARM
                                    204 	.globl _DMA0CFGH
                                    205 	.globl _DMA0CFGL
                                    206 	.globl _DMA1CFGH
                                    207 	.globl _DMA1CFGL
                                    208 	.globl _DMAIRQ
                                    209 	.globl _ENCCS
                                    210 	.globl _ENCDO
                                    211 	.globl _ENCDI
                                    212 	.globl _RNDH
                                    213 	.globl _RNDL
                                    214 	.globl _ADCH
                                    215 	.globl _ADCL
                                    216 	.globl _ADCCON3
                                    217 	.globl _ADCCON2
                                    218 	.globl _ADCCON1
                                    219 	.globl _B
                                    220 	.globl _IRCON2
                                    221 	.globl _ACC
                                    222 	.globl _PSW
                                    223 	.globl _IRCON
                                    224 	.globl _IP1
                                    225 	.globl _IEN1
                                    226 	.globl _IP0
                                    227 	.globl _IEN0
                                    228 	.globl _P2
                                    229 	.globl _S1CON
                                    230 	.globl _IEN2
                                    231 	.globl _S0CON
                                    232 	.globl _DPS
                                    233 	.globl _P1
                                    234 	.globl _TCON
                                    235 	.globl _PCON
                                    236 	.globl _DPH1
                                    237 	.globl _DPL1
                                    238 	.globl _DPH0
                                    239 	.globl _DPL0
                                    240 	.globl _SP
                                    241 	.globl _P0
                                    242 	.globl _viztool_process
                                    243 	.globl _X_IEEE_ADDR
                                    244 	.globl _X_INFOPAGE
                                    245 	.globl _X_P2DIR
                                    246 	.globl _X_P1DIR
                                    247 	.globl _X_P0DIR
                                    248 	.globl _X_U1GCR
                                    249 	.globl _X_U1UCR
                                    250 	.globl _X_U1BAUD
                                    251 	.globl _X_U1DBUF
                                    252 	.globl _X_U1CSR
                                    253 	.globl _X_P2INP
                                    254 	.globl _X_P1INP
                                    255 	.globl _X_P2SEL
                                    256 	.globl _X_P1SEL
                                    257 	.globl _X_P0SEL
                                    258 	.globl _X_APCFG
                                    259 	.globl _X_PERCFG
                                    260 	.globl _X_T4CC1
                                    261 	.globl _X_T4CCTL1
                                    262 	.globl _X_T4CC0
                                    263 	.globl _X_T4CCTL0
                                    264 	.globl _X_T4CTL
                                    265 	.globl _X_T4CNT
                                    266 	.globl _X_RFIRQF0
                                    267 	.globl _X_T1CCTL2
                                    268 	.globl _X_T1CCTL1
                                    269 	.globl _X_T1CCTL0
                                    270 	.globl _X_T1CTL
                                    271 	.globl _X_T1CNTH
                                    272 	.globl _X_T1CNTL
                                    273 	.globl _X_RFST
                                    274 	.globl _X_T1CC2H
                                    275 	.globl _X_T1CC2L
                                    276 	.globl _X_T1CC1H
                                    277 	.globl _X_T1CC1L
                                    278 	.globl _X_T1CC0H
                                    279 	.globl _X_T1CC0L
                                    280 	.globl _X_RFD
                                    281 	.globl _X_TIMIF
                                    282 	.globl _X_DMAREQ
                                    283 	.globl _X_DMAARM
                                    284 	.globl _X_DMA0CFGH
                                    285 	.globl _X_DMA0CFGL
                                    286 	.globl _X_DMA1CFGH
                                    287 	.globl _X_DMA1CFGL
                                    288 	.globl _X_DMAIRQ
                                    289 	.globl _X_T3CC1
                                    290 	.globl _X_T3CCTL1
                                    291 	.globl _X_T3CC0
                                    292 	.globl _X_T3CCTL0
                                    293 	.globl _X_T3CTL
                                    294 	.globl _X_T3CNT
                                    295 	.globl _X_WDCTL
                                    296 	.globl _X_MEMCTR
                                    297 	.globl _X_CLKCONCMD
                                    298 	.globl _X_U0GCR
                                    299 	.globl _X_U0UCR
                                    300 	.globl _X_T2MSEL
                                    301 	.globl _X_U0BAUD
                                    302 	.globl _X_U0DBUF
                                    303 	.globl _X_RFERRF
                                    304 	.globl _X_SLEEPCMD
                                    305 	.globl _X_RNDH
                                    306 	.globl _X_RNDL
                                    307 	.globl _X_ADCH
                                    308 	.globl _X_ADCL
                                    309 	.globl _X_ADCCON3
                                    310 	.globl _X_ADCCON2
                                    311 	.globl _X_ADCCON1
                                    312 	.globl _X_ENCCS
                                    313 	.globl _X_ENCDO
                                    314 	.globl _X_ENCDI
                                    315 	.globl _X_T1STAT
                                    316 	.globl _X_PMUX
                                    317 	.globl _X_STLOAD
                                    318 	.globl _X_P2IEN
                                    319 	.globl _X_P0IEN
                                    320 	.globl _X_T2IRQM
                                    321 	.globl _X_T2MOVF2
                                    322 	.globl _X_T2MOVF1
                                    323 	.globl _X_T2MOVF0
                                    324 	.globl _X_T2M1
                                    325 	.globl _X_T2M0
                                    326 	.globl _X_T2IRQF
                                    327 	.globl _X_P2
                                    328 	.globl _X_PSBANK
                                    329 	.globl _X_FMAP
                                    330 	.globl _X_CLKCONSTA
                                    331 	.globl _X_SLEEPSTA
                                    332 	.globl _X_T2EVTCFG
                                    333 	.globl _X_ST2
                                    334 	.globl _X_ST1
                                    335 	.globl _X_ST0
                                    336 	.globl _X_T2CTRL
                                    337 	.globl _X__XPAGE
                                    338 	.globl _X_MPAGE
                                    339 	.globl _X_RFIRQF1
                                    340 	.globl _X_P1
                                    341 	.globl _X_P0INP
                                    342 	.globl _X_P1IEN
                                    343 	.globl _X_PICTL
                                    344 	.globl _X_P2IFG
                                    345 	.globl _X_P1IFG
                                    346 	.globl _X_P0IFG
                                    347 	.globl _X_U0CSR
                                    348 	.globl _X_P0
                                    349 	.globl _USBF5
                                    350 	.globl _USBF4
                                    351 	.globl _USBF3
                                    352 	.globl _USBF2
                                    353 	.globl _USBF1
                                    354 	.globl _USBF0
                                    355 	.globl _USBCNTH
                                    356 	.globl _USBCNTL
                                    357 	.globl _USBCNT0
                                    358 	.globl _USBCSOH
                                    359 	.globl _USBCSOL
                                    360 	.globl _USBMAXO
                                    361 	.globl _USBCSIH
                                    362 	.globl _USBCSIL
                                    363 	.globl _USBCS0
                                    364 	.globl _USBMAXI
                                    365 	.globl _USBCTRL
                                    366 	.globl _USBINDEX
                                    367 	.globl _USBFRMH
                                    368 	.globl _USBFRML
                                    369 	.globl _USBCIE
                                    370 	.globl _USBOIE
                                    371 	.globl _USBIIE
                                    372 	.globl _USBCIF
                                    373 	.globl _USBOIF
                                    374 	.globl _USBIIF
                                    375 	.globl _USBPOW
                                    376 	.globl _USBADDR
                                    377 	.globl _CSPT
                                    378 	.globl _CSPZ
                                    379 	.globl _CSPY
                                    380 	.globl _CSPX
                                    381 	.globl _CSPSTAT
                                    382 	.globl _CSPCTRL
                                    383 	.globl _CSPPROG23
                                    384 	.globl _CSPPROG22
                                    385 	.globl _CSPPROG21
                                    386 	.globl _CSPPROG20
                                    387 	.globl _CSPPROG19
                                    388 	.globl _CSPPROG18
                                    389 	.globl _CSPPROG17
                                    390 	.globl _CSPPROG16
                                    391 	.globl _CSPPROG15
                                    392 	.globl _CSPPROG14
                                    393 	.globl _CSPPROG13
                                    394 	.globl _CSPPROG12
                                    395 	.globl _CSPPROG11
                                    396 	.globl _CSPPROG10
                                    397 	.globl _CSPPROG9
                                    398 	.globl _CSPPROG8
                                    399 	.globl _CSPPROG7
                                    400 	.globl _CSPPROG6
                                    401 	.globl _CSPPROG5
                                    402 	.globl _CSPPROG4
                                    403 	.globl _CSPPROG3
                                    404 	.globl _CSPPROG2
                                    405 	.globl _CSPPROG1
                                    406 	.globl _CSPPROG0
                                    407 	.globl _RFC_OBS_CTRL2
                                    408 	.globl _RFC_OBS_CTRL1
                                    409 	.globl _RFC_OBS_CTRL0
                                    410 	.globl _TXFILTCFG
                                    411 	.globl _PTEST1
                                    412 	.globl _PTEST0
                                    413 	.globl _ATEST
                                    414 	.globl _DACTEST2
                                    415 	.globl _DACTEST1
                                    416 	.globl _DACTEST0
                                    417 	.globl _MDMTEST1
                                    418 	.globl _MDMTEST0
                                    419 	.globl _ADCTEST2
                                    420 	.globl _ADCTEST1
                                    421 	.globl _ADCTEST0
                                    422 	.globl _AGCCTRL3
                                    423 	.globl _AGCCTRL2
                                    424 	.globl _AGCCTRL1
                                    425 	.globl _AGCCTRL0
                                    426 	.globl _FSCAL3
                                    427 	.globl _FSCAL2
                                    428 	.globl _FSCAL1
                                    429 	.globl _FSCAL0
                                    430 	.globl _FSCTRL
                                    431 	.globl _RXCTRL
                                    432 	.globl _FREQEST
                                    433 	.globl _MDMCTRL1
                                    434 	.globl _MDMCTRL0
                                    435 	.globl _RFRND
                                    436 	.globl _RFERRM
                                    437 	.globl _RFIRQM1
                                    438 	.globl _RFIRQM0
                                    439 	.globl _TXLAST_PTR
                                    440 	.globl _TXFIRST_PTR
                                    441 	.globl _RXP1_PTR
                                    442 	.globl _RXLAST_PTR
                                    443 	.globl _RXFIRST_PTR
                                    444 	.globl _TXFIFOCNT
                                    445 	.globl _RXFIFOCNT
                                    446 	.globl _RXFIRST
                                    447 	.globl _RSSISTAT
                                    448 	.globl _RSSI
                                    449 	.globl _CCACTRL1
                                    450 	.globl _CCACTRL0
                                    451 	.globl _FSMCTRL
                                    452 	.globl _FIFOPCTRL
                                    453 	.globl _FSMSTAT1
                                    454 	.globl _FSMSTAT0
                                    455 	.globl _TXCTRL
                                    456 	.globl _TXPOWER
                                    457 	.globl _FREQCTRL
                                    458 	.globl _FREQTUNE
                                    459 	.globl _RXMASKCLR
                                    460 	.globl _RXMASKSET
                                    461 	.globl _RXENABLE
                                    462 	.globl _FRMCTRL1
                                    463 	.globl _FRMCTRL0
                                    464 	.globl _SRCEXTEN2
                                    465 	.globl _SRCEXTEN1
                                    466 	.globl _SRCEXTEN0
                                    467 	.globl _SRCSHORTEN2
                                    468 	.globl _SRCSHORTEN1
                                    469 	.globl _SRCSHORTEN0
                                    470 	.globl _SRCMATCH
                                    471 	.globl _FRMFILT1
                                    472 	.globl _FRMFILT0
                                    473 	.globl _SHORT_ADDR1
                                    474 	.globl _SHORT_ADDR0
                                    475 	.globl _PAN_ID1
                                    476 	.globl _PAN_ID0
                                    477 	.globl _EXT_ADDR7
                                    478 	.globl _EXT_ADDR6
                                    479 	.globl _EXT_ADDR5
                                    480 	.globl _EXT_ADDR4
                                    481 	.globl _EXT_ADDR3
                                    482 	.globl _EXT_ADDR2
                                    483 	.globl _EXT_ADDR1
                                    484 	.globl _EXT_ADDR0
                                    485 	.globl _SRCSHORTPENDEN2
                                    486 	.globl _SRCSHORTPENDEN1
                                    487 	.globl _SRCSHORTPENDEN0
                                    488 	.globl _SRCEXTPENDEN2
                                    489 	.globl _SRCEXTPENDEN1
                                    490 	.globl _SRCEXTPENDEN0
                                    491 	.globl _SRCRESINDEX
                                    492 	.globl _SRCRESMASK2
                                    493 	.globl _SRCRESMASK1
                                    494 	.globl _SRCRESMASK0
                                    495 	.globl _SRC_ADDR_TABLE
                                    496 	.globl _TXFIFO
                                    497 	.globl _RXFIFO
                                    498 	.globl _RFCORE_RAM
                                    499 	.globl _CMPCTL
                                    500 	.globl _OPAMPS
                                    501 	.globl _OPAMPC
                                    502 	.globl _STCV2
                                    503 	.globl _STCV1
                                    504 	.globl _STCV0
                                    505 	.globl _STCS
                                    506 	.globl _STCC
                                    507 	.globl _T1CC4H
                                    508 	.globl _T1CC4L
                                    509 	.globl _T1CC3H
                                    510 	.globl _T1CC3L
                                    511 	.globl _XX_T1CC2H
                                    512 	.globl _XX_T1CC2L
                                    513 	.globl _XX_T1CC1H
                                    514 	.globl _XX_T1CC1L
                                    515 	.globl _XX_T1CC0H
                                    516 	.globl _XX_T1CC0L
                                    517 	.globl _T1CCTL4
                                    518 	.globl _T1CCTL3
                                    519 	.globl _XX_T1CCTL2
                                    520 	.globl _XX_T1CCTL1
                                    521 	.globl _XX_T1CCTL0
                                    522 	.globl _CLD
                                    523 	.globl _IRCTL
                                    524 	.globl _CHIPINFO1
                                    525 	.globl _CHIPINFO0
                                    526 	.globl _FWDATA
                                    527 	.globl _FADDRH
                                    528 	.globl _FADDRL
                                    529 	.globl _FCTL
                                    530 	.globl _IVCTRL
                                    531 	.globl _BATTMON
                                    532 	.globl _SRCRC
                                    533 	.globl _DBGDATA
                                    534 	.globl _TESTREG0
                                    535 	.globl _CHIPID
                                    536 	.globl _CHVER
                                    537 	.globl _OBSSEL5
                                    538 	.globl _OBSSEL4
                                    539 	.globl _OBSSEL3
                                    540 	.globl _OBSSEL2
                                    541 	.globl _OBSSEL1
                                    542 	.globl _OBSSEL0
                                    543 	.globl _I2CIO
                                    544 	.globl _I2CWC
                                    545 	.globl _I2CADDR
                                    546 	.globl _I2CDATA
                                    547 	.globl _I2CSTAT
                                    548 	.globl _I2CCFG
                                    549 	.globl _OPAMPMC
                                    550 	.globl _MONMUX
                                    551 ;--------------------------------------------------------
                                    552 ; special function registers
                                    553 ;--------------------------------------------------------
                                    554 	.area RSEG    (ABS,DATA)
      000000                        555 	.org 0x0000
                           000080   556 _P0	=	0x0080
                           000081   557 _SP	=	0x0081
                           000082   558 _DPL0	=	0x0082
                           000083   559 _DPH0	=	0x0083
                           000084   560 _DPL1	=	0x0084
                           000085   561 _DPH1	=	0x0085
                           000087   562 _PCON	=	0x0087
                           000088   563 _TCON	=	0x0088
                           000090   564 _P1	=	0x0090
                           000092   565 _DPS	=	0x0092
                           000098   566 _S0CON	=	0x0098
                           00009A   567 _IEN2	=	0x009a
                           00009B   568 _S1CON	=	0x009b
                           0000A0   569 _P2	=	0x00a0
                           0000A8   570 _IEN0	=	0x00a8
                           0000A9   571 _IP0	=	0x00a9
                           0000B8   572 _IEN1	=	0x00b8
                           0000B9   573 _IP1	=	0x00b9
                           0000C0   574 _IRCON	=	0x00c0
                           0000D0   575 _PSW	=	0x00d0
                           0000E0   576 _ACC	=	0x00e0
                           0000E8   577 _IRCON2	=	0x00e8
                           0000F0   578 _B	=	0x00f0
                           0000B4   579 _ADCCON1	=	0x00b4
                           0000B5   580 _ADCCON2	=	0x00b5
                           0000B6   581 _ADCCON3	=	0x00b6
                           0000BA   582 _ADCL	=	0x00ba
                           0000BB   583 _ADCH	=	0x00bb
                           0000BC   584 _RNDL	=	0x00bc
                           0000BD   585 _RNDH	=	0x00bd
                           0000B1   586 _ENCDI	=	0x00b1
                           0000B2   587 _ENCDO	=	0x00b2
                           0000B3   588 _ENCCS	=	0x00b3
                           0000D1   589 _DMAIRQ	=	0x00d1
                           0000D2   590 _DMA1CFGL	=	0x00d2
                           0000D3   591 _DMA1CFGH	=	0x00d3
                           0000D4   592 _DMA0CFGL	=	0x00d4
                           0000D5   593 _DMA0CFGH	=	0x00d5
                           0000D6   594 _DMAARM	=	0x00d6
                           0000D7   595 _DMAREQ	=	0x00d7
                           000089   596 _P0IFG	=	0x0089
                           00008A   597 _P1IFG	=	0x008a
                           00008B   598 _P2IFG	=	0x008b
                           00008C   599 _PICTL	=	0x008c
                           0000AB   600 _P0IEN	=	0x00ab
                           00008D   601 _P1IEN	=	0x008d
                           0000AC   602 _P2IEN	=	0x00ac
                           00008F   603 _P0INP	=	0x008f
                           0000F1   604 _PERCFG	=	0x00f1
                           0000F2   605 _APCFG	=	0x00f2
                           0000F3   606 _P0SEL	=	0x00f3
                           0000F4   607 _P1SEL	=	0x00f4
                           0000F5   608 _P2SEL	=	0x00f5
                           0000F6   609 _P1INP	=	0x00f6
                           0000F7   610 _P2INP	=	0x00f7
                           0000FD   611 _P0DIR	=	0x00fd
                           0000FE   612 _P1DIR	=	0x00fe
                           0000FF   613 _P2DIR	=	0x00ff
                           0000AE   614 _PMUX	=	0x00ae
                           000093   615 _MPAGE	=	0x0093
                           000093   616 __XPAGE	=	0x0093
                           0000C7   617 _MEMCTR	=	0x00c7
                           00009F   618 _FMAP	=	0x009f
                           00009F   619 _PSBANK	=	0x009f
                           000091   620 _RFIRQF1	=	0x0091
                           0000D9   621 _RFD	=	0x00d9
                           0000E1   622 _RFST	=	0x00e1
                           0000E9   623 _RFIRQF0	=	0x00e9
                           0000BF   624 _RFERRF	=	0x00bf
                           000095   625 _ST0	=	0x0095
                           000096   626 _ST1	=	0x0096
                           000097   627 _ST2	=	0x0097
                           0000AD   628 _STLOAD	=	0x00ad
                           0000BE   629 _SLEEPCMD	=	0x00be
                           00009D   630 _SLEEPSTA	=	0x009d
                           0000C6   631 _CLKCONCMD	=	0x00c6
                           00009E   632 _CLKCONSTA	=	0x009e
                           0000DA   633 _T1CC0L	=	0x00da
                           0000DB   634 _T1CC0H	=	0x00db
                           0000DC   635 _T1CC1L	=	0x00dc
                           0000DD   636 _T1CC1H	=	0x00dd
                           0000DE   637 _T1CC2L	=	0x00de
                           0000DF   638 _T1CC2H	=	0x00df
                           0000E2   639 _T1CNTL	=	0x00e2
                           0000E3   640 _T1CNTH	=	0x00e3
                           0000E4   641 _T1CTL	=	0x00e4
                           0000E5   642 _T1CCTL0	=	0x00e5
                           0000E6   643 _T1CCTL1	=	0x00e6
                           0000E7   644 _T1CCTL2	=	0x00e7
                           0000AF   645 _T1STAT	=	0x00af
                           000094   646 _T2CTRL	=	0x0094
                           00009C   647 _T2EVTCFG	=	0x009c
                           0000A1   648 _T2IRQF	=	0x00a1
                           0000A2   649 _T2M0	=	0x00a2
                           0000A3   650 _T2M1	=	0x00a3
                           0000A4   651 _T2MOVF0	=	0x00a4
                           0000A5   652 _T2MOVF1	=	0x00a5
                           0000A6   653 _T2MOVF2	=	0x00a6
                           0000A7   654 _T2IRQM	=	0x00a7
                           0000C3   655 _T2MSEL	=	0x00c3
                           0000CA   656 _T3CNT	=	0x00ca
                           0000CB   657 _T3CTL	=	0x00cb
                           0000CC   658 _T3CCTL0	=	0x00cc
                           0000CD   659 _T3CC0	=	0x00cd
                           0000CE   660 _T3CCTL1	=	0x00ce
                           0000CF   661 _T3CC1	=	0x00cf
                           0000EA   662 _T4CNT	=	0x00ea
                           0000EB   663 _T4CTL	=	0x00eb
                           0000EC   664 _T4CCTL0	=	0x00ec
                           0000ED   665 _T4CC0	=	0x00ed
                           0000EE   666 _T4CCTL1	=	0x00ee
                           0000EF   667 _T4CC1	=	0x00ef
                           0000D8   668 _TIMIF	=	0x00d8
                           000086   669 _U0CSR	=	0x0086
                           0000C1   670 _U0DBUF	=	0x00c1
                           0000C2   671 _U0BAUD	=	0x00c2
                           0000C4   672 _U0UCR	=	0x00c4
                           0000C5   673 _U0GCR	=	0x00c5
                           0000F8   674 _U1CSR	=	0x00f8
                           0000F9   675 _U1DBUF	=	0x00f9
                           0000FA   676 _U1BAUD	=	0x00fa
                           0000FB   677 _U1UCR	=	0x00fb
                           0000FC   678 _U1GCR	=	0x00fc
                           0000C9   679 _WDCTL	=	0x00c9
                                    680 ;--------------------------------------------------------
                                    681 ; special function bits
                                    682 ;--------------------------------------------------------
                                    683 	.area RSEG    (ABS,DATA)
      000000                        684 	.org 0x0000
                           000087   685 _P0_7	=	0x0087
                           000086   686 _P0_6	=	0x0086
                           000085   687 _P0_5	=	0x0085
                           000084   688 _P0_4	=	0x0084
                           000083   689 _P0_3	=	0x0083
                           000082   690 _P0_2	=	0x0082
                           000081   691 _P0_1	=	0x0081
                           000080   692 _P0_0	=	0x0080
                           00008F   693 _URX1IF	=	0x008f
                           00008D   694 _ADCIF	=	0x008d
                           00008B   695 _URX0IF	=	0x008b
                           00008A   696 _IT1	=	0x008a
                           000089   697 _RFERRIF	=	0x0089
                           000088   698 _IT0	=	0x0088
                           000097   699 _P1_7	=	0x0097
                           000096   700 _P1_6	=	0x0096
                           000095   701 _P1_5	=	0x0095
                           000094   702 _P1_4	=	0x0094
                           000093   703 _P1_3	=	0x0093
                           000092   704 _P1_2	=	0x0092
                           000091   705 _P1_1	=	0x0091
                           000090   706 _P1_0	=	0x0090
                           000099   707 _ENCIF_1	=	0x0099
                           000098   708 _ENCIF_0	=	0x0098
                           0000A7   709 _P2_7	=	0x00a7
                           0000A6   710 _P2_6	=	0x00a6
                           0000A5   711 _P2_5	=	0x00a5
                           0000A4   712 _P2_4	=	0x00a4
                           0000A3   713 _P2_3	=	0x00a3
                           0000A2   714 _P2_2	=	0x00a2
                           0000A1   715 _P2_1	=	0x00a1
                           0000A0   716 _P2_0	=	0x00a0
                           0000AF   717 _EA	=	0x00af
                           0000AD   718 _STIE	=	0x00ad
                           0000AC   719 _ENCIE	=	0x00ac
                           0000AB   720 _URX1IE	=	0x00ab
                           0000AA   721 _URX0IE	=	0x00aa
                           0000A9   722 _ADCIE	=	0x00a9
                           0000A8   723 _RFERRIE	=	0x00a8
                           0000BD   724 _P0IE	=	0x00bd
                           0000BC   725 _T4IE	=	0x00bc
                           0000BB   726 _T3IE	=	0x00bb
                           0000BA   727 _T2IE	=	0x00ba
                           0000B9   728 _T1IE	=	0x00b9
                           0000B8   729 _DMAIE	=	0x00b8
                           0000C7   730 _STIF	=	0x00c7
                           0000C5   731 _P0IF	=	0x00c5
                           0000C4   732 _T4IF	=	0x00c4
                           0000C3   733 _T3IF	=	0x00c3
                           0000C2   734 _T2IF	=	0x00c2
                           0000C1   735 _T1IF	=	0x00c1
                           0000C0   736 _DMAIF	=	0x00c0
                           0000D7   737 _CY	=	0x00d7
                           0000D6   738 _AC	=	0x00d6
                           0000D5   739 _F0	=	0x00d5
                           0000D4   740 _RS1	=	0x00d4
                           0000D3   741 _RS0	=	0x00d3
                           0000D2   742 _OV	=	0x00d2
                           0000D1   743 _F1	=	0x00d1
                           0000D0   744 _P	=	0x00d0
                           0000E7   745 _ACC_7	=	0x00e7
                           0000E6   746 _ACC_6	=	0x00e6
                           0000E5   747 _ACC_5	=	0x00e5
                           0000E4   748 _ACC_4	=	0x00e4
                           0000E3   749 _ACC_3	=	0x00e3
                           0000E2   750 _ACC_2	=	0x00e2
                           0000E1   751 _ACC_1	=	0x00e1
                           0000E0   752 _ACC_0	=	0x00e0
                           0000EC   753 _WDTIF	=	0x00ec
                           0000EB   754 _P1IF	=	0x00eb
                           0000EA   755 _UTX1IF	=	0x00ea
                           0000E9   756 _UTX0IF	=	0x00e9
                           0000E8   757 _P2IF	=	0x00e8
                           0000F7   758 _B_7	=	0x00f7
                           0000F6   759 _B_6	=	0x00f6
                           0000F5   760 _B_5	=	0x00f5
                           0000F4   761 _B_4	=	0x00f4
                           0000F3   762 _B_3	=	0x00f3
                           0000F2   763 _B_2	=	0x00f2
                           0000F1   764 _B_1	=	0x00f1
                           0000F0   765 _B_0	=	0x00f0
                           0000DE   766 _OVFIM	=	0x00de
                           0000DD   767 _T4CH1IF	=	0x00dd
                           0000DC   768 _T4CH0IF	=	0x00dc
                           0000DB   769 _T4OVFIF	=	0x00db
                           0000DA   770 _T3CH1IF	=	0x00da
                           0000D9   771 _T3CH0IF	=	0x00d9
                           0000D8   772 _T3OVFIF	=	0x00d8
                           0000FF   773 _MODE	=	0x00ff
                           0000FE   774 _RE	=	0x00fe
                           0000FD   775 _SLAVE	=	0x00fd
                           0000FC   776 _FE	=	0x00fc
                           0000FB   777 _ERR	=	0x00fb
                           0000FA   778 _RX_BYTE	=	0x00fa
                           0000F9   779 _TX_BYTE	=	0x00f9
                           0000F8   780 _ACTIVE	=	0x00f8
                                    781 ;--------------------------------------------------------
                                    782 ; overlayable register banks
                                    783 ;--------------------------------------------------------
                                    784 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        785 	.ds 8
                                    786 ;--------------------------------------------------------
                                    787 ; internal ram data
                                    788 ;--------------------------------------------------------
                                    789 	.area DSEG    (DATA)
                                    790 ;--------------------------------------------------------
                                    791 ; overlayable items in internal ram 
                                    792 ;--------------------------------------------------------
                                    793 ;--------------------------------------------------------
                                    794 ; indirectly addressable internal ram data
                                    795 ;--------------------------------------------------------
                                    796 	.area ISEG    (DATA)
                                    797 ;--------------------------------------------------------
                                    798 ; absolute internal ram data
                                    799 ;--------------------------------------------------------
                                    800 	.area IABS    (ABS,DATA)
                                    801 	.area IABS    (ABS,DATA)
                                    802 ;--------------------------------------------------------
                                    803 ; bit data
                                    804 ;--------------------------------------------------------
                                    805 	.area BSEG    (BIT)
                                    806 ;--------------------------------------------------------
                                    807 ; paged external ram data
                                    808 ;--------------------------------------------------------
                                    809 	.area PSEG    (PAG,XDATA)
                                    810 ;--------------------------------------------------------
                                    811 ; external ram data
                                    812 ;--------------------------------------------------------
                                    813 	.area XSEG    (XDATA)
                           0061A6   814 _MONMUX	=	0x61a6
                           0061A6   815 _OPAMPMC	=	0x61a6
                           006230   816 _I2CCFG	=	0x6230
                           006231   817 _I2CSTAT	=	0x6231
                           006232   818 _I2CDATA	=	0x6232
                           006233   819 _I2CADDR	=	0x6233
                           006234   820 _I2CWC	=	0x6234
                           006235   821 _I2CIO	=	0x6235
                           006243   822 _OBSSEL0	=	0x6243
                           006244   823 _OBSSEL1	=	0x6244
                           006245   824 _OBSSEL2	=	0x6245
                           006246   825 _OBSSEL3	=	0x6246
                           006247   826 _OBSSEL4	=	0x6247
                           006248   827 _OBSSEL5	=	0x6248
                           006249   828 _CHVER	=	0x6249
                           00624A   829 _CHIPID	=	0x624a
                           00624B   830 _TESTREG0	=	0x624b
                           006260   831 _DBGDATA	=	0x6260
                           006262   832 _SRCRC	=	0x6262
                           006264   833 _BATTMON	=	0x6264
                           006265   834 _IVCTRL	=	0x6265
                           006270   835 _FCTL	=	0x6270
                           006271   836 _FADDRL	=	0x6271
                           006272   837 _FADDRH	=	0x6272
                           006273   838 _FWDATA	=	0x6273
                           006276   839 _CHIPINFO0	=	0x6276
                           006277   840 _CHIPINFO1	=	0x6277
                           006281   841 _IRCTL	=	0x6281
                           006290   842 _CLD	=	0x6290
                           0062A0   843 _XX_T1CCTL0	=	0x62a0
                           0062A1   844 _XX_T1CCTL1	=	0x62a1
                           0062A2   845 _XX_T1CCTL2	=	0x62a2
                           0062A3   846 _T1CCTL3	=	0x62a3
                           0062A4   847 _T1CCTL4	=	0x62a4
                           0062A6   848 _XX_T1CC0L	=	0x62a6
                           0062A7   849 _XX_T1CC0H	=	0x62a7
                           0062A8   850 _XX_T1CC1L	=	0x62a8
                           0062A9   851 _XX_T1CC1H	=	0x62a9
                           0062AA   852 _XX_T1CC2L	=	0x62aa
                           0062AB   853 _XX_T1CC2H	=	0x62ab
                           0062AC   854 _T1CC3L	=	0x62ac
                           0062AD   855 _T1CC3H	=	0x62ad
                           0062AE   856 _T1CC4L	=	0x62ae
                           0062AF   857 _T1CC4H	=	0x62af
                           0062B0   858 _STCC	=	0x62b0
                           0062B1   859 _STCS	=	0x62b1
                           0062B2   860 _STCV0	=	0x62b2
                           0062B3   861 _STCV1	=	0x62b3
                           0062B4   862 _STCV2	=	0x62b4
                           0062C0   863 _OPAMPC	=	0x62c0
                           0062C1   864 _OPAMPS	=	0x62c1
                           0062D0   865 _CMPCTL	=	0x62d0
                           006000   866 _RFCORE_RAM	=	0x6000
                           006000   867 _RXFIFO	=	0x6000
                           006080   868 _TXFIFO	=	0x6080
                           006100   869 _SRC_ADDR_TABLE	=	0x6100
                           006160   870 _SRCRESMASK0	=	0x6160
                           006161   871 _SRCRESMASK1	=	0x6161
                           006162   872 _SRCRESMASK2	=	0x6162
                           006163   873 _SRCRESINDEX	=	0x6163
                           006164   874 _SRCEXTPENDEN0	=	0x6164
                           006165   875 _SRCEXTPENDEN1	=	0x6165
                           006166   876 _SRCEXTPENDEN2	=	0x6166
                           006167   877 _SRCSHORTPENDEN0	=	0x6167
                           006168   878 _SRCSHORTPENDEN1	=	0x6168
                           006169   879 _SRCSHORTPENDEN2	=	0x6169
                           00616A   880 _EXT_ADDR0	=	0x616a
                           00616B   881 _EXT_ADDR1	=	0x616b
                           00616C   882 _EXT_ADDR2	=	0x616c
                           00616D   883 _EXT_ADDR3	=	0x616d
                           00616E   884 _EXT_ADDR4	=	0x616e
                           00616F   885 _EXT_ADDR5	=	0x616f
                           006170   886 _EXT_ADDR6	=	0x6170
                           006171   887 _EXT_ADDR7	=	0x6171
                           006172   888 _PAN_ID0	=	0x6172
                           006173   889 _PAN_ID1	=	0x6173
                           006174   890 _SHORT_ADDR0	=	0x6174
                           006175   891 _SHORT_ADDR1	=	0x6175
                           006180   892 _FRMFILT0	=	0x6180
                           006181   893 _FRMFILT1	=	0x6181
                           006182   894 _SRCMATCH	=	0x6182
                           006183   895 _SRCSHORTEN0	=	0x6183
                           006184   896 _SRCSHORTEN1	=	0x6184
                           006185   897 _SRCSHORTEN2	=	0x6185
                           006186   898 _SRCEXTEN0	=	0x6186
                           006187   899 _SRCEXTEN1	=	0x6187
                           006188   900 _SRCEXTEN2	=	0x6188
                           006189   901 _FRMCTRL0	=	0x6189
                           00618A   902 _FRMCTRL1	=	0x618a
                           00618B   903 _RXENABLE	=	0x618b
                           00618C   904 _RXMASKSET	=	0x618c
                           00618D   905 _RXMASKCLR	=	0x618d
                           00618E   906 _FREQTUNE	=	0x618e
                           00618F   907 _FREQCTRL	=	0x618f
                           006190   908 _TXPOWER	=	0x6190
                           006191   909 _TXCTRL	=	0x6191
                           006192   910 _FSMSTAT0	=	0x6192
                           006193   911 _FSMSTAT1	=	0x6193
                           006194   912 _FIFOPCTRL	=	0x6194
                           006195   913 _FSMCTRL	=	0x6195
                           006196   914 _CCACTRL0	=	0x6196
                           006197   915 _CCACTRL1	=	0x6197
                           006198   916 _RSSI	=	0x6198
                           006199   917 _RSSISTAT	=	0x6199
                           00619A   918 _RXFIRST	=	0x619a
                           00619B   919 _RXFIFOCNT	=	0x619b
                           00619C   920 _TXFIFOCNT	=	0x619c
                           00619D   921 _RXFIRST_PTR	=	0x619d
                           00619E   922 _RXLAST_PTR	=	0x619e
                           00619F   923 _RXP1_PTR	=	0x619f
                           0061A1   924 _TXFIRST_PTR	=	0x61a1
                           0061A2   925 _TXLAST_PTR	=	0x61a2
                           0061A3   926 _RFIRQM0	=	0x61a3
                           0061A4   927 _RFIRQM1	=	0x61a4
                           0061A5   928 _RFERRM	=	0x61a5
                           0061A7   929 _RFRND	=	0x61a7
                           0061A8   930 _MDMCTRL0	=	0x61a8
                           0061A9   931 _MDMCTRL1	=	0x61a9
                           0061AA   932 _FREQEST	=	0x61aa
                           0061AB   933 _RXCTRL	=	0x61ab
                           0061AC   934 _FSCTRL	=	0x61ac
                           0061AD   935 _FSCAL0	=	0x61ad
                           0061AE   936 _FSCAL1	=	0x61ae
                           0061AF   937 _FSCAL2	=	0x61af
                           0061B0   938 _FSCAL3	=	0x61b0
                           0061B1   939 _AGCCTRL0	=	0x61b1
                           0061B2   940 _AGCCTRL1	=	0x61b2
                           0061B3   941 _AGCCTRL2	=	0x61b3
                           0061B4   942 _AGCCTRL3	=	0x61b4
                           0061B5   943 _ADCTEST0	=	0x61b5
                           0061B6   944 _ADCTEST1	=	0x61b6
                           0061B7   945 _ADCTEST2	=	0x61b7
                           0061B8   946 _MDMTEST0	=	0x61b8
                           0061B9   947 _MDMTEST1	=	0x61b9
                           0061BA   948 _DACTEST0	=	0x61ba
                           0061BB   949 _DACTEST1	=	0x61bb
                           0061BC   950 _DACTEST2	=	0x61bc
                           0061BD   951 _ATEST	=	0x61bd
                           0061BE   952 _PTEST0	=	0x61be
                           0061BF   953 _PTEST1	=	0x61bf
                           0061FA   954 _TXFILTCFG	=	0x61fa
                           0061EB   955 _RFC_OBS_CTRL0	=	0x61eb
                           0061EC   956 _RFC_OBS_CTRL1	=	0x61ec
                           0061ED   957 _RFC_OBS_CTRL2	=	0x61ed
                           0061C0   958 _CSPPROG0	=	0x61c0
                           0061C1   959 _CSPPROG1	=	0x61c1
                           0061C2   960 _CSPPROG2	=	0x61c2
                           0061C3   961 _CSPPROG3	=	0x61c3
                           0061C4   962 _CSPPROG4	=	0x61c4
                           0061C5   963 _CSPPROG5	=	0x61c5
                           0061C6   964 _CSPPROG6	=	0x61c6
                           0061C7   965 _CSPPROG7	=	0x61c7
                           0061C8   966 _CSPPROG8	=	0x61c8
                           0061C9   967 _CSPPROG9	=	0x61c9
                           0061CA   968 _CSPPROG10	=	0x61ca
                           0061CB   969 _CSPPROG11	=	0x61cb
                           0061CC   970 _CSPPROG12	=	0x61cc
                           0061CD   971 _CSPPROG13	=	0x61cd
                           0061CE   972 _CSPPROG14	=	0x61ce
                           0061CF   973 _CSPPROG15	=	0x61cf
                           0061D0   974 _CSPPROG16	=	0x61d0
                           0061D1   975 _CSPPROG17	=	0x61d1
                           0061D2   976 _CSPPROG18	=	0x61d2
                           0061D3   977 _CSPPROG19	=	0x61d3
                           0061D4   978 _CSPPROG20	=	0x61d4
                           0061D5   979 _CSPPROG21	=	0x61d5
                           0061D6   980 _CSPPROG22	=	0x61d6
                           0061D7   981 _CSPPROG23	=	0x61d7
                           0061E0   982 _CSPCTRL	=	0x61e0
                           0061E1   983 _CSPSTAT	=	0x61e1
                           0061E2   984 _CSPX	=	0x61e2
                           0061E3   985 _CSPY	=	0x61e3
                           0061E4   986 _CSPZ	=	0x61e4
                           0061E5   987 _CSPT	=	0x61e5
                           006200   988 _USBADDR	=	0x6200
                           006201   989 _USBPOW	=	0x6201
                           006202   990 _USBIIF	=	0x6202
                           006204   991 _USBOIF	=	0x6204
                           006206   992 _USBCIF	=	0x6206
                           006207   993 _USBIIE	=	0x6207
                           006209   994 _USBOIE	=	0x6209
                           00620B   995 _USBCIE	=	0x620b
                           00620C   996 _USBFRML	=	0x620c
                           00620D   997 _USBFRMH	=	0x620d
                           00620E   998 _USBINDEX	=	0x620e
                           00620F   999 _USBCTRL	=	0x620f
                           006210  1000 _USBMAXI	=	0x6210
                           006211  1001 _USBCS0	=	0x6211
                           006211  1002 _USBCSIL	=	0x6211
                           006212  1003 _USBCSIH	=	0x6212
                           006213  1004 _USBMAXO	=	0x6213
                           006214  1005 _USBCSOL	=	0x6214
                           006215  1006 _USBCSOH	=	0x6215
                           006216  1007 _USBCNT0	=	0x6216
                           006216  1008 _USBCNTL	=	0x6216
                           006217  1009 _USBCNTH	=	0x6217
                           006220  1010 _USBF0	=	0x6220
                           006222  1011 _USBF1	=	0x6222
                           006224  1012 _USBF2	=	0x6224
                           006226  1013 _USBF3	=	0x6226
                           006228  1014 _USBF4	=	0x6228
                           00622A  1015 _USBF5	=	0x622a
                           007080  1016 _X_P0	=	0x7080
                           007086  1017 _X_U0CSR	=	0x7086
                           007089  1018 _X_P0IFG	=	0x7089
                           00708A  1019 _X_P1IFG	=	0x708a
                           00708B  1020 _X_P2IFG	=	0x708b
                           00708C  1021 _X_PICTL	=	0x708c
                           00708D  1022 _X_P1IEN	=	0x708d
                           00708F  1023 _X_P0INP	=	0x708f
                           007090  1024 _X_P1	=	0x7090
                           007091  1025 _X_RFIRQF1	=	0x7091
                           007093  1026 _X_MPAGE	=	0x7093
                           007093  1027 _X__XPAGE	=	0x7093
                           007094  1028 _X_T2CTRL	=	0x7094
                           007095  1029 _X_ST0	=	0x7095
                           007096  1030 _X_ST1	=	0x7096
                           007097  1031 _X_ST2	=	0x7097
                           00709C  1032 _X_T2EVTCFG	=	0x709c
                           00709D  1033 _X_SLEEPSTA	=	0x709d
                           00709E  1034 _X_CLKCONSTA	=	0x709e
                           00709F  1035 _X_FMAP	=	0x709f
                           00709F  1036 _X_PSBANK	=	0x709f
                           0070A0  1037 _X_P2	=	0x70a0
                           0070A1  1038 _X_T2IRQF	=	0x70a1
                           0070A2  1039 _X_T2M0	=	0x70a2
                           0070A3  1040 _X_T2M1	=	0x70a3
                           0070A4  1041 _X_T2MOVF0	=	0x70a4
                           0070A5  1042 _X_T2MOVF1	=	0x70a5
                           0070A6  1043 _X_T2MOVF2	=	0x70a6
                           0070A7  1044 _X_T2IRQM	=	0x70a7
                           0070AB  1045 _X_P0IEN	=	0x70ab
                           0070AC  1046 _X_P2IEN	=	0x70ac
                           0070AD  1047 _X_STLOAD	=	0x70ad
                           0070AE  1048 _X_PMUX	=	0x70ae
                           0070AF  1049 _X_T1STAT	=	0x70af
                           0070B1  1050 _X_ENCDI	=	0x70b1
                           0070B2  1051 _X_ENCDO	=	0x70b2
                           0070B3  1052 _X_ENCCS	=	0x70b3
                           0070B4  1053 _X_ADCCON1	=	0x70b4
                           0070B5  1054 _X_ADCCON2	=	0x70b5
                           0070B6  1055 _X_ADCCON3	=	0x70b6
                           0070BA  1056 _X_ADCL	=	0x70ba
                           0070BB  1057 _X_ADCH	=	0x70bb
                           0070BC  1058 _X_RNDL	=	0x70bc
                           0070BD  1059 _X_RNDH	=	0x70bd
                           0070BE  1060 _X_SLEEPCMD	=	0x70be
                           0070BF  1061 _X_RFERRF	=	0x70bf
                           0070C1  1062 _X_U0DBUF	=	0x70c1
                           0070C2  1063 _X_U0BAUD	=	0x70c2
                           0070C3  1064 _X_T2MSEL	=	0x70c3
                           0070C4  1065 _X_U0UCR	=	0x70c4
                           0070C5  1066 _X_U0GCR	=	0x70c5
                           0070C6  1067 _X_CLKCONCMD	=	0x70c6
                           0070C7  1068 _X_MEMCTR	=	0x70c7
                           0070C9  1069 _X_WDCTL	=	0x70c9
                           0070CA  1070 _X_T3CNT	=	0x70ca
                           0070CB  1071 _X_T3CTL	=	0x70cb
                           0070CC  1072 _X_T3CCTL0	=	0x70cc
                           0070CD  1073 _X_T3CC0	=	0x70cd
                           0070CE  1074 _X_T3CCTL1	=	0x70ce
                           0070CF  1075 _X_T3CC1	=	0x70cf
                           0070D1  1076 _X_DMAIRQ	=	0x70d1
                           0070D2  1077 _X_DMA1CFGL	=	0x70d2
                           0070D3  1078 _X_DMA1CFGH	=	0x70d3
                           0070D4  1079 _X_DMA0CFGL	=	0x70d4
                           0070D5  1080 _X_DMA0CFGH	=	0x70d5
                           0070D6  1081 _X_DMAARM	=	0x70d6
                           0070D7  1082 _X_DMAREQ	=	0x70d7
                           0070D8  1083 _X_TIMIF	=	0x70d8
                           0070D9  1084 _X_RFD	=	0x70d9
                           0070DA  1085 _X_T1CC0L	=	0x70da
                           0070DB  1086 _X_T1CC0H	=	0x70db
                           0070DC  1087 _X_T1CC1L	=	0x70dc
                           0070DD  1088 _X_T1CC1H	=	0x70dd
                           0070DE  1089 _X_T1CC2L	=	0x70de
                           0070DF  1090 _X_T1CC2H	=	0x70df
                           0070E1  1091 _X_RFST	=	0x70e1
                           0070E2  1092 _X_T1CNTL	=	0x70e2
                           0070E3  1093 _X_T1CNTH	=	0x70e3
                           0070E4  1094 _X_T1CTL	=	0x70e4
                           0070E5  1095 _X_T1CCTL0	=	0x70e5
                           0070E6  1096 _X_T1CCTL1	=	0x70e6
                           0070E7  1097 _X_T1CCTL2	=	0x70e7
                           0070E9  1098 _X_RFIRQF0	=	0x70e9
                           0070EA  1099 _X_T4CNT	=	0x70ea
                           0070EB  1100 _X_T4CTL	=	0x70eb
                           0070EC  1101 _X_T4CCTL0	=	0x70ec
                           0070ED  1102 _X_T4CC0	=	0x70ed
                           0070EE  1103 _X_T4CCTL1	=	0x70ee
                           0070EF  1104 _X_T4CC1	=	0x70ef
                           0070F1  1105 _X_PERCFG	=	0x70f1
                           0070F2  1106 _X_APCFG	=	0x70f2
                           0070F3  1107 _X_P0SEL	=	0x70f3
                           0070F4  1108 _X_P1SEL	=	0x70f4
                           0070F5  1109 _X_P2SEL	=	0x70f5
                           0070F6  1110 _X_P1INP	=	0x70f6
                           0070F7  1111 _X_P2INP	=	0x70f7
                           0070F8  1112 _X_U1CSR	=	0x70f8
                           0070F9  1113 _X_U1DBUF	=	0x70f9
                           0070FA  1114 _X_U1BAUD	=	0x70fa
                           0070FB  1115 _X_U1UCR	=	0x70fb
                           0070FC  1116 _X_U1GCR	=	0x70fc
                           0070FD  1117 _X_P0DIR	=	0x70fd
                           0070FE  1118 _X_P1DIR	=	0x70fe
                           0070FF  1119 _X_P2DIR	=	0x70ff
                           007800  1120 _X_INFOPAGE	=	0x7800
                           00780C  1121 _X_IEEE_ADDR	=	0x780c
      000000                       1122 _server_conn:
      000000                       1123 	.ds 3
      000003                       1124 _buf:
      000003                       1125 	.ds 60
      00003F                       1126 _len:
      00003F                       1127 	.ds 1
      000040                       1128 _rt:
      000040                       1129 	.ds 3
      000043                       1130 _defrt:
      000043                       1131 	.ds 3
      000046                       1132 _addr:
      000046                       1133 	.ds 3
                                   1134 ;--------------------------------------------------------
                                   1135 ; absolute external ram data
                                   1136 ;--------------------------------------------------------
                                   1137 	.area XABS    (ABS,XDATA)
                                   1138 ;--------------------------------------------------------
                                   1139 ; external initialized ram data
                                   1140 ;--------------------------------------------------------
                                   1141 	.area XISEG   (XDATA)
      000000                       1142 _viztool_process::
      000000                       1143 	.ds 10
                                   1144 	.area HOME    (CODE)
                                   1145 	.area GSINIT0 (CODE)
                                   1146 	.area GSINIT1 (CODE)
                                   1147 	.area GSINIT2 (CODE)
                                   1148 	.area GSINIT3 (CODE)
                                   1149 	.area GSINIT4 (CODE)
                                   1150 	.area GSINIT5 (CODE)
                                   1151 	.area GSINIT  (CODE)
                                   1152 	.area GSFINAL (CODE)
                                   1153 	.area CSEG    (CODE)
                                   1154 ;--------------------------------------------------------
                                   1155 ; global & static initialisations
                                   1156 ;--------------------------------------------------------
                                   1157 	.area HOME    (CODE)
                                   1158 	.area GSINIT  (CODE)
                                   1159 	.area GSFINAL (CODE)
                                   1160 	.area GSINIT  (CODE)
                                   1161 ;--------------------------------------------------------
                                   1162 ; Home
                                   1163 ;--------------------------------------------------------
                                   1164 	.area HOME    (CODE)
                                   1165 	.area HOME    (CODE)
                                   1166 ;--------------------------------------------------------
                                   1167 ; code
                                   1168 ;--------------------------------------------------------
                                   1169 	.area BANK1   (CODE)
                                   1170 ;------------------------------------------------------------
                                   1171 ;Allocation info for local variables in function 'process_request'
                                   1172 ;------------------------------------------------------------
                                   1173 ;len                       Allocated to stack - sp -7
                                   1174 ;count                     Allocated to stack - sp -6
                                   1175 ;i                         Allocated to stack - sp -5
                                   1176 ;left                      Allocated to stack - sp -4
                                   1177 ;entry_size                Allocated to registers 
                                   1178 ;flip                      Allocated to stack - sp -3
                                   1179 ;flip                      Allocated to registers 
                                   1180 ;sloc0                     Allocated to stack - sp +6
                                   1181 ;------------------------------------------------------------
                                   1182 ;	../../../../platform/cc2530eb/./viztool.c:78: process_request() CC_NON_BANKED
                                   1183 ;	-----------------------------------------
                                   1184 ;	 function process_request
                                   1185 ;	-----------------------------------------
      000000                       1186 _process_request:
                           000007  1187 	ar7 = 0x07
                           000006  1188 	ar6 = 0x06
                           000005  1189 	ar5 = 0x05
                           000004  1190 	ar4 = 0x04
                           000003  1191 	ar3 = 0x03
                           000002  1192 	ar2 = 0x02
                           000001  1193 	ar1 = 0x01
                           000000  1194 	ar0 = 0x00
      000000 E5 81            [12] 1195 	mov	a,sp
      000002 24 08            [12] 1196 	add	a,#0x08
                                   1197 ;	../../../../platform/cc2530eb/./viztool.c:87: len = 2; /* start filling the buffer from position [2] */
      000004 F5 81            [12] 1198 	mov	sp,a
      000006 24 F9            [12] 1199 	add	a,#0xf9
      000008 F8               [12] 1200 	mov	r0,a
      000009 76 02            [12] 1201 	mov	@r0,#0x02
                                   1202 ;	../../../../platform/cc2530eb/./viztool.c:88: count = 0;
      00000B 7E 00            [12] 1203 	mov	r6,#0x00
                                   1204 ;	../../../../platform/cc2530eb/./viztool.c:89: if(buf[0] == REQUEST_TYPE_ND) {
      00000D 90r00r03         [24] 1205 	mov	dptr,#_buf
      000010 E0               [24] 1206 	movx	a,@dptr
      000011 FD               [12] 1207 	mov	r5,a
      000012 BD 01 02         [24] 1208 	cjne	r5,#0x01,00231$
      000015 80 03            [24] 1209 	sjmp	00232$
      000017                       1210 00231$:
      000017 02r01rBE         [24] 1211 	ljmp	00140$
      00001A                       1212 00232$:
                                   1213 ;	../../../../platform/cc2530eb/./viztool.c:92: for(i = buf[1]; i < UIP_DS6_NBR_NB; i++) {
      00001A 90r00r04         [24] 1214 	mov	dptr,#(_buf + 0x0001)
      00001D E5 81            [12] 1215 	mov	a,sp
      00001F 24 FB            [12] 1216 	add	a,#0xfb
      000021 F8               [12] 1217 	mov	r0,a
      000022 E0               [24] 1218 	movx	a,@dptr
      000023 F6               [12] 1219 	mov	@r0,a
      000024 E5 81            [12] 1220 	mov	a,sp
      000026 24 FA            [12] 1221 	add	a,#0xfa
      000028 F8               [12] 1222 	mov	r0,a
      000029 76 00            [12] 1223 	mov	@r0,#0x00
      00002B E5 81            [12] 1224 	mov	a,sp
      00002D 24 FC            [12] 1225 	add	a,#0xfc
      00002F F8               [12] 1226 	mov	r0,a
      000030 76 3B            [12] 1227 	mov	@r0,#0x3B
      000032                       1228 00143$:
      000032 E5 81            [12] 1229 	mov	a,sp
      000034 24 FB            [12] 1230 	add	a,#0xfb
      000036 F8               [12] 1231 	mov	r0,a
      000037 B6 04 00         [24] 1232 	cjne	@r0,#0x04,00233$
      00003A                       1233 00233$:
      00003A 40 03            [24] 1234 	jc	00234$
      00003C 02r07rA7         [24] 1235 	ljmp	00180$
      00003F                       1236 00234$:
                                   1237 ;	../../../../platform/cc2530eb/./viztool.c:93: if(uip_ds6_nbr_cache[i].isused) {
      00003F E5 81            [12] 1238 	mov	a,sp
      000041 24 FB            [12] 1239 	add	a,#0xfb
      000043 F8               [12] 1240 	mov	r0,a
      000044 E6               [12] 1241 	mov	a,@r0
      000045 75 F0 2E         [24] 1242 	mov	b,#0x2E
      000048 A4               [48] 1243 	mul	ab
      000049 24r00            [12] 1244 	add	a,#_uip_ds6_nbr_cache
      00004B FA               [12] 1245 	mov	r2,a
      00004C 74s00            [12] 1246 	mov	a,#(_uip_ds6_nbr_cache >> 8)
      00004E 35 F0            [12] 1247 	addc	a,b
      000050 FC               [12] 1248 	mov	r4,a
      000051 8A 82            [24] 1249 	mov	dpl,r2
      000053 8C 83            [24] 1250 	mov	dph,r4
      000055 E0               [24] 1251 	movx	a,@dptr
      000056 70 03            [24] 1252 	jnz	00235$
      000058 02r01rB5         [24] 1253 	ljmp	00144$
      00005B                       1254 00235$:
                                   1255 ;	../../../../platform/cc2530eb/./viztool.c:102: memcpy(buf + len, &i, sizeof(i));
      00005B E5 81            [12] 1256 	mov	a,sp
      00005D 24 FB            [12] 1257 	add	a,#0xFB
      00005F FA               [12] 1258 	mov	r2,a
      000060 7E 00            [12] 1259 	mov	r6,#0x00
      000062 7D 40            [12] 1260 	mov	r5,#0x40
      000064 E5 81            [12] 1261 	mov	a,sp
      000066 24 F9            [12] 1262 	add	a,#0xf9
      000068 F8               [12] 1263 	mov	r0,a
      000069 E6               [12] 1264 	mov	a,@r0
      00006A 24r03            [12] 1265 	add	a,#_buf
      00006C FC               [12] 1266 	mov	r4,a
      00006D E4               [12] 1267 	clr	a
      00006E 34s00            [12] 1268 	addc	a,#(_buf >> 8)
      000070 FF               [12] 1269 	mov	r7,a
      000071 7B 00            [12] 1270 	mov	r3,#0x00
      000073 74 01            [12] 1271 	mov	a,#0x01
      000075 C0 E0            [24] 1272 	push	acc
      000077 E4               [12] 1273 	clr	a
      000078 C0 E0            [24] 1274 	push	acc
      00007A C0 02            [24] 1275 	push	ar2
      00007C C0 06            [24] 1276 	push	ar6
      00007E C0 05            [24] 1277 	push	ar5
      000080 8C 82            [24] 1278 	mov	dpl,r4
      000082 8F 83            [24] 1279 	mov	dph,r7
      000084 8B F0            [24] 1280 	mov	b,r3
      000086 78r00            [12] 1281 	mov	r0,#_memcpy
      000088 79s00            [12] 1282 	mov	r1,#(_memcpy >> 8)
      00008A 7As00            [12] 1283 	mov	r2,#(_memcpy >> 16)
      00008C 12r00r00         [24] 1284 	lcall	__sdcc_banked_call
      00008F E5 81            [12] 1285 	mov	a,sp
      000091 24 FB            [12] 1286 	add	a,#0xfb
                                   1287 ;	../../../../platform/cc2530eb/./viztool.c:103: len += sizeof(i);
      000093 F5 81            [12] 1288 	mov	sp,a
      000095 24 F9            [12] 1289 	add	a,#0xf9
      000097 F8               [12] 1290 	mov	r0,a
      000098 06               [12] 1291 	inc	@r0
                                   1292 ;	../../../../platform/cc2530eb/./viztool.c:104: memcpy(buf + len, &uip_ds6_nbr_cache[i].ipaddr, sizeof(uip_ipaddr_t));
      000099 E5 81            [12] 1293 	mov	a,sp
      00009B 24 FB            [12] 1294 	add	a,#0xfb
      00009D F8               [12] 1295 	mov	r0,a
      00009E E6               [12] 1296 	mov	a,@r0
      00009F 75 F0 2E         [24] 1297 	mov	b,#0x2E
      0000A2 A4               [48] 1298 	mul	ab
      0000A3 24r00            [12] 1299 	add	a,#_uip_ds6_nbr_cache
      0000A5 FC               [12] 1300 	mov	r4,a
      0000A6 74s00            [12] 1301 	mov	a,#(_uip_ds6_nbr_cache >> 8)
      0000A8 35 F0            [12] 1302 	addc	a,b
      0000AA FF               [12] 1303 	mov	r7,a
      0000AB 0C               [12] 1304 	inc	r4
      0000AC BC 00 01         [24] 1305 	cjne	r4,#0x00,00236$
      0000AF 0F               [12] 1306 	inc	r7
      0000B0                       1307 00236$:
      0000B0 8C 06            [24] 1308 	mov	ar6,r4
      0000B2 8F 05            [24] 1309 	mov	ar5,r7
      0000B4 7B 00            [12] 1310 	mov	r3,#0x00
      0000B6 E5 81            [12] 1311 	mov	a,sp
      0000B8 24 F9            [12] 1312 	add	a,#0xf9
      0000BA F8               [12] 1313 	mov	r0,a
      0000BB E6               [12] 1314 	mov	a,@r0
      0000BC 24r03            [12] 1315 	add	a,#_buf
      0000BE FA               [12] 1316 	mov	r2,a
      0000BF E4               [12] 1317 	clr	a
      0000C0 34s00            [12] 1318 	addc	a,#(_buf >> 8)
      0000C2 FF               [12] 1319 	mov	r7,a
      0000C3 7C 00            [12] 1320 	mov	r4,#0x00
      0000C5 74 10            [12] 1321 	mov	a,#0x10
      0000C7 C0 E0            [24] 1322 	push	acc
      0000C9 E4               [12] 1323 	clr	a
      0000CA C0 E0            [24] 1324 	push	acc
      0000CC C0 06            [24] 1325 	push	ar6
      0000CE C0 05            [24] 1326 	push	ar5
      0000D0 C0 03            [24] 1327 	push	ar3
      0000D2 8A 82            [24] 1328 	mov	dpl,r2
      0000D4 8F 83            [24] 1329 	mov	dph,r7
      0000D6 8C F0            [24] 1330 	mov	b,r4
      0000D8 78r00            [12] 1331 	mov	r0,#_memcpy
      0000DA 79s00            [12] 1332 	mov	r1,#(_memcpy >> 8)
      0000DC 7As00            [12] 1333 	mov	r2,#(_memcpy >> 16)
      0000DE 12r00r00         [24] 1334 	lcall	__sdcc_banked_call
      0000E1 E5 81            [12] 1335 	mov	a,sp
      0000E3 24 FB            [12] 1336 	add	a,#0xfb
                                   1337 ;	../../../../platform/cc2530eb/./viztool.c:105: len += sizeof(uip_ipaddr_t);
      0000E5 F5 81            [12] 1338 	mov	sp,a
      0000E7 24 F9            [12] 1339 	add	a,#0xf9
      0000E9 F8               [12] 1340 	mov	r0,a
      0000EA 74 10            [12] 1341 	mov	a,#0x10
      0000EC 26               [12] 1342 	add	a,@r0
      0000ED F6               [12] 1343 	mov	@r0,a
                                   1344 ;	../../../../platform/cc2530eb/./viztool.c:106: memcpy(buf + len, &uip_ds6_nbr_cache[i].lladdr, sizeof(uip_lladdr_t));
      0000EE E5 81            [12] 1345 	mov	a,sp
      0000F0 24 FB            [12] 1346 	add	a,#0xfb
      0000F2 F8               [12] 1347 	mov	r0,a
      0000F3 E6               [12] 1348 	mov	a,@r0
      0000F4 75 F0 2E         [24] 1349 	mov	b,#0x2E
      0000F7 A4               [48] 1350 	mul	ab
      0000F8 24r00            [12] 1351 	add	a,#_uip_ds6_nbr_cache
      0000FA FC               [12] 1352 	mov	r4,a
      0000FB 74s00            [12] 1353 	mov	a,#(_uip_ds6_nbr_cache >> 8)
      0000FD 35 F0            [12] 1354 	addc	a,b
      0000FF FF               [12] 1355 	mov	r7,a
      000100 74 11            [12] 1356 	mov	a,#0x11
      000102 2C               [12] 1357 	add	a,r4
      000103 FC               [12] 1358 	mov	r4,a
      000104 E4               [12] 1359 	clr	a
      000105 3F               [12] 1360 	addc	a,r7
      000106 FF               [12] 1361 	mov	r7,a
      000107 8C 06            [24] 1362 	mov	ar6,r4
      000109 8F 05            [24] 1363 	mov	ar5,r7
      00010B 7B 00            [12] 1364 	mov	r3,#0x00
      00010D E5 81            [12] 1365 	mov	a,sp
      00010F 24 F9            [12] 1366 	add	a,#0xf9
      000111 F8               [12] 1367 	mov	r0,a
      000112 E6               [12] 1368 	mov	a,@r0
      000113 24r03            [12] 1369 	add	a,#_buf
      000115 FA               [12] 1370 	mov	r2,a
      000116 E4               [12] 1371 	clr	a
      000117 34s00            [12] 1372 	addc	a,#(_buf >> 8)
      000119 FF               [12] 1373 	mov	r7,a
      00011A 7C 00            [12] 1374 	mov	r4,#0x00
      00011C 74 08            [12] 1375 	mov	a,#0x08
      00011E C0 E0            [24] 1376 	push	acc
      000120 E4               [12] 1377 	clr	a
      000121 C0 E0            [24] 1378 	push	acc
      000123 C0 06            [24] 1379 	push	ar6
      000125 C0 05            [24] 1380 	push	ar5
      000127 C0 03            [24] 1381 	push	ar3
      000129 8A 82            [24] 1382 	mov	dpl,r2
      00012B 8F 83            [24] 1383 	mov	dph,r7
      00012D 8C F0            [24] 1384 	mov	b,r4
      00012F 78r00            [12] 1385 	mov	r0,#_memcpy
      000131 79s00            [12] 1386 	mov	r1,#(_memcpy >> 8)
      000133 7As00            [12] 1387 	mov	r2,#(_memcpy >> 16)
      000135 12r00r00         [24] 1388 	lcall	__sdcc_banked_call
      000138 E5 81            [12] 1389 	mov	a,sp
      00013A 24 FB            [12] 1390 	add	a,#0xfb
                                   1391 ;	../../../../platform/cc2530eb/./viztool.c:107: len += sizeof(uip_lladdr_t);
      00013C F5 81            [12] 1392 	mov	sp,a
      00013E 24 F9            [12] 1393 	add	a,#0xf9
      000140 F8               [12] 1394 	mov	r0,a
      000141 74 08            [12] 1395 	mov	a,#0x08
      000143 26               [12] 1396 	add	a,@r0
      000144 F6               [12] 1397 	mov	@r0,a
                                   1398 ;	../../../../platform/cc2530eb/./viztool.c:108: memcpy(buf + len, &uip_ds6_nbr_cache[i].state,
      000145 E5 81            [12] 1399 	mov	a,sp
      000147 24 FB            [12] 1400 	add	a,#0xfb
      000149 F8               [12] 1401 	mov	r0,a
      00014A E6               [12] 1402 	mov	a,@r0
      00014B 75 F0 2E         [24] 1403 	mov	b,#0x2E
      00014E A4               [48] 1404 	mul	ab
      00014F 24r00            [12] 1405 	add	a,#_uip_ds6_nbr_cache
      000151 FC               [12] 1406 	mov	r4,a
      000152 74s00            [12] 1407 	mov	a,#(_uip_ds6_nbr_cache >> 8)
      000154 35 F0            [12] 1408 	addc	a,b
      000156 FF               [12] 1409 	mov	r7,a
      000157 74 2D            [12] 1410 	mov	a,#0x2D
      000159 2C               [12] 1411 	add	a,r4
      00015A FC               [12] 1412 	mov	r4,a
      00015B E4               [12] 1413 	clr	a
      00015C 3F               [12] 1414 	addc	a,r7
      00015D FF               [12] 1415 	mov	r7,a
      00015E 8C 06            [24] 1416 	mov	ar6,r4
      000160 8F 05            [24] 1417 	mov	ar5,r7
      000162 7B 00            [12] 1418 	mov	r3,#0x00
      000164 E5 81            [12] 1419 	mov	a,sp
      000166 24 F9            [12] 1420 	add	a,#0xf9
      000168 F8               [12] 1421 	mov	r0,a
      000169 E6               [12] 1422 	mov	a,@r0
      00016A 24r03            [12] 1423 	add	a,#_buf
      00016C FA               [12] 1424 	mov	r2,a
      00016D E4               [12] 1425 	clr	a
      00016E 34s00            [12] 1426 	addc	a,#(_buf >> 8)
      000170 FF               [12] 1427 	mov	r7,a
      000171 7C 00            [12] 1428 	mov	r4,#0x00
      000173 74 01            [12] 1429 	mov	a,#0x01
      000175 C0 E0            [24] 1430 	push	acc
      000177 E4               [12] 1431 	clr	a
      000178 C0 E0            [24] 1432 	push	acc
      00017A C0 06            [24] 1433 	push	ar6
      00017C C0 05            [24] 1434 	push	ar5
      00017E C0 03            [24] 1435 	push	ar3
      000180 8A 82            [24] 1436 	mov	dpl,r2
      000182 8F 83            [24] 1437 	mov	dph,r7
      000184 8C F0            [24] 1438 	mov	b,r4
      000186 78r00            [12] 1439 	mov	r0,#_memcpy
      000188 79s00            [12] 1440 	mov	r1,#(_memcpy >> 8)
      00018A 7As00            [12] 1441 	mov	r2,#(_memcpy >> 16)
      00018C 12r00r00         [24] 1442 	lcall	__sdcc_banked_call
      00018F E5 81            [12] 1443 	mov	a,sp
      000191 24 FB            [12] 1444 	add	a,#0xfb
                                   1445 ;	../../../../platform/cc2530eb/./viztool.c:110: len += sizeof(uip_ds6_nbr_cache[i].state);
      000193 F5 81            [12] 1446 	mov	sp,a
      000195 24 F9            [12] 1447 	add	a,#0xf9
      000197 F8               [12] 1448 	mov	r0,a
      000198 06               [12] 1449 	inc	@r0
                                   1450 ;	../../../../platform/cc2530eb/./viztool.c:112: count++;
      000199 E5 81            [12] 1451 	mov	a,sp
      00019B 24 FA            [12] 1452 	add	a,#0xfa
      00019D F8               [12] 1453 	mov	r0,a
      00019E 06               [12] 1454 	inc	@r0
                                   1455 ;	../../../../platform/cc2530eb/./viztool.c:113: left -= entry_size;
      00019F E5 81            [12] 1456 	mov	a,sp
      0001A1 24 FC            [12] 1457 	add	a,#0xfc
      0001A3 F8               [12] 1458 	mov	r0,a
      0001A4 E6               [12] 1459 	mov	a,@r0
      0001A5 24 E6            [12] 1460 	add	a,#0xE6
      0001A7 F6               [12] 1461 	mov	@r0,a
                                   1462 ;	../../../../platform/cc2530eb/./viztool.c:115: if(left < entry_size) {
      0001A8 E5 81            [12] 1463 	mov	a,sp
      0001AA 24 FC            [12] 1464 	add	a,#0xfc
      0001AC F8               [12] 1465 	mov	r0,a
      0001AD B6 1A 00         [24] 1466 	cjne	@r0,#0x1A,00237$
      0001B0                       1467 00237$:
      0001B0 50 03            [24] 1468 	jnc	00238$
      0001B2 02r07rA7         [24] 1469 	ljmp	00180$
      0001B5                       1470 00238$:
                                   1471 ;	../../../../platform/cc2530eb/./viztool.c:116: break;
      0001B5                       1472 00144$:
                                   1473 ;	../../../../platform/cc2530eb/./viztool.c:92: for(i = buf[1]; i < UIP_DS6_NBR_NB; i++) {
      0001B5 E5 81            [12] 1474 	mov	a,sp
      0001B7 24 FB            [12] 1475 	add	a,#0xfb
      0001B9 F8               [12] 1476 	mov	r0,a
      0001BA 06               [12] 1477 	inc	@r0
      0001BB 02r00r32         [24] 1478 	ljmp	00143$
      0001BE                       1479 00140$:
                                   1480 ;	../../../../platform/cc2530eb/./viztool.c:120: } else if(buf[0] == REQUEST_TYPE_RT) {
      0001BE BD 02 02         [24] 1481 	cjne	r5,#0x02,00239$
      0001C1 80 03            [24] 1482 	sjmp	00240$
      0001C3                       1483 00239$:
      0001C3 02r04rD1         [24] 1484 	ljmp	00137$
      0001C6                       1485 00240$:
                                   1486 ;	../../../../platform/cc2530eb/./viztool.c:121: uint32_t flip = 0;
      0001C6 E5 81            [12] 1487 	mov	a,sp
      0001C8 24 FD            [12] 1488 	add	a,#0xfd
      0001CA F8               [12] 1489 	mov	r0,a
      0001CB E4               [12] 1490 	clr	a
      0001CC F6               [12] 1491 	mov	@r0,a
      0001CD 08               [12] 1492 	inc	r0
      0001CE F6               [12] 1493 	mov	@r0,a
      0001CF 08               [12] 1494 	inc	r0
      0001D0 F6               [12] 1495 	mov	@r0,a
      0001D1 08               [12] 1496 	inc	r0
      0001D2 F6               [12] 1497 	mov	@r0,a
                                   1498 ;	../../../../platform/cc2530eb/./viztool.c:124: rt = uip_ds6_route_list_head();
      0001D3 78r00            [12] 1499 	mov	r0,#_uip_ds6_route_list_head
      0001D5 79s00            [12] 1500 	mov	r1,#(_uip_ds6_route_list_head >> 8)
      0001D7 7As00            [12] 1501 	mov	r2,#(_uip_ds6_route_list_head >> 16)
      0001D9 12r00r00         [24] 1502 	lcall	__sdcc_banked_call
      0001DC AB 82            [24] 1503 	mov	r3,dpl
      0001DE AC 83            [24] 1504 	mov	r4,dph
      0001E0 AF F0            [24] 1505 	mov	r7,b
      0001E2 90r00r40         [24] 1506 	mov	dptr,#_rt
      0001E5 EB               [12] 1507 	mov	a,r3
      0001E6 F0               [24] 1508 	movx	@dptr,a
      0001E7 EC               [12] 1509 	mov	a,r4
      0001E8 A3               [24] 1510 	inc	dptr
      0001E9 F0               [24] 1511 	movx	@dptr,a
      0001EA EF               [12] 1512 	mov	a,r7
      0001EB A3               [24] 1513 	inc	dptr
      0001EC F0               [24] 1514 	movx	@dptr,a
                                   1515 ;	../../../../platform/cc2530eb/./viztool.c:126: for(i = buf[1]; i < uip_ds6_route_num_routes(); i++) {
      0001ED 90r00r04         [24] 1516 	mov	dptr,#(_buf + 0x0001)
      0001F0 E5 81            [12] 1517 	mov	a,sp
      0001F2 24 FB            [12] 1518 	add	a,#0xfb
      0001F4 F8               [12] 1519 	mov	r0,a
      0001F5 E0               [24] 1520 	movx	a,@dptr
      0001F6 F6               [12] 1521 	mov	@r0,a
      0001F7 E5 81            [12] 1522 	mov	a,sp
      0001F9 24 FA            [12] 1523 	add	a,#0xfa
      0001FB F8               [12] 1524 	mov	r0,a
      0001FC 76 00            [12] 1525 	mov	@r0,#0x00
      0001FE E5 81            [12] 1526 	mov	a,sp
      000200 24 FC            [12] 1527 	add	a,#0xfc
      000202 F8               [12] 1528 	mov	r0,a
      000203 76 3B            [12] 1529 	mov	@r0,#0x3B
      000205                       1530 00146$:
      000205 78r00            [12] 1531 	mov	r0,#_uip_ds6_route_num_routes
      000207 79s00            [12] 1532 	mov	r1,#(_uip_ds6_route_num_routes >> 8)
      000209 7As00            [12] 1533 	mov	r2,#(_uip_ds6_route_num_routes >> 16)
      00020B 12r00r00         [24] 1534 	lcall	__sdcc_banked_call
      00020E AA 82            [24] 1535 	mov	r2,dpl
      000210 AB 83            [24] 1536 	mov	r3,dph
      000212 E5 81            [12] 1537 	mov	a,sp
      000214 24 FB            [12] 1538 	add	a,#0xfb
      000216 F8               [12] 1539 	mov	r0,a
      000217 86 04            [24] 1540 	mov	ar4,@r0
      000219 7F 00            [12] 1541 	mov	r7,#0x00
      00021B C3               [12] 1542 	clr	c
      00021C EC               [12] 1543 	mov	a,r4
      00021D 9A               [12] 1544 	subb	a,r2
      00021E EF               [12] 1545 	mov	a,r7
      00021F 64 80            [12] 1546 	xrl	a,#0x80
      000221 8B F0            [24] 1547 	mov	b,r3
      000223 63 F0 80         [24] 1548 	xrl	b,#0x80
      000226 95 F0            [12] 1549 	subb	a,b
      000228 40 03            [24] 1550 	jc	00241$
      00022A 02r07rB0         [24] 1551 	ljmp	00181$
      00022D                       1552 00241$:
                                   1553 ;	../../../../platform/cc2530eb/./viztool.c:127: if(rt != NULL) {
      00022D 90r00r40         [24] 1554 	mov	dptr,#_rt
      000230 E0               [24] 1555 	movx	a,@dptr
      000231 FA               [12] 1556 	mov	r2,a
      000232 A3               [24] 1557 	inc	dptr
      000233 E0               [24] 1558 	movx	a,@dptr
      000234 FB               [12] 1559 	mov	r3,a
      000235 A3               [24] 1560 	inc	dptr
      000236 E0               [24] 1561 	movx	a,@dptr
      000237 FC               [12] 1562 	mov	r4,a
      000238 EA               [12] 1563 	mov	a,r2
      000239 4B               [12] 1564 	orl	a,r3
      00023A 70 03            [24] 1565 	jnz	00242$
      00023C 02r04rC8         [24] 1566 	ljmp	00147$
      00023F                       1567 00242$:
                                   1568 ;	../../../../platform/cc2530eb/./viztool.c:135: memcpy(buf + len, &i, sizeof(i));
      00023F E5 81            [12] 1569 	mov	a,sp
      000241 24 FB            [12] 1570 	add	a,#0xFB
      000243 FE               [12] 1571 	mov	r6,a
      000244 7D 00            [12] 1572 	mov	r5,#0x00
      000246 7A 40            [12] 1573 	mov	r2,#0x40
      000248 E5 81            [12] 1574 	mov	a,sp
      00024A 24 F9            [12] 1575 	add	a,#0xf9
      00024C F8               [12] 1576 	mov	r0,a
      00024D E6               [12] 1577 	mov	a,@r0
      00024E 24r03            [12] 1578 	add	a,#_buf
      000250 FC               [12] 1579 	mov	r4,a
      000251 E4               [12] 1580 	clr	a
      000252 34s00            [12] 1581 	addc	a,#(_buf >> 8)
      000254 FF               [12] 1582 	mov	r7,a
      000255 7B 00            [12] 1583 	mov	r3,#0x00
      000257 74 01            [12] 1584 	mov	a,#0x01
      000259 C0 E0            [24] 1585 	push	acc
      00025B E4               [12] 1586 	clr	a
      00025C C0 E0            [24] 1587 	push	acc
      00025E C0 06            [24] 1588 	push	ar6
      000260 C0 05            [24] 1589 	push	ar5
      000262 C0 02            [24] 1590 	push	ar2
      000264 8C 82            [24] 1591 	mov	dpl,r4
      000266 8F 83            [24] 1592 	mov	dph,r7
      000268 8B F0            [24] 1593 	mov	b,r3
      00026A 78r00            [12] 1594 	mov	r0,#_memcpy
      00026C 79s00            [12] 1595 	mov	r1,#(_memcpy >> 8)
      00026E 7As00            [12] 1596 	mov	r2,#(_memcpy >> 16)
      000270 12r00r00         [24] 1597 	lcall	__sdcc_banked_call
      000273 E5 81            [12] 1598 	mov	a,sp
      000275 24 FB            [12] 1599 	add	a,#0xfb
                                   1600 ;	../../../../platform/cc2530eb/./viztool.c:136: len += sizeof(i);
      000277 F5 81            [12] 1601 	mov	sp,a
      000279 24 F9            [12] 1602 	add	a,#0xf9
      00027B F8               [12] 1603 	mov	r0,a
      00027C 06               [12] 1604 	inc	@r0
                                   1605 ;	../../../../platform/cc2530eb/./viztool.c:137: memcpy(buf + len, &rt->ipaddr, sizeof(rt->ipaddr));
      00027D 90r00r40         [24] 1606 	mov	dptr,#_rt
      000280 E0               [24] 1607 	movx	a,@dptr
      000281 FB               [12] 1608 	mov	r3,a
      000282 A3               [24] 1609 	inc	dptr
      000283 E0               [24] 1610 	movx	a,@dptr
      000284 FC               [12] 1611 	mov	r4,a
      000285 A3               [24] 1612 	inc	dptr
      000286 E0               [24] 1613 	movx	a,@dptr
      000287 FF               [12] 1614 	mov	r7,a
      000288 74 03            [12] 1615 	mov	a,#0x03
      00028A 2B               [12] 1616 	add	a,r3
      00028B FB               [12] 1617 	mov	r3,a
      00028C E4               [12] 1618 	clr	a
      00028D 3C               [12] 1619 	addc	a,r4
      00028E FE               [12] 1620 	mov	r6,a
      00028F 8F 05            [24] 1621 	mov	ar5,r7
      000291 E5 81            [12] 1622 	mov	a,sp
      000293 24 F9            [12] 1623 	add	a,#0xf9
      000295 F8               [12] 1624 	mov	r0,a
      000296 E6               [12] 1625 	mov	a,@r0
      000297 24r03            [12] 1626 	add	a,#_buf
      000299 FA               [12] 1627 	mov	r2,a
      00029A E4               [12] 1628 	clr	a
      00029B 34s00            [12] 1629 	addc	a,#(_buf >> 8)
      00029D FF               [12] 1630 	mov	r7,a
      00029E 7C 00            [12] 1631 	mov	r4,#0x00
      0002A0 74 10            [12] 1632 	mov	a,#0x10
      0002A2 C0 E0            [24] 1633 	push	acc
      0002A4 E4               [12] 1634 	clr	a
      0002A5 C0 E0            [24] 1635 	push	acc
      0002A7 C0 03            [24] 1636 	push	ar3
      0002A9 C0 06            [24] 1637 	push	ar6
      0002AB C0 05            [24] 1638 	push	ar5
      0002AD 8A 82            [24] 1639 	mov	dpl,r2
      0002AF 8F 83            [24] 1640 	mov	dph,r7
      0002B1 8C F0            [24] 1641 	mov	b,r4
      0002B3 78r00            [12] 1642 	mov	r0,#_memcpy
      0002B5 79s00            [12] 1643 	mov	r1,#(_memcpy >> 8)
      0002B7 7As00            [12] 1644 	mov	r2,#(_memcpy >> 16)
      0002B9 12r00r00         [24] 1645 	lcall	__sdcc_banked_call
      0002BC E5 81            [12] 1646 	mov	a,sp
      0002BE 24 FB            [12] 1647 	add	a,#0xfb
                                   1648 ;	../../../../platform/cc2530eb/./viztool.c:138: len += sizeof(rt->ipaddr);
      0002C0 F5 81            [12] 1649 	mov	sp,a
      0002C2 24 F9            [12] 1650 	add	a,#0xf9
      0002C4 F8               [12] 1651 	mov	r0,a
      0002C5 74 10            [12] 1652 	mov	a,#0x10
      0002C7 26               [12] 1653 	add	a,@r0
      0002C8 F6               [12] 1654 	mov	@r0,a
                                   1655 ;	../../../../platform/cc2530eb/./viztool.c:139: memcpy(buf + len, &rt->length, sizeof(rt->length));
      0002C9 90r00r40         [24] 1656 	mov	dptr,#_rt
      0002CC E0               [24] 1657 	movx	a,@dptr
      0002CD FB               [12] 1658 	mov	r3,a
      0002CE A3               [24] 1659 	inc	dptr
      0002CF E0               [24] 1660 	movx	a,@dptr
      0002D0 FC               [12] 1661 	mov	r4,a
      0002D1 A3               [24] 1662 	inc	dptr
      0002D2 E0               [24] 1663 	movx	a,@dptr
      0002D3 FF               [12] 1664 	mov	r7,a
      0002D4 74 23            [12] 1665 	mov	a,#0x23
      0002D6 2B               [12] 1666 	add	a,r3
      0002D7 FB               [12] 1667 	mov	r3,a
      0002D8 E4               [12] 1668 	clr	a
      0002D9 3C               [12] 1669 	addc	a,r4
      0002DA FE               [12] 1670 	mov	r6,a
      0002DB 8F 05            [24] 1671 	mov	ar5,r7
      0002DD E5 81            [12] 1672 	mov	a,sp
      0002DF 24 F9            [12] 1673 	add	a,#0xf9
      0002E1 F8               [12] 1674 	mov	r0,a
      0002E2 E6               [12] 1675 	mov	a,@r0
      0002E3 24r03            [12] 1676 	add	a,#_buf
      0002E5 FA               [12] 1677 	mov	r2,a
      0002E6 E4               [12] 1678 	clr	a
      0002E7 34s00            [12] 1679 	addc	a,#(_buf >> 8)
      0002E9 FF               [12] 1680 	mov	r7,a
      0002EA 7C 00            [12] 1681 	mov	r4,#0x00
      0002EC 74 01            [12] 1682 	mov	a,#0x01
      0002EE C0 E0            [24] 1683 	push	acc
      0002F0 E4               [12] 1684 	clr	a
      0002F1 C0 E0            [24] 1685 	push	acc
      0002F3 C0 03            [24] 1686 	push	ar3
      0002F5 C0 06            [24] 1687 	push	ar6
      0002F7 C0 05            [24] 1688 	push	ar5
      0002F9 8A 82            [24] 1689 	mov	dpl,r2
      0002FB 8F 83            [24] 1690 	mov	dph,r7
      0002FD 8C F0            [24] 1691 	mov	b,r4
      0002FF 78r00            [12] 1692 	mov	r0,#_memcpy
      000301 79s00            [12] 1693 	mov	r1,#(_memcpy >> 8)
      000303 7As00            [12] 1694 	mov	r2,#(_memcpy >> 16)
      000305 12r00r00         [24] 1695 	lcall	__sdcc_banked_call
      000308 E5 81            [12] 1696 	mov	a,sp
      00030A 24 FB            [12] 1697 	add	a,#0xfb
                                   1698 ;	../../../../platform/cc2530eb/./viztool.c:140: len += sizeof(rt->length);
      00030C F5 81            [12] 1699 	mov	sp,a
      00030E 24 F9            [12] 1700 	add	a,#0xf9
      000310 F8               [12] 1701 	mov	r0,a
      000311 06               [12] 1702 	inc	@r0
                                   1703 ;	../../../../platform/cc2530eb/./viztool.c:141: memcpy(buf + len, &rt->metric, sizeof(rt->metric));
      000312 90r00r40         [24] 1704 	mov	dptr,#_rt
      000315 E0               [24] 1705 	movx	a,@dptr
      000316 FB               [12] 1706 	mov	r3,a
      000317 A3               [24] 1707 	inc	dptr
      000318 E0               [24] 1708 	movx	a,@dptr
      000319 FC               [12] 1709 	mov	r4,a
      00031A A3               [24] 1710 	inc	dptr
      00031B E0               [24] 1711 	movx	a,@dptr
      00031C FF               [12] 1712 	mov	r7,a
      00031D 74 24            [12] 1713 	mov	a,#0x24
      00031F 2B               [12] 1714 	add	a,r3
      000320 FB               [12] 1715 	mov	r3,a
      000321 E4               [12] 1716 	clr	a
      000322 3C               [12] 1717 	addc	a,r4
      000323 FE               [12] 1718 	mov	r6,a
      000324 8F 05            [24] 1719 	mov	ar5,r7
      000326 E5 81            [12] 1720 	mov	a,sp
      000328 24 F9            [12] 1721 	add	a,#0xf9
      00032A F8               [12] 1722 	mov	r0,a
      00032B E6               [12] 1723 	mov	a,@r0
      00032C 24r03            [12] 1724 	add	a,#_buf
      00032E FA               [12] 1725 	mov	r2,a
      00032F E4               [12] 1726 	clr	a
      000330 34s00            [12] 1727 	addc	a,#(_buf >> 8)
      000332 FF               [12] 1728 	mov	r7,a
      000333 7C 00            [12] 1729 	mov	r4,#0x00
      000335 74 01            [12] 1730 	mov	a,#0x01
      000337 C0 E0            [24] 1731 	push	acc
      000339 E4               [12] 1732 	clr	a
      00033A C0 E0            [24] 1733 	push	acc
      00033C C0 03            [24] 1734 	push	ar3
      00033E C0 06            [24] 1735 	push	ar6
      000340 C0 05            [24] 1736 	push	ar5
      000342 8A 82            [24] 1737 	mov	dpl,r2
      000344 8F 83            [24] 1738 	mov	dph,r7
      000346 8C F0            [24] 1739 	mov	b,r4
      000348 78r00            [12] 1740 	mov	r0,#_memcpy
      00034A 79s00            [12] 1741 	mov	r1,#(_memcpy >> 8)
      00034C 7As00            [12] 1742 	mov	r2,#(_memcpy >> 16)
      00034E 12r00r00         [24] 1743 	lcall	__sdcc_banked_call
      000351 E5 81            [12] 1744 	mov	a,sp
      000353 24 FB            [12] 1745 	add	a,#0xfb
                                   1746 ;	../../../../platform/cc2530eb/./viztool.c:142: len += sizeof(rt->metric);
      000355 F5 81            [12] 1747 	mov	sp,a
      000357 24 F9            [12] 1748 	add	a,#0xf9
      000359 F8               [12] 1749 	mov	r0,a
      00035A 06               [12] 1750 	inc	@r0
                                   1751 ;	../../../../platform/cc2530eb/./viztool.c:143: memcpy(buf + len, &rt->nexthop, sizeof(rt->nexthop));
      00035B 90r00r40         [24] 1752 	mov	dptr,#_rt
      00035E E0               [24] 1753 	movx	a,@dptr
      00035F FB               [12] 1754 	mov	r3,a
      000360 A3               [24] 1755 	inc	dptr
      000361 E0               [24] 1756 	movx	a,@dptr
      000362 FC               [12] 1757 	mov	r4,a
      000363 A3               [24] 1758 	inc	dptr
      000364 E0               [24] 1759 	movx	a,@dptr
      000365 FF               [12] 1760 	mov	r7,a
      000366 74 13            [12] 1761 	mov	a,#0x13
      000368 2B               [12] 1762 	add	a,r3
      000369 FB               [12] 1763 	mov	r3,a
      00036A E4               [12] 1764 	clr	a
      00036B 3C               [12] 1765 	addc	a,r4
      00036C FE               [12] 1766 	mov	r6,a
      00036D 8F 05            [24] 1767 	mov	ar5,r7
      00036F E5 81            [12] 1768 	mov	a,sp
      000371 24 F9            [12] 1769 	add	a,#0xf9
      000373 F8               [12] 1770 	mov	r0,a
      000374 E6               [12] 1771 	mov	a,@r0
      000375 24r03            [12] 1772 	add	a,#_buf
      000377 FA               [12] 1773 	mov	r2,a
      000378 E4               [12] 1774 	clr	a
      000379 34s00            [12] 1775 	addc	a,#(_buf >> 8)
      00037B FF               [12] 1776 	mov	r7,a
      00037C 7C 00            [12] 1777 	mov	r4,#0x00
      00037E 74 10            [12] 1778 	mov	a,#0x10
      000380 C0 E0            [24] 1779 	push	acc
      000382 E4               [12] 1780 	clr	a
      000383 C0 E0            [24] 1781 	push	acc
      000385 C0 03            [24] 1782 	push	ar3
      000387 C0 06            [24] 1783 	push	ar6
      000389 C0 05            [24] 1784 	push	ar5
      00038B 8A 82            [24] 1785 	mov	dpl,r2
      00038D 8F 83            [24] 1786 	mov	dph,r7
      00038F 8C F0            [24] 1787 	mov	b,r4
      000391 78r00            [12] 1788 	mov	r0,#_memcpy
      000393 79s00            [12] 1789 	mov	r1,#(_memcpy >> 8)
      000395 7As00            [12] 1790 	mov	r2,#(_memcpy >> 16)
      000397 12r00r00         [24] 1791 	lcall	__sdcc_banked_call
      00039A E5 81            [12] 1792 	mov	a,sp
      00039C 24 FB            [12] 1793 	add	a,#0xfb
                                   1794 ;	../../../../platform/cc2530eb/./viztool.c:144: len += sizeof(rt->nexthop);
      00039E F5 81            [12] 1795 	mov	sp,a
      0003A0 24 F9            [12] 1796 	add	a,#0xf9
      0003A2 F8               [12] 1797 	mov	r0,a
      0003A3 74 10            [12] 1798 	mov	a,#0x10
      0003A5 26               [12] 1799 	add	a,@r0
      0003A6 F6               [12] 1800 	mov	@r0,a
                                   1801 ;	../../../../platform/cc2530eb/./viztool.c:152: flip = uip_htonl(rt->state.lifetime);
      0003A7 90r00r40         [24] 1802 	mov	dptr,#_rt
      0003AA E0               [24] 1803 	movx	a,@dptr
      0003AB FB               [12] 1804 	mov	r3,a
      0003AC A3               [24] 1805 	inc	dptr
      0003AD E0               [24] 1806 	movx	a,@dptr
      0003AE FC               [12] 1807 	mov	r4,a
      0003AF A3               [24] 1808 	inc	dptr
      0003B0 E0               [24] 1809 	movx	a,@dptr
      0003B1 FF               [12] 1810 	mov	r7,a
      0003B2 74 25            [12] 1811 	mov	a,#0x25
      0003B4 2B               [12] 1812 	add	a,r3
      0003B5 FB               [12] 1813 	mov	r3,a
      0003B6 E4               [12] 1814 	clr	a
      0003B7 3C               [12] 1815 	addc	a,r4
      0003B8 FC               [12] 1816 	mov	r4,a
      0003B9 8B 82            [24] 1817 	mov	dpl,r3
      0003BB 8C 83            [24] 1818 	mov	dph,r4
      0003BD 8F F0            [24] 1819 	mov	b,r7
      0003BF 12r00r00         [24] 1820 	lcall	__gptrget
      0003C2 FB               [12] 1821 	mov	r3,a
      0003C3 A3               [24] 1822 	inc	dptr
      0003C4 12r00r00         [24] 1823 	lcall	__gptrget
      0003C7 FC               [12] 1824 	mov	r4,a
      0003C8 A3               [24] 1825 	inc	dptr
      0003C9 12r00r00         [24] 1826 	lcall	__gptrget
      0003CC FF               [12] 1827 	mov	r7,a
      0003CD A3               [24] 1828 	inc	dptr
      0003CE 12r00r00         [24] 1829 	lcall	__gptrget
      0003D1 8B 82            [24] 1830 	mov	dpl,r3
      0003D3 8C 83            [24] 1831 	mov	dph,r4
      0003D5 8F F0            [24] 1832 	mov	b,r7
      0003D7 78r00            [12] 1833 	mov	r0,#_uip_htonl
      0003D9 79s00            [12] 1834 	mov	r1,#(_uip_htonl >> 8)
      0003DB 7As00            [12] 1835 	mov	r2,#(_uip_htonl >> 16)
      0003DD 12r00r00         [24] 1836 	lcall	__sdcc_banked_call
      0003E0 AA 82            [24] 1837 	mov	r2,dpl
      0003E2 AB 83            [24] 1838 	mov	r3,dph
      0003E4 AC F0            [24] 1839 	mov	r4,b
      0003E6 FF               [12] 1840 	mov	r7,a
      0003E7 E5 81            [12] 1841 	mov	a,sp
      0003E9 24 FD            [12] 1842 	add	a,#0xfd
      0003EB F8               [12] 1843 	mov	r0,a
      0003EC A6 02            [24] 1844 	mov	@r0,ar2
      0003EE 08               [12] 1845 	inc	r0
      0003EF A6 03            [24] 1846 	mov	@r0,ar3
      0003F1 08               [12] 1847 	inc	r0
      0003F2 A6 04            [24] 1848 	mov	@r0,ar4
      0003F4 08               [12] 1849 	inc	r0
      0003F5 A6 07            [24] 1850 	mov	@r0,ar7
                                   1851 ;	../../../../platform/cc2530eb/./viztool.c:153: memcpy(buf + len, &flip, sizeof(flip));
      0003F7 E5 81            [12] 1852 	mov	a,sp
      0003F9 24 FD            [12] 1853 	add	a,#0xFD
      0003FB FE               [12] 1854 	mov	r6,a
      0003FC 7D 00            [12] 1855 	mov	r5,#0x00
      0003FE 7B 40            [12] 1856 	mov	r3,#0x40
      000400 E5 81            [12] 1857 	mov	a,sp
      000402 24 F9            [12] 1858 	add	a,#0xf9
      000404 F8               [12] 1859 	mov	r0,a
      000405 E6               [12] 1860 	mov	a,@r0
      000406 24r03            [12] 1861 	add	a,#_buf
      000408 FA               [12] 1862 	mov	r2,a
      000409 E4               [12] 1863 	clr	a
      00040A 34s00            [12] 1864 	addc	a,#(_buf >> 8)
      00040C FF               [12] 1865 	mov	r7,a
      00040D 7C 00            [12] 1866 	mov	r4,#0x00
      00040F 74 04            [12] 1867 	mov	a,#0x04
      000411 C0 E0            [24] 1868 	push	acc
      000413 E4               [12] 1869 	clr	a
      000414 C0 E0            [24] 1870 	push	acc
      000416 C0 06            [24] 1871 	push	ar6
      000418 C0 05            [24] 1872 	push	ar5
      00041A C0 03            [24] 1873 	push	ar3
      00041C 8A 82            [24] 1874 	mov	dpl,r2
      00041E 8F 83            [24] 1875 	mov	dph,r7
      000420 8C F0            [24] 1876 	mov	b,r4
      000422 78r00            [12] 1877 	mov	r0,#_memcpy
      000424 79s00            [12] 1878 	mov	r1,#(_memcpy >> 8)
      000426 7As00            [12] 1879 	mov	r2,#(_memcpy >> 16)
      000428 12r00r00         [24] 1880 	lcall	__sdcc_banked_call
      00042B E5 81            [12] 1881 	mov	a,sp
      00042D 24 FB            [12] 1882 	add	a,#0xfb
                                   1883 ;	../../../../platform/cc2530eb/./viztool.c:154: len += sizeof(flip);
      00042F F5 81            [12] 1884 	mov	sp,a
      000431 24 F9            [12] 1885 	add	a,#0xf9
      000433 F8               [12] 1886 	mov	r0,a
      000434 E6               [12] 1887 	mov	a,@r0
      000435 24 04            [12] 1888 	add	a,#0x04
      000437 F6               [12] 1889 	mov	@r0,a
                                   1890 ;	../../../../platform/cc2530eb/./viztool.c:157: memcpy(buf + len, &rt->state.learned_from,
      000438 90r00r40         [24] 1891 	mov	dptr,#_rt
      00043B E0               [24] 1892 	movx	a,@dptr
      00043C FB               [12] 1893 	mov	r3,a
      00043D A3               [24] 1894 	inc	dptr
      00043E E0               [24] 1895 	movx	a,@dptr
      00043F FC               [12] 1896 	mov	r4,a
      000440 A3               [24] 1897 	inc	dptr
      000441 E0               [24] 1898 	movx	a,@dptr
      000442 FF               [12] 1899 	mov	r7,a
      000443 74 30            [12] 1900 	mov	a,#0x30
      000445 2B               [12] 1901 	add	a,r3
      000446 FB               [12] 1902 	mov	r3,a
      000447 E4               [12] 1903 	clr	a
      000448 3C               [12] 1904 	addc	a,r4
      000449 FE               [12] 1905 	mov	r6,a
      00044A 8F 05            [24] 1906 	mov	ar5,r7
      00044C E5 81            [12] 1907 	mov	a,sp
      00044E 24 F9            [12] 1908 	add	a,#0xf9
      000450 F8               [12] 1909 	mov	r0,a
      000451 E6               [12] 1910 	mov	a,@r0
      000452 24r03            [12] 1911 	add	a,#_buf
      000454 FA               [12] 1912 	mov	r2,a
      000455 E4               [12] 1913 	clr	a
      000456 34s00            [12] 1914 	addc	a,#(_buf >> 8)
      000458 FF               [12] 1915 	mov	r7,a
      000459 7C 00            [12] 1916 	mov	r4,#0x00
      00045B 74 01            [12] 1917 	mov	a,#0x01
      00045D C0 E0            [24] 1918 	push	acc
      00045F E4               [12] 1919 	clr	a
      000460 C0 E0            [24] 1920 	push	acc
      000462 C0 03            [24] 1921 	push	ar3
      000464 C0 06            [24] 1922 	push	ar6
      000466 C0 05            [24] 1923 	push	ar5
      000468 8A 82            [24] 1924 	mov	dpl,r2
      00046A 8F 83            [24] 1925 	mov	dph,r7
      00046C 8C F0            [24] 1926 	mov	b,r4
      00046E 78r00            [12] 1927 	mov	r0,#_memcpy
      000470 79s00            [12] 1928 	mov	r1,#(_memcpy >> 8)
      000472 7As00            [12] 1929 	mov	r2,#(_memcpy >> 16)
      000474 12r00r00         [24] 1930 	lcall	__sdcc_banked_call
      000477 E5 81            [12] 1931 	mov	a,sp
      000479 24 FB            [12] 1932 	add	a,#0xfb
                                   1933 ;	../../../../platform/cc2530eb/./viztool.c:159: len += sizeof(rt->state.learned_from);
      00047B F5 81            [12] 1934 	mov	sp,a
      00047D 24 F9            [12] 1935 	add	a,#0xf9
      00047F F8               [12] 1936 	mov	r0,a
      000480 06               [12] 1937 	inc	@r0
                                   1938 ;	../../../../platform/cc2530eb/./viztool.c:163: count++;
      000481 E5 81            [12] 1939 	mov	a,sp
      000483 24 FA            [12] 1940 	add	a,#0xfa
      000485 F8               [12] 1941 	mov	r0,a
      000486 06               [12] 1942 	inc	@r0
                                   1943 ;	../../../../platform/cc2530eb/./viztool.c:164: left -= entry_size;
      000487 E5 81            [12] 1944 	mov	a,sp
      000489 24 FC            [12] 1945 	add	a,#0xfc
      00048B F8               [12] 1946 	mov	r0,a
      00048C E6               [12] 1947 	mov	a,@r0
      00048D 24 D8            [12] 1948 	add	a,#0xD8
      00048F F6               [12] 1949 	mov	@r0,a
                                   1950 ;	../../../../platform/cc2530eb/./viztool.c:166: rt = list_item_next(rt);
      000490 90r00r40         [24] 1951 	mov	dptr,#_rt
      000493 E0               [24] 1952 	movx	a,@dptr
      000494 FB               [12] 1953 	mov	r3,a
      000495 A3               [24] 1954 	inc	dptr
      000496 E0               [24] 1955 	movx	a,@dptr
      000497 FC               [12] 1956 	mov	r4,a
      000498 A3               [24] 1957 	inc	dptr
      000499 E0               [24] 1958 	movx	a,@dptr
      00049A FF               [12] 1959 	mov	r7,a
      00049B 8B 82            [24] 1960 	mov	dpl,r3
      00049D 8C 83            [24] 1961 	mov	dph,r4
      00049F 8F F0            [24] 1962 	mov	b,r7
      0004A1 78r00            [12] 1963 	mov	r0,#_list_item_next
      0004A3 79s00            [12] 1964 	mov	r1,#(_list_item_next >> 8)
      0004A5 7As00            [12] 1965 	mov	r2,#(_list_item_next >> 16)
      0004A7 12r00r00         [24] 1966 	lcall	__sdcc_banked_call
      0004AA AB 82            [24] 1967 	mov	r3,dpl
      0004AC AC 83            [24] 1968 	mov	r4,dph
      0004AE AF F0            [24] 1969 	mov	r7,b
      0004B0 90r00r40         [24] 1970 	mov	dptr,#_rt
      0004B3 EB               [12] 1971 	mov	a,r3
      0004B4 F0               [24] 1972 	movx	@dptr,a
      0004B5 EC               [12] 1973 	mov	a,r4
      0004B6 A3               [24] 1974 	inc	dptr
      0004B7 F0               [24] 1975 	movx	@dptr,a
      0004B8 EF               [12] 1976 	mov	a,r7
      0004B9 A3               [24] 1977 	inc	dptr
      0004BA F0               [24] 1978 	movx	@dptr,a
                                   1979 ;	../../../../platform/cc2530eb/./viztool.c:168: if(left < entry_size) {
      0004BB E5 81            [12] 1980 	mov	a,sp
      0004BD 24 FC            [12] 1981 	add	a,#0xfc
      0004BF F8               [12] 1982 	mov	r0,a
      0004C0 B6 28 00         [24] 1983 	cjne	@r0,#0x28,00243$
      0004C3                       1984 00243$:
      0004C3 50 03            [24] 1985 	jnc	00244$
      0004C5 02r07rB0         [24] 1986 	ljmp	00181$
      0004C8                       1987 00244$:
                                   1988 ;	../../../../platform/cc2530eb/./viztool.c:169: break;
      0004C8                       1989 00147$:
                                   1990 ;	../../../../platform/cc2530eb/./viztool.c:126: for(i = buf[1]; i < uip_ds6_route_num_routes(); i++) {
      0004C8 E5 81            [12] 1991 	mov	a,sp
      0004CA 24 FB            [12] 1992 	add	a,#0xfb
      0004CC F8               [12] 1993 	mov	r0,a
      0004CD 06               [12] 1994 	inc	@r0
      0004CE 02r02r05         [24] 1995 	ljmp	00146$
      0004D1                       1996 00137$:
                                   1997 ;	../../../../platform/cc2530eb/./viztool.c:173: } else if(buf[0] == REQUEST_TYPE_DRT) {
      0004D1 BD 03 02         [24] 1998 	cjne	r5,#0x03,00245$
      0004D4 80 03            [24] 1999 	sjmp	00246$
      0004D6                       2000 00245$:
      0004D6 02r05rE2         [24] 2001 	ljmp	00134$
      0004D9                       2002 00246$:
                                   2003 ;	../../../../platform/cc2530eb/./viztool.c:177: addr = uip_ds6_defrt_choose();
      0004D9 C0 06            [24] 2004 	push	ar6
      0004DB 78r00            [12] 2005 	mov	r0,#_uip_ds6_defrt_choose
      0004DD 79s00            [12] 2006 	mov	r1,#(_uip_ds6_defrt_choose >> 8)
      0004DF 7As00            [12] 2007 	mov	r2,#(_uip_ds6_defrt_choose >> 16)
      0004E1 12r00r00         [24] 2008 	lcall	__sdcc_banked_call
      0004E4 AB 82            [24] 2009 	mov	r3,dpl
      0004E6 AC 83            [24] 2010 	mov	r4,dph
      0004E8 AF F0            [24] 2011 	mov	r7,b
      0004EA D0 06            [24] 2012 	pop	ar6
      0004EC 90r00r46         [24] 2013 	mov	dptr,#_addr
      0004EF EB               [12] 2014 	mov	a,r3
      0004F0 F0               [24] 2015 	movx	@dptr,a
      0004F1 EC               [12] 2016 	mov	a,r4
      0004F2 A3               [24] 2017 	inc	dptr
      0004F3 F0               [24] 2018 	movx	@dptr,a
      0004F4 EF               [12] 2019 	mov	a,r7
      0004F5 A3               [24] 2020 	inc	dptr
      0004F6 F0               [24] 2021 	movx	@dptr,a
                                   2022 ;	../../../../platform/cc2530eb/./viztool.c:178: if(addr != NULL) {
      0004F7 EB               [12] 2023 	mov	a,r3
      0004F8 4C               [12] 2024 	orl	a,r4
      0004F9 60 24            [24] 2025 	jz	00112$
                                   2026 ;	../../../../platform/cc2530eb/./viztool.c:179: defrt = uip_ds6_defrt_lookup(addr);
      0004FB 8B 82            [24] 2027 	mov	dpl,r3
      0004FD 8C 83            [24] 2028 	mov	dph,r4
      0004FF 8F F0            [24] 2029 	mov	b,r7
      000501 C0 06            [24] 2030 	push	ar6
      000503 78r00            [12] 2031 	mov	r0,#_uip_ds6_defrt_lookup
      000505 79s00            [12] 2032 	mov	r1,#(_uip_ds6_defrt_lookup >> 8)
      000507 7As00            [12] 2033 	mov	r2,#(_uip_ds6_defrt_lookup >> 16)
      000509 12r00r00         [24] 2034 	lcall	__sdcc_banked_call
      00050C AB 82            [24] 2035 	mov	r3,dpl
      00050E AC 83            [24] 2036 	mov	r4,dph
      000510 AF F0            [24] 2037 	mov	r7,b
      000512 D0 06            [24] 2038 	pop	ar6
      000514 90r00r43         [24] 2039 	mov	dptr,#_defrt
      000517 EB               [12] 2040 	mov	a,r3
      000518 F0               [24] 2041 	movx	@dptr,a
      000519 EC               [12] 2042 	mov	a,r4
      00051A A3               [24] 2043 	inc	dptr
      00051B F0               [24] 2044 	movx	@dptr,a
      00051C EF               [12] 2045 	mov	a,r7
      00051D A3               [24] 2046 	inc	dptr
      00051E F0               [24] 2047 	movx	@dptr,a
      00051F                       2048 00112$:
                                   2049 ;	../../../../platform/cc2530eb/./viztool.c:182: i = buf[1];
      00051F 90r00r04         [24] 2050 	mov	dptr,#(_buf + 0x0001)
      000522 E0               [24] 2051 	movx	a,@dptr
      000523 FF               [12] 2052 	mov	r7,a
      000524 E5 81            [12] 2053 	mov	a,sp
      000526 24 FB            [12] 2054 	add	a,#0xfb
      000528 F8               [12] 2055 	mov	r0,a
      000529 A6 07            [24] 2056 	mov	@r0,ar7
                                   2057 ;	../../../../platform/cc2530eb/./viztool.c:184: if(defrt != NULL && i < 1) {
      00052B 90r00r43         [24] 2058 	mov	dptr,#_defrt
      00052E E0               [24] 2059 	movx	a,@dptr
      00052F FA               [12] 2060 	mov	r2,a
      000530 A3               [24] 2061 	inc	dptr
      000531 E0               [24] 2062 	movx	a,@dptr
      000532 FB               [12] 2063 	mov	r3,a
      000533 A3               [24] 2064 	inc	dptr
      000534 E0               [24] 2065 	movx	a,@dptr
      000535 FC               [12] 2066 	mov	r4,a
      000536 EA               [12] 2067 	mov	a,r2
      000537 4B               [12] 2068 	orl	a,r3
      000538 70 03            [24] 2069 	jnz	00248$
      00053A 02r07rC0         [24] 2070 	ljmp	00141$
      00053D                       2071 00248$:
      00053D BF 01 00         [24] 2072 	cjne	r7,#0x01,00249$
      000540                       2073 00249$:
      000540 40 03            [24] 2074 	jc	00250$
      000542 02r07rC0         [24] 2075 	ljmp	00141$
      000545                       2076 00250$:
                                   2077 ;	../../../../platform/cc2530eb/./viztool.c:188: memcpy(buf + len, &i, sizeof(i));
      000545 E5 81            [12] 2078 	mov	a,sp
      000547 24 FB            [12] 2079 	add	a,#0xFB
      000549 FF               [12] 2080 	mov	r7,a
      00054A 7C 00            [12] 2081 	mov	r4,#0x00
      00054C 7B 40            [12] 2082 	mov	r3,#0x40
      00054E 74 01            [12] 2083 	mov	a,#0x01
      000550 C0 E0            [24] 2084 	push	acc
      000552 E4               [12] 2085 	clr	a
      000553 C0 E0            [24] 2086 	push	acc
      000555 C0 07            [24] 2087 	push	ar7
      000557 C0 04            [24] 2088 	push	ar4
      000559 C0 03            [24] 2089 	push	ar3
      00055B 90r00r05         [24] 2090 	mov	dptr,#(_buf + 0x0002)
      00055E 75 F0 00         [24] 2091 	mov	b,#0x00
      000561 78r00            [12] 2092 	mov	r0,#_memcpy
      000563 79s00            [12] 2093 	mov	r1,#(_memcpy >> 8)
      000565 7As00            [12] 2094 	mov	r2,#(_memcpy >> 16)
      000567 12r00r00         [24] 2095 	lcall	__sdcc_banked_call
      00056A E5 81            [12] 2096 	mov	a,sp
      00056C 24 FB            [12] 2097 	add	a,#0xfb
      00056E F5 81            [12] 2098 	mov	sp,a
                                   2099 ;	../../../../platform/cc2530eb/./viztool.c:190: memcpy(buf + len, &defrt->ipaddr, sizeof(defrt->ipaddr));
      000570 90r00r43         [24] 2100 	mov	dptr,#_defrt
      000573 E0               [24] 2101 	movx	a,@dptr
      000574 FB               [12] 2102 	mov	r3,a
      000575 A3               [24] 2103 	inc	dptr
      000576 E0               [24] 2104 	movx	a,@dptr
      000577 FC               [12] 2105 	mov	r4,a
      000578 A3               [24] 2106 	inc	dptr
      000579 E0               [24] 2107 	movx	a,@dptr
      00057A FF               [12] 2108 	mov	r7,a
      00057B 74 03            [12] 2109 	mov	a,#0x03
      00057D 2B               [12] 2110 	add	a,r3
      00057E FB               [12] 2111 	mov	r3,a
      00057F E4               [12] 2112 	clr	a
      000580 3C               [12] 2113 	addc	a,r4
      000581 FC               [12] 2114 	mov	r4,a
      000582 74 10            [12] 2115 	mov	a,#0x10
      000584 C0 E0            [24] 2116 	push	acc
      000586 E4               [12] 2117 	clr	a
      000587 C0 E0            [24] 2118 	push	acc
      000589 C0 03            [24] 2119 	push	ar3
      00058B C0 04            [24] 2120 	push	ar4
      00058D C0 07            [24] 2121 	push	ar7
      00058F 90r00r06         [24] 2122 	mov	dptr,#(_buf + 0x0003)
      000592 75 F0 00         [24] 2123 	mov	b,#0x00
      000595 78r00            [12] 2124 	mov	r0,#_memcpy
      000597 79s00            [12] 2125 	mov	r1,#(_memcpy >> 8)
      000599 7As00            [12] 2126 	mov	r2,#(_memcpy >> 16)
      00059B 12r00r00         [24] 2127 	lcall	__sdcc_banked_call
      00059E E5 81            [12] 2128 	mov	a,sp
      0005A0 24 FB            [12] 2129 	add	a,#0xfb
      0005A2 F5 81            [12] 2130 	mov	sp,a
                                   2131 ;	../../../../platform/cc2530eb/./viztool.c:192: memcpy(buf + len, &defrt->isinfinite, sizeof(defrt->isinfinite));
      0005A4 90r00r43         [24] 2132 	mov	dptr,#_defrt
      0005A7 E0               [24] 2133 	movx	a,@dptr
      0005A8 FB               [12] 2134 	mov	r3,a
      0005A9 A3               [24] 2135 	inc	dptr
      0005AA E0               [24] 2136 	movx	a,@dptr
      0005AB FC               [12] 2137 	mov	r4,a
      0005AC A3               [24] 2138 	inc	dptr
      0005AD E0               [24] 2139 	movx	a,@dptr
      0005AE FF               [12] 2140 	mov	r7,a
      0005AF 74 1B            [12] 2141 	mov	a,#0x1B
      0005B1 2B               [12] 2142 	add	a,r3
      0005B2 FB               [12] 2143 	mov	r3,a
      0005B3 E4               [12] 2144 	clr	a
      0005B4 3C               [12] 2145 	addc	a,r4
      0005B5 FC               [12] 2146 	mov	r4,a
      0005B6 74 01            [12] 2147 	mov	a,#0x01
      0005B8 C0 E0            [24] 2148 	push	acc
      0005BA E4               [12] 2149 	clr	a
      0005BB C0 E0            [24] 2150 	push	acc
      0005BD C0 03            [24] 2151 	push	ar3
      0005BF C0 04            [24] 2152 	push	ar4
      0005C1 C0 07            [24] 2153 	push	ar7
      0005C3 90r00r16         [24] 2154 	mov	dptr,#(_buf + 0x0013)
      0005C6 75 F0 00         [24] 2155 	mov	b,#0x00
      0005C9 78r00            [12] 2156 	mov	r0,#_memcpy
      0005CB 79s00            [12] 2157 	mov	r1,#(_memcpy >> 8)
      0005CD 7As00            [12] 2158 	mov	r2,#(_memcpy >> 16)
      0005CF 12r00r00         [24] 2159 	lcall	__sdcc_banked_call
      0005D2 E5 81            [12] 2160 	mov	a,sp
      0005D4 24 FB            [12] 2161 	add	a,#0xfb
                                   2162 ;	../../../../platform/cc2530eb/./viztool.c:193: len += sizeof(defrt->isinfinite);
      0005D6 F5 81            [12] 2163 	mov	sp,a
      0005D8 24 F9            [12] 2164 	add	a,#0xf9
      0005DA F8               [12] 2165 	mov	r0,a
      0005DB 76 14            [12] 2166 	mov	@r0,#0x14
                                   2167 ;	../../../../platform/cc2530eb/./viztool.c:197: count++;
      0005DD 7E 01            [12] 2168 	mov	r6,#0x01
                                   2169 ;	../../../../platform/cc2530eb/./viztool.c:198: left -= entry_size;
      0005DF 02r07rC0         [24] 2170 	ljmp	00141$
      0005E2                       2171 00134$:
                                   2172 ;	../../../../platform/cc2530eb/./viztool.c:200: } else if(buf[0] == REQUEST_TYPE_ADDR) {
      0005E2 BD 04 02         [24] 2173 	cjne	r5,#0x04,00251$
      0005E5 80 03            [24] 2174 	sjmp	00252$
      0005E7                       2175 00251$:
      0005E7 02r06rE1         [24] 2176 	ljmp	00131$
      0005EA                       2177 00252$:
                                   2178 ;	../../../../platform/cc2530eb/./viztool.c:202: for(i = buf[1]; i < UIP_DS6_ADDR_NB; i++) {
      0005EA 90r00r04         [24] 2179 	mov	dptr,#(_buf + 0x0001)
      0005ED E5 81            [12] 2180 	mov	a,sp
      0005EF 24 FB            [12] 2181 	add	a,#0xfb
      0005F1 F8               [12] 2182 	mov	r0,a
      0005F2 E0               [24] 2183 	movx	a,@dptr
      0005F3 F6               [12] 2184 	mov	@r0,a
      0005F4 E5 81            [12] 2185 	mov	a,sp
      0005F6 24 FA            [12] 2186 	add	a,#0xfa
      0005F8 F8               [12] 2187 	mov	r0,a
      0005F9 76 00            [12] 2188 	mov	@r0,#0x00
      0005FB E5 81            [12] 2189 	mov	a,sp
      0005FD 24 FC            [12] 2190 	add	a,#0xfc
      0005FF F8               [12] 2191 	mov	r0,a
      000600 76 3B            [12] 2192 	mov	@r0,#0x3B
      000602                       2193 00149$:
      000602 E5 81            [12] 2194 	mov	a,sp
      000604 24 FB            [12] 2195 	add	a,#0xfb
      000606 F8               [12] 2196 	mov	r0,a
      000607 B6 03 00         [24] 2197 	cjne	@r0,#0x03,00253$
      00060A                       2198 00253$:
      00060A 40 03            [24] 2199 	jc	00254$
      00060C 02r07rB9         [24] 2200 	ljmp	00182$
      00060F                       2201 00254$:
                                   2202 ;	../../../../platform/cc2530eb/./viztool.c:203: if(uip_ds6_if.addr_list[i].isused) {
      00060F E5 81            [12] 2203 	mov	a,sp
      000611 24 FB            [12] 2204 	add	a,#0xfb
      000613 F8               [12] 2205 	mov	r0,a
      000614 E6               [12] 2206 	mov	a,@r0
      000615 75 F0 1C         [24] 2207 	mov	b,#0x1C
      000618 A4               [48] 2208 	mul	ab
      000619 24r12            [12] 2209 	add	a,#(_uip_ds6_if + 0x0012)
      00061B FA               [12] 2210 	mov	r2,a
      00061C E4               [12] 2211 	clr	a
      00061D 34s00            [12] 2212 	addc	a,#((_uip_ds6_if + 0x0012) >> 8)
      00061F FB               [12] 2213 	mov	r3,a
      000620 8A 82            [24] 2214 	mov	dpl,r2
      000622 8B 83            [24] 2215 	mov	dph,r3
      000624 E0               [24] 2216 	movx	a,@dptr
      000625 70 03            [24] 2217 	jnz	00255$
      000627 02r06rD8         [24] 2218 	ljmp	00150$
      00062A                       2219 00255$:
                                   2220 ;	../../../../platform/cc2530eb/./viztool.c:206: memcpy(buf + len, &i, sizeof(i));
      00062A E5 81            [12] 2221 	mov	a,sp
      00062C 24 FB            [12] 2222 	add	a,#0xFB
      00062E FE               [12] 2223 	mov	r6,a
      00062F 7D 00            [12] 2224 	mov	r5,#0x00
      000631 7A 40            [12] 2225 	mov	r2,#0x40
      000633 E5 81            [12] 2226 	mov	a,sp
      000635 24 F9            [12] 2227 	add	a,#0xf9
      000637 F8               [12] 2228 	mov	r0,a
      000638 E6               [12] 2229 	mov	a,@r0
      000639 24r03            [12] 2230 	add	a,#_buf
      00063B FC               [12] 2231 	mov	r4,a
      00063C E4               [12] 2232 	clr	a
      00063D 34s00            [12] 2233 	addc	a,#(_buf >> 8)
      00063F FF               [12] 2234 	mov	r7,a
      000640 7B 00            [12] 2235 	mov	r3,#0x00
      000642 74 01            [12] 2236 	mov	a,#0x01
      000644 C0 E0            [24] 2237 	push	acc
      000646 E4               [12] 2238 	clr	a
      000647 C0 E0            [24] 2239 	push	acc
      000649 C0 06            [24] 2240 	push	ar6
      00064B C0 05            [24] 2241 	push	ar5
      00064D C0 02            [24] 2242 	push	ar2
      00064F 8C 82            [24] 2243 	mov	dpl,r4
      000651 8F 83            [24] 2244 	mov	dph,r7
      000653 8B F0            [24] 2245 	mov	b,r3
      000655 78r00            [12] 2246 	mov	r0,#_memcpy
      000657 79s00            [12] 2247 	mov	r1,#(_memcpy >> 8)
      000659 7As00            [12] 2248 	mov	r2,#(_memcpy >> 16)
      00065B 12r00r00         [24] 2249 	lcall	__sdcc_banked_call
      00065E E5 81            [12] 2250 	mov	a,sp
      000660 24 FB            [12] 2251 	add	a,#0xfb
                                   2252 ;	../../../../platform/cc2530eb/./viztool.c:207: len += sizeof(i);
      000662 F5 81            [12] 2253 	mov	sp,a
      000664 24 F9            [12] 2254 	add	a,#0xf9
      000666 F8               [12] 2255 	mov	r0,a
      000667 06               [12] 2256 	inc	@r0
                                   2257 ;	../../../../platform/cc2530eb/./viztool.c:208: memcpy(buf + len, &uip_ds6_if.addr_list[i].ipaddr,
      000668 E5 81            [12] 2258 	mov	a,sp
      00066A 24 FB            [12] 2259 	add	a,#0xfb
      00066C F8               [12] 2260 	mov	r0,a
      00066D E6               [12] 2261 	mov	a,@r0
      00066E 75 F0 1C         [24] 2262 	mov	b,#0x1C
      000671 A4               [48] 2263 	mul	ab
      000672 24r12            [12] 2264 	add	a,#(_uip_ds6_if + 0x0012)
      000674 FC               [12] 2265 	mov	r4,a
      000675 E4               [12] 2266 	clr	a
      000676 34s00            [12] 2267 	addc	a,#((_uip_ds6_if + 0x0012) >> 8)
      000678 FF               [12] 2268 	mov	r7,a
      000679 0C               [12] 2269 	inc	r4
      00067A BC 00 01         [24] 2270 	cjne	r4,#0x00,00256$
      00067D 0F               [12] 2271 	inc	r7
      00067E                       2272 00256$:
      00067E 8C 06            [24] 2273 	mov	ar6,r4
      000680 8F 05            [24] 2274 	mov	ar5,r7
      000682 7B 00            [12] 2275 	mov	r3,#0x00
      000684 E5 81            [12] 2276 	mov	a,sp
      000686 24 F9            [12] 2277 	add	a,#0xf9
      000688 F8               [12] 2278 	mov	r0,a
      000689 E6               [12] 2279 	mov	a,@r0
      00068A 24r03            [12] 2280 	add	a,#_buf
      00068C FA               [12] 2281 	mov	r2,a
      00068D E4               [12] 2282 	clr	a
      00068E 34s00            [12] 2283 	addc	a,#(_buf >> 8)
      000690 FF               [12] 2284 	mov	r7,a
      000691 7C 00            [12] 2285 	mov	r4,#0x00
      000693 74 10            [12] 2286 	mov	a,#0x10
      000695 C0 E0            [24] 2287 	push	acc
      000697 E4               [12] 2288 	clr	a
      000698 C0 E0            [24] 2289 	push	acc
      00069A C0 06            [24] 2290 	push	ar6
      00069C C0 05            [24] 2291 	push	ar5
      00069E C0 03            [24] 2292 	push	ar3
      0006A0 8A 82            [24] 2293 	mov	dpl,r2
      0006A2 8F 83            [24] 2294 	mov	dph,r7
      0006A4 8C F0            [24] 2295 	mov	b,r4
      0006A6 78r00            [12] 2296 	mov	r0,#_memcpy
      0006A8 79s00            [12] 2297 	mov	r1,#(_memcpy >> 8)
      0006AA 7As00            [12] 2298 	mov	r2,#(_memcpy >> 16)
      0006AC 12r00r00         [24] 2299 	lcall	__sdcc_banked_call
      0006AF E5 81            [12] 2300 	mov	a,sp
      0006B1 24 FB            [12] 2301 	add	a,#0xfb
                                   2302 ;	../../../../platform/cc2530eb/./viztool.c:210: len += sizeof(uip_ds6_if.addr_list[i].ipaddr);
      0006B3 F5 81            [12] 2303 	mov	sp,a
      0006B5 24 F9            [12] 2304 	add	a,#0xf9
      0006B7 F8               [12] 2305 	mov	r0,a
      0006B8 74 10            [12] 2306 	mov	a,#0x10
      0006BA 26               [12] 2307 	add	a,@r0
      0006BB F6               [12] 2308 	mov	@r0,a
                                   2309 ;	../../../../platform/cc2530eb/./viztool.c:214: count++;
      0006BC E5 81            [12] 2310 	mov	a,sp
      0006BE 24 FA            [12] 2311 	add	a,#0xfa
      0006C0 F8               [12] 2312 	mov	r0,a
      0006C1 06               [12] 2313 	inc	@r0
                                   2314 ;	../../../../platform/cc2530eb/./viztool.c:215: left -= entry_size;
      0006C2 E5 81            [12] 2315 	mov	a,sp
      0006C4 24 FC            [12] 2316 	add	a,#0xfc
      0006C6 F8               [12] 2317 	mov	r0,a
      0006C7 E6               [12] 2318 	mov	a,@r0
      0006C8 24 EF            [12] 2319 	add	a,#0xEF
      0006CA F6               [12] 2320 	mov	@r0,a
                                   2321 ;	../../../../platform/cc2530eb/./viztool.c:217: if(left < entry_size) {
      0006CB E5 81            [12] 2322 	mov	a,sp
      0006CD 24 FC            [12] 2323 	add	a,#0xfc
      0006CF F8               [12] 2324 	mov	r0,a
      0006D0 B6 11 00         [24] 2325 	cjne	@r0,#0x11,00257$
      0006D3                       2326 00257$:
      0006D3 50 03            [24] 2327 	jnc	00258$
      0006D5 02r07rB9         [24] 2328 	ljmp	00182$
      0006D8                       2329 00258$:
                                   2330 ;	../../../../platform/cc2530eb/./viztool.c:218: break;
      0006D8                       2331 00150$:
                                   2332 ;	../../../../platform/cc2530eb/./viztool.c:202: for(i = buf[1]; i < UIP_DS6_ADDR_NB; i++) {
      0006D8 E5 81            [12] 2333 	mov	a,sp
      0006DA 24 FB            [12] 2334 	add	a,#0xfb
      0006DC F8               [12] 2335 	mov	r0,a
      0006DD 06               [12] 2336 	inc	@r0
      0006DE 02r06r02         [24] 2337 	ljmp	00149$
      0006E1                       2338 00131$:
                                   2339 ;	../../../../platform/cc2530eb/./viztool.c:222: } else if(buf[0] == REQUEST_TYPE_TOTALS) {
      0006E1 BD FF 02         [24] 2340 	cjne	r5,#0xFF,00259$
      0006E4 80 03            [24] 2341 	sjmp	00260$
      0006E6                       2342 00259$:
      0006E6 02r07rA2         [24] 2343 	ljmp	00128$
      0006E9                       2344 00260$:
                                   2345 ;	../../../../platform/cc2530eb/./viztool.c:223: memset(&buf[2], 0, 4);
      0006E9 74 04            [12] 2346 	mov	a,#0x04
      0006EB C0 E0            [24] 2347 	push	acc
      0006ED E4               [12] 2348 	clr	a
      0006EE C0 E0            [24] 2349 	push	acc
      0006F0 E4               [12] 2350 	clr	a
      0006F1 C0 E0            [24] 2351 	push	acc
      0006F3 90r00r05         [24] 2352 	mov	dptr,#(_buf + 0x0002)
      0006F6 75 F0 00         [24] 2353 	mov	b,#0x00
      0006F9 78r00            [12] 2354 	mov	r0,#_memset
      0006FB 79s00            [12] 2355 	mov	r1,#(_memset >> 8)
      0006FD 7As00            [12] 2356 	mov	r2,#(_memset >> 16)
      0006FF 12r00r00         [24] 2357 	lcall	__sdcc_banked_call
      000702 15 81            [12] 2358 	dec	sp
      000704 15 81            [12] 2359 	dec	sp
      000706 15 81            [12] 2360 	dec	sp
                                   2361 ;	../../../../platform/cc2530eb/./viztool.c:224: for(i = 0; i < UIP_DS6_ADDR_NB; i++) {
      000708 E5 81            [12] 2362 	mov	a,sp
      00070A 24 FB            [12] 2363 	add	a,#0xfb
      00070C F8               [12] 2364 	mov	r0,a
      00070D 76 00            [12] 2365 	mov	@r0,#0x00
      00070F 7F 00            [12] 2366 	mov	r7,#0x00
      000711                       2367 00151$:
                                   2368 ;	../../../../platform/cc2530eb/./viztool.c:225: if(uip_ds6_if.addr_list[i].isused) {
      000711 EF               [12] 2369 	mov	a,r7
      000712 75 F0 1C         [24] 2370 	mov	b,#0x1C
      000715 A4               [48] 2371 	mul	ab
      000716 24r12            [12] 2372 	add	a,#(_uip_ds6_if + 0x0012)
      000718 FC               [12] 2373 	mov	r4,a
      000719 E4               [12] 2374 	clr	a
      00071A 34s00            [12] 2375 	addc	a,#((_uip_ds6_if + 0x0012) >> 8)
      00071C FD               [12] 2376 	mov	r5,a
      00071D 8C 82            [24] 2377 	mov	dpl,r4
      00071F 8D 83            [24] 2378 	mov	dph,r5
      000721 E0               [24] 2379 	movx	a,@dptr
      000722 60 0B            [24] 2380 	jz	00152$
                                   2381 ;	../../../../platform/cc2530eb/./viztool.c:226: buf[2]++;
      000724 90r00r05         [24] 2382 	mov	dptr,#(_buf + 0x0002)
      000727 E0               [24] 2383 	movx	a,@dptr
      000728 FD               [12] 2384 	mov	r5,a
      000729 0D               [12] 2385 	inc	r5
      00072A 90r00r05         [24] 2386 	mov	dptr,#(_buf + 0x0002)
      00072D ED               [12] 2387 	mov	a,r5
      00072E F0               [24] 2388 	movx	@dptr,a
      00072F                       2389 00152$:
                                   2390 ;	../../../../platform/cc2530eb/./viztool.c:224: for(i = 0; i < UIP_DS6_ADDR_NB; i++) {
      00072F 0F               [12] 2391 	inc	r7
      000730 E5 81            [12] 2392 	mov	a,sp
      000732 24 FB            [12] 2393 	add	a,#0xfb
      000734 F8               [12] 2394 	mov	r0,a
      000735 A6 07            [24] 2395 	mov	@r0,ar7
      000737 BF 03 00         [24] 2396 	cjne	r7,#0x03,00262$
      00073A                       2397 00262$:
      00073A 40 D5            [24] 2398 	jc	00151$
                                   2399 ;	../../../../platform/cc2530eb/./viztool.c:229: for(i = 0; i < UIP_DS6_NBR_NB; i++) {
      00073C E5 81            [12] 2400 	mov	a,sp
      00073E 24 FB            [12] 2401 	add	a,#0xfb
      000740 F8               [12] 2402 	mov	r0,a
      000741 A6 07            [24] 2403 	mov	@r0,ar7
      000743 E5 81            [12] 2404 	mov	a,sp
      000745 24 FB            [12] 2405 	add	a,#0xfb
      000747 F8               [12] 2406 	mov	r0,a
      000748 76 00            [12] 2407 	mov	@r0,#0x00
      00074A 7F 00            [12] 2408 	mov	r7,#0x00
      00074C                       2409 00153$:
                                   2410 ;	../../../../platform/cc2530eb/./viztool.c:230: if(uip_ds6_nbr_cache[i].isused) {
      00074C EF               [12] 2411 	mov	a,r7
      00074D 75 F0 2E         [24] 2412 	mov	b,#0x2E
      000750 A4               [48] 2413 	mul	ab
      000751 24r00            [12] 2414 	add	a,#_uip_ds6_nbr_cache
      000753 FC               [12] 2415 	mov	r4,a
      000754 74s00            [12] 2416 	mov	a,#(_uip_ds6_nbr_cache >> 8)
      000756 35 F0            [12] 2417 	addc	a,b
      000758 FD               [12] 2418 	mov	r5,a
      000759 8C 82            [24] 2419 	mov	dpl,r4
      00075B 8D 83            [24] 2420 	mov	dph,r5
      00075D E0               [24] 2421 	movx	a,@dptr
      00075E 60 0B            [24] 2422 	jz	00154$
                                   2423 ;	../../../../platform/cc2530eb/./viztool.c:231: buf[3]++;
      000760 90r00r06         [24] 2424 	mov	dptr,#(_buf + 0x0003)
      000763 E0               [24] 2425 	movx	a,@dptr
      000764 FD               [12] 2426 	mov	r5,a
      000765 0D               [12] 2427 	inc	r5
      000766 90r00r06         [24] 2428 	mov	dptr,#(_buf + 0x0003)
      000769 ED               [12] 2429 	mov	a,r5
      00076A F0               [24] 2430 	movx	@dptr,a
      00076B                       2431 00154$:
                                   2432 ;	../../../../platform/cc2530eb/./viztool.c:229: for(i = 0; i < UIP_DS6_NBR_NB; i++) {
      00076B 0F               [12] 2433 	inc	r7
      00076C E5 81            [12] 2434 	mov	a,sp
      00076E 24 FB            [12] 2435 	add	a,#0xfb
      000770 F8               [12] 2436 	mov	r0,a
      000771 A6 07            [24] 2437 	mov	@r0,ar7
      000773 BF 04 00         [24] 2438 	cjne	r7,#0x04,00265$
      000776                       2439 00265$:
      000776 40 D4            [24] 2440 	jc	00153$
                                   2441 ;	../../../../platform/cc2530eb/./viztool.c:235: buf[4] = uip_ds6_route_num_routes();
      000778 E5 81            [12] 2442 	mov	a,sp
      00077A 24 FB            [12] 2443 	add	a,#0xfb
      00077C F8               [12] 2444 	mov	r0,a
      00077D A6 07            [24] 2445 	mov	@r0,ar7
      00077F 78r00            [12] 2446 	mov	r0,#_uip_ds6_route_num_routes
      000781 79s00            [12] 2447 	mov	r1,#(_uip_ds6_route_num_routes >> 8)
      000783 7As00            [12] 2448 	mov	r2,#(_uip_ds6_route_num_routes >> 16)
      000785 12r00r00         [24] 2449 	lcall	__sdcc_banked_call
      000788 AD 82            [24] 2450 	mov	r5,dpl
      00078A AF 83            [24] 2451 	mov	r7,dph
      00078C 90r00r07         [24] 2452 	mov	dptr,#(_buf + 0x0004)
      00078F ED               [12] 2453 	mov	a,r5
      000790 F0               [24] 2454 	movx	@dptr,a
                                   2455 ;	../../../../platform/cc2530eb/./viztool.c:236: buf[5] = 1;
      000791 90r00r08         [24] 2456 	mov	dptr,#(_buf + 0x0005)
      000794 74 01            [12] 2457 	mov	a,#0x01
      000796 F0               [24] 2458 	movx	@dptr,a
                                   2459 ;	../../../../platform/cc2530eb/./viztool.c:238: len += 4;
      000797 E5 81            [12] 2460 	mov	a,sp
      000799 24 F9            [12] 2461 	add	a,#0xf9
      00079B F8               [12] 2462 	mov	r0,a
      00079C 76 06            [12] 2463 	mov	@r0,#0x06
                                   2464 ;	../../../../platform/cc2530eb/./viztool.c:239: count = 4;
      00079E 7E 04            [12] 2465 	mov	r6,#0x04
      0007A0 80 1E            [24] 2466 	sjmp	00141$
      0007A2                       2467 00128$:
                                   2468 ;	../../../../platform/cc2530eb/./viztool.c:241: return 0;
      0007A2 75 82 00         [24] 2469 	mov	dpl,#0x00
      0007A5 80 25            [24] 2470 	sjmp	00155$
      0007A7                       2471 00180$:
      0007A7 E5 81            [12] 2472 	mov	a,sp
      0007A9 24 FA            [12] 2473 	add	a,#0xfa
      0007AB F8               [12] 2474 	mov	r0,a
      0007AC 86 06            [24] 2475 	mov	ar6,@r0
                                   2476 ;	../../../../platform/cc2530eb/./viztool.c:244: return len;
                                   2477 ;	../../../../platform/cc2530eb/./viztool.c:241: return 0;
      0007AE 80 10            [24] 2478 	sjmp	00141$
      0007B0                       2479 00181$:
      0007B0 E5 81            [12] 2480 	mov	a,sp
      0007B2 24 FA            [12] 2481 	add	a,#0xfa
      0007B4 F8               [12] 2482 	mov	r0,a
      0007B5 86 06            [24] 2483 	mov	ar6,@r0
                                   2484 ;	../../../../platform/cc2530eb/./viztool.c:244: return len;
                                   2485 ;	../../../../platform/cc2530eb/./viztool.c:241: return 0;
      0007B7 80 07            [24] 2486 	sjmp	00141$
      0007B9                       2487 00182$:
      0007B9 E5 81            [12] 2488 	mov	a,sp
      0007BB 24 FA            [12] 2489 	add	a,#0xfa
      0007BD F8               [12] 2490 	mov	r0,a
      0007BE 86 06            [24] 2491 	mov	ar6,@r0
      0007C0                       2492 00141$:
                                   2493 ;	../../../../platform/cc2530eb/./viztool.c:243: buf[1] = count;
      0007C0 90r00r04         [24] 2494 	mov	dptr,#(_buf + 0x0001)
      0007C3 EE               [12] 2495 	mov	a,r6
      0007C4 F0               [24] 2496 	movx	@dptr,a
                                   2497 ;	../../../../platform/cc2530eb/./viztool.c:244: return len;
      0007C5 E5 81            [12] 2498 	mov	a,sp
      0007C7 24 F9            [12] 2499 	add	a,#0xf9
      0007C9 F8               [12] 2500 	mov	r0,a
      0007CA 86 82            [24] 2501 	mov	dpl,@r0
      0007CC                       2502 00155$:
      0007CC E5 81            [12] 2503 	mov	a,sp
      0007CE 24 F8            [12] 2504 	add	a,#0xF8
      0007D0 F5 81            [12] 2505 	mov	sp,a
      0007D2 22               [24] 2506 	ret
                                   2507 ;------------------------------------------------------------
                                   2508 ;Allocation info for local variables in function 'tcpip_handler'
                                   2509 ;------------------------------------------------------------
                                   2510 ;	../../../../platform/cc2530eb/./viztool.c:250: tcpip_handler(void) CC_NON_BANKED
                                   2511 ;	-----------------------------------------
                                   2512 ;	 function tcpip_handler
                                   2513 ;	-----------------------------------------
      0007D3                       2514 _tcpip_handler:
                                   2515 ;	../../../../platform/cc2530eb/./viztool.c:252: if(uip_newdata()) {
      0007D3 90r00r00         [24] 2516 	mov	dptr,#_uip_flags
      0007D6 E0               [24] 2517 	movx	a,@dptr
      0007D7 FF               [12] 2518 	mov	r7,a
      0007D8 20 E1 01         [24] 2519 	jb	acc.1,00116$
      0007DB 22               [24] 2520 	ret
      0007DC                       2521 00116$:
                                   2522 ;	../../../../platform/cc2530eb/./viztool.c:253: memset(buf, 0, VIZTOOL_MAX_PAYLOAD_LEN);
      0007DC 74 3C            [12] 2523 	mov	a,#0x3C
      0007DE C0 E0            [24] 2524 	push	acc
      0007E0 E4               [12] 2525 	clr	a
      0007E1 C0 E0            [24] 2526 	push	acc
      0007E3 E4               [12] 2527 	clr	a
      0007E4 C0 E0            [24] 2528 	push	acc
      0007E6 90r00r03         [24] 2529 	mov	dptr,#_buf
      0007E9 75 F0 00         [24] 2530 	mov	b,#0x00
      0007EC 78r00            [12] 2531 	mov	r0,#_memset
      0007EE 79s00            [12] 2532 	mov	r1,#(_memset >> 8)
      0007F0 7As00            [12] 2533 	mov	r2,#(_memset >> 16)
      0007F2 12r00r00         [24] 2534 	lcall	__sdcc_banked_call
      0007F5 15 81            [12] 2535 	dec	sp
      0007F7 15 81            [12] 2536 	dec	sp
      0007F9 15 81            [12] 2537 	dec	sp
                                   2538 ;	../../../../platform/cc2530eb/./viztool.c:259: memcpy(buf, uip_appdata, uip_datalen());
      0007FB 90r00r00         [24] 2539 	mov	dptr,#_uip_len
      0007FE E0               [24] 2540 	movx	a,@dptr
      0007FF C0 E0            [24] 2541 	push	acc
      000801 A3               [24] 2542 	inc	dptr
      000802 E0               [24] 2543 	movx	a,@dptr
      000803 C0 E0            [24] 2544 	push	acc
      000805 90r00r00         [24] 2545 	mov	dptr,#_uip_appdata
      000808 E0               [24] 2546 	movx	a,@dptr
      000809 C0 E0            [24] 2547 	push	acc
      00080B A3               [24] 2548 	inc	dptr
      00080C E0               [24] 2549 	movx	a,@dptr
      00080D C0 E0            [24] 2550 	push	acc
      00080F A3               [24] 2551 	inc	dptr
      000810 E0               [24] 2552 	movx	a,@dptr
      000811 C0 E0            [24] 2553 	push	acc
      000813 90r00r03         [24] 2554 	mov	dptr,#_buf
      000816 75 F0 00         [24] 2555 	mov	b,#0x00
      000819 78r00            [12] 2556 	mov	r0,#_memcpy
      00081B 79s00            [12] 2557 	mov	r1,#(_memcpy >> 8)
      00081D 7As00            [12] 2558 	mov	r2,#(_memcpy >> 16)
      00081F 12r00r00         [24] 2559 	lcall	__sdcc_banked_call
      000822 E5 81            [12] 2560 	mov	a,sp
      000824 24 FB            [12] 2561 	add	a,#0xfb
      000826 F5 81            [12] 2562 	mov	sp,a
                                   2563 ;	../../../../platform/cc2530eb/./viztool.c:261: len = process_request();
      000828 12r00r00         [24] 2564 	lcall	_process_request
      00082B AF 82            [24] 2565 	mov	r7,dpl
      00082D 90r00r3F         [24] 2566 	mov	dptr,#_len
      000830 EF               [12] 2567 	mov	a,r7
      000831 F0               [24] 2568 	movx	@dptr,a
                                   2569 ;	../../../../platform/cc2530eb/./viztool.c:262: if(len) {
      000832 EF               [12] 2570 	mov	a,r7
      000833 70 03            [24] 2571 	jnz	00117$
      000835 02r08rE1         [24] 2572 	ljmp	00103$
      000838                       2573 00117$:
                                   2574 ;	../../../../platform/cc2530eb/./viztool.c:263: server_conn->rport = UIP_UDP_BUF->srcport;
      000838 90r00r00         [24] 2575 	mov	dptr,#_server_conn
      00083B E0               [24] 2576 	movx	a,@dptr
      00083C FD               [12] 2577 	mov	r5,a
      00083D A3               [24] 2578 	inc	dptr
      00083E E0               [24] 2579 	movx	a,@dptr
      00083F FE               [12] 2580 	mov	r6,a
      000840 A3               [24] 2581 	inc	dptr
      000841 E0               [24] 2582 	movx	a,@dptr
      000842 FF               [12] 2583 	mov	r7,a
      000843 74 12            [12] 2584 	mov	a,#0x12
      000845 2D               [12] 2585 	add	a,r5
      000846 FD               [12] 2586 	mov	r5,a
      000847 E4               [12] 2587 	clr	a
      000848 3E               [12] 2588 	addc	a,r6
      000849 FE               [12] 2589 	mov	r6,a
      00084A 90r00r00         [24] 2590 	mov	dptr,#_uip_ext_len
      00084D E0               [24] 2591 	movx	a,@dptr
      00084E 24 28            [12] 2592 	add	a,#0x28
      000850 24r00            [12] 2593 	add	a,#_uip_aligned_buf
      000852 FB               [12] 2594 	mov	r3,a
      000853 E4               [12] 2595 	clr	a
      000854 34s00            [12] 2596 	addc	a,#(_uip_aligned_buf >> 8)
      000856 FC               [12] 2597 	mov	r4,a
      000857 8B 82            [24] 2598 	mov	dpl,r3
      000859 8C 83            [24] 2599 	mov	dph,r4
      00085B E0               [24] 2600 	movx	a,@dptr
      00085C FB               [12] 2601 	mov	r3,a
      00085D A3               [24] 2602 	inc	dptr
      00085E E0               [24] 2603 	movx	a,@dptr
      00085F FC               [12] 2604 	mov	r4,a
      000860 8D 82            [24] 2605 	mov	dpl,r5
      000862 8E 83            [24] 2606 	mov	dph,r6
      000864 8F F0            [24] 2607 	mov	b,r7
      000866 EB               [12] 2608 	mov	a,r3
      000867 12r00r00         [24] 2609 	lcall	__gptrput
      00086A A3               [24] 2610 	inc	dptr
      00086B EC               [12] 2611 	mov	a,r4
      00086C 12r00r00         [24] 2612 	lcall	__gptrput
                                   2613 ;	../../../../platform/cc2530eb/./viztool.c:264: uip_ipaddr_copy(&server_conn->ripaddr, &UIP_IP_BUF->srcipaddr);
      00086F 7Er00            [12] 2614 	mov	r6,#_uip_aligned_buf
      000871 7Fs00            [12] 2615 	mov	r7,#(_uip_aligned_buf >> 8)
      000873 74 08            [12] 2616 	mov	a,#0x08
      000875 2E               [12] 2617 	add	a,r6
      000876 FE               [12] 2618 	mov	r6,a
      000877 E4               [12] 2619 	clr	a
      000878 3F               [12] 2620 	addc	a,r7
      000879 FF               [12] 2621 	mov	r7,a
      00087A 7D 00            [12] 2622 	mov	r5,#0x00
      00087C 90r00r00         [24] 2623 	mov	dptr,#_server_conn
      00087F E0               [24] 2624 	movx	a,@dptr
      000880 FA               [12] 2625 	mov	r2,a
      000881 A3               [24] 2626 	inc	dptr
      000882 E0               [24] 2627 	movx	a,@dptr
      000883 FB               [12] 2628 	mov	r3,a
      000884 A3               [24] 2629 	inc	dptr
      000885 E0               [24] 2630 	movx	a,@dptr
      000886 FC               [12] 2631 	mov	r4,a
      000887 74 10            [12] 2632 	mov	a,#0x10
      000889 C0 E0            [24] 2633 	push	acc
      00088B E4               [12] 2634 	clr	a
      00088C C0 E0            [24] 2635 	push	acc
      00088E C0 06            [24] 2636 	push	ar6
      000890 C0 07            [24] 2637 	push	ar7
      000892 C0 05            [24] 2638 	push	ar5
      000894 8A 82            [24] 2639 	mov	dpl,r2
      000896 8B 83            [24] 2640 	mov	dph,r3
      000898 8C F0            [24] 2641 	mov	b,r4
      00089A 78r00            [12] 2642 	mov	r0,#_memcpy
      00089C 79s00            [12] 2643 	mov	r1,#(_memcpy >> 8)
      00089E 7As00            [12] 2644 	mov	r2,#(_memcpy >> 16)
      0008A0 12r00r00         [24] 2645 	lcall	__sdcc_banked_call
      0008A3 E5 81            [12] 2646 	mov	a,sp
      0008A5 24 FB            [12] 2647 	add	a,#0xfb
      0008A7 F5 81            [12] 2648 	mov	sp,a
                                   2649 ;	../../../../platform/cc2530eb/./viztool.c:265: uip_udp_packet_send(server_conn, buf, len);
      0008A9 90r00r3F         [24] 2650 	mov	dptr,#_len
      0008AC E0               [24] 2651 	movx	a,@dptr
      0008AD FF               [12] 2652 	mov	r7,a
      0008AE 33               [12] 2653 	rlc	a
      0008AF 95 E0            [12] 2654 	subb	a,acc
      0008B1 FE               [12] 2655 	mov	r6,a
      0008B2 90r00r00         [24] 2656 	mov	dptr,#_server_conn
      0008B5 E0               [24] 2657 	movx	a,@dptr
      0008B6 FB               [12] 2658 	mov	r3,a
      0008B7 A3               [24] 2659 	inc	dptr
      0008B8 E0               [24] 2660 	movx	a,@dptr
      0008B9 FC               [12] 2661 	mov	r4,a
      0008BA A3               [24] 2662 	inc	dptr
      0008BB E0               [24] 2663 	movx	a,@dptr
      0008BC FD               [12] 2664 	mov	r5,a
      0008BD C0 07            [24] 2665 	push	ar7
      0008BF C0 06            [24] 2666 	push	ar6
      0008C1 74r03            [12] 2667 	mov	a,#_buf
      0008C3 C0 E0            [24] 2668 	push	acc
      0008C5 74s00            [12] 2669 	mov	a,#(_buf >> 8)
      0008C7 C0 E0            [24] 2670 	push	acc
      0008C9 E4               [12] 2671 	clr	a
      0008CA C0 E0            [24] 2672 	push	acc
      0008CC 8B 82            [24] 2673 	mov	dpl,r3
      0008CE 8C 83            [24] 2674 	mov	dph,r4
      0008D0 8D F0            [24] 2675 	mov	b,r5
      0008D2 78r00            [12] 2676 	mov	r0,#_uip_udp_packet_send
      0008D4 79s00            [12] 2677 	mov	r1,#(_uip_udp_packet_send >> 8)
      0008D6 7As00            [12] 2678 	mov	r2,#(_uip_udp_packet_send >> 16)
      0008D8 12r00r00         [24] 2679 	lcall	__sdcc_banked_call
      0008DB E5 81            [12] 2680 	mov	a,sp
      0008DD 24 FB            [12] 2681 	add	a,#0xfb
      0008DF F5 81            [12] 2682 	mov	sp,a
                                   2683 ;	../../../../platform/cc2530eb/./viztool.c:270: uip_create_unspecified(&server_conn->ripaddr);
      0008E1                       2684 00103$:
      0008E1 90r00r00         [24] 2685 	mov	dptr,#_server_conn
      0008E4 E0               [24] 2686 	movx	a,@dptr
      0008E5 FD               [12] 2687 	mov	r5,a
      0008E6 A3               [24] 2688 	inc	dptr
      0008E7 E0               [24] 2689 	movx	a,@dptr
      0008E8 FE               [12] 2690 	mov	r6,a
      0008E9 A3               [24] 2691 	inc	dptr
      0008EA E0               [24] 2692 	movx	a,@dptr
      0008EB FF               [12] 2693 	mov	r7,a
      0008EC 8D 82            [24] 2694 	mov	dpl,r5
      0008EE 8E 83            [24] 2695 	mov	dph,r6
      0008F0 8F F0            [24] 2696 	mov	b,r7
      0008F2 E4               [12] 2697 	clr	a
      0008F3 12r00r00         [24] 2698 	lcall	__gptrput
      0008F6 A3               [24] 2699 	inc	dptr
      0008F7 E4               [12] 2700 	clr	a
      0008F8 12r00r00         [24] 2701 	lcall	__gptrput
      0008FB 90r00r00         [24] 2702 	mov	dptr,#_server_conn
      0008FE E0               [24] 2703 	movx	a,@dptr
      0008FF FD               [12] 2704 	mov	r5,a
      000900 A3               [24] 2705 	inc	dptr
      000901 E0               [24] 2706 	movx	a,@dptr
      000902 FE               [12] 2707 	mov	r6,a
      000903 A3               [24] 2708 	inc	dptr
      000904 E0               [24] 2709 	movx	a,@dptr
      000905 FF               [12] 2710 	mov	r7,a
      000906 74 02            [12] 2711 	mov	a,#0x02
      000908 2D               [12] 2712 	add	a,r5
      000909 FD               [12] 2713 	mov	r5,a
      00090A E4               [12] 2714 	clr	a
      00090B 3E               [12] 2715 	addc	a,r6
      00090C FE               [12] 2716 	mov	r6,a
      00090D 8D 82            [24] 2717 	mov	dpl,r5
      00090F 8E 83            [24] 2718 	mov	dph,r6
      000911 8F F0            [24] 2719 	mov	b,r7
      000913 E4               [12] 2720 	clr	a
      000914 12r00r00         [24] 2721 	lcall	__gptrput
      000917 A3               [24] 2722 	inc	dptr
      000918 E4               [12] 2723 	clr	a
      000919 12r00r00         [24] 2724 	lcall	__gptrput
      00091C 90r00r00         [24] 2725 	mov	dptr,#_server_conn
      00091F E0               [24] 2726 	movx	a,@dptr
      000920 FD               [12] 2727 	mov	r5,a
      000921 A3               [24] 2728 	inc	dptr
      000922 E0               [24] 2729 	movx	a,@dptr
      000923 FE               [12] 2730 	mov	r6,a
      000924 A3               [24] 2731 	inc	dptr
      000925 E0               [24] 2732 	movx	a,@dptr
      000926 FF               [12] 2733 	mov	r7,a
      000927 74 04            [12] 2734 	mov	a,#0x04
      000929 2D               [12] 2735 	add	a,r5
      00092A FD               [12] 2736 	mov	r5,a
      00092B E4               [12] 2737 	clr	a
      00092C 3E               [12] 2738 	addc	a,r6
      00092D FE               [12] 2739 	mov	r6,a
      00092E 8D 82            [24] 2740 	mov	dpl,r5
      000930 8E 83            [24] 2741 	mov	dph,r6
      000932 8F F0            [24] 2742 	mov	b,r7
      000934 E4               [12] 2743 	clr	a
      000935 12r00r00         [24] 2744 	lcall	__gptrput
      000938 A3               [24] 2745 	inc	dptr
      000939 E4               [12] 2746 	clr	a
      00093A 12r00r00         [24] 2747 	lcall	__gptrput
      00093D 90r00r00         [24] 2748 	mov	dptr,#_server_conn
      000940 E0               [24] 2749 	movx	a,@dptr
      000941 FD               [12] 2750 	mov	r5,a
      000942 A3               [24] 2751 	inc	dptr
      000943 E0               [24] 2752 	movx	a,@dptr
      000944 FE               [12] 2753 	mov	r6,a
      000945 A3               [24] 2754 	inc	dptr
      000946 E0               [24] 2755 	movx	a,@dptr
      000947 FF               [12] 2756 	mov	r7,a
      000948 74 06            [12] 2757 	mov	a,#0x06
      00094A 2D               [12] 2758 	add	a,r5
      00094B FD               [12] 2759 	mov	r5,a
      00094C E4               [12] 2760 	clr	a
      00094D 3E               [12] 2761 	addc	a,r6
      00094E FE               [12] 2762 	mov	r6,a
      00094F 8D 82            [24] 2763 	mov	dpl,r5
      000951 8E 83            [24] 2764 	mov	dph,r6
      000953 8F F0            [24] 2765 	mov	b,r7
      000955 E4               [12] 2766 	clr	a
      000956 12r00r00         [24] 2767 	lcall	__gptrput
      000959 A3               [24] 2768 	inc	dptr
      00095A E4               [12] 2769 	clr	a
      00095B 12r00r00         [24] 2770 	lcall	__gptrput
      00095E 90r00r00         [24] 2771 	mov	dptr,#_server_conn
      000961 E0               [24] 2772 	movx	a,@dptr
      000962 FD               [12] 2773 	mov	r5,a
      000963 A3               [24] 2774 	inc	dptr
      000964 E0               [24] 2775 	movx	a,@dptr
      000965 FE               [12] 2776 	mov	r6,a
      000966 A3               [24] 2777 	inc	dptr
      000967 E0               [24] 2778 	movx	a,@dptr
      000968 FF               [12] 2779 	mov	r7,a
      000969 74 08            [12] 2780 	mov	a,#0x08
      00096B 2D               [12] 2781 	add	a,r5
      00096C FD               [12] 2782 	mov	r5,a
      00096D E4               [12] 2783 	clr	a
      00096E 3E               [12] 2784 	addc	a,r6
      00096F FE               [12] 2785 	mov	r6,a
      000970 8D 82            [24] 2786 	mov	dpl,r5
      000972 8E 83            [24] 2787 	mov	dph,r6
      000974 8F F0            [24] 2788 	mov	b,r7
      000976 E4               [12] 2789 	clr	a
      000977 12r00r00         [24] 2790 	lcall	__gptrput
      00097A A3               [24] 2791 	inc	dptr
      00097B E4               [12] 2792 	clr	a
      00097C 12r00r00         [24] 2793 	lcall	__gptrput
      00097F 90r00r00         [24] 2794 	mov	dptr,#_server_conn
      000982 E0               [24] 2795 	movx	a,@dptr
      000983 FD               [12] 2796 	mov	r5,a
      000984 A3               [24] 2797 	inc	dptr
      000985 E0               [24] 2798 	movx	a,@dptr
      000986 FE               [12] 2799 	mov	r6,a
      000987 A3               [24] 2800 	inc	dptr
      000988 E0               [24] 2801 	movx	a,@dptr
      000989 FF               [12] 2802 	mov	r7,a
      00098A 74 0A            [12] 2803 	mov	a,#0x0A
      00098C 2D               [12] 2804 	add	a,r5
      00098D FD               [12] 2805 	mov	r5,a
      00098E E4               [12] 2806 	clr	a
      00098F 3E               [12] 2807 	addc	a,r6
      000990 FE               [12] 2808 	mov	r6,a
      000991 8D 82            [24] 2809 	mov	dpl,r5
      000993 8E 83            [24] 2810 	mov	dph,r6
      000995 8F F0            [24] 2811 	mov	b,r7
      000997 E4               [12] 2812 	clr	a
      000998 12r00r00         [24] 2813 	lcall	__gptrput
      00099B A3               [24] 2814 	inc	dptr
      00099C E4               [12] 2815 	clr	a
      00099D 12r00r00         [24] 2816 	lcall	__gptrput
      0009A0 90r00r00         [24] 2817 	mov	dptr,#_server_conn
      0009A3 E0               [24] 2818 	movx	a,@dptr
      0009A4 FD               [12] 2819 	mov	r5,a
      0009A5 A3               [24] 2820 	inc	dptr
      0009A6 E0               [24] 2821 	movx	a,@dptr
      0009A7 FE               [12] 2822 	mov	r6,a
      0009A8 A3               [24] 2823 	inc	dptr
      0009A9 E0               [24] 2824 	movx	a,@dptr
      0009AA FF               [12] 2825 	mov	r7,a
      0009AB 74 0C            [12] 2826 	mov	a,#0x0C
      0009AD 2D               [12] 2827 	add	a,r5
      0009AE FD               [12] 2828 	mov	r5,a
      0009AF E4               [12] 2829 	clr	a
      0009B0 3E               [12] 2830 	addc	a,r6
      0009B1 FE               [12] 2831 	mov	r6,a
      0009B2 8D 82            [24] 2832 	mov	dpl,r5
      0009B4 8E 83            [24] 2833 	mov	dph,r6
      0009B6 8F F0            [24] 2834 	mov	b,r7
      0009B8 E4               [12] 2835 	clr	a
      0009B9 12r00r00         [24] 2836 	lcall	__gptrput
      0009BC A3               [24] 2837 	inc	dptr
      0009BD E4               [12] 2838 	clr	a
      0009BE 12r00r00         [24] 2839 	lcall	__gptrput
      0009C1 90r00r00         [24] 2840 	mov	dptr,#_server_conn
      0009C4 E0               [24] 2841 	movx	a,@dptr
      0009C5 FD               [12] 2842 	mov	r5,a
      0009C6 A3               [24] 2843 	inc	dptr
      0009C7 E0               [24] 2844 	movx	a,@dptr
      0009C8 FE               [12] 2845 	mov	r6,a
      0009C9 A3               [24] 2846 	inc	dptr
      0009CA E0               [24] 2847 	movx	a,@dptr
      0009CB FF               [12] 2848 	mov	r7,a
      0009CC 74 0E            [12] 2849 	mov	a,#0x0E
      0009CE 2D               [12] 2850 	add	a,r5
      0009CF FD               [12] 2851 	mov	r5,a
      0009D0 E4               [12] 2852 	clr	a
      0009D1 3E               [12] 2853 	addc	a,r6
      0009D2 FE               [12] 2854 	mov	r6,a
      0009D3 8D 82            [24] 2855 	mov	dpl,r5
      0009D5 8E 83            [24] 2856 	mov	dph,r6
      0009D7 8F F0            [24] 2857 	mov	b,r7
      0009D9 E4               [12] 2858 	clr	a
      0009DA 12r00r00         [24] 2859 	lcall	__gptrput
      0009DD A3               [24] 2860 	inc	dptr
      0009DE E4               [12] 2861 	clr	a
      0009DF 12r00r00         [24] 2862 	lcall	__gptrput
                                   2863 ;	../../../../platform/cc2530eb/./viztool.c:271: server_conn->rport = 0;
      0009E2 90r00r00         [24] 2864 	mov	dptr,#_server_conn
      0009E5 E0               [24] 2865 	movx	a,@dptr
      0009E6 FD               [12] 2866 	mov	r5,a
      0009E7 A3               [24] 2867 	inc	dptr
      0009E8 E0               [24] 2868 	movx	a,@dptr
      0009E9 FE               [12] 2869 	mov	r6,a
      0009EA A3               [24] 2870 	inc	dptr
      0009EB E0               [24] 2871 	movx	a,@dptr
      0009EC FF               [12] 2872 	mov	r7,a
      0009ED 74 12            [12] 2873 	mov	a,#0x12
      0009EF 2D               [12] 2874 	add	a,r5
      0009F0 FD               [12] 2875 	mov	r5,a
      0009F1 E4               [12] 2876 	clr	a
      0009F2 3E               [12] 2877 	addc	a,r6
      0009F3 FE               [12] 2878 	mov	r6,a
      0009F4 8D 82            [24] 2879 	mov	dpl,r5
      0009F6 8E 83            [24] 2880 	mov	dph,r6
      0009F8 8F F0            [24] 2881 	mov	b,r7
      0009FA E4               [12] 2882 	clr	a
      0009FB 12r00r00         [24] 2883 	lcall	__gptrput
      0009FE A3               [24] 2884 	inc	dptr
      0009FF E4               [12] 2885 	clr	a
                                   2886 ;	../../../../platform/cc2530eb/./viztool.c:273: return;
      000A00 02r00r00         [24] 2887 	ljmp	__gptrput
                                   2888 ;------------------------------------------------------------
                                   2889 ;Allocation info for local variables in function 'process_thread_viztool_process'
                                   2890 ;------------------------------------------------------------
                                   2891 ;ev                        Allocated to stack - sp -3
                                   2892 ;data                      Allocated to stack - sp -6
                                   2893 ;process_pt                Allocated to registers r5 r6 r7 
                                   2894 ;PT_YIELD_FLAG             Allocated to registers r4 
                                   2895 ;------------------------------------------------------------
                                   2896 ;	../../../../platform/cc2530eb/./viztool.c:276: PROCESS_THREAD(viztool_process, ev, data)
                                   2897 ;	-----------------------------------------
                                   2898 ;	 function process_thread_viztool_process
                                   2899 ;	-----------------------------------------
      000A03                       2900 _process_thread_viztool_process:
                                   2901 ;	../../../../platform/cc2530eb/./viztool.c:279: PROCESS_BEGIN();
      000A03 AD 82            [24] 2902 	mov	r5,dpl
      000A05 AE 83            [24] 2903 	mov	r6,dph
      000A07 AF F0            [24] 2904 	mov	r7,b
      000A09 7C 01            [12] 2905 	mov	r4,#0x01
      000A0B 12r00r00         [24] 2906 	lcall	__gptrget
      000A0E FA               [12] 2907 	mov	r2,a
      000A0F A3               [24] 2908 	inc	dptr
      000A10 12r00r00         [24] 2909 	lcall	__gptrget
      000A13 FB               [12] 2910 	mov	r3,a
      000A14 BA 00 05         [24] 2911 	cjne	r2,#0x00,00131$
      000A17 BB 00 02         [24] 2912 	cjne	r3,#0x00,00131$
      000A1A 80 0B            [24] 2913 	sjmp	00101$
      000A1C                       2914 00131$:
      000A1C BA 1D 05         [24] 2915 	cjne	r2,#0x1D,00132$
      000A1F BB 01 02         [24] 2916 	cjne	r3,#0x01,00132$
      000A22 80 74            [24] 2917 	sjmp	00102$
      000A24                       2918 00132$:
      000A24 02r0ArBF         [24] 2919 	ljmp	00113$
      000A27                       2920 00101$:
                                   2921 ;	../../../../platform/cc2530eb/./viztool.c:281: server_conn = udp_new(NULL, UIP_HTONS(0), NULL);
      000A27 C0 05            [24] 2922 	push	ar5
      000A29 C0 06            [24] 2923 	push	ar6
      000A2B C0 07            [24] 2924 	push	ar7
      000A2D C0 06            [24] 2925 	push	ar6
      000A2F C0 05            [24] 2926 	push	ar5
      000A31 E4               [12] 2927 	clr	a
      000A32 C0 E0            [24] 2928 	push	acc
      000A34 C0 E0            [24] 2929 	push	acc
      000A36 C0 E0            [24] 2930 	push	acc
      000A38 E4               [12] 2931 	clr	a
      000A39 C0 E0            [24] 2932 	push	acc
      000A3B C0 E0            [24] 2933 	push	acc
      000A3D 90 00 00         [24] 2934 	mov	dptr,#0x0000
      000A40 75 F0 00         [24] 2935 	mov	b,#0x00
      000A43 78r00            [12] 2936 	mov	r0,#_udp_new
      000A45 79s00            [12] 2937 	mov	r1,#(_udp_new >> 8)
      000A47 7As00            [12] 2938 	mov	r2,#(_udp_new >> 16)
      000A49 12r00r00         [24] 2939 	lcall	__sdcc_banked_call
      000A4C AA 82            [24] 2940 	mov	r2,dpl
      000A4E AB 83            [24] 2941 	mov	r3,dph
      000A50 AF F0            [24] 2942 	mov	r7,b
      000A52 E5 81            [12] 2943 	mov	a,sp
      000A54 24 FB            [12] 2944 	add	a,#0xfb
      000A56 F5 81            [12] 2945 	mov	sp,a
      000A58 D0 05            [24] 2946 	pop	ar5
      000A5A D0 06            [24] 2947 	pop	ar6
      000A5C 90r00r00         [24] 2948 	mov	dptr,#_server_conn
      000A5F EA               [12] 2949 	mov	a,r2
      000A60 F0               [24] 2950 	movx	@dptr,a
      000A61 EB               [12] 2951 	mov	a,r3
      000A62 A3               [24] 2952 	inc	dptr
      000A63 F0               [24] 2953 	movx	@dptr,a
      000A64 EF               [12] 2954 	mov	a,r7
      000A65 A3               [24] 2955 	inc	dptr
      000A66 F0               [24] 2956 	movx	@dptr,a
                                   2957 ;	../../../../platform/cc2530eb/./viztool.c:282: udp_bind(server_conn, UIP_HTONS(VIZTOOL_UDP_PORT));
      000A67 74 10            [12] 2958 	mov	a,#0x10
      000A69 2A               [12] 2959 	add	a,r2
      000A6A FA               [12] 2960 	mov	r2,a
      000A6B E4               [12] 2961 	clr	a
      000A6C 3B               [12] 2962 	addc	a,r3
      000A6D FB               [12] 2963 	mov	r3,a
      000A6E 8A 82            [24] 2964 	mov	dpl,r2
      000A70 8B 83            [24] 2965 	mov	dph,r3
      000A72 8F F0            [24] 2966 	mov	b,r7
      000A74 74 EA            [12] 2967 	mov	a,#0xEA
      000A76 12r00r00         [24] 2968 	lcall	__gptrput
      000A79 A3               [24] 2969 	inc	dptr
      000A7A 74 61            [12] 2970 	mov	a,#0x61
      000A7C 12r00r00         [24] 2971 	lcall	__gptrput
                                   2972 ;	../../../../platform/cc2530eb/./viztool.c:291: PROCESS_END();
      000A7F D0 07            [24] 2973 	pop	ar7
      000A81 D0 06            [24] 2974 	pop	ar6
      000A83 D0 05            [24] 2975 	pop	ar5
                                   2976 ;	../../../../platform/cc2530eb/./viztool.c:284: while(1) {
      000A85                       2977 00111$:
                                   2978 ;	../../../../platform/cc2530eb/./viztool.c:285: PROCESS_YIELD();
      000A85 7C 00            [12] 2979 	mov	r4,#0x00
      000A87 8D 82            [24] 2980 	mov	dpl,r5
      000A89 8E 83            [24] 2981 	mov	dph,r6
      000A8B 8F F0            [24] 2982 	mov	b,r7
      000A8D 74 1D            [12] 2983 	mov	a,#0x1D
      000A8F 12r00r00         [24] 2984 	lcall	__gptrput
      000A92 A3               [24] 2985 	inc	dptr
      000A93 74 01            [12] 2986 	mov	a,#0x01
      000A95 12r00r00         [24] 2987 	lcall	__gptrput
      000A98                       2988 00102$:
      000A98 EC               [12] 2989 	mov	a,r4
      000A99 70 05            [24] 2990 	jnz	00106$
      000A9B 75 82 01         [24] 2991 	mov	dpl,#0x01
      000A9E 80 31            [24] 2992 	sjmp	00114$
      000AA0                       2993 00106$:
                                   2994 ;	../../../../platform/cc2530eb/./viztool.c:286: if(ev == tcpip_event) {
      000AA0 90r00r00         [24] 2995 	mov	dptr,#_tcpip_event
      000AA3 E0               [24] 2996 	movx	a,@dptr
      000AA4 FC               [12] 2997 	mov	r4,a
      000AA5 E5 81            [12] 2998 	mov	a,sp
      000AA7 24 FD            [12] 2999 	add	a,#0xfd
      000AA9 F8               [12] 3000 	mov	r0,a
      000AAA E6               [12] 3001 	mov	a,@r0
      000AAB B5 04 D7         [24] 3002 	cjne	a,ar4,00111$
                                   3003 ;	../../../../platform/cc2530eb/./viztool.c:287: tcpip_handler();
      000AAE C0 07            [24] 3004 	push	ar7
      000AB0 C0 06            [24] 3005 	push	ar6
      000AB2 C0 05            [24] 3006 	push	ar5
      000AB4 12r07rD3         [24] 3007 	lcall	_tcpip_handler
      000AB7 D0 05            [24] 3008 	pop	ar5
      000AB9 D0 06            [24] 3009 	pop	ar6
      000ABB D0 07            [24] 3010 	pop	ar7
                                   3011 ;	../../../../platform/cc2530eb/./viztool.c:291: PROCESS_END();
      000ABD 80 C6            [24] 3012 	sjmp	00111$
      000ABF                       3013 00113$:
      000ABF 8D 82            [24] 3014 	mov	dpl,r5
      000AC1 8E 83            [24] 3015 	mov	dph,r6
      000AC3 8F F0            [24] 3016 	mov	b,r7
      000AC5 E4               [12] 3017 	clr	a
      000AC6 12r00r00         [24] 3018 	lcall	__gptrput
      000AC9 A3               [24] 3019 	inc	dptr
      000ACA E4               [12] 3020 	clr	a
      000ACB 12r00r00         [24] 3021 	lcall	__gptrput
      000ACE 75 82 03         [24] 3022 	mov	dpl,#0x03
      000AD1                       3023 00114$:
      000AD1 02r00r00         [24] 3024 	ljmp	__sdcc_banked_ret
                                   3025 	.area CSEG    (CODE)
                                   3026 	.area CONST   (CODE)
                                   3027 	.area XINIT   (CODE)
      000000                       3028 __xinit__viztool_process:
                                   3029 ; generic printIvalPtr
      000000 00 00 00              3030 	.byte #0x00,#0x00,#0x00
      000003r03s0As00              3031 	.byte _process_thread_viztool_process,(_process_thread_viztool_process >> 8),(_process_thread_viztool_process >> 16)
      000006 00 00                 3032 	.byte #0x00,#0x00	; 0
      000008 00                    3033 	.db #0x00	; 0
      000009 00                    3034 	.db #0x00	; 0
                                   3035 	.area CABS    (ABS,CODE)
