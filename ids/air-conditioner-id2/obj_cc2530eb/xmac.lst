                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8804 (Aug  6 2013) (Linux)
                                      4 ; This file was generated Mon Aug 25 04:16:19 2014
                                      5 ;--------------------------------------------------------
                                      6 	.module xmac
                                      7 	.optsdcc -mmcs51 --model-huge
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _xmac_driver
                                     13 	.globl _memb_alloc
                                     14 	.globl _memb_init
                                     15 	.globl _list_item_next
                                     16 	.globl _list_add
                                     17 	.globl _list_head
                                     18 	.globl _list_init
                                     19 	.globl _queuebuf_free
                                     20 	.globl _queuebuf_to_packetbuf
                                     21 	.globl _queuebuf_new_from_packetbuf
                                     22 	.globl _packetbuf_addr
                                     23 	.globl _packetbuf_set_addr
                                     24 	.globl _packetbuf_attr
                                     25 	.globl _packetbuf_set_attr
                                     26 	.globl _packetbuf_compact
                                     27 	.globl _packetbuf_totlen
                                     28 	.globl _packetbuf_hdrptr
                                     29 	.globl _packetbuf_dataptr
                                     30 	.globl _rimeaddr_cmp
                                     31 	.globl _rimeaddr_copy
                                     32 	.globl _rtimer_set
                                     33 	.globl _memcpy
                                     34 	.globl _watchdog_periodic
                                     35 	.globl _watchdog_start
                                     36 	.globl _leds_toggle
                                     37 	.globl _leds_off
                                     38 	.globl _leds_on
                                     39 	.globl _ACTIVE
                                     40 	.globl _TX_BYTE
                                     41 	.globl _RX_BYTE
                                     42 	.globl _ERR
                                     43 	.globl _FE
                                     44 	.globl _SLAVE
                                     45 	.globl _RE
                                     46 	.globl _MODE
                                     47 	.globl _T3OVFIF
                                     48 	.globl _T3CH0IF
                                     49 	.globl _T3CH1IF
                                     50 	.globl _T4OVFIF
                                     51 	.globl _T4CH0IF
                                     52 	.globl _T4CH1IF
                                     53 	.globl _OVFIM
                                     54 	.globl _B_0
                                     55 	.globl _B_1
                                     56 	.globl _B_2
                                     57 	.globl _B_3
                                     58 	.globl _B_4
                                     59 	.globl _B_5
                                     60 	.globl _B_6
                                     61 	.globl _B_7
                                     62 	.globl _P2IF
                                     63 	.globl _UTX0IF
                                     64 	.globl _UTX1IF
                                     65 	.globl _P1IF
                                     66 	.globl _WDTIF
                                     67 	.globl _ACC_0
                                     68 	.globl _ACC_1
                                     69 	.globl _ACC_2
                                     70 	.globl _ACC_3
                                     71 	.globl _ACC_4
                                     72 	.globl _ACC_5
                                     73 	.globl _ACC_6
                                     74 	.globl _ACC_7
                                     75 	.globl _P
                                     76 	.globl _F1
                                     77 	.globl _OV
                                     78 	.globl _RS0
                                     79 	.globl _RS1
                                     80 	.globl _F0
                                     81 	.globl _AC
                                     82 	.globl _CY
                                     83 	.globl _DMAIF
                                     84 	.globl _T1IF
                                     85 	.globl _T2IF
                                     86 	.globl _T3IF
                                     87 	.globl _T4IF
                                     88 	.globl _P0IF
                                     89 	.globl _STIF
                                     90 	.globl _DMAIE
                                     91 	.globl _T1IE
                                     92 	.globl _T2IE
                                     93 	.globl _T3IE
                                     94 	.globl _T4IE
                                     95 	.globl _P0IE
                                     96 	.globl _RFERRIE
                                     97 	.globl _ADCIE
                                     98 	.globl _URX0IE
                                     99 	.globl _URX1IE
                                    100 	.globl _ENCIE
                                    101 	.globl _STIE
                                    102 	.globl _EA
                                    103 	.globl _P2_0
                                    104 	.globl _P2_1
                                    105 	.globl _P2_2
                                    106 	.globl _P2_3
                                    107 	.globl _P2_4
                                    108 	.globl _P2_5
                                    109 	.globl _P2_6
                                    110 	.globl _P2_7
                                    111 	.globl _ENCIF_0
                                    112 	.globl _ENCIF_1
                                    113 	.globl _P1_0
                                    114 	.globl _P1_1
                                    115 	.globl _P1_2
                                    116 	.globl _P1_3
                                    117 	.globl _P1_4
                                    118 	.globl _P1_5
                                    119 	.globl _P1_6
                                    120 	.globl _P1_7
                                    121 	.globl _IT0
                                    122 	.globl _RFERRIF
                                    123 	.globl _IT1
                                    124 	.globl _URX0IF
                                    125 	.globl _ADCIF
                                    126 	.globl _URX1IF
                                    127 	.globl _P0_0
                                    128 	.globl _P0_1
                                    129 	.globl _P0_2
                                    130 	.globl _P0_3
                                    131 	.globl _P0_4
                                    132 	.globl _P0_5
                                    133 	.globl _P0_6
                                    134 	.globl _P0_7
                                    135 	.globl _WDCTL
                                    136 	.globl _U1GCR
                                    137 	.globl _U1UCR
                                    138 	.globl _U1BAUD
                                    139 	.globl _U1DBUF
                                    140 	.globl _U1CSR
                                    141 	.globl _U0GCR
                                    142 	.globl _U0UCR
                                    143 	.globl _U0BAUD
                                    144 	.globl _U0DBUF
                                    145 	.globl _U0CSR
                                    146 	.globl _TIMIF
                                    147 	.globl _T4CC1
                                    148 	.globl _T4CCTL1
                                    149 	.globl _T4CC0
                                    150 	.globl _T4CCTL0
                                    151 	.globl _T4CTL
                                    152 	.globl _T4CNT
                                    153 	.globl _T3CC1
                                    154 	.globl _T3CCTL1
                                    155 	.globl _T3CC0
                                    156 	.globl _T3CCTL0
                                    157 	.globl _T3CTL
                                    158 	.globl _T3CNT
                                    159 	.globl _T2MSEL
                                    160 	.globl _T2IRQM
                                    161 	.globl _T2MOVF2
                                    162 	.globl _T2MOVF1
                                    163 	.globl _T2MOVF0
                                    164 	.globl _T2M1
                                    165 	.globl _T2M0
                                    166 	.globl _T2IRQF
                                    167 	.globl _T2EVTCFG
                                    168 	.globl _T2CTRL
                                    169 	.globl _T1STAT
                                    170 	.globl _T1CCTL2
                                    171 	.globl _T1CCTL1
                                    172 	.globl _T1CCTL0
                                    173 	.globl _T1CTL
                                    174 	.globl _T1CNTH
                                    175 	.globl _T1CNTL
                                    176 	.globl _T1CC2H
                                    177 	.globl _T1CC2L
                                    178 	.globl _T1CC1H
                                    179 	.globl _T1CC1L
                                    180 	.globl _T1CC0H
                                    181 	.globl _T1CC0L
                                    182 	.globl _CLKCONSTA
                                    183 	.globl _CLKCONCMD
                                    184 	.globl _SLEEPSTA
                                    185 	.globl _SLEEPCMD
                                    186 	.globl _STLOAD
                                    187 	.globl _ST2
                                    188 	.globl _ST1
                                    189 	.globl _ST0
                                    190 	.globl _RFERRF
                                    191 	.globl _RFIRQF0
                                    192 	.globl _RFST
                                    193 	.globl _RFD
                                    194 	.globl _RFIRQF1
                                    195 	.globl _PSBANK
                                    196 	.globl _FMAP
                                    197 	.globl _MEMCTR
                                    198 	.globl __XPAGE
                                    199 	.globl _MPAGE
                                    200 	.globl _PMUX
                                    201 	.globl _P2DIR
                                    202 	.globl _P1DIR
                                    203 	.globl _P0DIR
                                    204 	.globl _P2INP
                                    205 	.globl _P1INP
                                    206 	.globl _P2SEL
                                    207 	.globl _P1SEL
                                    208 	.globl _P0SEL
                                    209 	.globl _APCFG
                                    210 	.globl _PERCFG
                                    211 	.globl _P0INP
                                    212 	.globl _P2IEN
                                    213 	.globl _P1IEN
                                    214 	.globl _P0IEN
                                    215 	.globl _PICTL
                                    216 	.globl _P2IFG
                                    217 	.globl _P1IFG
                                    218 	.globl _P0IFG
                                    219 	.globl _DMAREQ
                                    220 	.globl _DMAARM
                                    221 	.globl _DMA0CFGH
                                    222 	.globl _DMA0CFGL
                                    223 	.globl _DMA1CFGH
                                    224 	.globl _DMA1CFGL
                                    225 	.globl _DMAIRQ
                                    226 	.globl _ENCCS
                                    227 	.globl _ENCDO
                                    228 	.globl _ENCDI
                                    229 	.globl _RNDH
                                    230 	.globl _RNDL
                                    231 	.globl _ADCH
                                    232 	.globl _ADCL
                                    233 	.globl _ADCCON3
                                    234 	.globl _ADCCON2
                                    235 	.globl _ADCCON1
                                    236 	.globl _B
                                    237 	.globl _IRCON2
                                    238 	.globl _ACC
                                    239 	.globl _PSW
                                    240 	.globl _IRCON
                                    241 	.globl _IP1
                                    242 	.globl _IEN1
                                    243 	.globl _IP0
                                    244 	.globl _IEN0
                                    245 	.globl _P2
                                    246 	.globl _S1CON
                                    247 	.globl _IEN2
                                    248 	.globl _S0CON
                                    249 	.globl _DPS
                                    250 	.globl _P1
                                    251 	.globl _TCON
                                    252 	.globl _PCON
                                    253 	.globl _DPH1
                                    254 	.globl _DPL1
                                    255 	.globl _DPH0
                                    256 	.globl _DPL0
                                    257 	.globl _SP
                                    258 	.globl _P0
                                    259 	.globl _xmac_config
                                    260 	.globl _X_IEEE_ADDR
                                    261 	.globl _X_INFOPAGE
                                    262 	.globl _X_P2DIR
                                    263 	.globl _X_P1DIR
                                    264 	.globl _X_P0DIR
                                    265 	.globl _X_U1GCR
                                    266 	.globl _X_U1UCR
                                    267 	.globl _X_U1BAUD
                                    268 	.globl _X_U1DBUF
                                    269 	.globl _X_U1CSR
                                    270 	.globl _X_P2INP
                                    271 	.globl _X_P1INP
                                    272 	.globl _X_P2SEL
                                    273 	.globl _X_P1SEL
                                    274 	.globl _X_P0SEL
                                    275 	.globl _X_APCFG
                                    276 	.globl _X_PERCFG
                                    277 	.globl _X_T4CC1
                                    278 	.globl _X_T4CCTL1
                                    279 	.globl _X_T4CC0
                                    280 	.globl _X_T4CCTL0
                                    281 	.globl _X_T4CTL
                                    282 	.globl _X_T4CNT
                                    283 	.globl _X_RFIRQF0
                                    284 	.globl _X_T1CCTL2
                                    285 	.globl _X_T1CCTL1
                                    286 	.globl _X_T1CCTL0
                                    287 	.globl _X_T1CTL
                                    288 	.globl _X_T1CNTH
                                    289 	.globl _X_T1CNTL
                                    290 	.globl _X_RFST
                                    291 	.globl _X_T1CC2H
                                    292 	.globl _X_T1CC2L
                                    293 	.globl _X_T1CC1H
                                    294 	.globl _X_T1CC1L
                                    295 	.globl _X_T1CC0H
                                    296 	.globl _X_T1CC0L
                                    297 	.globl _X_RFD
                                    298 	.globl _X_TIMIF
                                    299 	.globl _X_DMAREQ
                                    300 	.globl _X_DMAARM
                                    301 	.globl _X_DMA0CFGH
                                    302 	.globl _X_DMA0CFGL
                                    303 	.globl _X_DMA1CFGH
                                    304 	.globl _X_DMA1CFGL
                                    305 	.globl _X_DMAIRQ
                                    306 	.globl _X_T3CC1
                                    307 	.globl _X_T3CCTL1
                                    308 	.globl _X_T3CC0
                                    309 	.globl _X_T3CCTL0
                                    310 	.globl _X_T3CTL
                                    311 	.globl _X_T3CNT
                                    312 	.globl _X_WDCTL
                                    313 	.globl _X_MEMCTR
                                    314 	.globl _X_CLKCONCMD
                                    315 	.globl _X_U0GCR
                                    316 	.globl _X_U0UCR
                                    317 	.globl _X_T2MSEL
                                    318 	.globl _X_U0BAUD
                                    319 	.globl _X_U0DBUF
                                    320 	.globl _X_RFERRF
                                    321 	.globl _X_SLEEPCMD
                                    322 	.globl _X_RNDH
                                    323 	.globl _X_RNDL
                                    324 	.globl _X_ADCH
                                    325 	.globl _X_ADCL
                                    326 	.globl _X_ADCCON3
                                    327 	.globl _X_ADCCON2
                                    328 	.globl _X_ADCCON1
                                    329 	.globl _X_ENCCS
                                    330 	.globl _X_ENCDO
                                    331 	.globl _X_ENCDI
                                    332 	.globl _X_T1STAT
                                    333 	.globl _X_PMUX
                                    334 	.globl _X_STLOAD
                                    335 	.globl _X_P2IEN
                                    336 	.globl _X_P0IEN
                                    337 	.globl _X_T2IRQM
                                    338 	.globl _X_T2MOVF2
                                    339 	.globl _X_T2MOVF1
                                    340 	.globl _X_T2MOVF0
                                    341 	.globl _X_T2M1
                                    342 	.globl _X_T2M0
                                    343 	.globl _X_T2IRQF
                                    344 	.globl _X_P2
                                    345 	.globl _X_PSBANK
                                    346 	.globl _X_FMAP
                                    347 	.globl _X_CLKCONSTA
                                    348 	.globl _X_SLEEPSTA
                                    349 	.globl _X_T2EVTCFG
                                    350 	.globl _X_ST2
                                    351 	.globl _X_ST1
                                    352 	.globl _X_ST0
                                    353 	.globl _X_T2CTRL
                                    354 	.globl _X__XPAGE
                                    355 	.globl _X_MPAGE
                                    356 	.globl _X_RFIRQF1
                                    357 	.globl _X_P1
                                    358 	.globl _X_P0INP
                                    359 	.globl _X_P1IEN
                                    360 	.globl _X_PICTL
                                    361 	.globl _X_P2IFG
                                    362 	.globl _X_P1IFG
                                    363 	.globl _X_P0IFG
                                    364 	.globl _X_U0CSR
                                    365 	.globl _X_P0
                                    366 	.globl _USBF5
                                    367 	.globl _USBF4
                                    368 	.globl _USBF3
                                    369 	.globl _USBF2
                                    370 	.globl _USBF1
                                    371 	.globl _USBF0
                                    372 	.globl _USBCNTH
                                    373 	.globl _USBCNTL
                                    374 	.globl _USBCNT0
                                    375 	.globl _USBCSOH
                                    376 	.globl _USBCSOL
                                    377 	.globl _USBMAXO
                                    378 	.globl _USBCSIH
                                    379 	.globl _USBCSIL
                                    380 	.globl _USBCS0
                                    381 	.globl _USBMAXI
                                    382 	.globl _USBCTRL
                                    383 	.globl _USBINDEX
                                    384 	.globl _USBFRMH
                                    385 	.globl _USBFRML
                                    386 	.globl _USBCIE
                                    387 	.globl _USBOIE
                                    388 	.globl _USBIIE
                                    389 	.globl _USBCIF
                                    390 	.globl _USBOIF
                                    391 	.globl _USBIIF
                                    392 	.globl _USBPOW
                                    393 	.globl _USBADDR
                                    394 	.globl _CSPT
                                    395 	.globl _CSPZ
                                    396 	.globl _CSPY
                                    397 	.globl _CSPX
                                    398 	.globl _CSPSTAT
                                    399 	.globl _CSPCTRL
                                    400 	.globl _CSPPROG23
                                    401 	.globl _CSPPROG22
                                    402 	.globl _CSPPROG21
                                    403 	.globl _CSPPROG20
                                    404 	.globl _CSPPROG19
                                    405 	.globl _CSPPROG18
                                    406 	.globl _CSPPROG17
                                    407 	.globl _CSPPROG16
                                    408 	.globl _CSPPROG15
                                    409 	.globl _CSPPROG14
                                    410 	.globl _CSPPROG13
                                    411 	.globl _CSPPROG12
                                    412 	.globl _CSPPROG11
                                    413 	.globl _CSPPROG10
                                    414 	.globl _CSPPROG9
                                    415 	.globl _CSPPROG8
                                    416 	.globl _CSPPROG7
                                    417 	.globl _CSPPROG6
                                    418 	.globl _CSPPROG5
                                    419 	.globl _CSPPROG4
                                    420 	.globl _CSPPROG3
                                    421 	.globl _CSPPROG2
                                    422 	.globl _CSPPROG1
                                    423 	.globl _CSPPROG0
                                    424 	.globl _RFC_OBS_CTRL2
                                    425 	.globl _RFC_OBS_CTRL1
                                    426 	.globl _RFC_OBS_CTRL0
                                    427 	.globl _TXFILTCFG
                                    428 	.globl _PTEST1
                                    429 	.globl _PTEST0
                                    430 	.globl _ATEST
                                    431 	.globl _DACTEST2
                                    432 	.globl _DACTEST1
                                    433 	.globl _DACTEST0
                                    434 	.globl _MDMTEST1
                                    435 	.globl _MDMTEST0
                                    436 	.globl _ADCTEST2
                                    437 	.globl _ADCTEST1
                                    438 	.globl _ADCTEST0
                                    439 	.globl _AGCCTRL3
                                    440 	.globl _AGCCTRL2
                                    441 	.globl _AGCCTRL1
                                    442 	.globl _AGCCTRL0
                                    443 	.globl _FSCAL3
                                    444 	.globl _FSCAL2
                                    445 	.globl _FSCAL1
                                    446 	.globl _FSCAL0
                                    447 	.globl _FSCTRL
                                    448 	.globl _RXCTRL
                                    449 	.globl _FREQEST
                                    450 	.globl _MDMCTRL1
                                    451 	.globl _MDMCTRL0
                                    452 	.globl _RFRND
                                    453 	.globl _RFERRM
                                    454 	.globl _RFIRQM1
                                    455 	.globl _RFIRQM0
                                    456 	.globl _TXLAST_PTR
                                    457 	.globl _TXFIRST_PTR
                                    458 	.globl _RXP1_PTR
                                    459 	.globl _RXLAST_PTR
                                    460 	.globl _RXFIRST_PTR
                                    461 	.globl _TXFIFOCNT
                                    462 	.globl _RXFIFOCNT
                                    463 	.globl _RXFIRST
                                    464 	.globl _RSSISTAT
                                    465 	.globl _RSSI
                                    466 	.globl _CCACTRL1
                                    467 	.globl _CCACTRL0
                                    468 	.globl _FSMCTRL
                                    469 	.globl _FIFOPCTRL
                                    470 	.globl _FSMSTAT1
                                    471 	.globl _FSMSTAT0
                                    472 	.globl _TXCTRL
                                    473 	.globl _TXPOWER
                                    474 	.globl _FREQCTRL
                                    475 	.globl _FREQTUNE
                                    476 	.globl _RXMASKCLR
                                    477 	.globl _RXMASKSET
                                    478 	.globl _RXENABLE
                                    479 	.globl _FRMCTRL1
                                    480 	.globl _FRMCTRL0
                                    481 	.globl _SRCEXTEN2
                                    482 	.globl _SRCEXTEN1
                                    483 	.globl _SRCEXTEN0
                                    484 	.globl _SRCSHORTEN2
                                    485 	.globl _SRCSHORTEN1
                                    486 	.globl _SRCSHORTEN0
                                    487 	.globl _SRCMATCH
                                    488 	.globl _FRMFILT1
                                    489 	.globl _FRMFILT0
                                    490 	.globl _SHORT_ADDR1
                                    491 	.globl _SHORT_ADDR0
                                    492 	.globl _PAN_ID1
                                    493 	.globl _PAN_ID0
                                    494 	.globl _EXT_ADDR7
                                    495 	.globl _EXT_ADDR6
                                    496 	.globl _EXT_ADDR5
                                    497 	.globl _EXT_ADDR4
                                    498 	.globl _EXT_ADDR3
                                    499 	.globl _EXT_ADDR2
                                    500 	.globl _EXT_ADDR1
                                    501 	.globl _EXT_ADDR0
                                    502 	.globl _SRCSHORTPENDEN2
                                    503 	.globl _SRCSHORTPENDEN1
                                    504 	.globl _SRCSHORTPENDEN0
                                    505 	.globl _SRCEXTPENDEN2
                                    506 	.globl _SRCEXTPENDEN1
                                    507 	.globl _SRCEXTPENDEN0
                                    508 	.globl _SRCRESINDEX
                                    509 	.globl _SRCRESMASK2
                                    510 	.globl _SRCRESMASK1
                                    511 	.globl _SRCRESMASK0
                                    512 	.globl _SRC_ADDR_TABLE
                                    513 	.globl _TXFIFO
                                    514 	.globl _RXFIFO
                                    515 	.globl _RFCORE_RAM
                                    516 	.globl _CMPCTL
                                    517 	.globl _OPAMPS
                                    518 	.globl _OPAMPC
                                    519 	.globl _STCV2
                                    520 	.globl _STCV1
                                    521 	.globl _STCV0
                                    522 	.globl _STCS
                                    523 	.globl _STCC
                                    524 	.globl _T1CC4H
                                    525 	.globl _T1CC4L
                                    526 	.globl _T1CC3H
                                    527 	.globl _T1CC3L
                                    528 	.globl _XX_T1CC2H
                                    529 	.globl _XX_T1CC2L
                                    530 	.globl _XX_T1CC1H
                                    531 	.globl _XX_T1CC1L
                                    532 	.globl _XX_T1CC0H
                                    533 	.globl _XX_T1CC0L
                                    534 	.globl _T1CCTL4
                                    535 	.globl _T1CCTL3
                                    536 	.globl _XX_T1CCTL2
                                    537 	.globl _XX_T1CCTL1
                                    538 	.globl _XX_T1CCTL0
                                    539 	.globl _CLD
                                    540 	.globl _IRCTL
                                    541 	.globl _CHIPINFO1
                                    542 	.globl _CHIPINFO0
                                    543 	.globl _FWDATA
                                    544 	.globl _FADDRH
                                    545 	.globl _FADDRL
                                    546 	.globl _FCTL
                                    547 	.globl _IVCTRL
                                    548 	.globl _BATTMON
                                    549 	.globl _SRCRC
                                    550 	.globl _DBGDATA
                                    551 	.globl _TESTREG0
                                    552 	.globl _CHIPID
                                    553 	.globl _CHVER
                                    554 	.globl _OBSSEL5
                                    555 	.globl _OBSSEL4
                                    556 	.globl _OBSSEL3
                                    557 	.globl _OBSSEL2
                                    558 	.globl _OBSSEL1
                                    559 	.globl _OBSSEL0
                                    560 	.globl _I2CIO
                                    561 	.globl _I2CWC
                                    562 	.globl _I2CADDR
                                    563 	.globl _I2CDATA
                                    564 	.globl _I2CSTAT
                                    565 	.globl _I2CCFG
                                    566 	.globl _OPAMPMC
                                    567 	.globl _MONMUX
                                    568 	.globl _xmac_set_announcement_radio_txpower
                                    569 ;--------------------------------------------------------
                                    570 ; special function registers
                                    571 ;--------------------------------------------------------
                                    572 	.area RSEG    (ABS,DATA)
      000000                        573 	.org 0x0000
                           000080   574 _P0	=	0x0080
                           000081   575 _SP	=	0x0081
                           000082   576 _DPL0	=	0x0082
                           000083   577 _DPH0	=	0x0083
                           000084   578 _DPL1	=	0x0084
                           000085   579 _DPH1	=	0x0085
                           000087   580 _PCON	=	0x0087
                           000088   581 _TCON	=	0x0088
                           000090   582 _P1	=	0x0090
                           000092   583 _DPS	=	0x0092
                           000098   584 _S0CON	=	0x0098
                           00009A   585 _IEN2	=	0x009a
                           00009B   586 _S1CON	=	0x009b
                           0000A0   587 _P2	=	0x00a0
                           0000A8   588 _IEN0	=	0x00a8
                           0000A9   589 _IP0	=	0x00a9
                           0000B8   590 _IEN1	=	0x00b8
                           0000B9   591 _IP1	=	0x00b9
                           0000C0   592 _IRCON	=	0x00c0
                           0000D0   593 _PSW	=	0x00d0
                           0000E0   594 _ACC	=	0x00e0
                           0000E8   595 _IRCON2	=	0x00e8
                           0000F0   596 _B	=	0x00f0
                           0000B4   597 _ADCCON1	=	0x00b4
                           0000B5   598 _ADCCON2	=	0x00b5
                           0000B6   599 _ADCCON3	=	0x00b6
                           0000BA   600 _ADCL	=	0x00ba
                           0000BB   601 _ADCH	=	0x00bb
                           0000BC   602 _RNDL	=	0x00bc
                           0000BD   603 _RNDH	=	0x00bd
                           0000B1   604 _ENCDI	=	0x00b1
                           0000B2   605 _ENCDO	=	0x00b2
                           0000B3   606 _ENCCS	=	0x00b3
                           0000D1   607 _DMAIRQ	=	0x00d1
                           0000D2   608 _DMA1CFGL	=	0x00d2
                           0000D3   609 _DMA1CFGH	=	0x00d3
                           0000D4   610 _DMA0CFGL	=	0x00d4
                           0000D5   611 _DMA0CFGH	=	0x00d5
                           0000D6   612 _DMAARM	=	0x00d6
                           0000D7   613 _DMAREQ	=	0x00d7
                           000089   614 _P0IFG	=	0x0089
                           00008A   615 _P1IFG	=	0x008a
                           00008B   616 _P2IFG	=	0x008b
                           00008C   617 _PICTL	=	0x008c
                           0000AB   618 _P0IEN	=	0x00ab
                           00008D   619 _P1IEN	=	0x008d
                           0000AC   620 _P2IEN	=	0x00ac
                           00008F   621 _P0INP	=	0x008f
                           0000F1   622 _PERCFG	=	0x00f1
                           0000F2   623 _APCFG	=	0x00f2
                           0000F3   624 _P0SEL	=	0x00f3
                           0000F4   625 _P1SEL	=	0x00f4
                           0000F5   626 _P2SEL	=	0x00f5
                           0000F6   627 _P1INP	=	0x00f6
                           0000F7   628 _P2INP	=	0x00f7
                           0000FD   629 _P0DIR	=	0x00fd
                           0000FE   630 _P1DIR	=	0x00fe
                           0000FF   631 _P2DIR	=	0x00ff
                           0000AE   632 _PMUX	=	0x00ae
                           000093   633 _MPAGE	=	0x0093
                           000093   634 __XPAGE	=	0x0093
                           0000C7   635 _MEMCTR	=	0x00c7
                           00009F   636 _FMAP	=	0x009f
                           00009F   637 _PSBANK	=	0x009f
                           000091   638 _RFIRQF1	=	0x0091
                           0000D9   639 _RFD	=	0x00d9
                           0000E1   640 _RFST	=	0x00e1
                           0000E9   641 _RFIRQF0	=	0x00e9
                           0000BF   642 _RFERRF	=	0x00bf
                           000095   643 _ST0	=	0x0095
                           000096   644 _ST1	=	0x0096
                           000097   645 _ST2	=	0x0097
                           0000AD   646 _STLOAD	=	0x00ad
                           0000BE   647 _SLEEPCMD	=	0x00be
                           00009D   648 _SLEEPSTA	=	0x009d
                           0000C6   649 _CLKCONCMD	=	0x00c6
                           00009E   650 _CLKCONSTA	=	0x009e
                           0000DA   651 _T1CC0L	=	0x00da
                           0000DB   652 _T1CC0H	=	0x00db
                           0000DC   653 _T1CC1L	=	0x00dc
                           0000DD   654 _T1CC1H	=	0x00dd
                           0000DE   655 _T1CC2L	=	0x00de
                           0000DF   656 _T1CC2H	=	0x00df
                           0000E2   657 _T1CNTL	=	0x00e2
                           0000E3   658 _T1CNTH	=	0x00e3
                           0000E4   659 _T1CTL	=	0x00e4
                           0000E5   660 _T1CCTL0	=	0x00e5
                           0000E6   661 _T1CCTL1	=	0x00e6
                           0000E7   662 _T1CCTL2	=	0x00e7
                           0000AF   663 _T1STAT	=	0x00af
                           000094   664 _T2CTRL	=	0x0094
                           00009C   665 _T2EVTCFG	=	0x009c
                           0000A1   666 _T2IRQF	=	0x00a1
                           0000A2   667 _T2M0	=	0x00a2
                           0000A3   668 _T2M1	=	0x00a3
                           0000A4   669 _T2MOVF0	=	0x00a4
                           0000A5   670 _T2MOVF1	=	0x00a5
                           0000A6   671 _T2MOVF2	=	0x00a6
                           0000A7   672 _T2IRQM	=	0x00a7
                           0000C3   673 _T2MSEL	=	0x00c3
                           0000CA   674 _T3CNT	=	0x00ca
                           0000CB   675 _T3CTL	=	0x00cb
                           0000CC   676 _T3CCTL0	=	0x00cc
                           0000CD   677 _T3CC0	=	0x00cd
                           0000CE   678 _T3CCTL1	=	0x00ce
                           0000CF   679 _T3CC1	=	0x00cf
                           0000EA   680 _T4CNT	=	0x00ea
                           0000EB   681 _T4CTL	=	0x00eb
                           0000EC   682 _T4CCTL0	=	0x00ec
                           0000ED   683 _T4CC0	=	0x00ed
                           0000EE   684 _T4CCTL1	=	0x00ee
                           0000EF   685 _T4CC1	=	0x00ef
                           0000D8   686 _TIMIF	=	0x00d8
                           000086   687 _U0CSR	=	0x0086
                           0000C1   688 _U0DBUF	=	0x00c1
                           0000C2   689 _U0BAUD	=	0x00c2
                           0000C4   690 _U0UCR	=	0x00c4
                           0000C5   691 _U0GCR	=	0x00c5
                           0000F8   692 _U1CSR	=	0x00f8
                           0000F9   693 _U1DBUF	=	0x00f9
                           0000FA   694 _U1BAUD	=	0x00fa
                           0000FB   695 _U1UCR	=	0x00fb
                           0000FC   696 _U1GCR	=	0x00fc
                           0000C9   697 _WDCTL	=	0x00c9
                                    698 ;--------------------------------------------------------
                                    699 ; special function bits
                                    700 ;--------------------------------------------------------
                                    701 	.area RSEG    (ABS,DATA)
      000000                        702 	.org 0x0000
                           000087   703 _P0_7	=	0x0087
                           000086   704 _P0_6	=	0x0086
                           000085   705 _P0_5	=	0x0085
                           000084   706 _P0_4	=	0x0084
                           000083   707 _P0_3	=	0x0083
                           000082   708 _P0_2	=	0x0082
                           000081   709 _P0_1	=	0x0081
                           000080   710 _P0_0	=	0x0080
                           00008F   711 _URX1IF	=	0x008f
                           00008D   712 _ADCIF	=	0x008d
                           00008B   713 _URX0IF	=	0x008b
                           00008A   714 _IT1	=	0x008a
                           000089   715 _RFERRIF	=	0x0089
                           000088   716 _IT0	=	0x0088
                           000097   717 _P1_7	=	0x0097
                           000096   718 _P1_6	=	0x0096
                           000095   719 _P1_5	=	0x0095
                           000094   720 _P1_4	=	0x0094
                           000093   721 _P1_3	=	0x0093
                           000092   722 _P1_2	=	0x0092
                           000091   723 _P1_1	=	0x0091
                           000090   724 _P1_0	=	0x0090
                           000099   725 _ENCIF_1	=	0x0099
                           000098   726 _ENCIF_0	=	0x0098
                           0000A7   727 _P2_7	=	0x00a7
                           0000A6   728 _P2_6	=	0x00a6
                           0000A5   729 _P2_5	=	0x00a5
                           0000A4   730 _P2_4	=	0x00a4
                           0000A3   731 _P2_3	=	0x00a3
                           0000A2   732 _P2_2	=	0x00a2
                           0000A1   733 _P2_1	=	0x00a1
                           0000A0   734 _P2_0	=	0x00a0
                           0000AF   735 _EA	=	0x00af
                           0000AD   736 _STIE	=	0x00ad
                           0000AC   737 _ENCIE	=	0x00ac
                           0000AB   738 _URX1IE	=	0x00ab
                           0000AA   739 _URX0IE	=	0x00aa
                           0000A9   740 _ADCIE	=	0x00a9
                           0000A8   741 _RFERRIE	=	0x00a8
                           0000BD   742 _P0IE	=	0x00bd
                           0000BC   743 _T4IE	=	0x00bc
                           0000BB   744 _T3IE	=	0x00bb
                           0000BA   745 _T2IE	=	0x00ba
                           0000B9   746 _T1IE	=	0x00b9
                           0000B8   747 _DMAIE	=	0x00b8
                           0000C7   748 _STIF	=	0x00c7
                           0000C5   749 _P0IF	=	0x00c5
                           0000C4   750 _T4IF	=	0x00c4
                           0000C3   751 _T3IF	=	0x00c3
                           0000C2   752 _T2IF	=	0x00c2
                           0000C1   753 _T1IF	=	0x00c1
                           0000C0   754 _DMAIF	=	0x00c0
                           0000D7   755 _CY	=	0x00d7
                           0000D6   756 _AC	=	0x00d6
                           0000D5   757 _F0	=	0x00d5
                           0000D4   758 _RS1	=	0x00d4
                           0000D3   759 _RS0	=	0x00d3
                           0000D2   760 _OV	=	0x00d2
                           0000D1   761 _F1	=	0x00d1
                           0000D0   762 _P	=	0x00d0
                           0000E7   763 _ACC_7	=	0x00e7
                           0000E6   764 _ACC_6	=	0x00e6
                           0000E5   765 _ACC_5	=	0x00e5
                           0000E4   766 _ACC_4	=	0x00e4
                           0000E3   767 _ACC_3	=	0x00e3
                           0000E2   768 _ACC_2	=	0x00e2
                           0000E1   769 _ACC_1	=	0x00e1
                           0000E0   770 _ACC_0	=	0x00e0
                           0000EC   771 _WDTIF	=	0x00ec
                           0000EB   772 _P1IF	=	0x00eb
                           0000EA   773 _UTX1IF	=	0x00ea
                           0000E9   774 _UTX0IF	=	0x00e9
                           0000E8   775 _P2IF	=	0x00e8
                           0000F7   776 _B_7	=	0x00f7
                           0000F6   777 _B_6	=	0x00f6
                           0000F5   778 _B_5	=	0x00f5
                           0000F4   779 _B_4	=	0x00f4
                           0000F3   780 _B_3	=	0x00f3
                           0000F2   781 _B_2	=	0x00f2
                           0000F1   782 _B_1	=	0x00f1
                           0000F0   783 _B_0	=	0x00f0
                           0000DE   784 _OVFIM	=	0x00de
                           0000DD   785 _T4CH1IF	=	0x00dd
                           0000DC   786 _T4CH0IF	=	0x00dc
                           0000DB   787 _T4OVFIF	=	0x00db
                           0000DA   788 _T3CH1IF	=	0x00da
                           0000D9   789 _T3CH0IF	=	0x00d9
                           0000D8   790 _T3OVFIF	=	0x00d8
                           0000FF   791 _MODE	=	0x00ff
                           0000FE   792 _RE	=	0x00fe
                           0000FD   793 _SLAVE	=	0x00fd
                           0000FC   794 _FE	=	0x00fc
                           0000FB   795 _ERR	=	0x00fb
                           0000FA   796 _RX_BYTE	=	0x00fa
                           0000F9   797 _TX_BYTE	=	0x00f9
                           0000F8   798 _ACTIVE	=	0x00f8
                                    799 ;--------------------------------------------------------
                                    800 ; overlayable register banks
                                    801 ;--------------------------------------------------------
                                    802 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        803 	.ds 8
                                    804 ;--------------------------------------------------------
                                    805 ; internal ram data
                                    806 ;--------------------------------------------------------
                                    807 	.area DSEG    (DATA)
                                    808 ;--------------------------------------------------------
                                    809 ; overlayable items in internal ram 
                                    810 ;--------------------------------------------------------
                                    811 ;--------------------------------------------------------
                                    812 ; indirectly addressable internal ram data
                                    813 ;--------------------------------------------------------
                                    814 	.area ISEG    (DATA)
                                    815 ;--------------------------------------------------------
                                    816 ; absolute internal ram data
                                    817 ;--------------------------------------------------------
                                    818 	.area IABS    (ABS,DATA)
                                    819 	.area IABS    (ABS,DATA)
                                    820 ;--------------------------------------------------------
                                    821 ; bit data
                                    822 ;--------------------------------------------------------
                                    823 	.area BSEG    (BIT)
                                    824 ;--------------------------------------------------------
                                    825 ; paged external ram data
                                    826 ;--------------------------------------------------------
                                    827 	.area PSEG    (PAG,XDATA)
                                    828 ;--------------------------------------------------------
                                    829 ; external ram data
                                    830 ;--------------------------------------------------------
                                    831 	.area XSEG    (XDATA)
                           0061A6   832 _MONMUX	=	0x61a6
                           0061A6   833 _OPAMPMC	=	0x61a6
                           006230   834 _I2CCFG	=	0x6230
                           006231   835 _I2CSTAT	=	0x6231
                           006232   836 _I2CDATA	=	0x6232
                           006233   837 _I2CADDR	=	0x6233
                           006234   838 _I2CWC	=	0x6234
                           006235   839 _I2CIO	=	0x6235
                           006243   840 _OBSSEL0	=	0x6243
                           006244   841 _OBSSEL1	=	0x6244
                           006245   842 _OBSSEL2	=	0x6245
                           006246   843 _OBSSEL3	=	0x6246
                           006247   844 _OBSSEL4	=	0x6247
                           006248   845 _OBSSEL5	=	0x6248
                           006249   846 _CHVER	=	0x6249
                           00624A   847 _CHIPID	=	0x624a
                           00624B   848 _TESTREG0	=	0x624b
                           006260   849 _DBGDATA	=	0x6260
                           006262   850 _SRCRC	=	0x6262
                           006264   851 _BATTMON	=	0x6264
                           006265   852 _IVCTRL	=	0x6265
                           006270   853 _FCTL	=	0x6270
                           006271   854 _FADDRL	=	0x6271
                           006272   855 _FADDRH	=	0x6272
                           006273   856 _FWDATA	=	0x6273
                           006276   857 _CHIPINFO0	=	0x6276
                           006277   858 _CHIPINFO1	=	0x6277
                           006281   859 _IRCTL	=	0x6281
                           006290   860 _CLD	=	0x6290
                           0062A0   861 _XX_T1CCTL0	=	0x62a0
                           0062A1   862 _XX_T1CCTL1	=	0x62a1
                           0062A2   863 _XX_T1CCTL2	=	0x62a2
                           0062A3   864 _T1CCTL3	=	0x62a3
                           0062A4   865 _T1CCTL4	=	0x62a4
                           0062A6   866 _XX_T1CC0L	=	0x62a6
                           0062A7   867 _XX_T1CC0H	=	0x62a7
                           0062A8   868 _XX_T1CC1L	=	0x62a8
                           0062A9   869 _XX_T1CC1H	=	0x62a9
                           0062AA   870 _XX_T1CC2L	=	0x62aa
                           0062AB   871 _XX_T1CC2H	=	0x62ab
                           0062AC   872 _T1CC3L	=	0x62ac
                           0062AD   873 _T1CC3H	=	0x62ad
                           0062AE   874 _T1CC4L	=	0x62ae
                           0062AF   875 _T1CC4H	=	0x62af
                           0062B0   876 _STCC	=	0x62b0
                           0062B1   877 _STCS	=	0x62b1
                           0062B2   878 _STCV0	=	0x62b2
                           0062B3   879 _STCV1	=	0x62b3
                           0062B4   880 _STCV2	=	0x62b4
                           0062C0   881 _OPAMPC	=	0x62c0
                           0062C1   882 _OPAMPS	=	0x62c1
                           0062D0   883 _CMPCTL	=	0x62d0
                           006000   884 _RFCORE_RAM	=	0x6000
                           006000   885 _RXFIFO	=	0x6000
                           006080   886 _TXFIFO	=	0x6080
                           006100   887 _SRC_ADDR_TABLE	=	0x6100
                           006160   888 _SRCRESMASK0	=	0x6160
                           006161   889 _SRCRESMASK1	=	0x6161
                           006162   890 _SRCRESMASK2	=	0x6162
                           006163   891 _SRCRESINDEX	=	0x6163
                           006164   892 _SRCEXTPENDEN0	=	0x6164
                           006165   893 _SRCEXTPENDEN1	=	0x6165
                           006166   894 _SRCEXTPENDEN2	=	0x6166
                           006167   895 _SRCSHORTPENDEN0	=	0x6167
                           006168   896 _SRCSHORTPENDEN1	=	0x6168
                           006169   897 _SRCSHORTPENDEN2	=	0x6169
                           00616A   898 _EXT_ADDR0	=	0x616a
                           00616B   899 _EXT_ADDR1	=	0x616b
                           00616C   900 _EXT_ADDR2	=	0x616c
                           00616D   901 _EXT_ADDR3	=	0x616d
                           00616E   902 _EXT_ADDR4	=	0x616e
                           00616F   903 _EXT_ADDR5	=	0x616f
                           006170   904 _EXT_ADDR6	=	0x6170
                           006171   905 _EXT_ADDR7	=	0x6171
                           006172   906 _PAN_ID0	=	0x6172
                           006173   907 _PAN_ID1	=	0x6173
                           006174   908 _SHORT_ADDR0	=	0x6174
                           006175   909 _SHORT_ADDR1	=	0x6175
                           006180   910 _FRMFILT0	=	0x6180
                           006181   911 _FRMFILT1	=	0x6181
                           006182   912 _SRCMATCH	=	0x6182
                           006183   913 _SRCSHORTEN0	=	0x6183
                           006184   914 _SRCSHORTEN1	=	0x6184
                           006185   915 _SRCSHORTEN2	=	0x6185
                           006186   916 _SRCEXTEN0	=	0x6186
                           006187   917 _SRCEXTEN1	=	0x6187
                           006188   918 _SRCEXTEN2	=	0x6188
                           006189   919 _FRMCTRL0	=	0x6189
                           00618A   920 _FRMCTRL1	=	0x618a
                           00618B   921 _RXENABLE	=	0x618b
                           00618C   922 _RXMASKSET	=	0x618c
                           00618D   923 _RXMASKCLR	=	0x618d
                           00618E   924 _FREQTUNE	=	0x618e
                           00618F   925 _FREQCTRL	=	0x618f
                           006190   926 _TXPOWER	=	0x6190
                           006191   927 _TXCTRL	=	0x6191
                           006192   928 _FSMSTAT0	=	0x6192
                           006193   929 _FSMSTAT1	=	0x6193
                           006194   930 _FIFOPCTRL	=	0x6194
                           006195   931 _FSMCTRL	=	0x6195
                           006196   932 _CCACTRL0	=	0x6196
                           006197   933 _CCACTRL1	=	0x6197
                           006198   934 _RSSI	=	0x6198
                           006199   935 _RSSISTAT	=	0x6199
                           00619A   936 _RXFIRST	=	0x619a
                           00619B   937 _RXFIFOCNT	=	0x619b
                           00619C   938 _TXFIFOCNT	=	0x619c
                           00619D   939 _RXFIRST_PTR	=	0x619d
                           00619E   940 _RXLAST_PTR	=	0x619e
                           00619F   941 _RXP1_PTR	=	0x619f
                           0061A1   942 _TXFIRST_PTR	=	0x61a1
                           0061A2   943 _TXLAST_PTR	=	0x61a2
                           0061A3   944 _RFIRQM0	=	0x61a3
                           0061A4   945 _RFIRQM1	=	0x61a4
                           0061A5   946 _RFERRM	=	0x61a5
                           0061A7   947 _RFRND	=	0x61a7
                           0061A8   948 _MDMCTRL0	=	0x61a8
                           0061A9   949 _MDMCTRL1	=	0x61a9
                           0061AA   950 _FREQEST	=	0x61aa
                           0061AB   951 _RXCTRL	=	0x61ab
                           0061AC   952 _FSCTRL	=	0x61ac
                           0061AD   953 _FSCAL0	=	0x61ad
                           0061AE   954 _FSCAL1	=	0x61ae
                           0061AF   955 _FSCAL2	=	0x61af
                           0061B0   956 _FSCAL3	=	0x61b0
                           0061B1   957 _AGCCTRL0	=	0x61b1
                           0061B2   958 _AGCCTRL1	=	0x61b2
                           0061B3   959 _AGCCTRL2	=	0x61b3
                           0061B4   960 _AGCCTRL3	=	0x61b4
                           0061B5   961 _ADCTEST0	=	0x61b5
                           0061B6   962 _ADCTEST1	=	0x61b6
                           0061B7   963 _ADCTEST2	=	0x61b7
                           0061B8   964 _MDMTEST0	=	0x61b8
                           0061B9   965 _MDMTEST1	=	0x61b9
                           0061BA   966 _DACTEST0	=	0x61ba
                           0061BB   967 _DACTEST1	=	0x61bb
                           0061BC   968 _DACTEST2	=	0x61bc
                           0061BD   969 _ATEST	=	0x61bd
                           0061BE   970 _PTEST0	=	0x61be
                           0061BF   971 _PTEST1	=	0x61bf
                           0061FA   972 _TXFILTCFG	=	0x61fa
                           0061EB   973 _RFC_OBS_CTRL0	=	0x61eb
                           0061EC   974 _RFC_OBS_CTRL1	=	0x61ec
                           0061ED   975 _RFC_OBS_CTRL2	=	0x61ed
                           0061C0   976 _CSPPROG0	=	0x61c0
                           0061C1   977 _CSPPROG1	=	0x61c1
                           0061C2   978 _CSPPROG2	=	0x61c2
                           0061C3   979 _CSPPROG3	=	0x61c3
                           0061C4   980 _CSPPROG4	=	0x61c4
                           0061C5   981 _CSPPROG5	=	0x61c5
                           0061C6   982 _CSPPROG6	=	0x61c6
                           0061C7   983 _CSPPROG7	=	0x61c7
                           0061C8   984 _CSPPROG8	=	0x61c8
                           0061C9   985 _CSPPROG9	=	0x61c9
                           0061CA   986 _CSPPROG10	=	0x61ca
                           0061CB   987 _CSPPROG11	=	0x61cb
                           0061CC   988 _CSPPROG12	=	0x61cc
                           0061CD   989 _CSPPROG13	=	0x61cd
                           0061CE   990 _CSPPROG14	=	0x61ce
                           0061CF   991 _CSPPROG15	=	0x61cf
                           0061D0   992 _CSPPROG16	=	0x61d0
                           0061D1   993 _CSPPROG17	=	0x61d1
                           0061D2   994 _CSPPROG18	=	0x61d2
                           0061D3   995 _CSPPROG19	=	0x61d3
                           0061D4   996 _CSPPROG20	=	0x61d4
                           0061D5   997 _CSPPROG21	=	0x61d5
                           0061D6   998 _CSPPROG22	=	0x61d6
                           0061D7   999 _CSPPROG23	=	0x61d7
                           0061E0  1000 _CSPCTRL	=	0x61e0
                           0061E1  1001 _CSPSTAT	=	0x61e1
                           0061E2  1002 _CSPX	=	0x61e2
                           0061E3  1003 _CSPY	=	0x61e3
                           0061E4  1004 _CSPZ	=	0x61e4
                           0061E5  1005 _CSPT	=	0x61e5
                           006200  1006 _USBADDR	=	0x6200
                           006201  1007 _USBPOW	=	0x6201
                           006202  1008 _USBIIF	=	0x6202
                           006204  1009 _USBOIF	=	0x6204
                           006206  1010 _USBCIF	=	0x6206
                           006207  1011 _USBIIE	=	0x6207
                           006209  1012 _USBOIE	=	0x6209
                           00620B  1013 _USBCIE	=	0x620b
                           00620C  1014 _USBFRML	=	0x620c
                           00620D  1015 _USBFRMH	=	0x620d
                           00620E  1016 _USBINDEX	=	0x620e
                           00620F  1017 _USBCTRL	=	0x620f
                           006210  1018 _USBMAXI	=	0x6210
                           006211  1019 _USBCS0	=	0x6211
                           006211  1020 _USBCSIL	=	0x6211
                           006212  1021 _USBCSIH	=	0x6212
                           006213  1022 _USBMAXO	=	0x6213
                           006214  1023 _USBCSOL	=	0x6214
                           006215  1024 _USBCSOH	=	0x6215
                           006216  1025 _USBCNT0	=	0x6216
                           006216  1026 _USBCNTL	=	0x6216
                           006217  1027 _USBCNTH	=	0x6217
                           006220  1028 _USBF0	=	0x6220
                           006222  1029 _USBF1	=	0x6222
                           006224  1030 _USBF2	=	0x6224
                           006226  1031 _USBF3	=	0x6226
                           006228  1032 _USBF4	=	0x6228
                           00622A  1033 _USBF5	=	0x622a
                           007080  1034 _X_P0	=	0x7080
                           007086  1035 _X_U0CSR	=	0x7086
                           007089  1036 _X_P0IFG	=	0x7089
                           00708A  1037 _X_P1IFG	=	0x708a
                           00708B  1038 _X_P2IFG	=	0x708b
                           00708C  1039 _X_PICTL	=	0x708c
                           00708D  1040 _X_P1IEN	=	0x708d
                           00708F  1041 _X_P0INP	=	0x708f
                           007090  1042 _X_P1	=	0x7090
                           007091  1043 _X_RFIRQF1	=	0x7091
                           007093  1044 _X_MPAGE	=	0x7093
                           007093  1045 _X__XPAGE	=	0x7093
                           007094  1046 _X_T2CTRL	=	0x7094
                           007095  1047 _X_ST0	=	0x7095
                           007096  1048 _X_ST1	=	0x7096
                           007097  1049 _X_ST2	=	0x7097
                           00709C  1050 _X_T2EVTCFG	=	0x709c
                           00709D  1051 _X_SLEEPSTA	=	0x709d
                           00709E  1052 _X_CLKCONSTA	=	0x709e
                           00709F  1053 _X_FMAP	=	0x709f
                           00709F  1054 _X_PSBANK	=	0x709f
                           0070A0  1055 _X_P2	=	0x70a0
                           0070A1  1056 _X_T2IRQF	=	0x70a1
                           0070A2  1057 _X_T2M0	=	0x70a2
                           0070A3  1058 _X_T2M1	=	0x70a3
                           0070A4  1059 _X_T2MOVF0	=	0x70a4
                           0070A5  1060 _X_T2MOVF1	=	0x70a5
                           0070A6  1061 _X_T2MOVF2	=	0x70a6
                           0070A7  1062 _X_T2IRQM	=	0x70a7
                           0070AB  1063 _X_P0IEN	=	0x70ab
                           0070AC  1064 _X_P2IEN	=	0x70ac
                           0070AD  1065 _X_STLOAD	=	0x70ad
                           0070AE  1066 _X_PMUX	=	0x70ae
                           0070AF  1067 _X_T1STAT	=	0x70af
                           0070B1  1068 _X_ENCDI	=	0x70b1
                           0070B2  1069 _X_ENCDO	=	0x70b2
                           0070B3  1070 _X_ENCCS	=	0x70b3
                           0070B4  1071 _X_ADCCON1	=	0x70b4
                           0070B5  1072 _X_ADCCON2	=	0x70b5
                           0070B6  1073 _X_ADCCON3	=	0x70b6
                           0070BA  1074 _X_ADCL	=	0x70ba
                           0070BB  1075 _X_ADCH	=	0x70bb
                           0070BC  1076 _X_RNDL	=	0x70bc
                           0070BD  1077 _X_RNDH	=	0x70bd
                           0070BE  1078 _X_SLEEPCMD	=	0x70be
                           0070BF  1079 _X_RFERRF	=	0x70bf
                           0070C1  1080 _X_U0DBUF	=	0x70c1
                           0070C2  1081 _X_U0BAUD	=	0x70c2
                           0070C3  1082 _X_T2MSEL	=	0x70c3
                           0070C4  1083 _X_U0UCR	=	0x70c4
                           0070C5  1084 _X_U0GCR	=	0x70c5
                           0070C6  1085 _X_CLKCONCMD	=	0x70c6
                           0070C7  1086 _X_MEMCTR	=	0x70c7
                           0070C9  1087 _X_WDCTL	=	0x70c9
                           0070CA  1088 _X_T3CNT	=	0x70ca
                           0070CB  1089 _X_T3CTL	=	0x70cb
                           0070CC  1090 _X_T3CCTL0	=	0x70cc
                           0070CD  1091 _X_T3CC0	=	0x70cd
                           0070CE  1092 _X_T3CCTL1	=	0x70ce
                           0070CF  1093 _X_T3CC1	=	0x70cf
                           0070D1  1094 _X_DMAIRQ	=	0x70d1
                           0070D2  1095 _X_DMA1CFGL	=	0x70d2
                           0070D3  1096 _X_DMA1CFGH	=	0x70d3
                           0070D4  1097 _X_DMA0CFGL	=	0x70d4
                           0070D5  1098 _X_DMA0CFGH	=	0x70d5
                           0070D6  1099 _X_DMAARM	=	0x70d6
                           0070D7  1100 _X_DMAREQ	=	0x70d7
                           0070D8  1101 _X_TIMIF	=	0x70d8
                           0070D9  1102 _X_RFD	=	0x70d9
                           0070DA  1103 _X_T1CC0L	=	0x70da
                           0070DB  1104 _X_T1CC0H	=	0x70db
                           0070DC  1105 _X_T1CC1L	=	0x70dc
                           0070DD  1106 _X_T1CC1H	=	0x70dd
                           0070DE  1107 _X_T1CC2L	=	0x70de
                           0070DF  1108 _X_T1CC2H	=	0x70df
                           0070E1  1109 _X_RFST	=	0x70e1
                           0070E2  1110 _X_T1CNTL	=	0x70e2
                           0070E3  1111 _X_T1CNTH	=	0x70e3
                           0070E4  1112 _X_T1CTL	=	0x70e4
                           0070E5  1113 _X_T1CCTL0	=	0x70e5
                           0070E6  1114 _X_T1CCTL1	=	0x70e6
                           0070E7  1115 _X_T1CCTL2	=	0x70e7
                           0070E9  1116 _X_RFIRQF0	=	0x70e9
                           0070EA  1117 _X_T4CNT	=	0x70ea
                           0070EB  1118 _X_T4CTL	=	0x70eb
                           0070EC  1119 _X_T4CCTL0	=	0x70ec
                           0070ED  1120 _X_T4CC0	=	0x70ed
                           0070EE  1121 _X_T4CCTL1	=	0x70ee
                           0070EF  1122 _X_T4CC1	=	0x70ef
                           0070F1  1123 _X_PERCFG	=	0x70f1
                           0070F2  1124 _X_APCFG	=	0x70f2
                           0070F3  1125 _X_P0SEL	=	0x70f3
                           0070F4  1126 _X_P1SEL	=	0x70f4
                           0070F5  1127 _X_P2SEL	=	0x70f5
                           0070F6  1128 _X_P1INP	=	0x70f6
                           0070F7  1129 _X_P2INP	=	0x70f7
                           0070F8  1130 _X_U1CSR	=	0x70f8
                           0070F9  1131 _X_U1DBUF	=	0x70f9
                           0070FA  1132 _X_U1BAUD	=	0x70fa
                           0070FB  1133 _X_U1UCR	=	0x70fb
                           0070FC  1134 _X_U1GCR	=	0x70fc
                           0070FD  1135 _X_P0DIR	=	0x70fd
                           0070FE  1136 _X_P1DIR	=	0x70fe
                           0070FF  1137 _X_P2DIR	=	0x70ff
                           007800  1138 _X_INFOPAGE	=	0x7800
                           00780C  1139 _X_IEEE_ADDR	=	0x780c
      000000                       1140 _rt:
      000000                       1141 	.ds 8
      000008                       1142 _pt:
      000008                       1143 	.ds 2
      00000A                       1144 _is_listening:
      00000A                       1145 	.ds 1
      00000B                       1146 _encounter_memb_memb_count:
      00000B                       1147 	.ds 4
      00000F                       1148 _encounter_memb_memb_mem:
      00000F                       1149 	.ds 52
      000043                       1150 _is_streaming:
      000043                       1151 	.ds 1
      000044                       1152 _is_streaming_to:
      000044                       1153 	.ds 8
      00004C                       1154 _is_streaming_to_too:
      00004C                       1155 	.ds 8
      000054                       1156 _stream_until:
      000054                       1157 	.ds 2
      000056                       1158 _received_seqnos:
      000056                       1159 	.ds 72
                                   1160 ;--------------------------------------------------------
                                   1161 ; absolute external ram data
                                   1162 ;--------------------------------------------------------
                                   1163 	.area XABS    (ABS,XDATA)
                                   1164 ;--------------------------------------------------------
                                   1165 ; external initialized ram data
                                   1166 ;--------------------------------------------------------
                                   1167 	.area XISEG   (XDATA)
      000000                       1168 _xmac_config::
      000000                       1169 	.ds 8
      000008                       1170 _xmac_is_on:
      000008                       1171 	.ds 1
      000009                       1172 _waiting_for_packet:
      000009                       1173 	.ds 1
      00000A                       1174 _someone_is_sending:
      00000A                       1175 	.ds 1
      00000B                       1176 _we_are_sending:
      00000B                       1177 	.ds 1
      00000C                       1178 _radio_is_on:
      00000C                       1179 	.ds 1
      00000D                       1180 _encounter_list_list:
      00000D                       1181 	.ds 3
      000010                       1182 _encounter_list:
      000010                       1183 	.ds 3
      000013                       1184 _encounter_memb:
      000013                       1185 	.ds 10
                                   1186 	.area HOME    (CODE)
                                   1187 	.area GSINIT0 (CODE)
                                   1188 	.area GSINIT1 (CODE)
                                   1189 	.area GSINIT2 (CODE)
                                   1190 	.area GSINIT3 (CODE)
                                   1191 	.area GSINIT4 (CODE)
                                   1192 	.area GSINIT5 (CODE)
                                   1193 	.area GSINIT  (CODE)
                                   1194 	.area GSFINAL (CODE)
                                   1195 	.area CSEG    (CODE)
                                   1196 ;--------------------------------------------------------
                                   1197 ; global & static initialisations
                                   1198 ;--------------------------------------------------------
                                   1199 	.area HOME    (CODE)
                                   1200 	.area GSINIT  (CODE)
                                   1201 	.area GSFINAL (CODE)
                                   1202 	.area GSINIT  (CODE)
                                   1203 ;--------------------------------------------------------
                                   1204 ; Home
                                   1205 ;--------------------------------------------------------
                                   1206 	.area HOME    (CODE)
                                   1207 	.area HOME    (CODE)
                                   1208 ;--------------------------------------------------------
                                   1209 ; code
                                   1210 ;--------------------------------------------------------
                                   1211 	.area BANK1   (CODE)
                                   1212 ;------------------------------------------------------------
                                   1213 ;Allocation info for local variables in function 'on'
                                   1214 ;------------------------------------------------------------
                                   1215 ;	../../../../core/net/mac/xmac.c:233: on(void)
                                   1216 ;	-----------------------------------------
                                   1217 ;	 function on
                                   1218 ;	-----------------------------------------
      000000                       1219 _on:
                           000007  1220 	ar7 = 0x07
                           000006  1221 	ar6 = 0x06
                           000005  1222 	ar5 = 0x05
                           000004  1223 	ar4 = 0x04
                           000003  1224 	ar3 = 0x03
                           000002  1225 	ar2 = 0x02
                           000001  1226 	ar1 = 0x01
                           000000  1227 	ar0 = 0x00
                                   1228 ;	../../../../core/net/mac/xmac.c:235: if(xmac_is_on && radio_is_on == 0) {
      000000 90r00r08         [24] 1229 	mov	dptr,#_xmac_is_on
      000003 E0               [24] 1230 	movx	a,@dptr
      000004 FF               [12] 1231 	mov	r7,a
      000005 60 36            [24] 1232 	jz	00104$
      000007 90r00r0C         [24] 1233 	mov	dptr,#_radio_is_on
      00000A E0               [24] 1234 	movx	a,@dptr
      00000B FF               [12] 1235 	mov	r7,a
      00000C 70 2F            [24] 1236 	jnz	00104$
                                   1237 ;	../../../../core/net/mac/xmac.c:236: radio_is_on = 1;
      00000E 90r00r0C         [24] 1238 	mov	dptr,#_radio_is_on
      000011 74 01            [12] 1239 	mov	a,#0x01
      000013 F0               [24] 1240 	movx	@dptr,a
                                   1241 ;	../../../../core/net/mac/xmac.c:237: NETSTACK_RADIO.on();
      000014 90r00r18         [24] 1242 	mov	dptr,#(_cc2530_rf_driver + 0x0018)
      000017 E4               [12] 1243 	clr	a
      000018 93               [24] 1244 	movc	a,@a+dptr
      000019 FD               [12] 1245 	mov	r5,a
      00001A A3               [24] 1246 	inc	dptr
      00001B E4               [12] 1247 	clr	a
      00001C 93               [24] 1248 	movc	a,@a+dptr
      00001D FE               [12] 1249 	mov	r6,a
      00001E A3               [24] 1250 	inc	dptr
      00001F E4               [12] 1251 	clr	a
      000020 93               [24] 1252 	movc	a,@a+dptr
      000021 FF               [12] 1253 	mov	r7,a
      000022 C0 07            [24] 1254 	push	ar7
      000024 C0 06            [24] 1255 	push	ar6
      000026 C0 05            [24] 1256 	push	ar5
      000028 C0 05            [24] 1257 	push	ar5
      00002A C0 06            [24] 1258 	push	ar6
      00002C C0 07            [24] 1259 	push	ar7
      00002E D0 02            [24] 1260 	pop	ar2
      000030 D0 01            [24] 1261 	pop	ar1
      000032 D0 00            [24] 1262 	pop	ar0
      000034 12r00r00         [24] 1263 	lcall	__sdcc_banked_call
      000037 D0 05            [24] 1264 	pop	ar5
      000039 D0 06            [24] 1265 	pop	ar6
      00003B D0 07            [24] 1266 	pop	ar7
      00003D                       1267 00104$:
      00003D 02r00r00         [24] 1268 	ljmp	__sdcc_banked_ret
                                   1269 ;------------------------------------------------------------
                                   1270 ;Allocation info for local variables in function 'off'
                                   1271 ;------------------------------------------------------------
                                   1272 ;	../../../../core/net/mac/xmac.c:243: off(void)
                                   1273 ;	-----------------------------------------
                                   1274 ;	 function off
                                   1275 ;	-----------------------------------------
      000040                       1276 _off:
                                   1277 ;	../../../../core/net/mac/xmac.c:245: if(xmac_is_on && radio_is_on != 0 && is_listening == 0 &&
      000040 90r00r08         [24] 1278 	mov	dptr,#_xmac_is_on
      000043 E0               [24] 1279 	movx	a,@dptr
      000044 FF               [12] 1280 	mov	r7,a
      000045 60 43            [24] 1281 	jz	00106$
      000047 90r00r0C         [24] 1282 	mov	dptr,#_radio_is_on
      00004A E0               [24] 1283 	movx	a,@dptr
      00004B FF               [12] 1284 	mov	r7,a
      00004C 60 3C            [24] 1285 	jz	00106$
      00004E 90r00r0A         [24] 1286 	mov	dptr,#_is_listening
      000051 E0               [24] 1287 	movx	a,@dptr
      000052 FF               [12] 1288 	mov	r7,a
      000053 70 35            [24] 1289 	jnz	00106$
                                   1290 ;	../../../../core/net/mac/xmac.c:246: is_streaming == 0) {
      000055 90r00r43         [24] 1291 	mov	dptr,#_is_streaming
      000058 E0               [24] 1292 	movx	a,@dptr
      000059 FF               [12] 1293 	mov	r7,a
      00005A 70 2E            [24] 1294 	jnz	00106$
                                   1295 ;	../../../../core/net/mac/xmac.c:247: radio_is_on = 0;
      00005C 90r00r0C         [24] 1296 	mov	dptr,#_radio_is_on
      00005F E4               [12] 1297 	clr	a
      000060 F0               [24] 1298 	movx	@dptr,a
                                   1299 ;	../../../../core/net/mac/xmac.c:248: NETSTACK_RADIO.off();
      000061 90r00r1B         [24] 1300 	mov	dptr,#(_cc2530_rf_driver + 0x001b)
      000064 E4               [12] 1301 	clr	a
      000065 93               [24] 1302 	movc	a,@a+dptr
      000066 FD               [12] 1303 	mov	r5,a
      000067 A3               [24] 1304 	inc	dptr
      000068 E4               [12] 1305 	clr	a
      000069 93               [24] 1306 	movc	a,@a+dptr
      00006A FE               [12] 1307 	mov	r6,a
      00006B A3               [24] 1308 	inc	dptr
      00006C E4               [12] 1309 	clr	a
      00006D 93               [24] 1310 	movc	a,@a+dptr
      00006E FF               [12] 1311 	mov	r7,a
      00006F C0 07            [24] 1312 	push	ar7
      000071 C0 06            [24] 1313 	push	ar6
      000073 C0 05            [24] 1314 	push	ar5
      000075 C0 05            [24] 1315 	push	ar5
      000077 C0 06            [24] 1316 	push	ar6
      000079 C0 07            [24] 1317 	push	ar7
      00007B D0 02            [24] 1318 	pop	ar2
      00007D D0 01            [24] 1319 	pop	ar1
      00007F D0 00            [24] 1320 	pop	ar0
      000081 12r00r00         [24] 1321 	lcall	__sdcc_banked_call
      000084 D0 05            [24] 1322 	pop	ar5
      000086 D0 06            [24] 1323 	pop	ar6
      000088 D0 07            [24] 1324 	pop	ar7
      00008A                       1325 00106$:
      00008A 02r00r00         [24] 1326 	ljmp	__sdcc_banked_ret
                                   1327 ;------------------------------------------------------------
                                   1328 ;Allocation info for local variables in function 'schedule_powercycle'
                                   1329 ;------------------------------------------------------------
                                   1330 ;time                      Allocated to stack - sp -7
                                   1331 ;t                         Allocated to stack - sp -2
                                   1332 ;r                         Allocated to registers 
                                   1333 ;------------------------------------------------------------
                                   1334 ;	../../../../core/net/mac/xmac.c:255: schedule_powercycle(struct rtimer *t, rtimer_clock_t time)
                                   1335 ;	-----------------------------------------
                                   1336 ;	 function schedule_powercycle
                                   1337 ;	-----------------------------------------
      00008D                       1338 _schedule_powercycle:
      00008D C0 82            [24] 1339 	push	dpl
      00008F C0 83            [24] 1340 	push	dph
      000091 C0 F0            [24] 1341 	push	b
                                   1342 ;	../../../../core/net/mac/xmac.c:258: if(xmac_is_on) {
      000093 90r00r08         [24] 1343 	mov	dptr,#_xmac_is_on
      000096 E0               [24] 1344 	movx	a,@dptr
      000097 FC               [12] 1345 	mov	r4,a
      000098 60 5B            [24] 1346 	jz	00103$
                                   1347 ;	../../../../core/net/mac/xmac.c:260: (void (*)(struct rtimer *, void *))powercycle, NULL);
      00009A 7Ar32            [12] 1348 	mov	r2,#_powercycle
      00009C 7Bs01            [12] 1349 	mov	r3,#(_powercycle >> 8)
      00009E 7Cs00            [12] 1350 	mov	r4,#(_powercycle >> 16)
                                   1351 ;	../../../../core/net/mac/xmac.c:259: r = rtimer_set(t, RTIMER_TIME(t) + time, 1,
      0000A0 A8 81            [24] 1352 	mov	r0,sp
      0000A2 18               [12] 1353 	dec	r0
      0000A3 18               [12] 1354 	dec	r0
      0000A4 86 82            [24] 1355 	mov	dpl,@r0
      0000A6 08               [12] 1356 	inc	r0
      0000A7 86 83            [24] 1357 	mov	dph,@r0
      0000A9 08               [12] 1358 	inc	r0
      0000AA 86 F0            [24] 1359 	mov	b,@r0
      0000AC 12r00r00         [24] 1360 	lcall	__gptrget
      0000AF FE               [12] 1361 	mov	r6,a
      0000B0 A3               [24] 1362 	inc	dptr
      0000B1 12r00r00         [24] 1363 	lcall	__gptrget
      0000B4 FF               [12] 1364 	mov	r7,a
      0000B5 E5 81            [12] 1365 	mov	a,sp
      0000B7 24 F9            [12] 1366 	add	a,#0xf9
      0000B9 F8               [12] 1367 	mov	r0,a
      0000BA E6               [12] 1368 	mov	a,@r0
      0000BB 2E               [12] 1369 	add	a,r6
      0000BC FE               [12] 1370 	mov	r6,a
      0000BD 08               [12] 1371 	inc	r0
      0000BE E6               [12] 1372 	mov	a,@r0
      0000BF 3F               [12] 1373 	addc	a,r7
      0000C0 FF               [12] 1374 	mov	r7,a
      0000C1 E4               [12] 1375 	clr	a
      0000C2 C0 E0            [24] 1376 	push	acc
      0000C4 C0 E0            [24] 1377 	push	acc
      0000C6 C0 E0            [24] 1378 	push	acc
      0000C8 C0 02            [24] 1379 	push	ar2
      0000CA C0 03            [24] 1380 	push	ar3
      0000CC C0 04            [24] 1381 	push	ar4
      0000CE 74 01            [12] 1382 	mov	a,#0x01
      0000D0 C0 E0            [24] 1383 	push	acc
      0000D2 E4               [12] 1384 	clr	a
      0000D3 C0 E0            [24] 1385 	push	acc
      0000D5 C0 06            [24] 1386 	push	ar6
      0000D7 C0 07            [24] 1387 	push	ar7
      0000D9 E5 81            [12] 1388 	mov	a,sp
      0000DB 24 F4            [12] 1389 	add	a,#0xf4
      0000DD F8               [12] 1390 	mov	r0,a
      0000DE 86 82            [24] 1391 	mov	dpl,@r0
      0000E0 08               [12] 1392 	inc	r0
      0000E1 86 83            [24] 1393 	mov	dph,@r0
      0000E3 08               [12] 1394 	inc	r0
      0000E4 86 F0            [24] 1395 	mov	b,@r0
      0000E6 78r00            [12] 1396 	mov	r0,#_rtimer_set
      0000E8 79s00            [12] 1397 	mov	r1,#(_rtimer_set >> 8)
      0000EA 7As00            [12] 1398 	mov	r2,#(_rtimer_set >> 16)
      0000EC 12r00r00         [24] 1399 	lcall	__sdcc_banked_call
      0000EF E5 81            [12] 1400 	mov	a,sp
      0000F1 24 F6            [12] 1401 	add	a,#0xf6
      0000F3 F5 81            [12] 1402 	mov	sp,a
                                   1403 ;	../../../../core/net/mac/xmac.c:261: if(r) {
      0000F5                       1404 00103$:
      0000F5 15 81            [12] 1405 	dec	sp
      0000F7 15 81            [12] 1406 	dec	sp
      0000F9 15 81            [12] 1407 	dec	sp
      0000FB 02r00r00         [24] 1408 	ljmp	__sdcc_banked_ret
                                   1409 ;------------------------------------------------------------
                                   1410 ;Allocation info for local variables in function 'powercycle_turn_radio_off'
                                   1411 ;------------------------------------------------------------
                                   1412 ;	../../../../core/net/mac/xmac.c:267: powercycle_turn_radio_off(void)
                                   1413 ;	-----------------------------------------
                                   1414 ;	 function powercycle_turn_radio_off
                                   1415 ;	-----------------------------------------
      0000FE                       1416 _powercycle_turn_radio_off:
                                   1417 ;	../../../../core/net/mac/xmac.c:269: if(we_are_sending == 0 &&
      0000FE 90r00r0B         [24] 1418 	mov	dptr,#_we_are_sending
      000101 E0               [24] 1419 	movx	a,@dptr
      000102 FF               [12] 1420 	mov	r7,a
      000103 70 10            [24] 1421 	jnz	00104$
                                   1422 ;	../../../../core/net/mac/xmac.c:270: waiting_for_packet == 0) {
      000105 90r00r09         [24] 1423 	mov	dptr,#_waiting_for_packet
      000108 E0               [24] 1424 	movx	a,@dptr
      000109 FF               [12] 1425 	mov	r7,a
      00010A 70 09            [24] 1426 	jnz	00104$
                                   1427 ;	../../../../core/net/mac/xmac.c:271: off();
      00010C 78r40            [12] 1428 	mov	r0,#_off
      00010E 79s00            [12] 1429 	mov	r1,#(_off >> 8)
      000110 7As00            [12] 1430 	mov	r2,#(_off >> 16)
      000112 12r00r00         [24] 1431 	lcall	__sdcc_banked_call
      000115                       1432 00104$:
      000115 02r00r00         [24] 1433 	ljmp	__sdcc_banked_ret
                                   1434 ;------------------------------------------------------------
                                   1435 ;Allocation info for local variables in function 'powercycle_turn_radio_on'
                                   1436 ;------------------------------------------------------------
                                   1437 ;	../../../../core/net/mac/xmac.c:278: powercycle_turn_radio_on(void)
                                   1438 ;	-----------------------------------------
                                   1439 ;	 function powercycle_turn_radio_on
                                   1440 ;	-----------------------------------------
      000118                       1441 _powercycle_turn_radio_on:
                                   1442 ;	../../../../core/net/mac/xmac.c:280: if(we_are_sending == 0 &&
      000118 90r00r0B         [24] 1443 	mov	dptr,#_we_are_sending
      00011B E0               [24] 1444 	movx	a,@dptr
      00011C FF               [12] 1445 	mov	r7,a
      00011D 70 10            [24] 1446 	jnz	00104$
                                   1447 ;	../../../../core/net/mac/xmac.c:281: waiting_for_packet == 0) {
      00011F 90r00r09         [24] 1448 	mov	dptr,#_waiting_for_packet
      000122 E0               [24] 1449 	movx	a,@dptr
      000123 FF               [12] 1450 	mov	r7,a
      000124 70 09            [24] 1451 	jnz	00104$
                                   1452 ;	../../../../core/net/mac/xmac.c:282: on();
      000126 78r00            [12] 1453 	mov	r0,#_on
      000128 79s00            [12] 1454 	mov	r1,#(_on >> 8)
      00012A 7As00            [12] 1455 	mov	r2,#(_on >> 16)
      00012C 12r00r00         [24] 1456 	lcall	__sdcc_banked_call
      00012F                       1457 00104$:
      00012F 02r00r00         [24] 1458 	ljmp	__sdcc_banked_ret
                                   1459 ;------------------------------------------------------------
                                   1460 ;Allocation info for local variables in function 'powercycle'
                                   1461 ;------------------------------------------------------------
                                   1462 ;ptr                       Allocated to stack - sp -5
                                   1463 ;t                         Allocated to registers r5 r6 r7 
                                   1464 ;PT_YIELD_FLAG             Allocated to registers r4 
                                   1465 ;------------------------------------------------------------
                                   1466 ;	../../../../core/net/mac/xmac.c:286: powercycle(struct rtimer *t, void *ptr)
                                   1467 ;	-----------------------------------------
                                   1468 ;	 function powercycle
                                   1469 ;	-----------------------------------------
      000132                       1470 _powercycle:
      000132 AD 82            [24] 1471 	mov	r5,dpl
      000134 AE 83            [24] 1472 	mov	r6,dph
      000136 AF F0            [24] 1473 	mov	r7,b
                                   1474 ;	../../../../core/net/mac/xmac.c:288: if(is_streaming) {
      000138 90r00r43         [24] 1475 	mov	dptr,#_is_streaming
      00013B E0               [24] 1476 	movx	a,@dptr
      00013C FC               [12] 1477 	mov	r4,a
      00013D 70 03            [24] 1478 	jnz	00172$
      00013F 02r01rC0         [24] 1479 	ljmp	00104$
      000142                       1480 00172$:
                                   1481 ;	../../../../core/net/mac/xmac.c:289: if(!RTIMER_CLOCK_LT(RTIMER_NOW(), stream_until)) {
      000142 C0 05            [24] 1482 	push	ar5
      000144 C0 06            [24] 1483 	push	ar6
      000146 C0 07            [24] 1484 	push	ar7
      000148 AB E2            [24] 1485 	mov	r3,_T1CNTL
      00014A 7C 00            [12] 1486 	mov	r4,#0x00
      00014C AA E3            [24] 1487 	mov	r2,_T1CNTH
      00014E 8A 07            [24] 1488 	mov	ar7,r2
      000150 E4               [12] 1489 	clr	a
      000151 FA               [12] 1490 	mov	r2,a
      000152 2B               [12] 1491 	add	a,r3
      000153 FB               [12] 1492 	mov	r3,a
      000154 EF               [12] 1493 	mov	a,r7
      000155 3C               [12] 1494 	addc	a,r4
      000156 FC               [12] 1495 	mov	r4,a
      000157 90r00r54         [24] 1496 	mov	dptr,#_stream_until
      00015A E0               [24] 1497 	movx	a,@dptr
      00015B FE               [12] 1498 	mov	r6,a
      00015C A3               [24] 1499 	inc	dptr
      00015D E0               [24] 1500 	movx	a,@dptr
      00015E FF               [12] 1501 	mov	r7,a
      00015F EB               [12] 1502 	mov	a,r3
      000160 C3               [12] 1503 	clr	c
      000161 9E               [12] 1504 	subb	a,r6
      000162 EC               [12] 1505 	mov	a,r4
      000163 9F               [12] 1506 	subb	a,r7
      000164 D0 07            [24] 1507 	pop	ar7
      000166 D0 06            [24] 1508 	pop	ar6
      000168 D0 05            [24] 1509 	pop	ar5
      00016A 20 E7 53         [24] 1510 	jb	acc.7,00104$
                                   1511 ;	../../../../core/net/mac/xmac.c:290: is_streaming = 0;
      00016D 90r00r43         [24] 1512 	mov	dptr,#_is_streaming
      000170 E4               [12] 1513 	clr	a
      000171 F0               [24] 1514 	movx	@dptr,a
                                   1515 ;	../../../../core/net/mac/xmac.c:291: rimeaddr_copy(&is_streaming_to, &rimeaddr_null);
      000172 C0 07            [24] 1516 	push	ar7
      000174 C0 06            [24] 1517 	push	ar6
      000176 C0 05            [24] 1518 	push	ar5
      000178 74r00            [12] 1519 	mov	a,#_rimeaddr_null
      00017A C0 E0            [24] 1520 	push	acc
      00017C 74s00            [12] 1521 	mov	a,#(_rimeaddr_null >> 8)
      00017E C0 E0            [24] 1522 	push	acc
      000180 74 80            [12] 1523 	mov	a,#0x80
      000182 C0 E0            [24] 1524 	push	acc
      000184 90r00r44         [24] 1525 	mov	dptr,#_is_streaming_to
      000187 75 F0 00         [24] 1526 	mov	b,#0x00
      00018A 78r00            [12] 1527 	mov	r0,#_rimeaddr_copy
      00018C 79s00            [12] 1528 	mov	r1,#(_rimeaddr_copy >> 8)
      00018E 7As00            [12] 1529 	mov	r2,#(_rimeaddr_copy >> 16)
      000190 12r00r00         [24] 1530 	lcall	__sdcc_banked_call
      000193 15 81            [12] 1531 	dec	sp
      000195 15 81            [12] 1532 	dec	sp
      000197 15 81            [12] 1533 	dec	sp
                                   1534 ;	../../../../core/net/mac/xmac.c:292: rimeaddr_copy(&is_streaming_to_too, &rimeaddr_null);
      000199 74r00            [12] 1535 	mov	a,#_rimeaddr_null
      00019B C0 E0            [24] 1536 	push	acc
      00019D 74s00            [12] 1537 	mov	a,#(_rimeaddr_null >> 8)
      00019F C0 E0            [24] 1538 	push	acc
      0001A1 74 80            [12] 1539 	mov	a,#0x80
      0001A3 C0 E0            [24] 1540 	push	acc
      0001A5 90r00r4C         [24] 1541 	mov	dptr,#_is_streaming_to_too
      0001A8 75 F0 00         [24] 1542 	mov	b,#0x00
      0001AB 78r00            [12] 1543 	mov	r0,#_rimeaddr_copy
      0001AD 79s00            [12] 1544 	mov	r1,#(_rimeaddr_copy >> 8)
      0001AF 7As00            [12] 1545 	mov	r2,#(_rimeaddr_copy >> 16)
      0001B1 12r00r00         [24] 1546 	lcall	__sdcc_banked_call
      0001B4 15 81            [12] 1547 	dec	sp
      0001B6 15 81            [12] 1548 	dec	sp
      0001B8 15 81            [12] 1549 	dec	sp
      0001BA D0 05            [24] 1550 	pop	ar5
      0001BC D0 06            [24] 1551 	pop	ar6
      0001BE D0 07            [24] 1552 	pop	ar7
      0001C0                       1553 00104$:
                                   1554 ;	../../../../core/net/mac/xmac.c:296: PT_BEGIN(&pt);
      0001C0 7C 01            [12] 1555 	mov	r4,#0x01
      0001C2 90r00r08         [24] 1556 	mov	dptr,#_pt
      0001C5 E0               [24] 1557 	movx	a,@dptr
      0001C6 FA               [12] 1558 	mov	r2,a
      0001C7 A3               [24] 1559 	inc	dptr
      0001C8 E0               [24] 1560 	movx	a,@dptr
      0001C9 FB               [12] 1561 	mov	r3,a
      0001CA BA 00 05         [24] 1562 	cjne	r2,#0x00,00174$
      0001CD BB 00 02         [24] 1563 	cjne	r3,#0x00,00174$
      0001D0 80 14            [24] 1564 	sjmp	00128$
      0001D2                       1565 00174$:
      0001D2 BA 33 05         [24] 1566 	cjne	r2,#0x33,00175$
      0001D5 BB 01 02         [24] 1567 	cjne	r3,#0x01,00175$
      0001D8 80 68            [24] 1568 	sjmp	00108$
      0001DA                       1569 00175$:
      0001DA BA 42 06         [24] 1570 	cjne	r2,#0x42,00176$
      0001DD BB 01 03         [24] 1571 	cjne	r3,#0x01,00176$
      0001E0 02r03r13         [24] 1572 	ljmp	00118$
      0001E3                       1573 00176$:
      0001E3 02r03r1E         [24] 1574 	ljmp	00130$
                                   1575 ;	../../../../core/net/mac/xmac.c:298: while(1) {
      0001E6                       1576 00128$:
                                   1577 ;	../../../../core/net/mac/xmac.c:300: if(someone_is_sending > 0) {
      0001E6 90r00r0A         [24] 1578 	mov	dptr,#_someone_is_sending
      0001E9 E0               [24] 1579 	movx	a,@dptr
      0001EA FB               [12] 1580 	mov	r3,a
      0001EB 60 09            [24] 1581 	jz	00107$
                                   1582 ;	../../../../core/net/mac/xmac.c:301: someone_is_sending--;
      0001ED 90r00r0A         [24] 1583 	mov	dptr,#_someone_is_sending
      0001F0 E0               [24] 1584 	movx	a,@dptr
      0001F1 14               [12] 1585 	dec	a
      0001F2 90r00r0A         [24] 1586 	mov	dptr,#_someone_is_sending
      0001F5 F0               [24] 1587 	movx	@dptr,a
      0001F6                       1588 00107$:
                                   1589 ;	../../../../core/net/mac/xmac.c:305: powercycle_turn_radio_on();
      0001F6 C0 07            [24] 1590 	push	ar7
      0001F8 C0 06            [24] 1591 	push	ar6
      0001FA C0 05            [24] 1592 	push	ar5
      0001FC 78r18            [12] 1593 	mov	r0,#_powercycle_turn_radio_on
      0001FE 79s01            [12] 1594 	mov	r1,#(_powercycle_turn_radio_on >> 8)
      000200 7As00            [12] 1595 	mov	r2,#(_powercycle_turn_radio_on >> 16)
      000202 12r00r00         [24] 1596 	lcall	__sdcc_banked_call
      000205 D0 05            [24] 1597 	pop	ar5
      000207 D0 06            [24] 1598 	pop	ar6
      000209 D0 07            [24] 1599 	pop	ar7
                                   1600 ;	../../../../core/net/mac/xmac.c:306: schedule_powercycle(t, xmac_config.on_time);
      00020B 90r00r00         [24] 1601 	mov	dptr,#_xmac_config
      00020E E0               [24] 1602 	movx	a,@dptr
      00020F FA               [12] 1603 	mov	r2,a
      000210 A3               [24] 1604 	inc	dptr
      000211 E0               [24] 1605 	movx	a,@dptr
      000212 FB               [12] 1606 	mov	r3,a
      000213 C0 07            [24] 1607 	push	ar7
      000215 C0 06            [24] 1608 	push	ar6
      000217 C0 05            [24] 1609 	push	ar5
      000219 C0 02            [24] 1610 	push	ar2
      00021B C0 03            [24] 1611 	push	ar3
      00021D 8D 82            [24] 1612 	mov	dpl,r5
      00021F 8E 83            [24] 1613 	mov	dph,r6
      000221 8F F0            [24] 1614 	mov	b,r7
      000223 78r8D            [12] 1615 	mov	r0,#_schedule_powercycle
      000225 79s00            [12] 1616 	mov	r1,#(_schedule_powercycle >> 8)
      000227 7As00            [12] 1617 	mov	r2,#(_schedule_powercycle >> 16)
      000229 12r00r00         [24] 1618 	lcall	__sdcc_banked_call
      00022C 15 81            [12] 1619 	dec	sp
      00022E 15 81            [12] 1620 	dec	sp
      000230 D0 05            [24] 1621 	pop	ar5
      000232 D0 06            [24] 1622 	pop	ar6
      000234 D0 07            [24] 1623 	pop	ar7
                                   1624 ;	../../../../core/net/mac/xmac.c:307: PT_YIELD(&pt);
      000236 7C 00            [12] 1625 	mov	r4,#0x00
      000238 90r00r08         [24] 1626 	mov	dptr,#_pt
      00023B 74 33            [12] 1627 	mov	a,#0x33
      00023D F0               [24] 1628 	movx	@dptr,a
      00023E 74 01            [12] 1629 	mov	a,#0x01
      000240 A3               [24] 1630 	inc	dptr
      000241 F0               [24] 1631 	movx	@dptr,a
      000242                       1632 00108$:
      000242 EC               [12] 1633 	mov	a,r4
      000243 70 06            [24] 1634 	jnz	00112$
      000245 75 82 01         [24] 1635 	mov	dpl,#0x01
      000248 02r03r29         [24] 1636 	ljmp	00131$
      00024B                       1637 00112$:
                                   1638 ;	../../../../core/net/mac/xmac.c:309: if(xmac_config.off_time > 0 && !NETSTACK_RADIO.receiving_packet()) {
      00024B 90r00r02         [24] 1639 	mov	dptr,#(_xmac_config + 0x0002)
      00024E E0               [24] 1640 	movx	a,@dptr
      00024F FA               [12] 1641 	mov	r2,a
      000250 A3               [24] 1642 	inc	dptr
      000251 E0               [24] 1643 	movx	a,@dptr
      000252 FB               [12] 1644 	mov	r3,a
      000253 4A               [12] 1645 	orl	a,r2
      000254 60 90            [24] 1646 	jz	00128$
      000256 C0 05            [24] 1647 	push	ar5
      000258 C0 06            [24] 1648 	push	ar6
      00025A C0 07            [24] 1649 	push	ar7
      00025C 90r00r12         [24] 1650 	mov	dptr,#(_cc2530_rf_driver + 0x0012)
      00025F E4               [12] 1651 	clr	a
      000260 93               [24] 1652 	movc	a,@a+dptr
      000261 FA               [12] 1653 	mov	r2,a
      000262 A3               [24] 1654 	inc	dptr
      000263 E4               [12] 1655 	clr	a
      000264 93               [24] 1656 	movc	a,@a+dptr
      000265 FB               [12] 1657 	mov	r3,a
      000266 A3               [24] 1658 	inc	dptr
      000267 E4               [12] 1659 	clr	a
      000268 93               [24] 1660 	movc	a,@a+dptr
      000269 FF               [12] 1661 	mov	r7,a
      00026A C0 07            [24] 1662 	push	ar7
      00026C C0 06            [24] 1663 	push	ar6
      00026E C0 05            [24] 1664 	push	ar5
      000270 C0 02            [24] 1665 	push	ar2
      000272 C0 03            [24] 1666 	push	ar3
      000274 C0 07            [24] 1667 	push	ar7
      000276 D0 02            [24] 1668 	pop	ar2
      000278 D0 01            [24] 1669 	pop	ar1
      00027A D0 00            [24] 1670 	pop	ar0
      00027C 12r00r00         [24] 1671 	lcall	__sdcc_banked_call
      00027F AA 82            [24] 1672 	mov	r2,dpl
      000281 AB 83            [24] 1673 	mov	r3,dph
      000283 D0 05            [24] 1674 	pop	ar5
      000285 D0 06            [24] 1675 	pop	ar6
      000287 D0 07            [24] 1676 	pop	ar7
      000289 D0 07            [24] 1677 	pop	ar7
      00028B D0 06            [24] 1678 	pop	ar6
      00028D D0 05            [24] 1679 	pop	ar5
      00028F EA               [12] 1680 	mov	a,r2
      000290 4B               [12] 1681 	orl	a,r3
      000291 60 03            [24] 1682 	jz	00180$
      000293 02r01rE6         [24] 1683 	ljmp	00128$
      000296                       1684 00180$:
                                   1685 ;	../../../../core/net/mac/xmac.c:310: powercycle_turn_radio_off();
      000296 C0 07            [24] 1686 	push	ar7
      000298 C0 06            [24] 1687 	push	ar6
      00029A C0 05            [24] 1688 	push	ar5
      00029C 78rFE            [12] 1689 	mov	r0,#_powercycle_turn_radio_off
      00029E 79s00            [12] 1690 	mov	r1,#(_powercycle_turn_radio_off >> 8)
      0002A0 7As00            [12] 1691 	mov	r2,#(_powercycle_turn_radio_off >> 16)
      0002A2 12r00r00         [24] 1692 	lcall	__sdcc_banked_call
      0002A5 D0 05            [24] 1693 	pop	ar5
      0002A7 D0 06            [24] 1694 	pop	ar6
      0002A9 D0 07            [24] 1695 	pop	ar7
                                   1696 ;	../../../../core/net/mac/xmac.c:311: if(waiting_for_packet != 0) {
      0002AB 90r00r09         [24] 1697 	mov	dptr,#_waiting_for_packet
      0002AE E0               [24] 1698 	movx	a,@dptr
      0002AF FB               [12] 1699 	mov	r3,a
      0002B0 60 2A            [24] 1700 	jz	00117$
                                   1701 ;	../../../../core/net/mac/xmac.c:312: waiting_for_packet++;
      0002B2 90r00r09         [24] 1702 	mov	dptr,#_waiting_for_packet
      0002B5 E0               [24] 1703 	movx	a,@dptr
      0002B6 24 01            [12] 1704 	add	a,#0x01
      0002B8 F0               [24] 1705 	movx	@dptr,a
                                   1706 ;	../../../../core/net/mac/xmac.c:313: if(waiting_for_packet > 2) {
      0002B9 90r00r09         [24] 1707 	mov	dptr,#_waiting_for_packet
      0002BC E0               [24] 1708 	movx	a,@dptr
      0002BD FB               [12] 1709 	mov  r3,a
      0002BE 24 FD            [12] 1710 	add	a,#0xff - 0x02
      0002C0 50 1A            [24] 1711 	jnc	00117$
                                   1712 ;	../../../../core/net/mac/xmac.c:317: waiting_for_packet = 0;
      0002C2 90r00r09         [24] 1713 	mov	dptr,#_waiting_for_packet
      0002C5 E4               [12] 1714 	clr	a
      0002C6 F0               [24] 1715 	movx	@dptr,a
                                   1716 ;	../../../../core/net/mac/xmac.c:318: powercycle_turn_radio_off();
      0002C7 C0 07            [24] 1717 	push	ar7
      0002C9 C0 06            [24] 1718 	push	ar6
      0002CB C0 05            [24] 1719 	push	ar5
      0002CD 78rFE            [12] 1720 	mov	r0,#_powercycle_turn_radio_off
      0002CF 79s00            [12] 1721 	mov	r1,#(_powercycle_turn_radio_off >> 8)
      0002D1 7As00            [12] 1722 	mov	r2,#(_powercycle_turn_radio_off >> 16)
      0002D3 12r00r00         [24] 1723 	lcall	__sdcc_banked_call
      0002D6 D0 05            [24] 1724 	pop	ar5
      0002D8 D0 06            [24] 1725 	pop	ar6
      0002DA D0 07            [24] 1726 	pop	ar7
      0002DC                       1727 00117$:
                                   1728 ;	../../../../core/net/mac/xmac.c:321: schedule_powercycle(t, xmac_config.off_time);
      0002DC 90r00r02         [24] 1729 	mov	dptr,#(_xmac_config + 0x0002)
      0002DF E0               [24] 1730 	movx	a,@dptr
      0002E0 FA               [12] 1731 	mov	r2,a
      0002E1 A3               [24] 1732 	inc	dptr
      0002E2 E0               [24] 1733 	movx	a,@dptr
      0002E3 FB               [12] 1734 	mov	r3,a
      0002E4 C0 07            [24] 1735 	push	ar7
      0002E6 C0 06            [24] 1736 	push	ar6
      0002E8 C0 05            [24] 1737 	push	ar5
      0002EA C0 02            [24] 1738 	push	ar2
      0002EC C0 03            [24] 1739 	push	ar3
      0002EE 8D 82            [24] 1740 	mov	dpl,r5
      0002F0 8E 83            [24] 1741 	mov	dph,r6
      0002F2 8F F0            [24] 1742 	mov	b,r7
      0002F4 78r8D            [12] 1743 	mov	r0,#_schedule_powercycle
      0002F6 79s00            [12] 1744 	mov	r1,#(_schedule_powercycle >> 8)
      0002F8 7As00            [12] 1745 	mov	r2,#(_schedule_powercycle >> 16)
      0002FA 12r00r00         [24] 1746 	lcall	__sdcc_banked_call
      0002FD 15 81            [12] 1747 	dec	sp
      0002FF 15 81            [12] 1748 	dec	sp
      000301 D0 05            [24] 1749 	pop	ar5
      000303 D0 06            [24] 1750 	pop	ar6
      000305 D0 07            [24] 1751 	pop	ar7
                                   1752 ;	../../../../core/net/mac/xmac.c:322: PT_YIELD(&pt);
      000307 7C 00            [12] 1753 	mov	r4,#0x00
      000309 90r00r08         [24] 1754 	mov	dptr,#_pt
      00030C 74 42            [12] 1755 	mov	a,#0x42
      00030E F0               [24] 1756 	movx	@dptr,a
      00030F 74 01            [12] 1757 	mov	a,#0x01
      000311 A3               [24] 1758 	inc	dptr
      000312 F0               [24] 1759 	movx	@dptr,a
      000313                       1760 00118$:
      000313 EC               [12] 1761 	mov	a,r4
      000314 60 03            [24] 1762 	jz	00183$
      000316 02r01rE6         [24] 1763 	ljmp	00128$
      000319                       1764 00183$:
      000319 75 82 01         [24] 1765 	mov	dpl,#0x01
                                   1766 ;	../../../../core/net/mac/xmac.c:326: PT_END(&pt);
      00031C 80 0B            [24] 1767 	sjmp	00131$
      00031E                       1768 00130$:
      00031E 90r00r08         [24] 1769 	mov	dptr,#_pt
      000321 E4               [12] 1770 	clr	a
      000322 F0               [24] 1771 	movx	@dptr,a
      000323 E4               [12] 1772 	clr	a
      000324 A3               [24] 1773 	inc	dptr
      000325 F0               [24] 1774 	movx	@dptr,a
      000326 75 82 03         [24] 1775 	mov	dpl,#0x03
      000329                       1776 00131$:
      000329 02r00r00         [24] 1777 	ljmp	__sdcc_banked_ret
                                   1778 ;------------------------------------------------------------
                                   1779 ;Allocation info for local variables in function 'register_encounter'
                                   1780 ;------------------------------------------------------------
                                   1781 ;time                      Allocated to stack - sp -7
                                   1782 ;neighbor                  Allocated to stack - sp -2
                                   1783 ;e                         Allocated to registers r2 r3 r4 
                                   1784 ;------------------------------------------------------------
                                   1785 ;	../../../../core/net/mac/xmac.c:391: register_encounter(const rimeaddr_t *neighbor, rtimer_clock_t time)
                                   1786 ;	-----------------------------------------
                                   1787 ;	 function register_encounter
                                   1788 ;	-----------------------------------------
      00032C                       1789 _register_encounter:
      00032C C0 82            [24] 1790 	push	dpl
      00032E C0 83            [24] 1791 	push	dph
      000330 C0 F0            [24] 1792 	push	b
                                   1793 ;	../../../../core/net/mac/xmac.c:396: for(e = list_head(encounter_list); e != NULL; e = list_item_next(e)) {
      000332 90r00r10         [24] 1794 	mov	dptr,#_encounter_list
      000335 E0               [24] 1795 	movx	a,@dptr
      000336 FA               [12] 1796 	mov	r2,a
      000337 A3               [24] 1797 	inc	dptr
      000338 E0               [24] 1798 	movx	a,@dptr
      000339 FB               [12] 1799 	mov	r3,a
      00033A A3               [24] 1800 	inc	dptr
      00033B E0               [24] 1801 	movx	a,@dptr
      00033C FC               [12] 1802 	mov	r4,a
      00033D 8A 82            [24] 1803 	mov	dpl,r2
      00033F 8B 83            [24] 1804 	mov	dph,r3
      000341 8C F0            [24] 1805 	mov	b,r4
      000343 78r00            [12] 1806 	mov	r0,#_list_head
      000345 79s00            [12] 1807 	mov	r1,#(_list_head >> 8)
      000347 7As00            [12] 1808 	mov	r2,#(_list_head >> 16)
      000349 12r00r00         [24] 1809 	lcall	__sdcc_banked_call
      00034C AA 82            [24] 1810 	mov	r2,dpl
      00034E AB 83            [24] 1811 	mov	r3,dph
      000350 AC F0            [24] 1812 	mov	r4,b
      000352                       1813 00109$:
      000352 E4               [12] 1814 	clr	a
      000353 C0 E0            [24] 1815 	push	acc
      000355 E4               [12] 1816 	clr	a
      000356 C0 E0            [24] 1817 	push	acc
      000358 E4               [12] 1818 	clr	a
      000359 C0 E0            [24] 1819 	push	acc
      00035B 8A 82            [24] 1820 	mov	dpl,r2
      00035D 8B 83            [24] 1821 	mov	dph,r3
      00035F 8C F0            [24] 1822 	mov	b,r4
      000361 12r00r00         [24] 1823 	lcall	___gptr_cmp
      000364 15 81            [12] 1824 	dec	sp
      000366 15 81            [12] 1825 	dec	sp
      000368 15 81            [12] 1826 	dec	sp
      00036A 70 03            [24] 1827 	jnz	00128$
      00036C 02r03rF2         [24] 1828 	ljmp	00103$
      00036F                       1829 00128$:
                                   1830 ;	../../../../core/net/mac/xmac.c:397: if(rimeaddr_cmp(neighbor, &e->neighbor)) {
      00036F 74 03            [12] 1831 	mov	a,#0x03
      000371 2A               [12] 1832 	add	a,r2
      000372 FD               [12] 1833 	mov	r5,a
      000373 E4               [12] 1834 	clr	a
      000374 3B               [12] 1835 	addc	a,r3
      000375 FE               [12] 1836 	mov	r6,a
      000376 8C 07            [24] 1837 	mov	ar7,r4
      000378 C0 04            [24] 1838 	push	ar4
      00037A C0 03            [24] 1839 	push	ar3
      00037C C0 02            [24] 1840 	push	ar2
      00037E C0 05            [24] 1841 	push	ar5
      000380 C0 06            [24] 1842 	push	ar6
      000382 C0 07            [24] 1843 	push	ar7
      000384 E5 81            [12] 1844 	mov	a,sp
      000386 24 F8            [12] 1845 	add	a,#0xf8
      000388 F8               [12] 1846 	mov	r0,a
      000389 86 82            [24] 1847 	mov	dpl,@r0
      00038B 08               [12] 1848 	inc	r0
      00038C 86 83            [24] 1849 	mov	dph,@r0
      00038E 08               [12] 1850 	inc	r0
      00038F 86 F0            [24] 1851 	mov	b,@r0
      000391 78r00            [12] 1852 	mov	r0,#_rimeaddr_cmp
      000393 79s00            [12] 1853 	mov	r1,#(_rimeaddr_cmp >> 8)
      000395 7As00            [12] 1854 	mov	r2,#(_rimeaddr_cmp >> 16)
      000397 12r00r00         [24] 1855 	lcall	__sdcc_banked_call
      00039A AE 82            [24] 1856 	mov	r6,dpl
      00039C AF 83            [24] 1857 	mov	r7,dph
      00039E 15 81            [12] 1858 	dec	sp
      0003A0 15 81            [12] 1859 	dec	sp
      0003A2 15 81            [12] 1860 	dec	sp
      0003A4 D0 02            [24] 1861 	pop	ar2
      0003A6 D0 03            [24] 1862 	pop	ar3
      0003A8 D0 04            [24] 1863 	pop	ar4
      0003AA EE               [12] 1864 	mov	a,r6
      0003AB 4F               [12] 1865 	orl	a,r7
      0003AC 60 20            [24] 1866 	jz	00110$
                                   1867 ;	../../../../core/net/mac/xmac.c:398: e->time = time;
      0003AE 74 0B            [12] 1868 	mov	a,#0x0B
      0003B0 2A               [12] 1869 	add	a,r2
      0003B1 FD               [12] 1870 	mov	r5,a
      0003B2 E4               [12] 1871 	clr	a
      0003B3 3B               [12] 1872 	addc	a,r3
      0003B4 FE               [12] 1873 	mov	r6,a
      0003B5 8C 07            [24] 1874 	mov	ar7,r4
      0003B7 8D 82            [24] 1875 	mov	dpl,r5
      0003B9 8E 83            [24] 1876 	mov	dph,r6
      0003BB 8F F0            [24] 1877 	mov	b,r7
      0003BD E5 81            [12] 1878 	mov	a,sp
      0003BF 24 F9            [12] 1879 	add	a,#0xf9
      0003C1 F8               [12] 1880 	mov	r0,a
      0003C2 E6               [12] 1881 	mov	a,@r0
      0003C3 12r00r00         [24] 1882 	lcall	__gptrput
      0003C6 A3               [24] 1883 	inc	dptr
      0003C7 08               [12] 1884 	inc	r0
      0003C8 E6               [12] 1885 	mov	a,@r0
      0003C9 12r00r00         [24] 1886 	lcall	__gptrput
                                   1887 ;	../../../../core/net/mac/xmac.c:399: break;
      0003CC 80 24            [24] 1888 	sjmp	00103$
      0003CE                       1889 00110$:
                                   1890 ;	../../../../core/net/mac/xmac.c:396: for(e = list_head(encounter_list); e != NULL; e = list_item_next(e)) {
      0003CE 8A 05            [24] 1891 	mov	ar5,r2
      0003D0 8B 06            [24] 1892 	mov	ar6,r3
      0003D2 8C 07            [24] 1893 	mov	ar7,r4
      0003D4 8D 82            [24] 1894 	mov	dpl,r5
      0003D6 8E 83            [24] 1895 	mov	dph,r6
      0003D8 8F F0            [24] 1896 	mov	b,r7
      0003DA 78r00            [12] 1897 	mov	r0,#_list_item_next
      0003DC 79s00            [12] 1898 	mov	r1,#(_list_item_next >> 8)
      0003DE 7As00            [12] 1899 	mov	r2,#(_list_item_next >> 16)
      0003E0 12r00r00         [24] 1900 	lcall	__sdcc_banked_call
      0003E3 AD 82            [24] 1901 	mov	r5,dpl
      0003E5 AE 83            [24] 1902 	mov	r6,dph
      0003E7 AF F0            [24] 1903 	mov	r7,b
      0003E9 8D 02            [24] 1904 	mov	ar2,r5
      0003EB 8E 03            [24] 1905 	mov	ar3,r6
      0003ED 8F 04            [24] 1906 	mov	ar4,r7
      0003EF 02r03r52         [24] 1907 	ljmp	00109$
      0003F2                       1908 00103$:
                                   1909 ;	../../../../core/net/mac/xmac.c:403: if(e == NULL) {
      0003F2 EA               [12] 1910 	mov	a,r2
      0003F3 4B               [12] 1911 	orl	a,r3
      0003F4 60 03            [24] 1912 	jz	00130$
      0003F6 02r04r99         [24] 1913 	ljmp	00111$
      0003F9                       1914 00130$:
                                   1915 ;	../../../../core/net/mac/xmac.c:404: e = memb_alloc(&encounter_memb);
      0003F9 90r00r13         [24] 1916 	mov	dptr,#_encounter_memb
      0003FC 75 F0 00         [24] 1917 	mov	b,#0x00
      0003FF 78r00            [12] 1918 	mov	r0,#_memb_alloc
      000401 79s00            [12] 1919 	mov	r1,#(_memb_alloc >> 8)
      000403 7As00            [12] 1920 	mov	r2,#(_memb_alloc >> 16)
      000405 12r00r00         [24] 1921 	lcall	__sdcc_banked_call
      000408 AD 82            [24] 1922 	mov	r5,dpl
      00040A AE 83            [24] 1923 	mov	r6,dph
      00040C AF F0            [24] 1924 	mov	r7,b
      00040E 8D 02            [24] 1925 	mov	ar2,r5
      000410 8E 03            [24] 1926 	mov	ar3,r6
      000412 8F 04            [24] 1927 	mov	ar4,r7
                                   1928 ;	../../../../core/net/mac/xmac.c:405: if(e == NULL) {
      000414 EA               [12] 1929 	mov	a,r2
      000415 4B               [12] 1930 	orl	a,r3
      000416 70 03            [24] 1931 	jnz	00105$
                                   1932 ;	../../../../core/net/mac/xmac.c:407: return;
      000418 02r04r99         [24] 1933 	ljmp	00111$
      00041B                       1934 00105$:
                                   1935 ;	../../../../core/net/mac/xmac.c:409: rimeaddr_copy(&e->neighbor, neighbor);
      00041B 74 03            [12] 1936 	mov	a,#0x03
      00041D 2A               [12] 1937 	add	a,r2
      00041E FD               [12] 1938 	mov	r5,a
      00041F E4               [12] 1939 	clr	a
      000420 3B               [12] 1940 	addc	a,r3
      000421 FE               [12] 1941 	mov	r6,a
      000422 8C 07            [24] 1942 	mov	ar7,r4
      000424 C0 04            [24] 1943 	push	ar4
      000426 C0 03            [24] 1944 	push	ar3
      000428 C0 02            [24] 1945 	push	ar2
      00042A E5 81            [12] 1946 	mov	a,sp
      00042C 24 FB            [12] 1947 	add	a,#0xfb
      00042E F8               [12] 1948 	mov	r0,a
      00042F E6               [12] 1949 	mov	a,@r0
      000430 C0 E0            [24] 1950 	push	acc
      000432 08               [12] 1951 	inc	r0
      000433 E6               [12] 1952 	mov	a,@r0
      000434 C0 E0            [24] 1953 	push	acc
      000436 08               [12] 1954 	inc	r0
      000437 E6               [12] 1955 	mov	a,@r0
      000438 C0 E0            [24] 1956 	push	acc
      00043A 8D 82            [24] 1957 	mov	dpl,r5
      00043C 8E 83            [24] 1958 	mov	dph,r6
      00043E 8F F0            [24] 1959 	mov	b,r7
      000440 78r00            [12] 1960 	mov	r0,#_rimeaddr_copy
      000442 79s00            [12] 1961 	mov	r1,#(_rimeaddr_copy >> 8)
      000444 7As00            [12] 1962 	mov	r2,#(_rimeaddr_copy >> 16)
      000446 12r00r00         [24] 1963 	lcall	__sdcc_banked_call
      000449 15 81            [12] 1964 	dec	sp
      00044B 15 81            [12] 1965 	dec	sp
      00044D 15 81            [12] 1966 	dec	sp
      00044F D0 02            [24] 1967 	pop	ar2
      000451 D0 03            [24] 1968 	pop	ar3
      000453 D0 04            [24] 1969 	pop	ar4
                                   1970 ;	../../../../core/net/mac/xmac.c:410: e->time = time;
      000455 74 0B            [12] 1971 	mov	a,#0x0B
      000457 2A               [12] 1972 	add	a,r2
      000458 FD               [12] 1973 	mov	r5,a
      000459 E4               [12] 1974 	clr	a
      00045A 3B               [12] 1975 	addc	a,r3
      00045B FE               [12] 1976 	mov	r6,a
      00045C 8C 07            [24] 1977 	mov	ar7,r4
      00045E 8D 82            [24] 1978 	mov	dpl,r5
      000460 8E 83            [24] 1979 	mov	dph,r6
      000462 8F F0            [24] 1980 	mov	b,r7
      000464 E5 81            [12] 1981 	mov	a,sp
      000466 24 F9            [12] 1982 	add	a,#0xf9
      000468 F8               [12] 1983 	mov	r0,a
      000469 E6               [12] 1984 	mov	a,@r0
      00046A 12r00r00         [24] 1985 	lcall	__gptrput
      00046D A3               [24] 1986 	inc	dptr
      00046E 08               [12] 1987 	inc	r0
      00046F E6               [12] 1988 	mov	a,@r0
      000470 12r00r00         [24] 1989 	lcall	__gptrput
                                   1990 ;	../../../../core/net/mac/xmac.c:411: list_add(encounter_list, e);
      000473 90r00r10         [24] 1991 	mov	dptr,#_encounter_list
      000476 E0               [24] 1992 	movx	a,@dptr
      000477 FD               [12] 1993 	mov	r5,a
      000478 A3               [24] 1994 	inc	dptr
      000479 E0               [24] 1995 	movx	a,@dptr
      00047A FE               [12] 1996 	mov	r6,a
      00047B A3               [24] 1997 	inc	dptr
      00047C E0               [24] 1998 	movx	a,@dptr
      00047D FF               [12] 1999 	mov	r7,a
      00047E C0 02            [24] 2000 	push	ar2
      000480 C0 03            [24] 2001 	push	ar3
      000482 C0 04            [24] 2002 	push	ar4
      000484 8D 82            [24] 2003 	mov	dpl,r5
      000486 8E 83            [24] 2004 	mov	dph,r6
      000488 8F F0            [24] 2005 	mov	b,r7
      00048A 78r00            [12] 2006 	mov	r0,#_list_add
      00048C 79s00            [12] 2007 	mov	r1,#(_list_add >> 8)
      00048E 7As00            [12] 2008 	mov	r2,#(_list_add >> 16)
      000490 12r00r00         [24] 2009 	lcall	__sdcc_banked_call
      000493 15 81            [12] 2010 	dec	sp
      000495 15 81            [12] 2011 	dec	sp
      000497 15 81            [12] 2012 	dec	sp
      000499                       2013 00111$:
      000499 15 81            [12] 2014 	dec	sp
      00049B 15 81            [12] 2015 	dec	sp
      00049D 15 81            [12] 2016 	dec	sp
      00049F 02r00r00         [24] 2017 	ljmp	__sdcc_banked_ret
                                   2018 ;------------------------------------------------------------
                                   2019 ;Allocation info for local variables in function 'detect_ack'
                                   2020 ;------------------------------------------------------------
                                   2021 ;wt                        Allocated to registers r5 r6 
                                   2022 ;ack_received              Allocated to registers r7 
                                   2023 ;len                       Allocated to registers r4 r5 
                                   2024 ;ackbuf                    Allocated to stack - sp -4
                                   2025 ;------------------------------------------------------------
                                   2026 ;	../../../../core/net/mac/xmac.c:417: detect_ack(void)
                                   2027 ;	-----------------------------------------
                                   2028 ;	 function detect_ack
                                   2029 ;	-----------------------------------------
      0004A2                       2030 _detect_ack:
      0004A2 E5 81            [12] 2031 	mov	a,sp
      0004A4 24 05            [12] 2032 	add	a,#0x05
      0004A6 F5 81            [12] 2033 	mov	sp,a
                                   2034 ;	../../../../core/net/mac/xmac.c:423: uint8_t ack_received = 0;
      0004A8 7F 00            [12] 2035 	mov	r7,#0x00
                                   2036 ;	../../../../core/net/mac/xmac.c:425: wt = RTIMER_NOW();
      0004AA AD E2            [24] 2037 	mov	r5,_T1CNTL
      0004AC 7E 00            [12] 2038 	mov	r6,#0x00
      0004AE AB E3            [24] 2039 	mov	r3,_T1CNTH
      0004B0 8B 04            [24] 2040 	mov	ar4,r3
      0004B2 E4               [12] 2041 	clr	a
      0004B3 2D               [12] 2042 	add	a,r5
      0004B4 FD               [12] 2043 	mov	r5,a
      0004B5 EC               [12] 2044 	mov	a,r4
      0004B6 3E               [12] 2045 	addc	a,r6
      0004B7 FE               [12] 2046 	mov	r6,a
                                   2047 ;	../../../../core/net/mac/xmac.c:426: leds_on(LEDS_GREEN);
      0004B8 75 82 01         [24] 2048 	mov	dpl,#0x01
      0004BB C0 07            [24] 2049 	push	ar7
      0004BD C0 06            [24] 2050 	push	ar6
      0004BF C0 05            [24] 2051 	push	ar5
      0004C1 78r00            [12] 2052 	mov	r0,#_leds_on
      0004C3 79s00            [12] 2053 	mov	r1,#(_leds_on >> 8)
      0004C5 7As00            [12] 2054 	mov	r2,#(_leds_on >> 16)
      0004C7 12r00r00         [24] 2055 	lcall	__sdcc_banked_call
      0004CA D0 05            [24] 2056 	pop	ar5
      0004CC D0 06            [24] 2057 	pop	ar6
      0004CE D0 07            [24] 2058 	pop	ar7
                                   2059 ;	../../../../core/net/mac/xmac.c:427: while(RTIMER_CLOCK_LT(RTIMER_NOW(), wt + INTER_PACKET_INTERVAL)) { }
      0004D0 74 03            [12] 2060 	mov	a,#0x03
      0004D2 2D               [12] 2061 	add	a,r5
      0004D3 FD               [12] 2062 	mov	r5,a
      0004D4 E4               [12] 2063 	clr	a
      0004D5 3E               [12] 2064 	addc	a,r6
      0004D6 FE               [12] 2065 	mov	r6,a
      0004D7                       2066 00101$:
      0004D7 C0 07            [24] 2067 	push	ar7
      0004D9 AB E2            [24] 2068 	mov	r3,_T1CNTL
      0004DB 7C 00            [12] 2069 	mov	r4,#0x00
      0004DD AA E3            [24] 2070 	mov	r2,_T1CNTH
      0004DF 8A 07            [24] 2071 	mov	ar7,r2
      0004E1 E4               [12] 2072 	clr	a
      0004E2 FA               [12] 2073 	mov	r2,a
      0004E3 2B               [12] 2074 	add	a,r3
      0004E4 FB               [12] 2075 	mov	r3,a
      0004E5 EF               [12] 2076 	mov	a,r7
      0004E6 3C               [12] 2077 	addc	a,r4
      0004E7 FC               [12] 2078 	mov	r4,a
      0004E8 EB               [12] 2079 	mov	a,r3
      0004E9 C3               [12] 2080 	clr	c
      0004EA 9D               [12] 2081 	subb	a,r5
      0004EB FB               [12] 2082 	mov	r3,a
      0004EC EC               [12] 2083 	mov	a,r4
      0004ED 9E               [12] 2084 	subb	a,r6
      0004EE FC               [12] 2085 	mov	r4,a
      0004EF D0 07            [24] 2086 	pop	ar7
      0004F1 20 E7 E3         [24] 2087 	jb	acc.7,00101$
                                   2088 ;	../../../../core/net/mac/xmac.c:428: leds_off(LEDS_GREEN);
      0004F4 75 82 01         [24] 2089 	mov	dpl,#0x01
      0004F7 C0 07            [24] 2090 	push	ar7
      0004F9 78r00            [12] 2091 	mov	r0,#_leds_off
      0004FB 79s00            [12] 2092 	mov	r1,#(_leds_off >> 8)
      0004FD 7As00            [12] 2093 	mov	r2,#(_leds_off >> 16)
      0004FF 12r00r00         [24] 2094 	lcall	__sdcc_banked_call
                                   2095 ;	../../../../core/net/mac/xmac.c:430: if((NETSTACK_RADIO.receiving_packet() ||
      000502 90r00r12         [24] 2096 	mov	dptr,#(_cc2530_rf_driver + 0x0012)
      000505 E4               [12] 2097 	clr	a
      000506 93               [24] 2098 	movc	a,@a+dptr
      000507 FC               [12] 2099 	mov	r4,a
      000508 A3               [24] 2100 	inc	dptr
      000509 E4               [12] 2101 	clr	a
      00050A 93               [24] 2102 	movc	a,@a+dptr
      00050B FD               [12] 2103 	mov	r5,a
      00050C A3               [24] 2104 	inc	dptr
      00050D E4               [12] 2105 	clr	a
      00050E 93               [24] 2106 	movc	a,@a+dptr
      00050F FE               [12] 2107 	mov	r6,a
      000510 C0 06            [24] 2108 	push	ar6
      000512 C0 04            [24] 2109 	push	ar4
      000514 C0 05            [24] 2110 	push	ar5
      000516 C0 06            [24] 2111 	push	ar6
      000518 D0 02            [24] 2112 	pop	ar2
      00051A D0 01            [24] 2113 	pop	ar1
      00051C D0 00            [24] 2114 	pop	ar0
      00051E 12r00r00         [24] 2115 	lcall	__sdcc_banked_call
      000521 AC 82            [24] 2116 	mov	r4,dpl
      000523 AD 83            [24] 2117 	mov	r5,dph
      000525 D0 06            [24] 2118 	pop	ar6
      000527 D0 07            [24] 2119 	pop	ar7
      000529 EC               [12] 2120 	mov	a,r4
      00052A 4D               [12] 2121 	orl	a,r5
      00052B 70 5D            [24] 2122 	jnz	00109$
                                   2123 ;	../../../../core/net/mac/xmac.c:431: NETSTACK_RADIO.pending_packet() ||
      00052D 90r00r15         [24] 2124 	mov	dptr,#(_cc2530_rf_driver + 0x0015)
      000530 E4               [12] 2125 	clr	a
      000531 93               [24] 2126 	movc	a,@a+dptr
      000532 FC               [12] 2127 	mov	r4,a
      000533 A3               [24] 2128 	inc	dptr
      000534 E4               [12] 2129 	clr	a
      000535 93               [24] 2130 	movc	a,@a+dptr
      000536 FD               [12] 2131 	mov	r5,a
      000537 A3               [24] 2132 	inc	dptr
      000538 E4               [12] 2133 	clr	a
      000539 93               [24] 2134 	movc	a,@a+dptr
      00053A FE               [12] 2135 	mov	r6,a
      00053B C0 07            [24] 2136 	push	ar7
      00053D C0 06            [24] 2137 	push	ar6
      00053F C0 04            [24] 2138 	push	ar4
      000541 C0 05            [24] 2139 	push	ar5
      000543 C0 06            [24] 2140 	push	ar6
      000545 D0 02            [24] 2141 	pop	ar2
      000547 D0 01            [24] 2142 	pop	ar1
      000549 D0 00            [24] 2143 	pop	ar0
      00054B 12r00r00         [24] 2144 	lcall	__sdcc_banked_call
      00054E AC 82            [24] 2145 	mov	r4,dpl
      000550 AD 83            [24] 2146 	mov	r5,dph
      000552 D0 06            [24] 2147 	pop	ar6
      000554 D0 07            [24] 2148 	pop	ar7
      000556 EC               [12] 2149 	mov	a,r4
      000557 4D               [12] 2150 	orl	a,r5
      000558 70 30            [24] 2151 	jnz	00109$
                                   2152 ;	../../../../core/net/mac/xmac.c:432: NETSTACK_RADIO.channel_clear() == 0)) {
      00055A 90r00r0F         [24] 2153 	mov	dptr,#(_cc2530_rf_driver + 0x000f)
      00055D E4               [12] 2154 	clr	a
      00055E 93               [24] 2155 	movc	a,@a+dptr
      00055F FC               [12] 2156 	mov	r4,a
      000560 A3               [24] 2157 	inc	dptr
      000561 E4               [12] 2158 	clr	a
      000562 93               [24] 2159 	movc	a,@a+dptr
      000563 FD               [12] 2160 	mov	r5,a
      000564 A3               [24] 2161 	inc	dptr
      000565 E4               [12] 2162 	clr	a
      000566 93               [24] 2163 	movc	a,@a+dptr
      000567 FE               [12] 2164 	mov	r6,a
      000568 C0 07            [24] 2165 	push	ar7
      00056A C0 06            [24] 2166 	push	ar6
      00056C C0 04            [24] 2167 	push	ar4
      00056E C0 05            [24] 2168 	push	ar5
      000570 C0 06            [24] 2169 	push	ar6
      000572 D0 02            [24] 2170 	pop	ar2
      000574 D0 01            [24] 2171 	pop	ar1
      000576 D0 00            [24] 2172 	pop	ar0
      000578 12r00r00         [24] 2173 	lcall	__sdcc_banked_call
      00057B AC 82            [24] 2174 	mov	r4,dpl
      00057D AD 83            [24] 2175 	mov	r5,dph
      00057F D0 06            [24] 2176 	pop	ar6
      000581 D0 07            [24] 2177 	pop	ar7
      000583 EC               [12] 2178 	mov	a,r4
      000584 4D               [12] 2179 	orl	a,r5
      000585 60 03            [24] 2180 	jz	00144$
      000587 02r06r12         [24] 2181 	ljmp	00110$
      00058A                       2182 00144$:
      00058A                       2183 00109$:
                                   2184 ;	../../../../core/net/mac/xmac.c:436: wt = RTIMER_NOW();
      00058A AD E2            [24] 2185 	mov	r5,_T1CNTL
      00058C 7E 00            [12] 2186 	mov	r6,#0x00
      00058E AB E3            [24] 2187 	mov	r3,_T1CNTH
      000590 8B 04            [24] 2188 	mov	ar4,r3
      000592 E4               [12] 2189 	clr	a
      000593 FB               [12] 2190 	mov	r3,a
      000594 2D               [12] 2191 	add	a,r5
      000595 FD               [12] 2192 	mov	r5,a
      000596 EC               [12] 2193 	mov	a,r4
      000597 3E               [12] 2194 	addc	a,r6
      000598 FE               [12] 2195 	mov	r6,a
                                   2196 ;	../../../../core/net/mac/xmac.c:437: while(RTIMER_CLOCK_LT(RTIMER_NOW(), wt + AFTER_ACK_DETECTECT_WAIT_TIME)) { }
      000599 74 0F            [12] 2197 	mov	a,#0x0F
      00059B 2D               [12] 2198 	add	a,r5
      00059C FD               [12] 2199 	mov	r5,a
      00059D E4               [12] 2200 	clr	a
      00059E 3E               [12] 2201 	addc	a,r6
      00059F FE               [12] 2202 	mov	r6,a
      0005A0                       2203 00104$:
      0005A0 C0 07            [24] 2204 	push	ar7
      0005A2 AB E2            [24] 2205 	mov	r3,_T1CNTL
      0005A4 7C 00            [12] 2206 	mov	r4,#0x00
      0005A6 AA E3            [24] 2207 	mov	r2,_T1CNTH
      0005A8 8A 07            [24] 2208 	mov	ar7,r2
      0005AA E4               [12] 2209 	clr	a
      0005AB FA               [12] 2210 	mov	r2,a
      0005AC 2B               [12] 2211 	add	a,r3
      0005AD FB               [12] 2212 	mov	r3,a
      0005AE EF               [12] 2213 	mov	a,r7
      0005AF 3C               [12] 2214 	addc	a,r4
      0005B0 FC               [12] 2215 	mov	r4,a
      0005B1 EB               [12] 2216 	mov	a,r3
      0005B2 C3               [12] 2217 	clr	c
      0005B3 9D               [12] 2218 	subb	a,r5
      0005B4 FB               [12] 2219 	mov	r3,a
      0005B5 EC               [12] 2220 	mov	a,r4
      0005B6 9E               [12] 2221 	subb	a,r6
      0005B7 FC               [12] 2222 	mov	r4,a
      0005B8 D0 07            [24] 2223 	pop	ar7
      0005BA 20 E7 E3         [24] 2224 	jb	acc.7,00104$
                                   2225 ;	../../../../core/net/mac/xmac.c:439: len = NETSTACK_RADIO.read(ackbuf, ACK_LEN);
      0005BD C0 07            [24] 2226 	push	ar7
      0005BF 90r00r0C         [24] 2227 	mov	dptr,#(_cc2530_rf_driver + 0x000c)
      0005C2 E4               [12] 2228 	clr	a
      0005C3 93               [24] 2229 	movc	a,@a+dptr
      0005C4 FC               [12] 2230 	mov	r4,a
      0005C5 A3               [24] 2231 	inc	dptr
      0005C6 E4               [12] 2232 	clr	a
      0005C7 93               [24] 2233 	movc	a,@a+dptr
      0005C8 FD               [12] 2234 	mov	r5,a
      0005C9 A3               [24] 2235 	inc	dptr
      0005CA E4               [12] 2236 	clr	a
      0005CB 93               [24] 2237 	movc	a,@a+dptr
      0005CC FE               [12] 2238 	mov	r6,a
      0005CD E5 81            [12] 2239 	mov	a,sp
      0005CF 24 FB            [12] 2240 	add	a,#0xFB
      0005D1 FA               [12] 2241 	mov	r2,a
      0005D2 7B 00            [12] 2242 	mov	r3,#0x00
      0005D4 7F 40            [12] 2243 	mov	r7,#0x40
      0005D6 C0 07            [24] 2244 	push	ar7
      0005D8 C0 06            [24] 2245 	push	ar6
      0005DA 74 03            [12] 2246 	mov	a,#0x03
      0005DC C0 E0            [24] 2247 	push	acc
      0005DE E4               [12] 2248 	clr	a
      0005DF C0 E0            [24] 2249 	push	acc
      0005E1 C0 04            [24] 2250 	push	ar4
      0005E3 C0 05            [24] 2251 	push	ar5
      0005E5 C0 06            [24] 2252 	push	ar6
      0005E7 8A 82            [24] 2253 	mov	dpl,r2
      0005E9 8B 83            [24] 2254 	mov	dph,r3
      0005EB 8F F0            [24] 2255 	mov	b,r7
      0005ED D0 02            [24] 2256 	pop	ar2
      0005EF D0 01            [24] 2257 	pop	ar1
      0005F1 D0 00            [24] 2258 	pop	ar0
      0005F3 12r00r00         [24] 2259 	lcall	__sdcc_banked_call
      0005F6 AC 82            [24] 2260 	mov	r4,dpl
      0005F8 AD 83            [24] 2261 	mov	r5,dph
      0005FA 15 81            [12] 2262 	dec	sp
      0005FC 15 81            [12] 2263 	dec	sp
      0005FE D0 06            [24] 2264 	pop	ar6
      000600 D0 07            [24] 2265 	pop	ar7
                                   2266 ;	../../../../core/net/mac/xmac.c:440: if(len == ACK_LEN) {
      000602 BC 03 05         [24] 2267 	cjne	r4,#0x03,00146$
      000605 BD 00 02         [24] 2268 	cjne	r5,#0x00,00146$
      000608 80 04            [24] 2269 	sjmp	00147$
      00060A                       2270 00146$:
      00060A D0 07            [24] 2271 	pop	ar7
      00060C 80 04            [24] 2272 	sjmp	00110$
      00060E                       2273 00147$:
      00060E D0 07            [24] 2274 	pop	ar7
                                   2275 ;	../../../../core/net/mac/xmac.c:441: ack_received = 1;
      000610 7F 01            [12] 2276 	mov	r7,#0x01
      000612                       2277 00110$:
                                   2278 ;	../../../../core/net/mac/xmac.c:444: if(ack_received) {
      000612 EF               [12] 2279 	mov	a,r7
      000613 60 10            [24] 2280 	jz	00114$
                                   2281 ;	../../../../core/net/mac/xmac.c:445: leds_toggle(LEDS_RED);
      000615 75 82 02         [24] 2282 	mov	dpl,#0x02
      000618 C0 07            [24] 2283 	push	ar7
      00061A 78r00            [12] 2284 	mov	r0,#_leds_toggle
      00061C 79s00            [12] 2285 	mov	r1,#(_leds_toggle >> 8)
      00061E 7As00            [12] 2286 	mov	r2,#(_leds_toggle >> 16)
      000620 12r00r00         [24] 2287 	lcall	__sdcc_banked_call
      000623 D0 07            [24] 2288 	pop	ar7
      000625                       2289 00114$:
                                   2290 ;	../../../../core/net/mac/xmac.c:447: return ack_received;
      000625 7E 00            [12] 2291 	mov	r6,#0x00
      000627 8F 82            [24] 2292 	mov	dpl,r7
      000629 8E 83            [24] 2293 	mov	dph,r6
      00062B E5 81            [12] 2294 	mov	a,sp
      00062D 24 FB            [12] 2295 	add	a,#0xFB
      00062F F5 81            [12] 2296 	mov	sp,a
      000631 02r00r00         [24] 2297 	ljmp	__sdcc_banked_ret
                                   2298 ;------------------------------------------------------------
                                   2299 ;Allocation info for local variables in function 'send_packet'
                                   2300 ;------------------------------------------------------------
                                   2301 ;t0                        Allocated to stack - sp -69
                                   2302 ;t                         Allocated to stack - sp -67
                                   2303 ;encounter_time            Allocated to registers 
                                   2304 ;strobes                   Allocated to registers 
                                   2305 ;ret                       Allocated to registers 
                                   2306 ;got_strobe_ack            Allocated to stack - sp -65
                                   2307 ;got_ack                   Allocated to stack - sp -64
                                   2308 ;strobe                    Allocated to stack - sp -63
                                   2309 ;strobe_len                Allocated to stack - sp -13
                                   2310 ;len                       Allocated to stack - sp -11
                                   2311 ;is_broadcast              Allocated to stack - sp -9
                                   2312 ;e                         Allocated to stack - sp -7
                                   2313 ;packet                    Allocated to stack - sp -4
                                   2314 ;is_already_streaming      Allocated to stack - sp -1
                                   2315 ;collisions                Allocated to registers r3 
                                   2316 ;neighbor                  Allocated to registers r7 r6 r3 
                                   2317 ;wait                      Allocated to registers r6 r7 
                                   2318 ;now                       Allocated to registers r4 r3 
                                   2319 ;expected                  Allocated to registers r6 r7 
                                   2320 ;sloc0                     Allocated to stack - sp -72
                                   2321 ;sloc1                     Allocated to stack - sp -71
                                   2322 ;------------------------------------------------------------
                                   2323 ;	../../../../core/net/mac/xmac.c:451: send_packet(void)
                                   2324 ;	-----------------------------------------
                                   2325 ;	 function send_packet
                                   2326 ;	-----------------------------------------
      000634                       2327 _send_packet:
      000634 E5 81            [12] 2328 	mov	a,sp
      000636 24 49            [12] 2329 	add	a,#0x49
                                   2330 ;	../../../../core/net/mac/xmac.c:461: uint8_t got_strobe_ack = 0;
      000638 F5 81            [12] 2331 	mov	sp,a
      00063A 24 BF            [12] 2332 	add	a,#0xbf
      00063C F8               [12] 2333 	mov	r0,a
      00063D 76 00            [12] 2334 	mov	@r0,#0x00
                                   2335 ;	../../../../core/net/mac/xmac.c:462: uint8_t got_ack = 0;
      00063F E5 81            [12] 2336 	mov	a,sp
      000641 24 C0            [12] 2337 	add	a,#0xc0
      000643 F8               [12] 2338 	mov	r0,a
      000644 76 00            [12] 2339 	mov	@r0,#0x00
                                   2340 ;	../../../../core/net/mac/xmac.c:465: int is_broadcast = 0;
      000646 E5 81            [12] 2341 	mov	a,sp
      000648 24 F7            [12] 2342 	add	a,#0xf7
      00064A F8               [12] 2343 	mov	r0,a
      00064B E4               [12] 2344 	clr	a
      00064C F6               [12] 2345 	mov	@r0,a
      00064D 08               [12] 2346 	inc	r0
      00064E F6               [12] 2347 	mov	@r0,a
                                   2348 ;	../../../../core/net/mac/xmac.c:469: int is_already_streaming = 0;
      00064F A8 81            [24] 2349 	mov	r0,sp
      000651 18               [12] 2350 	dec	r0
      000652 E4               [12] 2351 	clr	a
      000653 F6               [12] 2352 	mov	@r0,a
      000654 08               [12] 2353 	inc	r0
      000655 F6               [12] 2354 	mov	@r0,a
                                   2355 ;	../../../../core/net/mac/xmac.c:473: packetbuf_set_addr(PACKETBUF_ADDR_SENDER, &rimeaddr_node_addr);
      000656 74r00            [12] 2356 	mov	a,#_rimeaddr_node_addr
      000658 C0 E0            [24] 2357 	push	acc
      00065A 74s00            [12] 2358 	mov	a,#(_rimeaddr_node_addr >> 8)
      00065C C0 E0            [24] 2359 	push	acc
      00065E E4               [12] 2360 	clr	a
      00065F C0 E0            [24] 2361 	push	acc
      000661 75 82 18         [24] 2362 	mov	dpl,#0x18
      000664 78r00            [12] 2363 	mov	r0,#_packetbuf_set_addr
      000666 79s00            [12] 2364 	mov	r1,#(_packetbuf_set_addr >> 8)
      000668 7As00            [12] 2365 	mov	r2,#(_packetbuf_set_addr >> 16)
      00066A 12r00r00         [24] 2366 	lcall	__sdcc_banked_call
      00066D 15 81            [12] 2367 	dec	sp
      00066F 15 81            [12] 2368 	dec	sp
      000671 15 81            [12] 2369 	dec	sp
                                   2370 ;	../../../../core/net/mac/xmac.c:474: if(rimeaddr_cmp(packetbuf_addr(PACKETBUF_ADDR_RECEIVER), &rimeaddr_null)) {
      000673 75 82 19         [24] 2371 	mov	dpl,#0x19
      000676 78r00            [12] 2372 	mov	r0,#_packetbuf_addr
      000678 79s00            [12] 2373 	mov	r1,#(_packetbuf_addr >> 8)
      00067A 7As00            [12] 2374 	mov	r2,#(_packetbuf_addr >> 16)
      00067C 12r00r00         [24] 2375 	lcall	__sdcc_banked_call
      00067F AA 82            [24] 2376 	mov	r2,dpl
      000681 AB 83            [24] 2377 	mov	r3,dph
      000683 AE F0            [24] 2378 	mov	r6,b
      000685 74r00            [12] 2379 	mov	a,#_rimeaddr_null
      000687 C0 E0            [24] 2380 	push	acc
      000689 74s00            [12] 2381 	mov	a,#(_rimeaddr_null >> 8)
      00068B C0 E0            [24] 2382 	push	acc
      00068D 74 80            [12] 2383 	mov	a,#0x80
      00068F C0 E0            [24] 2384 	push	acc
      000691 8A 82            [24] 2385 	mov	dpl,r2
      000693 8B 83            [24] 2386 	mov	dph,r3
      000695 8E F0            [24] 2387 	mov	b,r6
      000697 78r00            [12] 2388 	mov	r0,#_rimeaddr_cmp
      000699 79s00            [12] 2389 	mov	r1,#(_rimeaddr_cmp >> 8)
      00069B 7As00            [12] 2390 	mov	r2,#(_rimeaddr_cmp >> 16)
      00069D 12r00r00         [24] 2391 	lcall	__sdcc_banked_call
      0006A0 AB 82            [24] 2392 	mov	r3,dpl
      0006A2 AE 83            [24] 2393 	mov	r6,dph
      0006A4 15 81            [12] 2394 	dec	sp
      0006A6 15 81            [12] 2395 	dec	sp
      0006A8 15 81            [12] 2396 	dec	sp
      0006AA EB               [12] 2397 	mov	a,r3
      0006AB 4E               [12] 2398 	orl	a,r6
      0006AC 60 0A            [24] 2399 	jz	00102$
                                   2400 ;	../../../../core/net/mac/xmac.c:475: is_broadcast = 1;
      0006AE E5 81            [12] 2401 	mov	a,sp
      0006B0 24 F7            [12] 2402 	add	a,#0xf7
      0006B2 F8               [12] 2403 	mov	r0,a
      0006B3 76 01            [12] 2404 	mov	@r0,#0x01
      0006B5 08               [12] 2405 	inc	r0
      0006B6 76 00            [12] 2406 	mov	@r0,#0x00
      0006B8                       2407 00102$:
                                   2408 ;	../../../../core/net/mac/xmac.c:497: packetbuf_set_attr(PACKETBUF_ATTR_MAC_ACK, 1);
      0006B8 74 01            [12] 2409 	mov	a,#0x01
      0006BA C0 E0            [24] 2410 	push	acc
      0006BC E4               [12] 2411 	clr	a
      0006BD C0 E0            [24] 2412 	push	acc
      0006BF 75 82 0B         [24] 2413 	mov	dpl,#0x0B
      0006C2 78r00            [12] 2414 	mov	r0,#_packetbuf_set_attr
      0006C4 79s00            [12] 2415 	mov	r1,#(_packetbuf_set_attr >> 8)
      0006C6 7As00            [12] 2416 	mov	r2,#(_packetbuf_set_attr >> 16)
      0006C8 12r00r00         [24] 2417 	lcall	__sdcc_banked_call
      0006CB 15 81            [12] 2418 	dec	sp
      0006CD 15 81            [12] 2419 	dec	sp
                                   2420 ;	../../../../core/net/mac/xmac.c:498: len = NETSTACK_FRAMER.create();
      0006CF 90r00r00         [24] 2421 	mov	dptr,#_framer_802154
      0006D2 E4               [12] 2422 	clr	a
      0006D3 93               [24] 2423 	movc	a,@a+dptr
      0006D4 FA               [12] 2424 	mov	r2,a
      0006D5 A3               [24] 2425 	inc	dptr
      0006D6 E4               [12] 2426 	clr	a
      0006D7 93               [24] 2427 	movc	a,@a+dptr
      0006D8 FB               [12] 2428 	mov	r3,a
      0006D9 A3               [24] 2429 	inc	dptr
      0006DA E4               [12] 2430 	clr	a
      0006DB 93               [24] 2431 	movc	a,@a+dptr
      0006DC FE               [12] 2432 	mov	r6,a
      0006DD C0 06            [24] 2433 	push	ar6
      0006DF C0 02            [24] 2434 	push	ar2
      0006E1 C0 03            [24] 2435 	push	ar3
      0006E3 C0 06            [24] 2436 	push	ar6
      0006E5 D0 02            [24] 2437 	pop	ar2
      0006E7 D0 01            [24] 2438 	pop	ar1
      0006E9 D0 00            [24] 2439 	pop	ar0
      0006EB 12r00r00         [24] 2440 	lcall	__sdcc_banked_call
      0006EE AA 82            [24] 2441 	mov	r2,dpl
      0006F0 AB 83            [24] 2442 	mov	r3,dph
      0006F2 D0 06            [24] 2443 	pop	ar6
      0006F4 E5 81            [12] 2444 	mov	a,sp
      0006F6 24 F5            [12] 2445 	add	a,#0xf5
      0006F8 F8               [12] 2446 	mov	r0,a
      0006F9 A6 02            [24] 2447 	mov	@r0,ar2
      0006FB 08               [12] 2448 	inc	r0
      0006FC A6 03            [24] 2449 	mov	@r0,ar3
                                   2450 ;	../../../../core/net/mac/xmac.c:499: strobe_len = len + sizeof(struct xmac_hdr);
      0006FE E5 81            [12] 2451 	mov	a,sp
      000700 24 F5            [12] 2452 	add	a,#0xf5
      000702 F8               [12] 2453 	mov	r0,a
      000703 E5 81            [12] 2454 	mov	a,sp
      000705 24 F3            [12] 2455 	add	a,#0xf3
      000707 F9               [12] 2456 	mov	r1,a
      000708 74 02            [12] 2457 	mov	a,#0x02
      00070A 26               [12] 2458 	add	a,@r0
      00070B F7               [12] 2459 	mov	@r1,a
      00070C E4               [12] 2460 	clr	a
      00070D 08               [12] 2461 	inc	r0
      00070E 36               [12] 2462 	addc	a,@r0
      00070F 09               [12] 2463 	inc	r1
      000710 F7               [12] 2464 	mov	@r1,a
                                   2465 ;	../../../../core/net/mac/xmac.c:500: if(len < 0 || strobe_len > (int)sizeof(strobe)) {
      000711 E5 81            [12] 2466 	mov	a,sp
      000713 24 F5            [12] 2467 	add	a,#0xf5
      000715 F8               [12] 2468 	mov	r0,a
      000716 08               [12] 2469 	inc	r0
      000717 E6               [12] 2470 	mov	a,@r0
      000718 20 E7 16         [24] 2471 	jb	acc.7,00103$
      00071B E5 81            [12] 2472 	mov	a,sp
      00071D 24 F3            [12] 2473 	add	a,#0xf3
      00071F F8               [12] 2474 	mov	r0,a
      000720 C3               [12] 2475 	clr	c
      000721 74 32            [12] 2476 	mov	a,#0x32
      000723 96               [12] 2477 	subb	a,@r0
      000724 E4               [12] 2478 	clr	a
      000725 64 80            [12] 2479 	xrl	a,#0x80
      000727 08               [12] 2480 	inc	r0
      000728 86 F0            [24] 2481 	mov	b,@r0
      00072A 63 F0 80         [24] 2482 	xrl	b,#0x80
      00072D 95 F0            [12] 2483 	subb	a,b
      00072F 50 06            [24] 2484 	jnc	00104$
      000731                       2485 00103$:
                                   2486 ;	../../../../core/net/mac/xmac.c:503: return MAC_TX_ERR_FATAL;
      000731 90 00 05         [24] 2487 	mov	dptr,#0x0005
      000734 02r0Er6E         [24] 2488 	ljmp	00170$
      000737                       2489 00104$:
                                   2490 ;	../../../../core/net/mac/xmac.c:505: memcpy(strobe, packetbuf_hdrptr(), len);
      000737 78r00            [12] 2491 	mov	r0,#_packetbuf_hdrptr
      000739 79s00            [12] 2492 	mov	r1,#(_packetbuf_hdrptr >> 8)
      00073B 7As00            [12] 2493 	mov	r2,#(_packetbuf_hdrptr >> 16)
      00073D 12r00r00         [24] 2494 	lcall	__sdcc_banked_call
      000740 AA 82            [24] 2495 	mov	r2,dpl
      000742 AC 83            [24] 2496 	mov	r4,dph
      000744 AD F0            [24] 2497 	mov	r5,b
      000746 E5 81            [12] 2498 	mov	a,sp
      000748 24 B8            [12] 2499 	add	a,#0xb8
      00074A F8               [12] 2500 	mov	r0,a
      00074B E5 81            [12] 2501 	mov	a,sp
      00074D 24 C1            [12] 2502 	add	a,#0xC1
      00074F F6               [12] 2503 	mov	@r0,a
      000750 E5 81            [12] 2504 	mov	a,sp
      000752 24 B8            [12] 2505 	add	a,#0xb8
      000754 F8               [12] 2506 	mov	r0,a
      000755 86 03            [24] 2507 	mov	ar3,@r0
      000757 7E 00            [12] 2508 	mov	r6,#0x00
      000759 7F 40            [12] 2509 	mov	r7,#0x40
      00075B E5 81            [12] 2510 	mov	a,sp
      00075D 24 F5            [12] 2511 	add	a,#0xf5
      00075F F8               [12] 2512 	mov	r0,a
      000760 E6               [12] 2513 	mov	a,@r0
      000761 C0 E0            [24] 2514 	push	acc
      000763 08               [12] 2515 	inc	r0
      000764 E6               [12] 2516 	mov	a,@r0
      000765 C0 E0            [24] 2517 	push	acc
      000767 C0 02            [24] 2518 	push	ar2
      000769 C0 04            [24] 2519 	push	ar4
      00076B C0 05            [24] 2520 	push	ar5
      00076D 8B 82            [24] 2521 	mov	dpl,r3
      00076F 8E 83            [24] 2522 	mov	dph,r6
      000771 8F F0            [24] 2523 	mov	b,r7
      000773 78r00            [12] 2524 	mov	r0,#_memcpy
      000775 79s00            [12] 2525 	mov	r1,#(_memcpy >> 8)
      000777 7As00            [12] 2526 	mov	r2,#(_memcpy >> 16)
      000779 12r00r00         [24] 2527 	lcall	__sdcc_banked_call
      00077C E5 81            [12] 2528 	mov	a,sp
      00077E 24 FB            [12] 2529 	add	a,#0xfb
                                   2530 ;	../../../../core/net/mac/xmac.c:506: strobe[len] = DISPATCH; /* dispatch */
      000780 F5 81            [12] 2531 	mov	sp,a
      000782 24 B8            [12] 2532 	add	a,#0xb8
      000784 F8               [12] 2533 	mov	r0,a
      000785 E5 81            [12] 2534 	mov	a,sp
      000787 24 F5            [12] 2535 	add	a,#0xf5
      000789 F9               [12] 2536 	mov	r1,a
      00078A E7               [12] 2537 	mov	a,@r1
      00078B 26               [12] 2538 	add	a,@r0
      00078C F8               [12] 2539 	mov	r0,a
      00078D 76 00            [12] 2540 	mov	@r0,#0x00
                                   2541 ;	../../../../core/net/mac/xmac.c:507: strobe[len + 1] = TYPE_STROBE; /* type */
      00078F E5 81            [12] 2542 	mov	a,sp
      000791 24 F5            [12] 2543 	add	a,#0xf5
      000793 F8               [12] 2544 	mov	r0,a
      000794 E6               [12] 2545 	mov	a,@r0
      000795 04               [12] 2546 	inc	a
      000796 C8               [12] 2547 	xch	a,r0
      000797 E5 81            [12] 2548 	mov	a,sp
      000799 24 B8            [12] 2549 	add	a,#0xb8
      00079B C8               [12] 2550 	xch	a,r0
      00079C 26               [12] 2551 	add	a,@r0
      00079D F8               [12] 2552 	mov	r0,a
      00079E 76 10            [12] 2553 	mov	@r0,#0x10
                                   2554 ;	../../../../core/net/mac/xmac.c:509: packetbuf_compact();
      0007A0 78r00            [12] 2555 	mov	r0,#_packetbuf_compact
      0007A2 79s00            [12] 2556 	mov	r1,#(_packetbuf_compact >> 8)
      0007A4 7As00            [12] 2557 	mov	r2,#(_packetbuf_compact >> 16)
      0007A6 12r00r00         [24] 2558 	lcall	__sdcc_banked_call
                                   2559 ;	../../../../core/net/mac/xmac.c:510: packet = queuebuf_new_from_packetbuf();
      0007A9 78r00            [12] 2560 	mov	r0,#_queuebuf_new_from_packetbuf
      0007AB 79s00            [12] 2561 	mov	r1,#(_queuebuf_new_from_packetbuf >> 8)
      0007AD 7As00            [12] 2562 	mov	r2,#(_queuebuf_new_from_packetbuf >> 16)
      0007AF 12r00r00         [24] 2563 	lcall	__sdcc_banked_call
      0007B2 AD 82            [24] 2564 	mov	r5,dpl
      0007B4 AE 83            [24] 2565 	mov	r6,dph
      0007B6 AF F0            [24] 2566 	mov	r7,b
      0007B8 E5 81            [12] 2567 	mov	a,sp
      0007BA 24 FC            [12] 2568 	add	a,#0xfc
      0007BC F8               [12] 2569 	mov	r0,a
      0007BD A6 05            [24] 2570 	mov	@r0,ar5
      0007BF 08               [12] 2571 	inc	r0
      0007C0 A6 06            [24] 2572 	mov	@r0,ar6
      0007C2 08               [12] 2573 	inc	r0
      0007C3 A6 07            [24] 2574 	mov	@r0,ar7
                                   2575 ;	../../../../core/net/mac/xmac.c:511: if(packet == NULL) {
      0007C5 E5 81            [12] 2576 	mov	a,sp
      0007C7 24 FC            [12] 2577 	add	a,#0xfc
      0007C9 F8               [12] 2578 	mov	r0,a
      0007CA E6               [12] 2579 	mov	a,@r0
      0007CB 08               [12] 2580 	inc	r0
      0007CC 46               [12] 2581 	orl	a,@r0
      0007CD 70 06            [24] 2582 	jnz	00107$
                                   2583 ;	../../../../core/net/mac/xmac.c:515: return MAC_TX_ERR;
      0007CF 90 00 04         [24] 2584 	mov	dptr,#0x0004
      0007D2 02r0Er6E         [24] 2585 	ljmp	00170$
      0007D5                       2586 00107$:
                                   2587 ;	../../../../core/net/mac/xmac.c:519: if(is_streaming == 1 &&
      0007D5 90r00r43         [24] 2588 	mov	dptr,#_is_streaming
      0007D8 E0               [24] 2589 	movx	a,@dptr
      0007D9 FF               [12] 2590 	mov	r7,a
      0007DA BF 01 02         [24] 2591 	cjne	r7,#0x01,00271$
      0007DD 80 02            [24] 2592 	sjmp	00272$
      0007DF                       2593 00271$:
      0007DF 80 7C            [24] 2594 	sjmp	00109$
      0007E1                       2595 00272$:
                                   2596 ;	../../../../core/net/mac/xmac.c:521: &is_streaming_to) ||
                                   2597 ;	../../../../core/net/mac/xmac.c:520: (rimeaddr_cmp(packetbuf_addr(PACKETBUF_ADDR_RECEIVER),
      0007E1 75 82 19         [24] 2598 	mov	dpl,#0x19
      0007E4 78r00            [12] 2599 	mov	r0,#_packetbuf_addr
      0007E6 79s00            [12] 2600 	mov	r1,#(_packetbuf_addr >> 8)
      0007E8 7As00            [12] 2601 	mov	r2,#(_packetbuf_addr >> 16)
      0007EA 12r00r00         [24] 2602 	lcall	__sdcc_banked_call
      0007ED AB 82            [24] 2603 	mov	r3,dpl
      0007EF AE 83            [24] 2604 	mov	r6,dph
      0007F1 AF F0            [24] 2605 	mov	r7,b
      0007F3 74r44            [12] 2606 	mov	a,#_is_streaming_to
      0007F5 C0 E0            [24] 2607 	push	acc
      0007F7 74s00            [12] 2608 	mov	a,#(_is_streaming_to >> 8)
      0007F9 C0 E0            [24] 2609 	push	acc
      0007FB E4               [12] 2610 	clr	a
      0007FC C0 E0            [24] 2611 	push	acc
      0007FE 8B 82            [24] 2612 	mov	dpl,r3
      000800 8E 83            [24] 2613 	mov	dph,r6
      000802 8F F0            [24] 2614 	mov	b,r7
      000804 78r00            [12] 2615 	mov	r0,#_rimeaddr_cmp
      000806 79s00            [12] 2616 	mov	r1,#(_rimeaddr_cmp >> 8)
      000808 7As00            [12] 2617 	mov	r2,#(_rimeaddr_cmp >> 16)
      00080A 12r00r00         [24] 2618 	lcall	__sdcc_banked_call
      00080D AE 82            [24] 2619 	mov	r6,dpl
      00080F AF 83            [24] 2620 	mov	r7,dph
      000811 15 81            [12] 2621 	dec	sp
      000813 15 81            [12] 2622 	dec	sp
      000815 15 81            [12] 2623 	dec	sp
      000817 EE               [12] 2624 	mov	a,r6
      000818 4F               [12] 2625 	orl	a,r7
      000819 70 3A            [24] 2626 	jnz	00108$
                                   2627 ;	../../../../core/net/mac/xmac.c:523: &is_streaming_to_too))) {
                                   2628 ;	../../../../core/net/mac/xmac.c:522: rimeaddr_cmp(packetbuf_addr(PACKETBUF_ADDR_RECEIVER),
      00081B 75 82 19         [24] 2629 	mov	dpl,#0x19
      00081E 78r00            [12] 2630 	mov	r0,#_packetbuf_addr
      000820 79s00            [12] 2631 	mov	r1,#(_packetbuf_addr >> 8)
      000822 7As00            [12] 2632 	mov	r2,#(_packetbuf_addr >> 16)
      000824 12r00r00         [24] 2633 	lcall	__sdcc_banked_call
      000827 AB 82            [24] 2634 	mov	r3,dpl
      000829 AE 83            [24] 2635 	mov	r6,dph
      00082B AF F0            [24] 2636 	mov	r7,b
      00082D 74r4C            [12] 2637 	mov	a,#_is_streaming_to_too
      00082F C0 E0            [24] 2638 	push	acc
      000831 74s00            [12] 2639 	mov	a,#(_is_streaming_to_too >> 8)
      000833 C0 E0            [24] 2640 	push	acc
      000835 E4               [12] 2641 	clr	a
      000836 C0 E0            [24] 2642 	push	acc
      000838 8B 82            [24] 2643 	mov	dpl,r3
      00083A 8E 83            [24] 2644 	mov	dph,r6
      00083C 8F F0            [24] 2645 	mov	b,r7
      00083E 78r00            [12] 2646 	mov	r0,#_rimeaddr_cmp
      000840 79s00            [12] 2647 	mov	r1,#(_rimeaddr_cmp >> 8)
      000842 7As00            [12] 2648 	mov	r2,#(_rimeaddr_cmp >> 16)
      000844 12r00r00         [24] 2649 	lcall	__sdcc_banked_call
      000847 AE 82            [24] 2650 	mov	r6,dpl
      000849 AF 83            [24] 2651 	mov	r7,dph
      00084B 15 81            [12] 2652 	dec	sp
      00084D 15 81            [12] 2653 	dec	sp
      00084F 15 81            [12] 2654 	dec	sp
      000851 EE               [12] 2655 	mov	a,r6
      000852 4F               [12] 2656 	orl	a,r7
      000853 60 08            [24] 2657 	jz	00109$
      000855                       2658 00108$:
                                   2659 ;	../../../../core/net/mac/xmac.c:524: is_already_streaming = 1;
      000855 A8 81            [24] 2660 	mov	r0,sp
      000857 18               [12] 2661 	dec	r0
      000858 76 01            [12] 2662 	mov	@r0,#0x01
      00085A 08               [12] 2663 	inc	r0
      00085B 76 00            [12] 2664 	mov	@r0,#0x00
      00085D                       2665 00109$:
                                   2666 ;	../../../../core/net/mac/xmac.c:526: if(packetbuf_attr(PACKETBUF_ATTR_PACKET_TYPE) ==
      00085D 75 82 0E         [24] 2667 	mov	dpl,#0x0E
      000860 78r00            [12] 2668 	mov	r0,#_packetbuf_attr
      000862 79s00            [12] 2669 	mov	r1,#(_packetbuf_attr >> 8)
      000864 7As00            [12] 2670 	mov	r2,#(_packetbuf_attr >> 16)
      000866 12r00r00         [24] 2671 	lcall	__sdcc_banked_call
      000869 AE 82            [24] 2672 	mov	r6,dpl
      00086B AF 83            [24] 2673 	mov	r7,dph
      00086D BE 02 05         [24] 2674 	cjne	r6,#0x02,00275$
      000870 BF 00 02         [24] 2675 	cjne	r7,#0x00,00275$
      000873 80 03            [24] 2676 	sjmp	00276$
      000875                       2677 00275$:
      000875 02r09r53         [24] 2678 	ljmp	00118$
      000878                       2679 00276$:
                                   2680 ;	../../../../core/net/mac/xmac.c:528: is_streaming = 1;
      000878 90r00r43         [24] 2681 	mov	dptr,#_is_streaming
      00087B 74 01            [12] 2682 	mov	a,#0x01
      00087D F0               [24] 2683 	movx	@dptr,a
                                   2684 ;	../../../../core/net/mac/xmac.c:529: if(rimeaddr_cmp(&is_streaming_to, &rimeaddr_null)) {
      00087E 74r00            [12] 2685 	mov	a,#_rimeaddr_null
      000880 C0 E0            [24] 2686 	push	acc
      000882 74s00            [12] 2687 	mov	a,#(_rimeaddr_null >> 8)
      000884 C0 E0            [24] 2688 	push	acc
      000886 74 80            [12] 2689 	mov	a,#0x80
      000888 C0 E0            [24] 2690 	push	acc
      00088A 90r00r44         [24] 2691 	mov	dptr,#_is_streaming_to
      00088D 75 F0 00         [24] 2692 	mov	b,#0x00
      000890 78r00            [12] 2693 	mov	r0,#_rimeaddr_cmp
      000892 79s00            [12] 2694 	mov	r1,#(_rimeaddr_cmp >> 8)
      000894 7As00            [12] 2695 	mov	r2,#(_rimeaddr_cmp >> 16)
      000896 12r00r00         [24] 2696 	lcall	__sdcc_banked_call
      000899 AE 82            [24] 2697 	mov	r6,dpl
      00089B AF 83            [24] 2698 	mov	r7,dph
      00089D 15 81            [12] 2699 	dec	sp
      00089F 15 81            [12] 2700 	dec	sp
      0008A1 15 81            [12] 2701 	dec	sp
      0008A3 EE               [12] 2702 	mov	a,r6
      0008A4 4F               [12] 2703 	orl	a,r7
      0008A5 60 2F            [24] 2704 	jz	00115$
                                   2705 ;	../../../../core/net/mac/xmac.c:530: rimeaddr_copy(&is_streaming_to, packetbuf_addr(PACKETBUF_ADDR_RECEIVER));
      0008A7 75 82 19         [24] 2706 	mov	dpl,#0x19
      0008AA 78r00            [12] 2707 	mov	r0,#_packetbuf_addr
      0008AC 79s00            [12] 2708 	mov	r1,#(_packetbuf_addr >> 8)
      0008AE 7As00            [12] 2709 	mov	r2,#(_packetbuf_addr >> 16)
      0008B0 12r00r00         [24] 2710 	lcall	__sdcc_banked_call
      0008B3 AB 82            [24] 2711 	mov	r3,dpl
      0008B5 AE 83            [24] 2712 	mov	r6,dph
      0008B7 AF F0            [24] 2713 	mov	r7,b
      0008B9 C0 03            [24] 2714 	push	ar3
      0008BB C0 06            [24] 2715 	push	ar6
      0008BD C0 07            [24] 2716 	push	ar7
      0008BF 90r00r44         [24] 2717 	mov	dptr,#_is_streaming_to
      0008C2 75 F0 00         [24] 2718 	mov	b,#0x00
      0008C5 78r00            [12] 2719 	mov	r0,#_rimeaddr_copy
      0008C7 79s00            [12] 2720 	mov	r1,#(_rimeaddr_copy >> 8)
      0008C9 7As00            [12] 2721 	mov	r2,#(_rimeaddr_copy >> 16)
      0008CB 12r00r00         [24] 2722 	lcall	__sdcc_banked_call
      0008CE 15 81            [12] 2723 	dec	sp
      0008D0 15 81            [12] 2724 	dec	sp
      0008D2 15 81            [12] 2725 	dec	sp
      0008D4 80 62            [24] 2726 	sjmp	00116$
      0008D6                       2727 00115$:
                                   2728 ;	../../../../core/net/mac/xmac.c:531: } else if(!rimeaddr_cmp(&is_streaming_to, packetbuf_addr(PACKETBUF_ADDR_RECEIVER))) {
      0008D6 75 82 19         [24] 2729 	mov	dpl,#0x19
      0008D9 78r00            [12] 2730 	mov	r0,#_packetbuf_addr
      0008DB 79s00            [12] 2731 	mov	r1,#(_packetbuf_addr >> 8)
      0008DD 7As00            [12] 2732 	mov	r2,#(_packetbuf_addr >> 16)
      0008DF 12r00r00         [24] 2733 	lcall	__sdcc_banked_call
      0008E2 AB 82            [24] 2734 	mov	r3,dpl
      0008E4 AE 83            [24] 2735 	mov	r6,dph
      0008E6 AF F0            [24] 2736 	mov	r7,b
      0008E8 C0 03            [24] 2737 	push	ar3
      0008EA C0 06            [24] 2738 	push	ar6
      0008EC C0 07            [24] 2739 	push	ar7
      0008EE 90r00r44         [24] 2740 	mov	dptr,#_is_streaming_to
      0008F1 75 F0 00         [24] 2741 	mov	b,#0x00
      0008F4 78r00            [12] 2742 	mov	r0,#_rimeaddr_cmp
      0008F6 79s00            [12] 2743 	mov	r1,#(_rimeaddr_cmp >> 8)
      0008F8 7As00            [12] 2744 	mov	r2,#(_rimeaddr_cmp >> 16)
      0008FA 12r00r00         [24] 2745 	lcall	__sdcc_banked_call
      0008FD AE 82            [24] 2746 	mov	r6,dpl
      0008FF AF 83            [24] 2747 	mov	r7,dph
      000901 15 81            [12] 2748 	dec	sp
      000903 15 81            [12] 2749 	dec	sp
      000905 15 81            [12] 2750 	dec	sp
      000907 EE               [12] 2751 	mov	a,r6
      000908 4F               [12] 2752 	orl	a,r7
      000909 70 2D            [24] 2753 	jnz	00116$
                                   2754 ;	../../../../core/net/mac/xmac.c:532: rimeaddr_copy(&is_streaming_to_too, packetbuf_addr(PACKETBUF_ADDR_RECEIVER));
      00090B 75 82 19         [24] 2755 	mov	dpl,#0x19
      00090E 78r00            [12] 2756 	mov	r0,#_packetbuf_addr
      000910 79s00            [12] 2757 	mov	r1,#(_packetbuf_addr >> 8)
      000912 7As00            [12] 2758 	mov	r2,#(_packetbuf_addr >> 16)
      000914 12r00r00         [24] 2759 	lcall	__sdcc_banked_call
      000917 AB 82            [24] 2760 	mov	r3,dpl
      000919 AE 83            [24] 2761 	mov	r6,dph
      00091B AF F0            [24] 2762 	mov	r7,b
      00091D C0 03            [24] 2763 	push	ar3
      00091F C0 06            [24] 2764 	push	ar6
      000921 C0 07            [24] 2765 	push	ar7
      000923 90r00r4C         [24] 2766 	mov	dptr,#_is_streaming_to_too
      000926 75 F0 00         [24] 2767 	mov	b,#0x00
      000929 78r00            [12] 2768 	mov	r0,#_rimeaddr_copy
      00092B 79s00            [12] 2769 	mov	r1,#(_rimeaddr_copy >> 8)
      00092D 7As00            [12] 2770 	mov	r2,#(_rimeaddr_copy >> 16)
      00092F 12r00r00         [24] 2771 	lcall	__sdcc_banked_call
      000932 15 81            [12] 2772 	dec	sp
      000934 15 81            [12] 2773 	dec	sp
      000936 15 81            [12] 2774 	dec	sp
      000938                       2775 00116$:
                                   2776 ;	../../../../core/net/mac/xmac.c:534: stream_until = RTIMER_NOW() + DEFAULT_STREAM_TIME;
      000938 AE E2            [24] 2777 	mov	r6,_T1CNTL
      00093A 7F 00            [12] 2778 	mov	r7,#0x00
      00093C AA E3            [24] 2779 	mov	r2,_T1CNTH
      00093E 8A 03            [24] 2780 	mov	ar3,r2
      000940 E4               [12] 2781 	clr	a
      000941 FA               [12] 2782 	mov	r2,a
      000942 2E               [12] 2783 	add	a,r6
      000943 FE               [12] 2784 	mov	r6,a
      000944 EB               [12] 2785 	mov	a,r3
      000945 3F               [12] 2786 	addc	a,r7
      000946 FF               [12] 2787 	mov	r7,a
      000947 90r00r54         [24] 2788 	mov	dptr,#_stream_until
      00094A 74 09            [12] 2789 	mov	a,#0x09
      00094C 2E               [12] 2790 	add	a,r6
      00094D F0               [24] 2791 	movx	@dptr,a
      00094E 74 3D            [12] 2792 	mov	a,#0x3D
      000950 3F               [12] 2793 	addc	a,r7
      000951 A3               [24] 2794 	inc	dptr
      000952 F0               [24] 2795 	movx	@dptr,a
      000953                       2796 00118$:
                                   2797 ;	../../../../core/net/mac/xmac.c:538: off();
      000953 78r40            [12] 2798 	mov	r0,#_off
      000955 79s00            [12] 2799 	mov	r1,#(_off >> 8)
      000957 7As00            [12] 2800 	mov	r2,#(_off >> 16)
      000959 12r00r00         [24] 2801 	lcall	__sdcc_banked_call
                                   2802 ;	../../../../core/net/mac/xmac.c:545: for(e = list_head(encounter_list); e != NULL; e = list_item_next(e)) {
      00095C 90r00r10         [24] 2803 	mov	dptr,#_encounter_list
      00095F E0               [24] 2804 	movx	a,@dptr
      000960 FB               [12] 2805 	mov	r3,a
      000961 A3               [24] 2806 	inc	dptr
      000962 E0               [24] 2807 	movx	a,@dptr
      000963 FE               [12] 2808 	mov	r6,a
      000964 A3               [24] 2809 	inc	dptr
      000965 E0               [24] 2810 	movx	a,@dptr
      000966 FF               [12] 2811 	mov	r7,a
      000967 8B 82            [24] 2812 	mov	dpl,r3
      000969 8E 83            [24] 2813 	mov	dph,r6
      00096B 8F F0            [24] 2814 	mov	b,r7
      00096D 78r00            [12] 2815 	mov	r0,#_list_head
      00096F 79s00            [12] 2816 	mov	r1,#(_list_head >> 8)
      000971 7As00            [12] 2817 	mov	r2,#(_list_head >> 16)
      000973 12r00r00         [24] 2818 	lcall	__sdcc_banked_call
      000976 AB 82            [24] 2819 	mov	r3,dpl
      000978 AE 83            [24] 2820 	mov	r6,dph
      00097A AF F0            [24] 2821 	mov	r7,b
      00097C E5 81            [12] 2822 	mov	a,sp
      00097E 24 F9            [12] 2823 	add	a,#0xf9
      000980 F8               [12] 2824 	mov	r0,a
      000981 A6 03            [24] 2825 	mov	@r0,ar3
      000983 08               [12] 2826 	inc	r0
      000984 A6 06            [24] 2827 	mov	@r0,ar6
      000986 08               [12] 2828 	inc	r0
      000987 A6 07            [24] 2829 	mov	@r0,ar7
      000989                       2830 00163$:
      000989 E5 81            [12] 2831 	mov	a,sp
      00098B 24 F9            [12] 2832 	add	a,#0xf9
      00098D F8               [12] 2833 	mov	r0,a
      00098E E4               [12] 2834 	clr	a
      00098F C0 E0            [24] 2835 	push	acc
      000991 E4               [12] 2836 	clr	a
      000992 C0 E0            [24] 2837 	push	acc
      000994 E4               [12] 2838 	clr	a
      000995 C0 E0            [24] 2839 	push	acc
      000997 86 82            [24] 2840 	mov	dpl,@r0
      000999 08               [12] 2841 	inc	r0
      00099A 86 83            [24] 2842 	mov	dph,@r0
      00099C 08               [12] 2843 	inc	r0
      00099D 86 F0            [24] 2844 	mov	b,@r0
      00099F 12r00r00         [24] 2845 	lcall	___gptr_cmp
      0009A2 15 81            [12] 2846 	dec	sp
      0009A4 15 81            [12] 2847 	dec	sp
      0009A6 15 81            [12] 2848 	dec	sp
      0009A8 70 03            [24] 2849 	jnz	00279$
      0009AA 02r0ArB4         [24] 2850 	ljmp	00126$
      0009AD                       2851 00279$:
                                   2852 ;	../../../../core/net/mac/xmac.c:546: const rimeaddr_t *neighbor = packetbuf_addr(PACKETBUF_ADDR_RECEIVER);
      0009AD 75 82 19         [24] 2853 	mov	dpl,#0x19
      0009B0 78r00            [12] 2854 	mov	r0,#_packetbuf_addr
      0009B2 79s00            [12] 2855 	mov	r1,#(_packetbuf_addr >> 8)
      0009B4 7As00            [12] 2856 	mov	r2,#(_packetbuf_addr >> 16)
      0009B6 12r00r00         [24] 2857 	lcall	__sdcc_banked_call
      0009B9 AF 82            [24] 2858 	mov	r7,dpl
      0009BB AE 83            [24] 2859 	mov	r6,dph
      0009BD AD F0            [24] 2860 	mov	r5,b
      0009BF 8D 03            [24] 2861 	mov	ar3,r5
                                   2862 ;	../../../../core/net/mac/xmac.c:548: if(rimeaddr_cmp(neighbor, &e->neighbor)) {
      0009C1 E5 81            [12] 2863 	mov	a,sp
      0009C3 24 F9            [12] 2864 	add	a,#0xf9
      0009C5 F8               [12] 2865 	mov	r0,a
      0009C6 74 03            [12] 2866 	mov	a,#0x03
      0009C8 26               [12] 2867 	add	a,@r0
      0009C9 FA               [12] 2868 	mov	r2,a
      0009CA E4               [12] 2869 	clr	a
      0009CB 08               [12] 2870 	inc	r0
      0009CC 36               [12] 2871 	addc	a,@r0
      0009CD FC               [12] 2872 	mov	r4,a
      0009CE 08               [12] 2873 	inc	r0
      0009CF 86 05            [24] 2874 	mov	ar5,@r0
      0009D1 C0 02            [24] 2875 	push	ar2
      0009D3 C0 04            [24] 2876 	push	ar4
      0009D5 C0 05            [24] 2877 	push	ar5
      0009D7 8F 82            [24] 2878 	mov	dpl,r7
      0009D9 8E 83            [24] 2879 	mov	dph,r6
      0009DB 8B F0            [24] 2880 	mov	b,r3
      0009DD 78r00            [12] 2881 	mov	r0,#_rimeaddr_cmp
      0009DF 79s00            [12] 2882 	mov	r1,#(_rimeaddr_cmp >> 8)
      0009E1 7As00            [12] 2883 	mov	r2,#(_rimeaddr_cmp >> 16)
      0009E3 12r00r00         [24] 2884 	lcall	__sdcc_banked_call
      0009E6 AC 82            [24] 2885 	mov	r4,dpl
      0009E8 AD 83            [24] 2886 	mov	r5,dph
      0009EA 15 81            [12] 2887 	dec	sp
      0009EC 15 81            [12] 2888 	dec	sp
      0009EE 15 81            [12] 2889 	dec	sp
      0009F0 EC               [12] 2890 	mov	a,r4
      0009F1 4D               [12] 2891 	orl	a,r5
      0009F2 70 03            [24] 2892 	jnz	00280$
      0009F4 02r0Ar82         [24] 2893 	ljmp	00164$
      0009F7                       2894 00280$:
                                   2895 ;	../../../../core/net/mac/xmac.c:558: now = RTIMER_NOW();
      0009F7 AA E2            [24] 2896 	mov	r2,_T1CNTL
      0009F9 7D 00            [12] 2897 	mov	r5,#0x00
      0009FB AC E3            [24] 2898 	mov	r4,_T1CNTH
      0009FD 8C 07            [24] 2899 	mov	ar7,r4
      0009FF E4               [12] 2900 	clr	a
      000A00 2A               [12] 2901 	add	a,r2
      000A01 FA               [12] 2902 	mov	r2,a
      000A02 EF               [12] 2903 	mov	a,r7
      000A03 3D               [12] 2904 	addc	a,r5
      000A04 FD               [12] 2905 	mov	r5,a
      000A05 8A 04            [24] 2906 	mov	ar4,r2
      000A07 8D 03            [24] 2907 	mov	ar3,r5
                                   2908 ;	../../../../core/net/mac/xmac.c:559: wait = ((rtimer_clock_t)(e->time - now)) % (DEFAULT_PERIOD);
      000A09 E5 81            [12] 2909 	mov	a,sp
      000A0B 24 F9            [12] 2910 	add	a,#0xf9
      000A0D F8               [12] 2911 	mov	r0,a
      000A0E 74 0B            [12] 2912 	mov	a,#0x0B
      000A10 26               [12] 2913 	add	a,@r0
      000A11 FD               [12] 2914 	mov	r5,a
      000A12 E4               [12] 2915 	clr	a
      000A13 08               [12] 2916 	inc	r0
      000A14 36               [12] 2917 	addc	a,@r0
      000A15 FE               [12] 2918 	mov	r6,a
      000A16 08               [12] 2919 	inc	r0
      000A17 86 07            [24] 2920 	mov	ar7,@r0
      000A19 8D 82            [24] 2921 	mov	dpl,r5
      000A1B 8E 83            [24] 2922 	mov	dph,r6
      000A1D 8F F0            [24] 2923 	mov	b,r7
      000A1F 12r00r00         [24] 2924 	lcall	__gptrget
      000A22 FD               [12] 2925 	mov	r5,a
      000A23 A3               [24] 2926 	inc	dptr
      000A24 12r00r00         [24] 2927 	lcall	__gptrget
      000A27 FE               [12] 2928 	mov	r6,a
      000A28 ED               [12] 2929 	mov	a,r5
      000A29 C3               [12] 2930 	clr	c
      000A2A 9C               [12] 2931 	subb	a,r4
      000A2B FD               [12] 2932 	mov	r5,a
      000A2C EE               [12] 2933 	mov	a,r6
      000A2D 9B               [12] 2934 	subb	a,r3
      000A2E FE               [12] 2935 	mov	r6,a
      000A2F C0 04            [24] 2936 	push	ar4
      000A31 C0 03            [24] 2937 	push	ar3
      000A33 74 A1            [12] 2938 	mov	a,#0xA1
      000A35 C0 E0            [24] 2939 	push	acc
      000A37 74 07            [12] 2940 	mov	a,#0x07
      000A39 C0 E0            [24] 2941 	push	acc
      000A3B 8D 82            [24] 2942 	mov	dpl,r5
      000A3D 8E 83            [24] 2943 	mov	dph,r6
      000A3F 12r00r00         [24] 2944 	lcall	__moduint
      000A42 AE 82            [24] 2945 	mov	r6,dpl
      000A44 AF 83            [24] 2946 	mov	r7,dph
      000A46 15 81            [12] 2947 	dec	sp
      000A48 15 81            [12] 2948 	dec	sp
      000A4A D0 03            [24] 2949 	pop	ar3
      000A4C D0 04            [24] 2950 	pop	ar4
                                   2951 ;	../../../../core/net/mac/xmac.c:560: if(wait < 2 * DEFAULT_ON_TIME) {
      000A4E C3               [12] 2952 	clr	c
      000A4F EE               [12] 2953 	mov	a,r6
      000A50 94 C2            [12] 2954 	subb	a,#0xC2
      000A52 EF               [12] 2955 	mov	a,r7
      000A53 94 00            [12] 2956 	subb	a,#0x00
      000A55 50 04            [24] 2957 	jnc	00120$
                                   2958 ;	../../../../core/net/mac/xmac.c:561: wait = DEFAULT_PERIOD;
      000A57 7E A1            [12] 2959 	mov	r6,#0xA1
      000A59 7F 07            [12] 2960 	mov	r7,#0x07
      000A5B                       2961 00120$:
                                   2962 ;	../../../../core/net/mac/xmac.c:563: expected = now + wait - 2 * DEFAULT_ON_TIME;
      000A5B EE               [12] 2963 	mov	a,r6
      000A5C 2C               [12] 2964 	add	a,r4
      000A5D FE               [12] 2965 	mov	r6,a
      000A5E EF               [12] 2966 	mov	a,r7
      000A5F 3B               [12] 2967 	addc	a,r3
      000A60 FF               [12] 2968 	mov	r7,a
      000A61 EE               [12] 2969 	mov	a,r6
      000A62 24 3E            [12] 2970 	add	a,#0x3E
      000A64 FE               [12] 2971 	mov	r6,a
      000A65 EF               [12] 2972 	mov	a,r7
      000A66 34 FF            [12] 2973 	addc	a,#0xFF
      000A68 FF               [12] 2974 	mov	r7,a
                                   2975 ;	../../../../core/net/mac/xmac.c:576: while(RTIMER_CLOCK_LT(RTIMER_NOW(), expected));
      000A69                       2976 00121$:
      000A69 AA E2            [24] 2977 	mov	r2,_T1CNTL
      000A6B 7B 00            [12] 2978 	mov	r3,#0x00
      000A6D AC E3            [24] 2979 	mov	r4,_T1CNTH
      000A6F 8C 05            [24] 2980 	mov	ar5,r4
      000A71 E4               [12] 2981 	clr	a
      000A72 FC               [12] 2982 	mov	r4,a
      000A73 2A               [12] 2983 	add	a,r2
      000A74 FA               [12] 2984 	mov	r2,a
      000A75 ED               [12] 2985 	mov	a,r5
      000A76 3B               [12] 2986 	addc	a,r3
      000A77 FB               [12] 2987 	mov	r3,a
      000A78 EA               [12] 2988 	mov	a,r2
      000A79 C3               [12] 2989 	clr	c
      000A7A 9E               [12] 2990 	subb	a,r6
      000A7B FA               [12] 2991 	mov	r2,a
      000A7C EB               [12] 2992 	mov	a,r3
      000A7D 9F               [12] 2993 	subb	a,r7
      000A7E FB               [12] 2994 	mov	r3,a
      000A7F 20 E7 E7         [24] 2995 	jb	acc.7,00121$
      000A82                       2996 00164$:
                                   2997 ;	../../../../core/net/mac/xmac.c:545: for(e = list_head(encounter_list); e != NULL; e = list_item_next(e)) {
      000A82 E5 81            [12] 2998 	mov	a,sp
      000A84 24 F9            [12] 2999 	add	a,#0xf9
      000A86 F8               [12] 3000 	mov	r0,a
      000A87 86 03            [24] 3001 	mov	ar3,@r0
      000A89 08               [12] 3002 	inc	r0
      000A8A 86 06            [24] 3003 	mov	ar6,@r0
      000A8C 08               [12] 3004 	inc	r0
      000A8D 86 07            [24] 3005 	mov	ar7,@r0
      000A8F 8B 82            [24] 3006 	mov	dpl,r3
      000A91 8E 83            [24] 3007 	mov	dph,r6
      000A93 8F F0            [24] 3008 	mov	b,r7
      000A95 78r00            [12] 3009 	mov	r0,#_list_item_next
      000A97 79s00            [12] 3010 	mov	r1,#(_list_item_next >> 8)
      000A99 7As00            [12] 3011 	mov	r2,#(_list_item_next >> 16)
      000A9B 12r00r00         [24] 3012 	lcall	__sdcc_banked_call
      000A9E AB 82            [24] 3013 	mov	r3,dpl
      000AA0 AE 83            [24] 3014 	mov	r6,dph
      000AA2 AF F0            [24] 3015 	mov	r7,b
      000AA4 E5 81            [12] 3016 	mov	a,sp
      000AA6 24 F9            [12] 3017 	add	a,#0xf9
      000AA8 F8               [12] 3018 	mov	r0,a
      000AA9 A6 03            [24] 3019 	mov	@r0,ar3
      000AAB 08               [12] 3020 	inc	r0
      000AAC A6 06            [24] 3021 	mov	@r0,ar6
      000AAE 08               [12] 3022 	inc	r0
      000AAF A6 07            [24] 3023 	mov	@r0,ar7
      000AB1 02r09r89         [24] 3024 	ljmp	00163$
      000AB4                       3025 00126$:
                                   3026 ;	../../../../core/net/mac/xmac.c:584: we_are_sending = 1;
      000AB4 90r00r0B         [24] 3027 	mov	dptr,#_we_are_sending
      000AB7 74 01            [12] 3028 	mov	a,#0x01
      000AB9 F0               [24] 3029 	movx	@dptr,a
                                   3030 ;	../../../../core/net/mac/xmac.c:586: t0 = RTIMER_NOW();
      000ABA AE E2            [24] 3031 	mov	r6,_T1CNTL
      000ABC 7F 00            [12] 3032 	mov	r7,#0x00
      000ABE AA E3            [24] 3033 	mov	r2,_T1CNTH
      000AC0 8A 03            [24] 3034 	mov	ar3,r2
      000AC2 E4               [12] 3035 	clr	a
      000AC3 FA               [12] 3036 	mov	r2,a
      000AC4 2E               [12] 3037 	add	a,r6
      000AC5 FE               [12] 3038 	mov	r6,a
      000AC6 EB               [12] 3039 	mov	a,r3
      000AC7 3F               [12] 3040 	addc	a,r7
      000AC8 FF               [12] 3041 	mov	r7,a
      000AC9 E5 81            [12] 3042 	mov	a,sp
      000ACB 24 BB            [12] 3043 	add	a,#0xbb
      000ACD F8               [12] 3044 	mov	r0,a
      000ACE A6 06            [24] 3045 	mov	@r0,ar6
      000AD0 08               [12] 3046 	inc	r0
      000AD1 A6 07            [24] 3047 	mov	@r0,ar7
                                   3048 ;	../../../../core/net/mac/xmac.c:595: collisions = 0;
      000AD3 7B 00            [12] 3049 	mov	r3,#0x00
                                   3050 ;	../../../../core/net/mac/xmac.c:596: if(!is_already_streaming) {
      000AD5 A8 81            [24] 3051 	mov	r0,sp
      000AD7 18               [12] 3052 	dec	r0
      000AD8 E6               [12] 3053 	mov	a,@r0
      000AD9 08               [12] 3054 	inc	r0
      000ADA 46               [12] 3055 	orl	a,@r0
      000ADB 60 03            [24] 3056 	jz	00283$
      000ADD 02r0CrF2         [24] 3057 	ljmp	00142$
      000AE0                       3058 00283$:
                                   3059 ;	../../../../core/net/mac/xmac.c:597: watchdog_stop();
      000AE0 78r00            [12] 3060 	mov	r0,#_watchdog_periodic
      000AE2 79s00            [12] 3061 	mov	r1,#(_watchdog_periodic >> 8)
      000AE4 7As00            [12] 3062 	mov	r2,#(_watchdog_periodic >> 16)
      000AE6 12r00r00         [24] 3063 	lcall	__sdcc_banked_call
                                   3064 ;	../../../../core/net/mac/xmac.c:598: got_strobe_ack = 0;
      000AE9 E5 81            [12] 3065 	mov	a,sp
      000AEB 24 BF            [12] 3066 	add	a,#0xbf
      000AED F8               [12] 3067 	mov	r0,a
      000AEE 76 00            [12] 3068 	mov	@r0,#0x00
                                   3069 ;	../../../../core/net/mac/xmac.c:599: t = RTIMER_NOW();
      000AF0 AA E2            [24] 3070 	mov	r2,_T1CNTL
      000AF2 7F 00            [12] 3071 	mov	r7,#0x00
      000AF4 AD E3            [24] 3072 	mov	r5,_T1CNTH
      000AF6 8D 06            [24] 3073 	mov	ar6,r5
      000AF8 E4               [12] 3074 	clr	a
      000AF9 FD               [12] 3075 	mov	r5,a
      000AFA 2A               [12] 3076 	add	a,r2
      000AFB FA               [12] 3077 	mov	r2,a
      000AFC EE               [12] 3078 	mov	a,r6
      000AFD 3F               [12] 3079 	addc	a,r7
      000AFE FF               [12] 3080 	mov	r7,a
      000AFF E5 81            [12] 3081 	mov	a,sp
      000B01 24 BD            [12] 3082 	add	a,#0xbd
      000B03 F8               [12] 3083 	mov	r0,a
      000B04 A6 02            [24] 3084 	mov	@r0,ar2
      000B06 08               [12] 3085 	inc	r0
      000B07 A6 07            [24] 3086 	mov	@r0,ar7
                                   3087 ;	../../../../core/net/mac/xmac.c:600: for(strobes = 0, collisions = 0;
      000B09 7B 00            [12] 3088 	mov	r3,#0x00
      000B0B E5 81            [12] 3089 	mov	a,sp
      000B0D 24 B8            [12] 3090 	add	a,#0xb8
      000B0F F8               [12] 3091 	mov	r0,a
                                   3092 ;	../../../../core/net/mac/xmac.c:757: return MAC_TX_COLLISION;
                                   3093 ;	../../../../core/net/mac/xmac.c:600: for(strobes = 0, collisions = 0;
      000B10                       3094 00168$:
                                   3095 ;	../../../../core/net/mac/xmac.c:601: got_strobe_ack == 0 && collisions == 0 &&
      000B10 E5 81            [12] 3096 	mov	a,sp
      000B12 24 BF            [12] 3097 	add	a,#0xbf
      000B14 F8               [12] 3098 	mov	r0,a
      000B15 B6 00 02         [24] 3099 	cjne	@r0,#0x00,00284$
      000B18 80 03            [24] 3100 	sjmp	00285$
      000B1A                       3101 00284$:
      000B1A 02r0CrF2         [24] 3102 	ljmp	00142$
      000B1D                       3103 00285$:
                                   3104 ;	../../../../core/net/mac/xmac.c:602: RTIMER_CLOCK_LT(RTIMER_NOW(), t0 + xmac_config.strobe_time);
      000B1D C0 03            [24] 3105 	push	ar3
      000B1F AC E2            [24] 3106 	mov	r4,_T1CNTL
      000B21 7D 00            [12] 3107 	mov	r5,#0x00
      000B23 AA E3            [24] 3108 	mov	r2,_T1CNTH
      000B25 8A 03            [24] 3109 	mov	ar3,r2
      000B27 E4               [12] 3110 	clr	a
      000B28 2C               [12] 3111 	add	a,r4
      000B29 FC               [12] 3112 	mov	r4,a
      000B2A EB               [12] 3113 	mov	a,r3
      000B2B 3D               [12] 3114 	addc	a,r5
      000B2C FD               [12] 3115 	mov	r5,a
      000B2D 90r00r04         [24] 3116 	mov	dptr,#(_xmac_config + 0x0004)
      000B30 E0               [24] 3117 	movx	a,@dptr
      000B31 FA               [12] 3118 	mov	r2,a
      000B32 A3               [24] 3119 	inc	dptr
      000B33 E0               [24] 3120 	movx	a,@dptr
      000B34 FB               [12] 3121 	mov	r3,a
      000B35 E5 81            [12] 3122 	mov	a,sp
      000B37 24 BA            [12] 3123 	add	a,#0xba
      000B39 F8               [12] 3124 	mov	r0,a
      000B3A EA               [12] 3125 	mov	a,r2
      000B3B 26               [12] 3126 	add	a,@r0
      000B3C FA               [12] 3127 	mov	r2,a
      000B3D EB               [12] 3128 	mov	a,r3
      000B3E 08               [12] 3129 	inc	r0
      000B3F 36               [12] 3130 	addc	a,@r0
      000B40 FB               [12] 3131 	mov	r3,a
      000B41 EC               [12] 3132 	mov	a,r4
      000B42 C3               [12] 3133 	clr	c
      000B43 9A               [12] 3134 	subb	a,r2
      000B44 FA               [12] 3135 	mov	r2,a
      000B45 ED               [12] 3136 	mov	a,r5
      000B46 9B               [12] 3137 	subb	a,r3
      000B47 D0 03            [24] 3138 	pop	ar3
      000B49 20 E7 03         [24] 3139 	jb	acc.7,00286$
      000B4C 02r0CrF2         [24] 3140 	ljmp	00142$
      000B4F                       3141 00286$:
                                   3142 ;	../../../../core/net/mac/xmac.c:605: while(got_strobe_ack == 0 &&
      000B4F                       3143 00128$:
      000B4F E5 81            [12] 3144 	mov	a,sp
      000B51 24 BF            [12] 3145 	add	a,#0xbf
      000B53 F8               [12] 3146 	mov	r0,a
      000B54 E6               [12] 3147 	mov	a,@r0
      000B55 70 2F            [24] 3148 	jnz	00130$
                                   3149 ;	../../../../core/net/mac/xmac.c:606: RTIMER_CLOCK_LT(RTIMER_NOW(), t + xmac_config.strobe_wait_time)) {
      000B57 C0 03            [24] 3150 	push	ar3
      000B59 AC E2            [24] 3151 	mov	r4,_T1CNTL
      000B5B 7D 00            [12] 3152 	mov	r5,#0x00
      000B5D AA E3            [24] 3153 	mov	r2,_T1CNTH
      000B5F 8A 03            [24] 3154 	mov	ar3,r2
      000B61 E4               [12] 3155 	clr	a
      000B62 2C               [12] 3156 	add	a,r4
      000B63 FC               [12] 3157 	mov	r4,a
      000B64 EB               [12] 3158 	mov	a,r3
      000B65 3D               [12] 3159 	addc	a,r5
      000B66 FD               [12] 3160 	mov	r5,a
      000B67 90r00r06         [24] 3161 	mov	dptr,#(_xmac_config + 0x0006)
      000B6A E0               [24] 3162 	movx	a,@dptr
      000B6B FA               [12] 3163 	mov	r2,a
      000B6C A3               [24] 3164 	inc	dptr
      000B6D E0               [24] 3165 	movx	a,@dptr
      000B6E FB               [12] 3166 	mov	r3,a
      000B6F E5 81            [12] 3167 	mov	a,sp
      000B71 24 BC            [12] 3168 	add	a,#0xbc
      000B73 F8               [12] 3169 	mov	r0,a
      000B74 EA               [12] 3170 	mov	a,r2
      000B75 26               [12] 3171 	add	a,@r0
      000B76 FA               [12] 3172 	mov	r2,a
      000B77 EB               [12] 3173 	mov	a,r3
      000B78 08               [12] 3174 	inc	r0
      000B79 36               [12] 3175 	addc	a,@r0
      000B7A FB               [12] 3176 	mov	r3,a
      000B7B EC               [12] 3177 	mov	a,r4
      000B7C C3               [12] 3178 	clr	c
      000B7D 9A               [12] 3179 	subb	a,r2
      000B7E FA               [12] 3180 	mov	r2,a
      000B7F ED               [12] 3181 	mov	a,r5
      000B80 9B               [12] 3182 	subb	a,r3
      000B81 D0 03            [24] 3183 	pop	ar3
      000B83 20 E7 C9         [24] 3184 	jb	acc.7,00128$
      000B86                       3185 00130$:
                                   3186 ;	../../../../core/net/mac/xmac.c:638: t = RTIMER_NOW();
      000B86 C0 03            [24] 3187 	push	ar3
      000B88 AC E2            [24] 3188 	mov	r4,_T1CNTL
      000B8A 7D 00            [12] 3189 	mov	r5,#0x00
      000B8C AA E3            [24] 3190 	mov	r2,_T1CNTH
      000B8E 8A 03            [24] 3191 	mov	ar3,r2
      000B90 E4               [12] 3192 	clr	a
      000B91 FA               [12] 3193 	mov	r2,a
      000B92 2C               [12] 3194 	add	a,r4
      000B93 FC               [12] 3195 	mov	r4,a
      000B94 EB               [12] 3196 	mov	a,r3
      000B95 3D               [12] 3197 	addc	a,r5
      000B96 FD               [12] 3198 	mov	r5,a
      000B97 E5 81            [12] 3199 	mov	a,sp
      000B99 24 BC            [12] 3200 	add	a,#0xbc
      000B9B F8               [12] 3201 	mov	r0,a
      000B9C A6 04            [24] 3202 	mov	@r0,ar4
      000B9E 08               [12] 3203 	inc	r0
      000B9F A6 05            [24] 3204 	mov	@r0,ar5
                                   3205 ;	../../../../core/net/mac/xmac.c:640: if(got_strobe_ack == 0 && collisions == 0) {
      000BA1 D0 03            [24] 3206 	pop	ar3
      000BA3 E5 81            [12] 3207 	mov	a,sp
      000BA5 24 BF            [12] 3208 	add	a,#0xbf
      000BA7 F8               [12] 3209 	mov	r0,a
      000BA8 E6               [12] 3210 	mov	a,@r0
      000BA9 60 03            [24] 3211 	jz	00289$
      000BAB 02r0Br10         [24] 3212 	ljmp	00168$
      000BAE                       3213 00289$:
                                   3214 ;	../../../../core/net/mac/xmac.c:642: if(is_broadcast) {
      000BAE E5 81            [12] 3215 	mov	a,sp
      000BB0 24 F7            [12] 3216 	add	a,#0xf7
      000BB2 F8               [12] 3217 	mov	r0,a
      000BB3 E6               [12] 3218 	mov	a,@r0
      000BB4 08               [12] 3219 	inc	r0
      000BB5 46               [12] 3220 	orl	a,@r0
      000BB6 70 03            [24] 3221 	jnz	00290$
      000BB8 02r0Cr63         [24] 3222 	ljmp	00135$
      000BBB                       3223 00290$:
                                   3224 ;	../../../../core/net/mac/xmac.c:647: queuebuf_to_packetbuf(packet);
      000BBB C0 03            [24] 3225 	push	ar3
      000BBD E5 81            [12] 3226 	mov	a,sp
      000BBF 24 FB            [12] 3227 	add	a,#0xfb
      000BC1 F8               [12] 3228 	mov	r0,a
      000BC2 86 82            [24] 3229 	mov	dpl,@r0
      000BC4 08               [12] 3230 	inc	r0
      000BC5 86 83            [24] 3231 	mov	dph,@r0
      000BC7 08               [12] 3232 	inc	r0
      000BC8 86 F0            [24] 3233 	mov	b,@r0
      000BCA C0 03            [24] 3234 	push	ar3
      000BCC 78r00            [12] 3235 	mov	r0,#_queuebuf_to_packetbuf
      000BCE 79s00            [12] 3236 	mov	r1,#(_queuebuf_to_packetbuf >> 8)
      000BD0 7As00            [12] 3237 	mov	r2,#(_queuebuf_to_packetbuf >> 16)
      000BD2 12r00r00         [24] 3238 	lcall	__sdcc_banked_call
      000BD5 D0 03            [24] 3239 	pop	ar3
                                   3240 ;	../../../../core/net/mac/xmac.c:648: ret = NETSTACK_RADIO.send(packetbuf_hdrptr(), packetbuf_totlen());
      000BD7 90r00r09         [24] 3241 	mov	dptr,#(_cc2530_rf_driver + 0x0009)
      000BDA E4               [12] 3242 	clr	a
      000BDB 93               [24] 3243 	movc	a,@a+dptr
      000BDC FA               [12] 3244 	mov	r2,a
      000BDD A3               [24] 3245 	inc	dptr
      000BDE E4               [12] 3246 	clr	a
      000BDF 93               [24] 3247 	movc	a,@a+dptr
      000BE0 FC               [12] 3248 	mov	r4,a
      000BE1 A3               [24] 3249 	inc	dptr
      000BE2 E4               [12] 3250 	clr	a
      000BE3 93               [24] 3251 	movc	a,@a+dptr
      000BE4 FD               [12] 3252 	mov	r5,a
      000BE5 C0 05            [24] 3253 	push	ar5
      000BE7 C0 04            [24] 3254 	push	ar4
      000BE9 C0 03            [24] 3255 	push	ar3
      000BEB C0 02            [24] 3256 	push	ar2
      000BED 78r00            [12] 3257 	mov	r0,#_packetbuf_totlen
      000BEF 79s00            [12] 3258 	mov	r1,#(_packetbuf_totlen >> 8)
      000BF1 7As00            [12] 3259 	mov	r2,#(_packetbuf_totlen >> 16)
      000BF3 12r00r00         [24] 3260 	lcall	__sdcc_banked_call
      000BF6 C8               [12] 3261 	xch	a,r0
      000BF7 E5 81            [12] 3262 	mov	a,sp
      000BF9 24 B4            [12] 3263 	add	a,#0xb4
      000BFB C8               [12] 3264 	xch	a,r0
      000BFC A6 82            [24] 3265 	mov	@r0,dpl
      000BFE 08               [12] 3266 	inc	r0
      000BFF A6 83            [24] 3267 	mov	@r0,dph
      000C01 D0 02            [24] 3268 	pop	ar2
      000C03 D0 03            [24] 3269 	pop	ar3
      000C05 C0 02            [24] 3270 	push	ar2
      000C07 78r00            [12] 3271 	mov	r0,#_packetbuf_hdrptr
      000C09 79s00            [12] 3272 	mov	r1,#(_packetbuf_hdrptr >> 8)
      000C0B 7As00            [12] 3273 	mov	r2,#(_packetbuf_hdrptr >> 16)
      000C0D 12r00r00         [24] 3274 	lcall	__sdcc_banked_call
      000C10 AB 82            [24] 3275 	mov	r3,dpl
      000C12 AE 83            [24] 3276 	mov	r6,dph
      000C14 AF F0            [24] 3277 	mov	r7,b
      000C16 D0 02            [24] 3278 	pop	ar2
      000C18 D0 04            [24] 3279 	pop	ar4
      000C1A D0 05            [24] 3280 	pop	ar5
      000C1C C0 05            [24] 3281 	push	ar5
      000C1E C0 04            [24] 3282 	push	ar4
      000C20 C0 03            [24] 3283 	push	ar3
      000C22 C0 02            [24] 3284 	push	ar2
      000C24 E5 81            [12] 3285 	mov	a,sp
      000C26 24 B4            [12] 3286 	add	a,#0xb4
      000C28 F8               [12] 3287 	mov	r0,a
      000C29 E6               [12] 3288 	mov	a,@r0
      000C2A C0 E0            [24] 3289 	push	acc
      000C2C 08               [12] 3290 	inc	r0
      000C2D E6               [12] 3291 	mov	a,@r0
      000C2E C0 E0            [24] 3292 	push	acc
      000C30 C0 02            [24] 3293 	push	ar2
      000C32 C0 04            [24] 3294 	push	ar4
      000C34 C0 05            [24] 3295 	push	ar5
      000C36 8B 82            [24] 3296 	mov	dpl,r3
      000C38 8E 83            [24] 3297 	mov	dph,r6
      000C3A 8F F0            [24] 3298 	mov	b,r7
      000C3C D0 02            [24] 3299 	pop	ar2
      000C3E D0 01            [24] 3300 	pop	ar1
      000C40 D0 00            [24] 3301 	pop	ar0
      000C42 12r00r00         [24] 3302 	lcall	__sdcc_banked_call
      000C45 15 81            [12] 3303 	dec	sp
      000C47 15 81            [12] 3304 	dec	sp
      000C49 D0 02            [24] 3305 	pop	ar2
      000C4B D0 03            [24] 3306 	pop	ar3
      000C4D D0 04            [24] 3307 	pop	ar4
      000C4F D0 05            [24] 3308 	pop	ar5
                                   3309 ;	../../../../core/net/mac/xmac.c:650: off();
      000C51 C0 03            [24] 3310 	push	ar3
      000C53 78r40            [12] 3311 	mov	r0,#_off
      000C55 79s00            [12] 3312 	mov	r1,#(_off >> 8)
      000C57 7As00            [12] 3313 	mov	r2,#(_off >> 16)
      000C59 12r00r00         [24] 3314 	lcall	__sdcc_banked_call
      000C5C D0 03            [24] 3315 	pop	ar3
      000C5E D0 03            [24] 3316 	pop	ar3
      000C60 02r0Br10         [24] 3317 	ljmp	00168$
      000C63                       3318 00135$:
                                   3319 ;	../../../../core/net/mac/xmac.c:655: on();
      000C63 C0 03            [24] 3320 	push	ar3
      000C65 C0 03            [24] 3321 	push	ar3
      000C67 78r00            [12] 3322 	mov	r0,#_on
      000C69 79s00            [12] 3323 	mov	r1,#(_on >> 8)
      000C6B 7As00            [12] 3324 	mov	r2,#(_on >> 16)
      000C6D 12r00r00         [24] 3325 	lcall	__sdcc_banked_call
      000C70 D0 03            [24] 3326 	pop	ar3
                                   3327 ;	../../../../core/net/mac/xmac.c:656: ret = NETSTACK_RADIO.send(strobe, strobe_len);
      000C72 90r00r09         [24] 3328 	mov	dptr,#(_cc2530_rf_driver + 0x0009)
      000C75 E4               [12] 3329 	clr	a
      000C76 93               [24] 3330 	movc	a,@a+dptr
      000C77 FD               [12] 3331 	mov	r5,a
      000C78 A3               [24] 3332 	inc	dptr
      000C79 E4               [12] 3333 	clr	a
      000C7A 93               [24] 3334 	movc	a,@a+dptr
      000C7B FE               [12] 3335 	mov	r6,a
      000C7C A3               [24] 3336 	inc	dptr
      000C7D E4               [12] 3337 	clr	a
      000C7E 93               [24] 3338 	movc	a,@a+dptr
      000C7F FF               [12] 3339 	mov	r7,a
      000C80 E5 81            [12] 3340 	mov	a,sp
      000C82 24 B7            [12] 3341 	add	a,#0xb7
      000C84 F8               [12] 3342 	mov	r0,a
      000C85 86 02            [24] 3343 	mov	ar2,@r0
      000C87 7B 00            [12] 3344 	mov	r3,#0x00
      000C89 7C 40            [12] 3345 	mov	r4,#0x40
      000C8B C0 07            [24] 3346 	push	ar7
      000C8D C0 06            [24] 3347 	push	ar6
      000C8F C0 05            [24] 3348 	push	ar5
      000C91 C0 03            [24] 3349 	push	ar3
      000C93 E5 81            [12] 3350 	mov	a,sp
      000C95 24 EE            [12] 3351 	add	a,#0xee
      000C97 F8               [12] 3352 	mov	r0,a
      000C98 E6               [12] 3353 	mov	a,@r0
      000C99 C0 E0            [24] 3354 	push	acc
      000C9B 08               [12] 3355 	inc	r0
      000C9C E6               [12] 3356 	mov	a,@r0
      000C9D C0 E0            [24] 3357 	push	acc
      000C9F C0 05            [24] 3358 	push	ar5
      000CA1 C0 06            [24] 3359 	push	ar6
      000CA3 C0 07            [24] 3360 	push	ar7
      000CA5 8A 82            [24] 3361 	mov	dpl,r2
      000CA7 8B 83            [24] 3362 	mov	dph,r3
      000CA9 8C F0            [24] 3363 	mov	b,r4
      000CAB D0 02            [24] 3364 	pop	ar2
      000CAD D0 01            [24] 3365 	pop	ar1
      000CAF D0 00            [24] 3366 	pop	ar0
      000CB1 12r00r00         [24] 3367 	lcall	__sdcc_banked_call
      000CB4 15 81            [12] 3368 	dec	sp
      000CB6 15 81            [12] 3369 	dec	sp
      000CB8 D0 03            [24] 3370 	pop	ar3
      000CBA D0 05            [24] 3371 	pop	ar5
      000CBC D0 06            [24] 3372 	pop	ar6
      000CBE D0 07            [24] 3373 	pop	ar7
                                   3374 ;	../../../../core/net/mac/xmac.c:672: if(detect_ack()) {
      000CC0 C0 03            [24] 3375 	push	ar3
      000CC2 78rA2            [12] 3376 	mov	r0,#_detect_ack
      000CC4 79s04            [12] 3377 	mov	r1,#(_detect_ack >> 8)
      000CC6 7As00            [12] 3378 	mov	r2,#(_detect_ack >> 16)
      000CC8 12r00r00         [24] 3379 	lcall	__sdcc_banked_call
      000CCB E5 82            [12] 3380 	mov	a,dpl
      000CCD 85 83 F0         [24] 3381 	mov	b,dph
      000CD0 D0 03            [24] 3382 	pop	ar3
      000CD2 D0 03            [24] 3383 	pop	ar3
      000CD4 45 F0            [12] 3384 	orl	a,b
      000CD6 60 0A            [24] 3385 	jz	00132$
                                   3386 ;	../../../../core/net/mac/xmac.c:673: got_strobe_ack = 1;
      000CD8 E5 81            [12] 3387 	mov	a,sp
      000CDA 24 BF            [12] 3388 	add	a,#0xbf
      000CDC F8               [12] 3389 	mov	r0,a
      000CDD 76 01            [12] 3390 	mov	@r0,#0x01
      000CDF 02r0Br10         [24] 3391 	ljmp	00168$
      000CE2                       3392 00132$:
                                   3393 ;	../../../../core/net/mac/xmac.c:675: off();
      000CE2 C0 03            [24] 3394 	push	ar3
      000CE4 78r40            [12] 3395 	mov	r0,#_off
      000CE6 79s00            [12] 3396 	mov	r1,#(_off >> 8)
      000CE8 7As00            [12] 3397 	mov	r2,#(_off >> 16)
      000CEA 12r00r00         [24] 3398 	lcall	__sdcc_banked_call
      000CED D0 03            [24] 3399 	pop	ar3
                                   3400 ;	../../../../core/net/mac/xmac.c:603: strobes++) {
      000CEF 02r0Br10         [24] 3401 	ljmp	00168$
      000CF2                       3402 00142$:
                                   3403 ;	../../../../core/net/mac/xmac.c:700: queuebuf_to_packetbuf(packet);
      000CF2 E5 81            [12] 3404 	mov	a,sp
      000CF4 24 FC            [12] 3405 	add	a,#0xfc
      000CF6 F8               [12] 3406 	mov	r0,a
      000CF7 86 82            [24] 3407 	mov	dpl,@r0
      000CF9 08               [12] 3408 	inc	r0
      000CFA 86 83            [24] 3409 	mov	dph,@r0
      000CFC 08               [12] 3410 	inc	r0
      000CFD 86 F0            [24] 3411 	mov	b,@r0
      000CFF C0 03            [24] 3412 	push	ar3
      000D01 78r00            [12] 3413 	mov	r0,#_queuebuf_to_packetbuf
      000D03 79s00            [12] 3414 	mov	r1,#(_queuebuf_to_packetbuf >> 8)
      000D05 7As00            [12] 3415 	mov	r2,#(_queuebuf_to_packetbuf >> 16)
      000D07 12r00r00         [24] 3416 	lcall	__sdcc_banked_call
      000D0A D0 03            [24] 3417 	pop	ar3
                                   3418 ;	../../../../core/net/mac/xmac.c:701: queuebuf_free(packet);
      000D0C E5 81            [12] 3419 	mov	a,sp
      000D0E 24 FC            [12] 3420 	add	a,#0xfc
      000D10 F8               [12] 3421 	mov	r0,a
      000D11 86 82            [24] 3422 	mov	dpl,@r0
      000D13 08               [12] 3423 	inc	r0
      000D14 86 83            [24] 3424 	mov	dph,@r0
      000D16 08               [12] 3425 	inc	r0
      000D17 86 F0            [24] 3426 	mov	b,@r0
      000D19 C0 03            [24] 3427 	push	ar3
      000D1B 78r00            [12] 3428 	mov	r0,#_queuebuf_free
      000D1D 79s00            [12] 3429 	mov	r1,#(_queuebuf_free >> 8)
      000D1F 7As00            [12] 3430 	mov	r2,#(_queuebuf_free >> 16)
      000D21 12r00r00         [24] 3431 	lcall	__sdcc_banked_call
      000D24 D0 03            [24] 3432 	pop	ar3
                                   3433 ;	../../../../core/net/mac/xmac.c:704: if((is_broadcast || got_strobe_ack || is_streaming) && collisions == 0) {
      000D26 E5 81            [12] 3434 	mov	a,sp
      000D28 24 F7            [12] 3435 	add	a,#0xf7
      000D2A F8               [12] 3436 	mov	r0,a
      000D2B E6               [12] 3437 	mov	a,@r0
      000D2C 08               [12] 3438 	inc	r0
      000D2D 46               [12] 3439 	orl	a,@r0
      000D2E 70 12            [24] 3440 	jnz	00151$
      000D30 E5 81            [12] 3441 	mov	a,sp
      000D32 24 BF            [12] 3442 	add	a,#0xbf
      000D34 F8               [12] 3443 	mov	r0,a
      000D35 E6               [12] 3444 	mov	a,@r0
      000D36 70 0A            [24] 3445 	jnz	00151$
      000D38 90r00r43         [24] 3446 	mov	dptr,#_is_streaming
      000D3B E0               [24] 3447 	movx	a,@dptr
      000D3C FF               [12] 3448 	mov	r7,a
      000D3D 70 03            [24] 3449 	jnz	00294$
      000D3F 02r0DrE9         [24] 3450 	ljmp	00148$
      000D42                       3451 00294$:
      000D42                       3452 00151$:
      000D42 EB               [12] 3453 	mov	a,r3
      000D43 60 03            [24] 3454 	jz	00295$
      000D45 02r0DrE9         [24] 3455 	ljmp	00148$
      000D48                       3456 00295$:
                                   3457 ;	../../../../core/net/mac/xmac.c:705: ret = NETSTACK_RADIO.send(packetbuf_hdrptr(), packetbuf_totlen());
      000D48 C0 03            [24] 3458 	push	ar3
      000D4A 90r00r09         [24] 3459 	mov	dptr,#(_cc2530_rf_driver + 0x0009)
      000D4D E4               [12] 3460 	clr	a
      000D4E 93               [24] 3461 	movc	a,@a+dptr
      000D4F FD               [12] 3462 	mov	r5,a
      000D50 A3               [24] 3463 	inc	dptr
      000D51 E4               [12] 3464 	clr	a
      000D52 93               [24] 3465 	movc	a,@a+dptr
      000D53 FE               [12] 3466 	mov	r6,a
      000D54 A3               [24] 3467 	inc	dptr
      000D55 E4               [12] 3468 	clr	a
      000D56 93               [24] 3469 	movc	a,@a+dptr
      000D57 FF               [12] 3470 	mov	r7,a
      000D58 C0 07            [24] 3471 	push	ar7
      000D5A C0 06            [24] 3472 	push	ar6
      000D5C C0 05            [24] 3473 	push	ar5
      000D5E C0 03            [24] 3474 	push	ar3
      000D60 78r00            [12] 3475 	mov	r0,#_packetbuf_totlen
      000D62 79s00            [12] 3476 	mov	r1,#(_packetbuf_totlen >> 8)
      000D64 7As00            [12] 3477 	mov	r2,#(_packetbuf_totlen >> 16)
      000D66 12r00r00         [24] 3478 	lcall	__sdcc_banked_call
      000D69 C8               [12] 3479 	xch	a,r0
      000D6A E5 81            [12] 3480 	mov	a,sp
      000D6C 24 B4            [12] 3481 	add	a,#0xb4
      000D6E C8               [12] 3482 	xch	a,r0
      000D6F A6 82            [24] 3483 	mov	@r0,dpl
      000D71 08               [12] 3484 	inc	r0
      000D72 A6 83            [24] 3485 	mov	@r0,dph
      000D74 D0 03            [24] 3486 	pop	ar3
      000D76 78r00            [12] 3487 	mov	r0,#_packetbuf_hdrptr
      000D78 79s00            [12] 3488 	mov	r1,#(_packetbuf_hdrptr >> 8)
      000D7A 7As00            [12] 3489 	mov	r2,#(_packetbuf_hdrptr >> 16)
      000D7C 12r00r00         [24] 3490 	lcall	__sdcc_banked_call
      000D7F AA 82            [24] 3491 	mov	r2,dpl
      000D81 AB 83            [24] 3492 	mov	r3,dph
      000D83 AC F0            [24] 3493 	mov	r4,b
      000D85 D0 05            [24] 3494 	pop	ar5
      000D87 D0 06            [24] 3495 	pop	ar6
      000D89 D0 07            [24] 3496 	pop	ar7
      000D8B C0 07            [24] 3497 	push	ar7
      000D8D C0 06            [24] 3498 	push	ar6
      000D8F C0 05            [24] 3499 	push	ar5
      000D91 C0 03            [24] 3500 	push	ar3
      000D93 E5 81            [12] 3501 	mov	a,sp
      000D95 24 B4            [12] 3502 	add	a,#0xb4
      000D97 F8               [12] 3503 	mov	r0,a
      000D98 E6               [12] 3504 	mov	a,@r0
      000D99 C0 E0            [24] 3505 	push	acc
      000D9B 08               [12] 3506 	inc	r0
      000D9C E6               [12] 3507 	mov	a,@r0
      000D9D C0 E0            [24] 3508 	push	acc
      000D9F C0 05            [24] 3509 	push	ar5
      000DA1 C0 06            [24] 3510 	push	ar6
      000DA3 C0 07            [24] 3511 	push	ar7
      000DA5 8A 82            [24] 3512 	mov	dpl,r2
      000DA7 8B 83            [24] 3513 	mov	dph,r3
      000DA9 8C F0            [24] 3514 	mov	b,r4
      000DAB D0 02            [24] 3515 	pop	ar2
      000DAD D0 01            [24] 3516 	pop	ar1
      000DAF D0 00            [24] 3517 	pop	ar0
      000DB1 12r00r00         [24] 3518 	lcall	__sdcc_banked_call
      000DB4 15 81            [12] 3519 	dec	sp
      000DB6 15 81            [12] 3520 	dec	sp
      000DB8 D0 03            [24] 3521 	pop	ar3
      000DBA D0 05            [24] 3522 	pop	ar5
      000DBC D0 06            [24] 3523 	pop	ar6
      000DBE D0 07            [24] 3524 	pop	ar7
                                   3525 ;	../../../../core/net/mac/xmac.c:707: if(!is_broadcast) {
      000DC0 D0 03            [24] 3526 	pop	ar3
      000DC2 E5 81            [12] 3527 	mov	a,sp
      000DC4 24 F7            [12] 3528 	add	a,#0xf7
      000DC6 F8               [12] 3529 	mov	r0,a
      000DC7 E6               [12] 3530 	mov	a,@r0
      000DC8 08               [12] 3531 	inc	r0
      000DC9 46               [12] 3532 	orl	a,@r0
      000DCA 70 1D            [24] 3533 	jnz	00148$
                                   3534 ;	../../../../core/net/mac/xmac.c:713: if(detect_ack()) {
      000DCC C0 03            [24] 3535 	push	ar3
      000DCE 78rA2            [12] 3536 	mov	r0,#_detect_ack
      000DD0 79s04            [12] 3537 	mov	r1,#(_detect_ack >> 8)
      000DD2 7As00            [12] 3538 	mov	r2,#(_detect_ack >> 16)
      000DD4 12r00r00         [24] 3539 	lcall	__sdcc_banked_call
      000DD7 E5 82            [12] 3540 	mov	a,dpl
      000DD9 85 83 F0         [24] 3541 	mov	b,dph
      000DDC D0 03            [24] 3542 	pop	ar3
      000DDE 45 F0            [12] 3543 	orl	a,b
      000DE0 60 07            [24] 3544 	jz	00148$
                                   3545 ;	../../../../core/net/mac/xmac.c:714: got_ack = 1;
      000DE2 E5 81            [12] 3546 	mov	a,sp
      000DE4 24 C0            [12] 3547 	add	a,#0xc0
      000DE6 F8               [12] 3548 	mov	r0,a
      000DE7 76 01            [12] 3549 	mov	@r0,#0x01
      000DE9                       3550 00148$:
                                   3551 ;	../../../../core/net/mac/xmac.c:719: off();
      000DE9 C0 03            [24] 3552 	push	ar3
      000DEB 78r40            [12] 3553 	mov	r0,#_off
      000DED 79s00            [12] 3554 	mov	r1,#(_off >> 8)
      000DEF 7As00            [12] 3555 	mov	r2,#(_off >> 16)
      000DF1 12r00r00         [24] 3556 	lcall	__sdcc_banked_call
      000DF4 D0 03            [24] 3557 	pop	ar3
                                   3558 ;	../../../../core/net/mac/xmac.c:722: if(got_strobe_ack && !is_streaming) {
      000DF6 E5 81            [12] 3559 	mov	a,sp
      000DF8 24 BF            [12] 3560 	add	a,#0xbf
      000DFA F8               [12] 3561 	mov	r0,a
      000DFB E6               [12] 3562 	mov	a,@r0
      000DFC 60 35            [24] 3563 	jz	00153$
      000DFE 90r00r43         [24] 3564 	mov	dptr,#_is_streaming
      000E01 E0               [24] 3565 	movx	a,@dptr
      000E02 FF               [12] 3566 	mov	r7,a
      000E03 70 2E            [24] 3567 	jnz	00153$
                                   3568 ;	../../../../core/net/mac/xmac.c:723: register_encounter(packetbuf_addr(PACKETBUF_ADDR_RECEIVER), encounter_time);
      000E05 75 82 19         [24] 3569 	mov	dpl,#0x19
      000E08 C0 03            [24] 3570 	push	ar3
      000E0A 78r00            [12] 3571 	mov	r0,#_packetbuf_addr
      000E0C 79s00            [12] 3572 	mov	r1,#(_packetbuf_addr >> 8)
      000E0E 7As00            [12] 3573 	mov	r2,#(_packetbuf_addr >> 16)
      000E10 12r00r00         [24] 3574 	lcall	__sdcc_banked_call
      000E13 AD 82            [24] 3575 	mov	r5,dpl
      000E15 AE 83            [24] 3576 	mov	r6,dph
      000E17 AF F0            [24] 3577 	mov	r7,b
      000E19 E4               [12] 3578 	clr	a
      000E1A C0 E0            [24] 3579 	push	acc
      000E1C C0 E0            [24] 3580 	push	acc
      000E1E 8D 82            [24] 3581 	mov	dpl,r5
      000E20 8E 83            [24] 3582 	mov	dph,r6
      000E22 8F F0            [24] 3583 	mov	b,r7
      000E24 78r2C            [12] 3584 	mov	r0,#_register_encounter
      000E26 79s03            [12] 3585 	mov	r1,#(_register_encounter >> 8)
      000E28 7As00            [12] 3586 	mov	r2,#(_register_encounter >> 16)
      000E2A 12r00r00         [24] 3587 	lcall	__sdcc_banked_call
      000E2D 15 81            [12] 3588 	dec	sp
      000E2F 15 81            [12] 3589 	dec	sp
      000E31 D0 03            [24] 3590 	pop	ar3
      000E33                       3591 00153$:
                                   3592 ;	../../../../core/net/mac/xmac.c:726: watchdog_start();
      000E33 C0 03            [24] 3593 	push	ar3
      000E35 78r00            [12] 3594 	mov	r0,#_watchdog_start
      000E37 79s00            [12] 3595 	mov	r1,#(_watchdog_start >> 8)
      000E39 7As00            [12] 3596 	mov	r2,#(_watchdog_start >> 16)
      000E3B 12r00r00         [24] 3597 	lcall	__sdcc_banked_call
      000E3E D0 03            [24] 3598 	pop	ar3
                                   3599 ;	../../../../core/net/mac/xmac.c:746: we_are_sending = 0;
      000E40 90r00r0B         [24] 3600 	mov	dptr,#_we_are_sending
      000E43 E4               [12] 3601 	clr	a
      000E44 F0               [24] 3602 	movx	@dptr,a
                                   3603 ;	../../../../core/net/mac/xmac.c:749: if(collisions == 0) {
      000E45 EB               [12] 3604 	mov	a,r3
      000E46 70 1C            [24] 3605 	jnz	00160$
                                   3606 ;	../../../../core/net/mac/xmac.c:750: if(is_broadcast == 0 && got_ack == 0) {
      000E48 E5 81            [12] 3607 	mov	a,sp
      000E4A 24 F7            [12] 3608 	add	a,#0xf7
      000E4C F8               [12] 3609 	mov	r0,a
      000E4D E6               [12] 3610 	mov	a,@r0
      000E4E 08               [12] 3611 	inc	r0
      000E4F 46               [12] 3612 	orl	a,@r0
      000E50 70 0D            [24] 3613 	jnz	00156$
      000E52 E5 81            [12] 3614 	mov	a,sp
      000E54 24 C0            [12] 3615 	add	a,#0xc0
      000E56 F8               [12] 3616 	mov	r0,a
      000E57 E6               [12] 3617 	mov	a,@r0
      000E58 70 05            [24] 3618 	jnz	00156$
                                   3619 ;	../../../../core/net/mac/xmac.c:751: return MAC_TX_NOACK;
      000E5A 90 00 02         [24] 3620 	mov	dptr,#0x0002
      000E5D 80 0F            [24] 3621 	sjmp	00170$
      000E5F                       3622 00156$:
                                   3623 ;	../../../../core/net/mac/xmac.c:753: return MAC_TX_OK;
      000E5F 90 00 00         [24] 3624 	mov	dptr,#0x0000
      000E62 80 0A            [24] 3625 	sjmp	00170$
      000E64                       3626 00160$:
                                   3627 ;	../../../../core/net/mac/xmac.c:756: someone_is_sending++;
      000E64 90r00r0A         [24] 3628 	mov	dptr,#_someone_is_sending
      000E67 E0               [24] 3629 	movx	a,@dptr
      000E68 24 01            [12] 3630 	add	a,#0x01
      000E6A F0               [24] 3631 	movx	@dptr,a
                                   3632 ;	../../../../core/net/mac/xmac.c:757: return MAC_TX_COLLISION;
      000E6B 90 00 01         [24] 3633 	mov	dptr,#0x0001
      000E6E                       3634 00170$:
      000E6E E5 81            [12] 3635 	mov	a,sp
      000E70 24 B7            [12] 3636 	add	a,#0xB7
      000E72 F5 81            [12] 3637 	mov	sp,a
      000E74 02r00r00         [24] 3638 	ljmp	__sdcc_banked_ret
                                   3639 ;------------------------------------------------------------
                                   3640 ;Allocation info for local variables in function 'qsend_packet'
                                   3641 ;------------------------------------------------------------
                                   3642 ;ptr                       Allocated to stack - sp -7
                                   3643 ;sent                      Allocated to registers r5 r6 r7 
                                   3644 ;ret                       Allocated to stack - sp -1
                                   3645 ;sloc0                     Allocated to stack - sp -1
                                   3646 ;------------------------------------------------------------
                                   3647 ;	../../../../core/net/mac/xmac.c:763: qsend_packet(mac_callback_t sent, void *ptr)
                                   3648 ;	-----------------------------------------
                                   3649 ;	 function qsend_packet
                                   3650 ;	-----------------------------------------
      000E77                       3651 _qsend_packet:
      000E77 05 81            [12] 3652 	inc	sp
      000E79 05 81            [12] 3653 	inc	sp
      000E7B AD 82            [24] 3654 	mov	r5,dpl
      000E7D AE 83            [24] 3655 	mov	r6,dph
      000E7F AF F0            [24] 3656 	mov	r7,b
                                   3657 ;	../../../../core/net/mac/xmac.c:767: if(someone_is_sending) {
      000E81 90r00r0A         [24] 3658 	mov	dptr,#_someone_is_sending
      000E84 E0               [24] 3659 	movx	a,@dptr
      000E85 FC               [12] 3660 	mov	r4,a
      000E86 60 41            [24] 3661 	jz	00102$
                                   3662 ;	../../../../core/net/mac/xmac.c:770: RIMESTATS_ADD(sendingdrop);
      000E88 C0 05            [24] 3663 	push	ar5
      000E8A C0 06            [24] 3664 	push	ar6
      000E8C C0 07            [24] 3665 	push	ar7
      000E8E 90r00r3C         [24] 3666 	mov	dptr,#(_rimestats + 0x003c)
      000E91 E0               [24] 3667 	movx	a,@dptr
      000E92 FA               [12] 3668 	mov	r2,a
      000E93 A3               [24] 3669 	inc	dptr
      000E94 E0               [24] 3670 	movx	a,@dptr
      000E95 FB               [12] 3671 	mov	r3,a
      000E96 A3               [24] 3672 	inc	dptr
      000E97 E0               [24] 3673 	movx	a,@dptr
      000E98 FC               [12] 3674 	mov	r4,a
      000E99 A3               [24] 3675 	inc	dptr
      000E9A E0               [24] 3676 	movx	a,@dptr
      000E9B FF               [12] 3677 	mov	r7,a
      000E9C 0A               [12] 3678 	inc	r2
      000E9D BA 00 09         [24] 3679 	cjne	r2,#0x00,00118$
      000EA0 0B               [12] 3680 	inc	r3
      000EA1 BB 00 05         [24] 3681 	cjne	r3,#0x00,00118$
      000EA4 0C               [12] 3682 	inc	r4
      000EA5 BC 00 01         [24] 3683 	cjne	r4,#0x00,00118$
      000EA8 0F               [12] 3684 	inc	r7
      000EA9                       3685 00118$:
      000EA9 90r00r3C         [24] 3686 	mov	dptr,#(_rimestats + 0x003c)
      000EAC EA               [12] 3687 	mov	a,r2
      000EAD F0               [24] 3688 	movx	@dptr,a
      000EAE EB               [12] 3689 	mov	a,r3
      000EAF A3               [24] 3690 	inc	dptr
      000EB0 F0               [24] 3691 	movx	@dptr,a
      000EB1 EC               [12] 3692 	mov	a,r4
      000EB2 A3               [24] 3693 	inc	dptr
      000EB3 F0               [24] 3694 	movx	@dptr,a
      000EB4 EF               [12] 3695 	mov	a,r7
      000EB5 A3               [24] 3696 	inc	dptr
      000EB6 F0               [24] 3697 	movx	@dptr,a
                                   3698 ;	../../../../core/net/mac/xmac.c:771: ret = MAC_TX_COLLISION;
      000EB7 E5 81            [12] 3699 	mov	a,sp
      000EB9 24 FC            [12] 3700 	add	a,#0xfc
      000EBB F8               [12] 3701 	mov	r0,a
      000EBC 76 01            [12] 3702 	mov	@r0,#0x01
      000EBE 08               [12] 3703 	inc	r0
      000EBF 76 00            [12] 3704 	mov	@r0,#0x00
      000EC1 D0 07            [24] 3705 	pop	ar7
      000EC3 D0 06            [24] 3706 	pop	ar6
      000EC5 D0 05            [24] 3707 	pop	ar5
      000EC7 80 21            [24] 3708 	sjmp	00106$
      000EC9                       3709 00102$:
                                   3710 ;	../../../../core/net/mac/xmac.c:774: ret = send_packet();
      000EC9 C0 07            [24] 3711 	push	ar7
      000ECB C0 06            [24] 3712 	push	ar6
      000ECD C0 05            [24] 3713 	push	ar5
      000ECF 78r34            [12] 3714 	mov	r0,#_send_packet
      000ED1 79s06            [12] 3715 	mov	r1,#(_send_packet >> 8)
      000ED3 7As00            [12] 3716 	mov	r2,#(_send_packet >> 16)
      000ED5 12r00r00         [24] 3717 	lcall	__sdcc_banked_call
      000ED8 AB 82            [24] 3718 	mov	r3,dpl
      000EDA AC 83            [24] 3719 	mov	r4,dph
      000EDC D0 05            [24] 3720 	pop	ar5
      000EDE D0 06            [24] 3721 	pop	ar6
      000EE0 D0 07            [24] 3722 	pop	ar7
      000EE2 A8 81            [24] 3723 	mov	r0,sp
      000EE4 18               [12] 3724 	dec	r0
      000EE5 A6 03            [24] 3725 	mov	@r0,ar3
      000EE7 08               [12] 3726 	inc	r0
      000EE8 A6 04            [24] 3727 	mov	@r0,ar4
                                   3728 ;	../../../../core/net/mac/xmac.c:777: mac_call_sent_callback(sent, ptr, ret, 1);
      000EEA                       3729 00106$:
      000EEA ED               [12] 3730 	mov	a,r5
      000EEB 4E               [12] 3731 	orl	a,r6
      000EEC 60 41            [24] 3732 	jz	00109$
      000EEE C0 07            [24] 3733 	push	ar7
      000EF0 C0 06            [24] 3734 	push	ar6
      000EF2 C0 05            [24] 3735 	push	ar5
      000EF4 74 01            [12] 3736 	mov	a,#0x01
      000EF6 C0 E0            [24] 3737 	push	acc
      000EF8 E4               [12] 3738 	clr	a
      000EF9 C0 E0            [24] 3739 	push	acc
      000EFB E5 81            [12] 3740 	mov	a,sp
      000EFD 24 FA            [12] 3741 	add	a,#0xfa
      000EFF F8               [12] 3742 	mov	r0,a
      000F00 E6               [12] 3743 	mov	a,@r0
      000F01 C0 E0            [24] 3744 	push	acc
      000F03 08               [12] 3745 	inc	r0
      000F04 E6               [12] 3746 	mov	a,@r0
      000F05 C0 E0            [24] 3747 	push	acc
      000F07 C0 05            [24] 3748 	push	ar5
      000F09 C0 06            [24] 3749 	push	ar6
      000F0B C0 07            [24] 3750 	push	ar7
      000F0D E5 81            [12] 3751 	mov	a,sp
      000F0F 24 EF            [12] 3752 	add	a,#0xef
      000F11 F8               [12] 3753 	mov	r0,a
      000F12 86 82            [24] 3754 	mov	dpl,@r0
      000F14 08               [12] 3755 	inc	r0
      000F15 86 83            [24] 3756 	mov	dph,@r0
      000F17 08               [12] 3757 	inc	r0
      000F18 86 F0            [24] 3758 	mov	b,@r0
      000F1A D0 02            [24] 3759 	pop	ar2
      000F1C D0 01            [24] 3760 	pop	ar1
      000F1E D0 00            [24] 3761 	pop	ar0
      000F20 12r00r00         [24] 3762 	lcall	__sdcc_banked_call
      000F23 E5 81            [12] 3763 	mov	a,sp
      000F25 24 FC            [12] 3764 	add	a,#0xfc
      000F27 F5 81            [12] 3765 	mov	sp,a
      000F29 D0 05            [24] 3766 	pop	ar5
      000F2B D0 06            [24] 3767 	pop	ar6
      000F2D D0 07            [24] 3768 	pop	ar7
      000F2F                       3769 00109$:
      000F2F 15 81            [12] 3770 	dec	sp
      000F31 15 81            [12] 3771 	dec	sp
      000F33 02r00r00         [24] 3772 	ljmp	__sdcc_banked_ret
                                   3773 ;------------------------------------------------------------
                                   3774 ;Allocation info for local variables in function 'qsend_list'
                                   3775 ;------------------------------------------------------------
                                   3776 ;ptr                       Allocated to stack - sp -5
                                   3777 ;buf_list                  Allocated to stack - sp -8
                                   3778 ;sent                      Allocated to registers r5 r6 r7 
                                   3779 ;------------------------------------------------------------
                                   3780 ;	../../../../core/net/mac/xmac.c:781: qsend_list(mac_callback_t sent, void *ptr, struct rdc_buf_list *buf_list)
                                   3781 ;	-----------------------------------------
                                   3782 ;	 function qsend_list
                                   3783 ;	-----------------------------------------
      000F36                       3784 _qsend_list:
      000F36 AD 82            [24] 3785 	mov	r5,dpl
      000F38 AE 83            [24] 3786 	mov	r6,dph
      000F3A AF F0            [24] 3787 	mov	r7,b
                                   3788 ;	../../../../core/net/mac/xmac.c:783: if(buf_list != NULL) {
      000F3C E5 81            [12] 3789 	mov	a,sp
      000F3E 24 F8            [12] 3790 	add	a,#0xf8
      000F40 F8               [12] 3791 	mov	r0,a
      000F41 E6               [12] 3792 	mov	a,@r0
      000F42 08               [12] 3793 	inc	r0
      000F43 46               [12] 3794 	orl	a,@r0
      000F44 60 68            [24] 3795 	jz	00103$
                                   3796 ;	../../../../core/net/mac/xmac.c:784: queuebuf_to_packetbuf(buf_list->buf);
      000F46 E5 81            [12] 3797 	mov	a,sp
      000F48 24 F8            [12] 3798 	add	a,#0xf8
      000F4A F8               [12] 3799 	mov	r0,a
      000F4B 86 02            [24] 3800 	mov	ar2,@r0
      000F4D 08               [12] 3801 	inc	r0
      000F4E 86 03            [24] 3802 	mov	ar3,@r0
      000F50 08               [12] 3803 	inc	r0
      000F51 86 04            [24] 3804 	mov	ar4,@r0
      000F53 74 03            [12] 3805 	mov	a,#0x03
      000F55 2A               [12] 3806 	add	a,r2
      000F56 FA               [12] 3807 	mov	r2,a
      000F57 E4               [12] 3808 	clr	a
      000F58 3B               [12] 3809 	addc	a,r3
      000F59 FB               [12] 3810 	mov	r3,a
      000F5A 8A 82            [24] 3811 	mov	dpl,r2
      000F5C 8B 83            [24] 3812 	mov	dph,r3
      000F5E 8C F0            [24] 3813 	mov	b,r4
      000F60 12r00r00         [24] 3814 	lcall	__gptrget
      000F63 FA               [12] 3815 	mov	r2,a
      000F64 A3               [24] 3816 	inc	dptr
      000F65 12r00r00         [24] 3817 	lcall	__gptrget
      000F68 FB               [12] 3818 	mov	r3,a
      000F69 A3               [24] 3819 	inc	dptr
      000F6A 12r00r00         [24] 3820 	lcall	__gptrget
      000F6D FC               [12] 3821 	mov	r4,a
      000F6E 8A 82            [24] 3822 	mov	dpl,r2
      000F70 8B 83            [24] 3823 	mov	dph,r3
      000F72 8C F0            [24] 3824 	mov	b,r4
      000F74 C0 07            [24] 3825 	push	ar7
      000F76 C0 06            [24] 3826 	push	ar6
      000F78 C0 05            [24] 3827 	push	ar5
      000F7A 78r00            [12] 3828 	mov	r0,#_queuebuf_to_packetbuf
      000F7C 79s00            [12] 3829 	mov	r1,#(_queuebuf_to_packetbuf >> 8)
      000F7E 7As00            [12] 3830 	mov	r2,#(_queuebuf_to_packetbuf >> 16)
      000F80 12r00r00         [24] 3831 	lcall	__sdcc_banked_call
      000F83 D0 05            [24] 3832 	pop	ar5
      000F85 D0 06            [24] 3833 	pop	ar6
      000F87 D0 07            [24] 3834 	pop	ar7
                                   3835 ;	../../../../core/net/mac/xmac.c:785: qsend_packet(sent, ptr);
      000F89 E5 81            [12] 3836 	mov	a,sp
      000F8B 24 FB            [12] 3837 	add	a,#0xfb
      000F8D F8               [12] 3838 	mov	r0,a
      000F8E E6               [12] 3839 	mov	a,@r0
      000F8F C0 E0            [24] 3840 	push	acc
      000F91 08               [12] 3841 	inc	r0
      000F92 E6               [12] 3842 	mov	a,@r0
      000F93 C0 E0            [24] 3843 	push	acc
      000F95 08               [12] 3844 	inc	r0
      000F96 E6               [12] 3845 	mov	a,@r0
      000F97 C0 E0            [24] 3846 	push	acc
      000F99 8D 82            [24] 3847 	mov	dpl,r5
      000F9B 8E 83            [24] 3848 	mov	dph,r6
      000F9D 8F F0            [24] 3849 	mov	b,r7
      000F9F 78r77            [12] 3850 	mov	r0,#_qsend_packet
      000FA1 79s0E            [12] 3851 	mov	r1,#(_qsend_packet >> 8)
      000FA3 7As00            [12] 3852 	mov	r2,#(_qsend_packet >> 16)
      000FA5 12r00r00         [24] 3853 	lcall	__sdcc_banked_call
      000FA8 15 81            [12] 3854 	dec	sp
      000FAA 15 81            [12] 3855 	dec	sp
      000FAC 15 81            [12] 3856 	dec	sp
      000FAE                       3857 00103$:
      000FAE 02r00r00         [24] 3858 	ljmp	__sdcc_banked_ret
                                   3859 ;------------------------------------------------------------
                                   3860 ;Allocation info for local variables in function 'input_packet'
                                   3861 ;------------------------------------------------------------
                                   3862 ;hdr                       Allocated to registers r5 r6 r7 
                                   3863 ;i                         Allocated to stack - sp -1
                                   3864 ;sloc0                     Allocated to stack - sp -6
                                   3865 ;sloc1                     Allocated to stack - sp +1
                                   3866 ;sloc2                     Allocated to stack - sp +3
                                   3867 ;sloc3                     Allocated to stack - sp -4
                                   3868 ;sloc4                     Allocated to stack - sp +8
                                   3869 ;------------------------------------------------------------
                                   3870 ;	../../../../core/net/mac/xmac.c:790: input_packet(void)
                                   3871 ;	-----------------------------------------
                                   3872 ;	 function input_packet
                                   3873 ;	-----------------------------------------
      000FB1                       3874 _input_packet:
      000FB1 E5 81            [12] 3875 	mov	a,sp
      000FB3 24 07            [12] 3876 	add	a,#0x07
      000FB5 F5 81            [12] 3877 	mov	sp,a
                                   3878 ;	../../../../core/net/mac/xmac.c:794: if(NETSTACK_FRAMER.parse() >= 0) {
      000FB7 90r00r03         [24] 3879 	mov	dptr,#(_framer_802154 + 0x0003)
      000FBA E4               [12] 3880 	clr	a
      000FBB 93               [24] 3881 	movc	a,@a+dptr
      000FBC FD               [12] 3882 	mov	r5,a
      000FBD A3               [24] 3883 	inc	dptr
      000FBE E4               [12] 3884 	clr	a
      000FBF 93               [24] 3885 	movc	a,@a+dptr
      000FC0 FE               [12] 3886 	mov	r6,a
      000FC1 A3               [24] 3887 	inc	dptr
      000FC2 E4               [12] 3888 	clr	a
      000FC3 93               [24] 3889 	movc	a,@a+dptr
      000FC4 FF               [12] 3890 	mov	r7,a
      000FC5 C0 07            [24] 3891 	push	ar7
      000FC7 C0 05            [24] 3892 	push	ar5
      000FC9 C0 06            [24] 3893 	push	ar6
      000FCB C0 07            [24] 3894 	push	ar7
      000FCD D0 02            [24] 3895 	pop	ar2
      000FCF D0 01            [24] 3896 	pop	ar1
      000FD1 D0 00            [24] 3897 	pop	ar0
      000FD3 12r00r00         [24] 3898 	lcall	__sdcc_banked_call
      000FD6 AD 82            [24] 3899 	mov	r5,dpl
      000FD8 AE 83            [24] 3900 	mov	r6,dph
      000FDA D0 07            [24] 3901 	pop	ar7
      000FDC EE               [12] 3902 	mov	a,r6
      000FDD 30 E7 03         [24] 3903 	jnb	acc.7,00165$
      000FE0 02r12rD6         [24] 3904 	ljmp	00126$
      000FE3                       3905 00165$:
                                   3906 ;	../../../../core/net/mac/xmac.c:795: hdr = packetbuf_dataptr();
      000FE3 78r00            [12] 3907 	mov	r0,#_packetbuf_dataptr
      000FE5 79s00            [12] 3908 	mov	r1,#(_packetbuf_dataptr >> 8)
      000FE7 7As00            [12] 3909 	mov	r2,#(_packetbuf_dataptr >> 16)
      000FE9 12r00r00         [24] 3910 	lcall	__sdcc_banked_call
                                   3911 ;	../../../../core/net/mac/xmac.c:797: if(hdr->dispatch != DISPATCH) {
      000FEC AD 82            [24] 3912 	mov	r5,dpl
      000FEE AE 83            [24] 3913 	mov	r6,dph
      000FF0 AF F0            [24] 3914 	mov	r7,b
      000FF2 12r00r00         [24] 3915 	lcall	__gptrget
      000FF5 70 03            [24] 3916 	jnz	00166$
      000FF7 02r12r2D         [24] 3917 	ljmp	00118$
      000FFA                       3918 00166$:
                                   3919 ;	../../../../core/net/mac/xmac.c:798: someone_is_sending = 0;
      000FFA 90r00r0A         [24] 3920 	mov	dptr,#_someone_is_sending
      000FFD E4               [12] 3921 	clr	a
      000FFE F0               [24] 3922 	movx	@dptr,a
                                   3923 ;	../../../../core/net/mac/xmac.c:800: &rimeaddr_node_addr) ||
                                   3924 ;	../../../../core/net/mac/xmac.c:799: if(rimeaddr_cmp(packetbuf_addr(PACKETBUF_ADDR_RECEIVER),
      000FFF 75 82 19         [24] 3925 	mov	dpl,#0x19
      001002 78r00            [12] 3926 	mov	r0,#_packetbuf_addr
      001004 79s00            [12] 3927 	mov	r1,#(_packetbuf_addr >> 8)
      001006 7As00            [12] 3928 	mov	r2,#(_packetbuf_addr >> 16)
      001008 12r00r00         [24] 3929 	lcall	__sdcc_banked_call
      00100B AA 82            [24] 3930 	mov	r2,dpl
      00100D AB 83            [24] 3931 	mov	r3,dph
      00100F AC F0            [24] 3932 	mov	r4,b
      001011 74r00            [12] 3933 	mov	a,#_rimeaddr_node_addr
      001013 C0 E0            [24] 3934 	push	acc
      001015 74s00            [12] 3935 	mov	a,#(_rimeaddr_node_addr >> 8)
      001017 C0 E0            [24] 3936 	push	acc
      001019 E4               [12] 3937 	clr	a
      00101A C0 E0            [24] 3938 	push	acc
      00101C 8A 82            [24] 3939 	mov	dpl,r2
      00101E 8B 83            [24] 3940 	mov	dph,r3
      001020 8C F0            [24] 3941 	mov	b,r4
      001022 78r00            [12] 3942 	mov	r0,#_rimeaddr_cmp
      001024 79s00            [12] 3943 	mov	r1,#(_rimeaddr_cmp >> 8)
      001026 7As00            [12] 3944 	mov	r2,#(_rimeaddr_cmp >> 16)
      001028 12r00r00         [24] 3945 	lcall	__sdcc_banked_call
      00102B AB 82            [24] 3946 	mov	r3,dpl
      00102D AC 83            [24] 3947 	mov	r4,dph
      00102F 15 81            [12] 3948 	dec	sp
      001031 15 81            [12] 3949 	dec	sp
      001033 15 81            [12] 3950 	dec	sp
      001035 EB               [12] 3951 	mov	a,r3
      001036 4C               [12] 3952 	orl	a,r4
      001037 70 3E            [24] 3953 	jnz	00106$
                                   3954 ;	../../../../core/net/mac/xmac.c:802: &rimeaddr_null)) {
                                   3955 ;	../../../../core/net/mac/xmac.c:801: rimeaddr_cmp(packetbuf_addr(PACKETBUF_ADDR_RECEIVER),
      001039 75 82 19         [24] 3956 	mov	dpl,#0x19
      00103C 78r00            [12] 3957 	mov	r0,#_packetbuf_addr
      00103E 79s00            [12] 3958 	mov	r1,#(_packetbuf_addr >> 8)
      001040 7As00            [12] 3959 	mov	r2,#(_packetbuf_addr >> 16)
      001042 12r00r00         [24] 3960 	lcall	__sdcc_banked_call
      001045 AA 82            [24] 3961 	mov	r2,dpl
      001047 AB 83            [24] 3962 	mov	r3,dph
      001049 AC F0            [24] 3963 	mov	r4,b
      00104B 74r00            [12] 3964 	mov	a,#_rimeaddr_null
      00104D C0 E0            [24] 3965 	push	acc
      00104F 74s00            [12] 3966 	mov	a,#(_rimeaddr_null >> 8)
      001051 C0 E0            [24] 3967 	push	acc
      001053 74 80            [12] 3968 	mov	a,#0x80
      001055 C0 E0            [24] 3969 	push	acc
      001057 8A 82            [24] 3970 	mov	dpl,r2
      001059 8B 83            [24] 3971 	mov	dph,r3
      00105B 8C F0            [24] 3972 	mov	b,r4
      00105D 78r00            [12] 3973 	mov	r0,#_rimeaddr_cmp
      00105F 79s00            [12] 3974 	mov	r1,#(_rimeaddr_cmp >> 8)
      001061 7As00            [12] 3975 	mov	r2,#(_rimeaddr_cmp >> 16)
      001063 12r00r00         [24] 3976 	lcall	__sdcc_banked_call
      001066 AB 82            [24] 3977 	mov	r3,dpl
      001068 AC 83            [24] 3978 	mov	r4,dph
      00106A 15 81            [12] 3979 	dec	sp
      00106C 15 81            [12] 3980 	dec	sp
      00106E 15 81            [12] 3981 	dec	sp
      001070 EB               [12] 3982 	mov	a,r3
      001071 4C               [12] 3983 	orl	a,r4
      001072 70 03            [24] 3984 	jnz	00168$
      001074 02r12rD6         [24] 3985 	ljmp	00126$
      001077                       3986 00168$:
      001077                       3987 00106$:
                                   3988 ;	../../../../core/net/mac/xmac.c:808: off();
      001077 78r40            [12] 3989 	mov	r0,#_off
      001079 79s00            [12] 3990 	mov	r1,#(_off >> 8)
      00107B 7As00            [12] 3991 	mov	r2,#(_off >> 16)
      00107D 12r00r00         [24] 3992 	lcall	__sdcc_banked_call
                                   3993 ;	../../../../core/net/mac/xmac.c:814: for(i = 0; i < MAX_SEQNOS; ++i) {
      001080 A8 81            [24] 3994 	mov	r0,sp
      001082 18               [12] 3995 	dec	r0
      001083 E4               [12] 3996 	clr	a
      001084 F6               [12] 3997 	mov	@r0,a
      001085 08               [12] 3998 	inc	r0
      001086 F6               [12] 3999 	mov	@r0,a
      001087 E5 81            [12] 4000 	mov	a,sp
      001089 24 FA            [12] 4001 	add	a,#0xfa
      00108B F8               [12] 4002 	mov	r0,a
      00108C E4               [12] 4003 	clr	a
      00108D F6               [12] 4004 	mov	@r0,a
      00108E 08               [12] 4005 	inc	r0
      00108F F6               [12] 4006 	mov	@r0,a
      001090                       4007 00122$:
                                   4008 ;	../../../../core/net/mac/xmac.c:815: if(packetbuf_attr(PACKETBUF_ATTR_PACKET_ID) == received_seqnos[i].seqno &&
      001090 75 82 0D         [24] 4009 	mov	dpl,#0x0D
      001093 78r00            [12] 4010 	mov	r0,#_packetbuf_attr
      001095 79s00            [12] 4011 	mov	r1,#(_packetbuf_attr >> 8)
      001097 7As00            [12] 4012 	mov	r2,#(_packetbuf_attr >> 16)
      001099 12r00r00         [24] 4013 	lcall	__sdcc_banked_call
      00109C AF 82            [24] 4014 	mov	r7,dpl
      00109E AE 83            [24] 4015 	mov	r6,dph
      0010A0 E5 81            [12] 4016 	mov	a,sp
      0010A2 24 FA            [12] 4017 	add	a,#0xfa
      0010A4 F8               [12] 4018 	mov	r0,a
      0010A5 E6               [12] 4019 	mov	a,@r0
      0010A6 24r56            [12] 4020 	add	a,#_received_seqnos
      0010A8 FB               [12] 4021 	mov	r3,a
      0010A9 08               [12] 4022 	inc	r0
      0010AA E6               [12] 4023 	mov	a,@r0
      0010AB 34s00            [12] 4024 	addc	a,#(_received_seqnos >> 8)
      0010AD FD               [12] 4025 	mov	r5,a
      0010AE 74 08            [12] 4026 	mov	a,#0x08
      0010B0 2B               [12] 4027 	add	a,r3
      0010B1 F5 82            [12] 4028 	mov	dpl,a
      0010B3 E4               [12] 4029 	clr	a
      0010B4 3D               [12] 4030 	addc	a,r5
      0010B5 F5 83            [12] 4031 	mov	dph,a
      0010B7 E0               [24] 4032 	movx	a,@dptr
      0010B8 FA               [12] 4033 	mov	r2,a
      0010B9 7C 00            [12] 4034 	mov	r4,#0x00
      0010BB EF               [12] 4035 	mov	a,r7
      0010BC B5 02 38         [24] 4036 	cjne	a,ar2,00123$
      0010BF EE               [12] 4037 	mov	a,r6
      0010C0 B5 04 34         [24] 4038 	cjne	a,ar4,00123$
                                   4039 ;	../../../../core/net/mac/xmac.c:817: &received_seqnos[i].sender)) {
      0010C3 8D 04            [24] 4040 	mov	ar4,r5
      0010C5 8B 07            [24] 4041 	mov	ar7,r3
      0010C7 8C 06            [24] 4042 	mov	ar6,r4
      0010C9 7D 00            [12] 4043 	mov	r5,#0x00
                                   4044 ;	../../../../core/net/mac/xmac.c:816: rimeaddr_cmp(packetbuf_addr(PACKETBUF_ADDR_SENDER),
      0010CB 75 82 18         [24] 4045 	mov	dpl,#0x18
      0010CE C0 07            [24] 4046 	push	ar7
      0010D0 C0 06            [24] 4047 	push	ar6
      0010D2 C0 05            [24] 4048 	push	ar5
      0010D4 78r00            [12] 4049 	mov	r0,#_packetbuf_addr
      0010D6 79s00            [12] 4050 	mov	r1,#(_packetbuf_addr >> 8)
      0010D8 7As00            [12] 4051 	mov	r2,#(_packetbuf_addr >> 16)
      0010DA 12r00r00         [24] 4052 	lcall	__sdcc_banked_call
      0010DD 78r00            [12] 4053 	mov	r0,#_rimeaddr_cmp
      0010DF 79s00            [12] 4054 	mov	r1,#(_rimeaddr_cmp >> 8)
      0010E1 7As00            [12] 4055 	mov	r2,#(_rimeaddr_cmp >> 16)
      0010E3 12r00r00         [24] 4056 	lcall	__sdcc_banked_call
      0010E6 AB 82            [24] 4057 	mov	r3,dpl
      0010E8 AC 83            [24] 4058 	mov	r4,dph
      0010EA 15 81            [12] 4059 	dec	sp
      0010EC 15 81            [12] 4060 	dec	sp
      0010EE 15 81            [12] 4061 	dec	sp
      0010F0 EB               [12] 4062 	mov	a,r3
      0010F1 4C               [12] 4063 	orl	a,r4
      0010F2 60 03            [24] 4064 	jz	00123$
                                   4065 ;	../../../../core/net/mac/xmac.c:819: return;
      0010F4 02r12rD6         [24] 4066 	ljmp	00126$
      0010F7                       4067 00123$:
                                   4068 ;	../../../../core/net/mac/xmac.c:814: for(i = 0; i < MAX_SEQNOS; ++i) {
      0010F7 E5 81            [12] 4069 	mov	a,sp
      0010F9 24 FA            [12] 4070 	add	a,#0xfa
      0010FB F8               [12] 4071 	mov	r0,a
      0010FC 74 09            [12] 4072 	mov	a,#0x09
      0010FE 26               [12] 4073 	add	a,@r0
      0010FF F6               [12] 4074 	mov	@r0,a
      001100 E4               [12] 4075 	clr	a
      001101 08               [12] 4076 	inc	r0
      001102 36               [12] 4077 	addc	a,@r0
      001103 F6               [12] 4078 	mov	@r0,a
      001104 A8 81            [24] 4079 	mov	r0,sp
      001106 18               [12] 4080 	dec	r0
      001107 06               [12] 4081 	inc	@r0
      001108 B6 00 02         [24] 4082 	cjne	@r0,#0x00,00172$
      00110B 08               [12] 4083 	inc	r0
      00110C 06               [12] 4084 	inc	@r0
      00110D                       4085 00172$:
      00110D A8 81            [24] 4086 	mov	r0,sp
      00110F 18               [12] 4087 	dec	r0
      001110 C3               [12] 4088 	clr	c
      001111 E6               [12] 4089 	mov	a,@r0
      001112 94 08            [12] 4090 	subb	a,#0x08
      001114 08               [12] 4091 	inc	r0
      001115 E6               [12] 4092 	mov	a,@r0
      001116 64 80            [12] 4093 	xrl	a,#0x80
      001118 94 80            [12] 4094 	subb	a,#0x80
      00111A 50 03            [24] 4095 	jnc	00173$
      00111C 02r10r90         [24] 4096 	ljmp	00122$
      00111F                       4097 00173$:
                                   4098 ;	../../../../core/net/mac/xmac.c:822: for(i = MAX_SEQNOS - 1; i > 0; --i) {
      00111F A8 81            [24] 4099 	mov	r0,sp
      001121 18               [12] 4100 	dec	r0
      001122 76 07            [12] 4101 	mov	@r0,#0x07
      001124 08               [12] 4102 	inc	r0
      001125 76 00            [12] 4103 	mov	@r0,#0x00
      001127 E5 81            [12] 4104 	mov	a,sp
      001129 24 FC            [12] 4105 	add	a,#0xfc
      00112B F8               [12] 4106 	mov	r0,a
      00112C 76 3F            [12] 4107 	mov	@r0,#0x3F
      00112E 08               [12] 4108 	inc	r0
      00112F 76 00            [12] 4109 	mov	@r0,#0x00
      001131                       4110 00124$:
                                   4111 ;	../../../../core/net/mac/xmac.c:823: memcpy(&received_seqnos[i], &received_seqnos[i - 1],
      001131 A8 81            [24] 4112 	mov	r0,sp
      001133 18               [12] 4113 	dec	r0
      001134 E6               [12] 4114 	mov	a,@r0
      001135 FB               [12] 4115 	mov	r3,a
      001136 14               [12] 4116 	dec	a
      001137 C2 D5            [12] 4117 	clr	F0
      001139 75 F0 09         [24] 4118 	mov	b,#0x09
      00113C 30 E7 04         [24] 4119 	jnb	acc.7,00174$
      00113F B2 D5            [12] 4120 	cpl	F0
      001141 F4               [12] 4121 	cpl	a
      001142 04               [12] 4122 	inc	a
      001143                       4123 00174$:
      001143 A4               [48] 4124 	mul	ab
      001144 30 D5 0A         [24] 4125 	jnb	F0,00175$
      001147 F4               [12] 4126 	cpl	a
      001148 24 01            [12] 4127 	add	a,#0x01
      00114A C5 F0            [12] 4128 	xch	a,b
      00114C F4               [12] 4129 	cpl	a
      00114D 34 00            [12] 4130 	addc	a,#0x00
      00114F C5 F0            [12] 4131 	xch	a,b
      001151                       4132 00175$:
      001151 24r56            [12] 4133 	add	a,#_received_seqnos
      001153 FB               [12] 4134 	mov	r3,a
      001154 74s00            [12] 4135 	mov	a,#(_received_seqnos >> 8)
      001156 35 F0            [12] 4136 	addc	a,b
      001158 FC               [12] 4137 	mov	r4,a
      001159 8B 07            [24] 4138 	mov	ar7,r3
      00115B 8C 06            [24] 4139 	mov	ar6,r4
      00115D 7D 00            [12] 4140 	mov	r5,#0x00
      00115F E5 81            [12] 4141 	mov	a,sp
      001161 24 FC            [12] 4142 	add	a,#0xfc
      001163 F8               [12] 4143 	mov	r0,a
      001164 E6               [12] 4144 	mov	a,@r0
      001165 24r56            [12] 4145 	add	a,#_received_seqnos
      001167 FB               [12] 4146 	mov	r3,a
      001168 08               [12] 4147 	inc	r0
      001169 E6               [12] 4148 	mov	a,@r0
      00116A 34s00            [12] 4149 	addc	a,#(_received_seqnos >> 8)
      00116C FC               [12] 4150 	mov	r4,a
      00116D 7A 00            [12] 4151 	mov	r2,#0x00
      00116F 74 09            [12] 4152 	mov	a,#0x09
      001171 C0 E0            [24] 4153 	push	acc
      001173 E4               [12] 4154 	clr	a
      001174 C0 E0            [24] 4155 	push	acc
      001176 C0 07            [24] 4156 	push	ar7
      001178 C0 06            [24] 4157 	push	ar6
      00117A C0 05            [24] 4158 	push	ar5
      00117C 8B 82            [24] 4159 	mov	dpl,r3
      00117E 8C 83            [24] 4160 	mov	dph,r4
      001180 8A F0            [24] 4161 	mov	b,r2
      001182 78r00            [12] 4162 	mov	r0,#_memcpy
      001184 79s00            [12] 4163 	mov	r1,#(_memcpy >> 8)
      001186 7As00            [12] 4164 	mov	r2,#(_memcpy >> 16)
      001188 12r00r00         [24] 4165 	lcall	__sdcc_banked_call
      00118B E5 81            [12] 4166 	mov	a,sp
      00118D 24 FB            [12] 4167 	add	a,#0xfb
                                   4168 ;	../../../../core/net/mac/xmac.c:822: for(i = MAX_SEQNOS - 1; i > 0; --i) {
      00118F F5 81            [12] 4169 	mov	sp,a
      001191 24 FC            [12] 4170 	add	a,#0xfc
      001193 F8               [12] 4171 	mov	r0,a
      001194 E6               [12] 4172 	mov	a,@r0
      001195 24 F7            [12] 4173 	add	a,#0xF7
      001197 F6               [12] 4174 	mov	@r0,a
      001198 08               [12] 4175 	inc	r0
      001199 E6               [12] 4176 	mov	a,@r0
      00119A 34 FF            [12] 4177 	addc	a,#0xFF
      00119C F6               [12] 4178 	mov	@r0,a
      00119D A8 81            [24] 4179 	mov	r0,sp
      00119F 18               [12] 4180 	dec	r0
      0011A0 16               [12] 4181 	dec	@r0
      0011A1 B6 FF 02         [24] 4182 	cjne	@r0,#0xFF,00176$
      0011A4 08               [12] 4183 	inc	r0
      0011A5 16               [12] 4184 	dec	@r0
      0011A6                       4185 00176$:
      0011A6 A8 81            [24] 4186 	mov	r0,sp
      0011A8 18               [12] 4187 	dec	r0
      0011A9 C3               [12] 4188 	clr	c
      0011AA E4               [12] 4189 	clr	a
      0011AB 96               [12] 4190 	subb	a,@r0
      0011AC E4               [12] 4191 	clr	a
      0011AD 64 80            [12] 4192 	xrl	a,#0x80
      0011AF 08               [12] 4193 	inc	r0
      0011B0 86 F0            [24] 4194 	mov	b,@r0
      0011B2 63 F0 80         [24] 4195 	xrl	b,#0x80
      0011B5 95 F0            [12] 4196 	subb	a,b
      0011B7 50 03            [24] 4197 	jnc	00177$
      0011B9 02r11r31         [24] 4198 	ljmp	00124$
      0011BC                       4199 00177$:
                                   4200 ;	../../../../core/net/mac/xmac.c:826: received_seqnos[0].seqno = packetbuf_attr(PACKETBUF_ATTR_PACKET_ID);
      0011BC 75 82 0D         [24] 4201 	mov	dpl,#0x0D
      0011BF 78r00            [12] 4202 	mov	r0,#_packetbuf_attr
      0011C1 79s00            [12] 4203 	mov	r1,#(_packetbuf_attr >> 8)
      0011C3 7As00            [12] 4204 	mov	r2,#(_packetbuf_attr >> 16)
      0011C5 12r00r00         [24] 4205 	lcall	__sdcc_banked_call
      0011C8 AB 82            [24] 4206 	mov	r3,dpl
      0011CA 90r00r5E         [24] 4207 	mov	dptr,#(_received_seqnos + 0x0008)
      0011CD EB               [12] 4208 	mov	a,r3
      0011CE F0               [24] 4209 	movx	@dptr,a
                                   4210 ;	../../../../core/net/mac/xmac.c:828: packetbuf_addr(PACKETBUF_ADDR_SENDER));
      0011CF 75 82 18         [24] 4211 	mov	dpl,#0x18
      0011D2 78r00            [12] 4212 	mov	r0,#_packetbuf_addr
      0011D4 79s00            [12] 4213 	mov	r1,#(_packetbuf_addr >> 8)
      0011D6 7As00            [12] 4214 	mov	r2,#(_packetbuf_addr >> 16)
      0011D8 12r00r00         [24] 4215 	lcall	__sdcc_banked_call
      0011DB AA 82            [24] 4216 	mov	r2,dpl
      0011DD AB 83            [24] 4217 	mov	r3,dph
      0011DF AC F0            [24] 4218 	mov	r4,b
                                   4219 ;	../../../../core/net/mac/xmac.c:827: rimeaddr_copy(&received_seqnos[0].sender,
      0011E1 C0 02            [24] 4220 	push	ar2
      0011E3 C0 03            [24] 4221 	push	ar3
      0011E5 C0 04            [24] 4222 	push	ar4
      0011E7 90r00r56         [24] 4223 	mov	dptr,#_received_seqnos
      0011EA 75 F0 00         [24] 4224 	mov	b,#0x00
      0011ED 78r00            [12] 4225 	mov	r0,#_rimeaddr_copy
      0011EF 79s00            [12] 4226 	mov	r1,#(_rimeaddr_copy >> 8)
      0011F1 7As00            [12] 4227 	mov	r2,#(_rimeaddr_copy >> 16)
      0011F3 12r00r00         [24] 4228 	lcall	__sdcc_banked_call
      0011F6 15 81            [12] 4229 	dec	sp
      0011F8 15 81            [12] 4230 	dec	sp
      0011FA 15 81            [12] 4231 	dec	sp
                                   4232 ;	../../../../core/net/mac/xmac.c:845: waiting_for_packet = 0;
      0011FC 90r00r09         [24] 4233 	mov	dptr,#_waiting_for_packet
      0011FF E4               [12] 4234 	clr	a
      001200 F0               [24] 4235 	movx	@dptr,a
                                   4236 ;	../../../../core/net/mac/xmac.c:848: NETSTACK_MAC.input();
      001201 90r00r09         [24] 4237 	mov	dptr,#(_csma_driver + 0x0009)
      001204 E4               [12] 4238 	clr	a
      001205 93               [24] 4239 	movc	a,@a+dptr
      001206 FA               [12] 4240 	mov	r2,a
      001207 A3               [24] 4241 	inc	dptr
      001208 E4               [12] 4242 	clr	a
      001209 93               [24] 4243 	movc	a,@a+dptr
      00120A FB               [12] 4244 	mov	r3,a
      00120B A3               [24] 4245 	inc	dptr
      00120C E4               [12] 4246 	clr	a
      00120D 93               [24] 4247 	movc	a,@a+dptr
      00120E FC               [12] 4248 	mov	r4,a
      00120F C0 04            [24] 4249 	push	ar4
      001211 C0 03            [24] 4250 	push	ar3
      001213 C0 02            [24] 4251 	push	ar2
      001215 C0 02            [24] 4252 	push	ar2
      001217 C0 03            [24] 4253 	push	ar3
      001219 C0 04            [24] 4254 	push	ar4
      00121B D0 02            [24] 4255 	pop	ar2
      00121D D0 01            [24] 4256 	pop	ar1
      00121F D0 00            [24] 4257 	pop	ar0
      001221 12r00r00         [24] 4258 	lcall	__sdcc_banked_call
      001224 D0 02            [24] 4259 	pop	ar2
      001226 D0 03            [24] 4260 	pop	ar3
      001228 D0 04            [24] 4261 	pop	ar4
                                   4262 ;	../../../../core/net/mac/xmac.c:849: return;
      00122A 02r12rD6         [24] 4263 	ljmp	00126$
      00122D                       4264 00118$:
                                   4265 ;	../../../../core/net/mac/xmac.c:854: } else if(hdr->type == TYPE_STROBE) {
      00122D 0D               [12] 4266 	inc	r5
      00122E BD 00 01         [24] 4267 	cjne	r5,#0x00,00178$
      001231 0E               [12] 4268 	inc	r6
      001232                       4269 00178$:
      001232 8D 82            [24] 4270 	mov	dpl,r5
      001234 8E 83            [24] 4271 	mov	dph,r6
      001236 8F F0            [24] 4272 	mov	b,r7
      001238 12r00r00         [24] 4273 	lcall	__gptrget
      00123B FD               [12] 4274 	mov	r5,a
      00123C BD 10 02         [24] 4275 	cjne	r5,#0x10,00179$
      00123F 80 03            [24] 4276 	sjmp	00180$
      001241                       4277 00179$:
      001241 02r12rD6         [24] 4278 	ljmp	00126$
      001244                       4279 00180$:
                                   4280 ;	../../../../core/net/mac/xmac.c:855: someone_is_sending = 2;
      001244 90r00r0A         [24] 4281 	mov	dptr,#_someone_is_sending
      001247 74 02            [12] 4282 	mov	a,#0x02
      001249 F0               [24] 4283 	movx	@dptr,a
                                   4284 ;	../../../../core/net/mac/xmac.c:858: &rimeaddr_node_addr)) {
                                   4285 ;	../../../../core/net/mac/xmac.c:857: if(rimeaddr_cmp(packetbuf_addr(PACKETBUF_ADDR_RECEIVER),
      00124A 75 82 19         [24] 4286 	mov	dpl,#0x19
      00124D 78r00            [12] 4287 	mov	r0,#_packetbuf_addr
      00124F 79s00            [12] 4288 	mov	r1,#(_packetbuf_addr >> 8)
      001251 7As00            [12] 4289 	mov	r2,#(_packetbuf_addr >> 16)
      001253 12r00r00         [24] 4290 	lcall	__sdcc_banked_call
      001256 AD 82            [24] 4291 	mov	r5,dpl
      001258 AE 83            [24] 4292 	mov	r6,dph
      00125A AF F0            [24] 4293 	mov	r7,b
      00125C 74r00            [12] 4294 	mov	a,#_rimeaddr_node_addr
      00125E C0 E0            [24] 4295 	push	acc
      001260 74s00            [12] 4296 	mov	a,#(_rimeaddr_node_addr >> 8)
      001262 C0 E0            [24] 4297 	push	acc
      001264 E4               [12] 4298 	clr	a
      001265 C0 E0            [24] 4299 	push	acc
      001267 8D 82            [24] 4300 	mov	dpl,r5
      001269 8E 83            [24] 4301 	mov	dph,r6
      00126B 8F F0            [24] 4302 	mov	b,r7
      00126D 78r00            [12] 4303 	mov	r0,#_rimeaddr_cmp
      00126F 79s00            [12] 4304 	mov	r1,#(_rimeaddr_cmp >> 8)
      001271 7As00            [12] 4305 	mov	r2,#(_rimeaddr_cmp >> 16)
      001273 12r00r00         [24] 4306 	lcall	__sdcc_banked_call
      001276 AE 82            [24] 4307 	mov	r6,dpl
      001278 AF 83            [24] 4308 	mov	r7,dph
      00127A 15 81            [12] 4309 	dec	sp
      00127C 15 81            [12] 4310 	dec	sp
      00127E 15 81            [12] 4311 	dec	sp
      001280 EE               [12] 4312 	mov	a,r6
      001281 4F               [12] 4313 	orl	a,r7
      001282 60 08            [24] 4314 	jz	00112$
                                   4315 ;	../../../../core/net/mac/xmac.c:865: waiting_for_packet = 1;
      001284 90r00r09         [24] 4316 	mov	dptr,#_waiting_for_packet
      001287 74 01            [12] 4317 	mov	a,#0x01
      001289 F0               [24] 4318 	movx	@dptr,a
      00128A 80 4A            [24] 4319 	sjmp	00113$
      00128C                       4320 00112$:
                                   4321 ;	../../../../core/net/mac/xmac.c:885: &rimeaddr_null)) {
                                   4322 ;	../../../../core/net/mac/xmac.c:884: } else if(rimeaddr_cmp(packetbuf_addr(PACKETBUF_ADDR_RECEIVER),
      00128C 75 82 19         [24] 4323 	mov	dpl,#0x19
      00128F 78r00            [12] 4324 	mov	r0,#_packetbuf_addr
      001291 79s00            [12] 4325 	mov	r1,#(_packetbuf_addr >> 8)
      001293 7As00            [12] 4326 	mov	r2,#(_packetbuf_addr >> 16)
      001295 12r00r00         [24] 4327 	lcall	__sdcc_banked_call
      001298 AD 82            [24] 4328 	mov	r5,dpl
      00129A AE 83            [24] 4329 	mov	r6,dph
      00129C AF F0            [24] 4330 	mov	r7,b
      00129E 74r00            [12] 4331 	mov	a,#_rimeaddr_null
      0012A0 C0 E0            [24] 4332 	push	acc
      0012A2 74s00            [12] 4333 	mov	a,#(_rimeaddr_null >> 8)
      0012A4 C0 E0            [24] 4334 	push	acc
      0012A6 74 80            [12] 4335 	mov	a,#0x80
      0012A8 C0 E0            [24] 4336 	push	acc
      0012AA 8D 82            [24] 4337 	mov	dpl,r5
      0012AC 8E 83            [24] 4338 	mov	dph,r6
      0012AE 8F F0            [24] 4339 	mov	b,r7
      0012B0 78r00            [12] 4340 	mov	r0,#_rimeaddr_cmp
      0012B2 79s00            [12] 4341 	mov	r1,#(_rimeaddr_cmp >> 8)
      0012B4 7As00            [12] 4342 	mov	r2,#(_rimeaddr_cmp >> 16)
      0012B6 12r00r00         [24] 4343 	lcall	__sdcc_banked_call
      0012B9 AE 82            [24] 4344 	mov	r6,dpl
      0012BB AF 83            [24] 4345 	mov	r7,dph
      0012BD 15 81            [12] 4346 	dec	sp
      0012BF 15 81            [12] 4347 	dec	sp
      0012C1 15 81            [12] 4348 	dec	sp
      0012C3 EE               [12] 4349 	mov	a,r6
      0012C4 4F               [12] 4350 	orl	a,r7
      0012C5 60 0F            [24] 4351 	jz	00113$
                                   4352 ;	../../../../core/net/mac/xmac.c:890: waiting_for_packet = 1;
      0012C7 90r00r09         [24] 4353 	mov	dptr,#_waiting_for_packet
      0012CA 74 01            [12] 4354 	mov	a,#0x01
      0012CC F0               [24] 4355 	movx	@dptr,a
                                   4356 ;	../../../../core/net/mac/xmac.c:891: on();
      0012CD 78r00            [12] 4357 	mov	r0,#_on
      0012CF 79s00            [12] 4358 	mov	r1,#(_on >> 8)
      0012D1 7As00            [12] 4359 	mov	r2,#(_on >> 16)
      0012D3 12r00r00         [24] 4360 	lcall	__sdcc_banked_call
      0012D6                       4361 00113$:
                                   4362 ;	../../../../core/net/mac/xmac.c:898: return;
                                   4363 ;	../../../../core/net/mac/xmac.c:904: } else if(hdr->type == TYPE_STROBE_ACK) {
      0012D6                       4364 00126$:
      0012D6 E5 81            [12] 4365 	mov	a,sp
      0012D8 24 F9            [12] 4366 	add	a,#0xF9
      0012DA F5 81            [12] 4367 	mov	sp,a
      0012DC 02r00r00         [24] 4368 	ljmp	__sdcc_banked_ret
                                   4369 ;------------------------------------------------------------
                                   4370 ;Allocation info for local variables in function 'xmac_set_announcement_radio_txpower'
                                   4371 ;------------------------------------------------------------
                                   4372 ;txpower                   Allocated to registers 
                                   4373 ;------------------------------------------------------------
                                   4374 ;	../../../../core/net/mac/xmac.c:964: xmac_set_announcement_radio_txpower(int txpower)
                                   4375 ;	-----------------------------------------
                                   4376 ;	 function xmac_set_announcement_radio_txpower
                                   4377 ;	-----------------------------------------
      0012DF                       4378 _xmac_set_announcement_radio_txpower:
                                   4379 ;	../../../../core/net/mac/xmac.c:969: }
      0012DF 02r00r00         [24] 4380 	ljmp	__sdcc_banked_ret
                                   4381 ;------------------------------------------------------------
                                   4382 ;Allocation info for local variables in function 'init'
                                   4383 ;------------------------------------------------------------
                                   4384 ;	../../../../core/net/mac/xmac.c:972: init(void)
                                   4385 ;	-----------------------------------------
                                   4386 ;	 function init
                                   4387 ;	-----------------------------------------
      0012E2                       4388 _init:
                                   4389 ;	../../../../core/net/mac/xmac.c:974: radio_is_on = 0;
      0012E2 90r00r0C         [24] 4390 	mov	dptr,#_radio_is_on
                                   4391 ;	../../../../core/net/mac/xmac.c:975: waiting_for_packet = 0;
                                   4392 ;	../../../../core/net/mac/xmac.c:976: PT_INIT(&pt);
      0012E5 E4               [12] 4393 	clr	a
      0012E6 F0               [24] 4394 	movx	@dptr,a
      0012E7 90r00r09         [24] 4395 	mov	dptr,#_waiting_for_packet
      0012EA F0               [24] 4396 	movx	@dptr,a
      0012EB 90r00r08         [24] 4397 	mov	dptr,#_pt
      0012EE F0               [24] 4398 	movx	@dptr,a
      0012EF E4               [12] 4399 	clr	a
      0012F0 A3               [24] 4400 	inc	dptr
      0012F1 F0               [24] 4401 	movx	@dptr,a
                                   4402 ;	../../../../core/net/mac/xmac.c:978: (void (*)(struct rtimer *, void *))powercycle, NULL);
      0012F2 7Dr32            [12] 4403 	mov	r5,#_powercycle
      0012F4 7Es01            [12] 4404 	mov	r6,#(_powercycle >> 8)
      0012F6 7Fs00            [12] 4405 	mov	r7,#(_powercycle >> 16)
                                   4406 ;	../../../../core/net/mac/xmac.c:977: rtimer_set(&rt, RTIMER_NOW() + xmac_config.off_time, 1,
      0012F8 AB E2            [24] 4407 	mov	r3,_T1CNTL
      0012FA 7C 00            [12] 4408 	mov	r4,#0x00
      0012FC A9 E3            [24] 4409 	mov	r1,_T1CNTH
      0012FE 89 02            [24] 4410 	mov	ar2,r1
      001300 E4               [12] 4411 	clr	a
      001301 2B               [12] 4412 	add	a,r3
      001302 FB               [12] 4413 	mov	r3,a
      001303 EA               [12] 4414 	mov	a,r2
      001304 3C               [12] 4415 	addc	a,r4
      001305 FC               [12] 4416 	mov	r4,a
      001306 90r00r02         [24] 4417 	mov	dptr,#(_xmac_config + 0x0002)
      001309 E0               [24] 4418 	movx	a,@dptr
      00130A F9               [12] 4419 	mov	r1,a
      00130B A3               [24] 4420 	inc	dptr
      00130C E0               [24] 4421 	movx	a,@dptr
      00130D FA               [12] 4422 	mov	r2,a
      00130E E9               [12] 4423 	mov	a,r1
      00130F 2B               [12] 4424 	add	a,r3
      001310 F9               [12] 4425 	mov	r1,a
      001311 EA               [12] 4426 	mov	a,r2
      001312 3C               [12] 4427 	addc	a,r4
      001313 FA               [12] 4428 	mov	r2,a
      001314 E4               [12] 4429 	clr	a
      001315 C0 E0            [24] 4430 	push	acc
      001317 C0 E0            [24] 4431 	push	acc
      001319 C0 E0            [24] 4432 	push	acc
      00131B C0 05            [24] 4433 	push	ar5
      00131D C0 06            [24] 4434 	push	ar6
      00131F C0 07            [24] 4435 	push	ar7
      001321 74 01            [12] 4436 	mov	a,#0x01
      001323 C0 E0            [24] 4437 	push	acc
      001325 E4               [12] 4438 	clr	a
      001326 C0 E0            [24] 4439 	push	acc
      001328 C0 01            [24] 4440 	push	ar1
      00132A C0 02            [24] 4441 	push	ar2
      00132C 90r00r00         [24] 4442 	mov	dptr,#_rt
      00132F 75 F0 00         [24] 4443 	mov	b,#0x00
      001332 78r00            [12] 4444 	mov	r0,#_rtimer_set
      001334 79s00            [12] 4445 	mov	r1,#(_rtimer_set >> 8)
      001336 7As00            [12] 4446 	mov	r2,#(_rtimer_set >> 16)
      001338 12r00r00         [24] 4447 	lcall	__sdcc_banked_call
      00133B E5 81            [12] 4448 	mov	a,sp
      00133D 24 F6            [12] 4449 	add	a,#0xf6
      00133F F5 81            [12] 4450 	mov	sp,a
                                   4451 ;	../../../../core/net/mac/xmac.c:980: xmac_is_on = 1;
      001341 90r00r08         [24] 4452 	mov	dptr,#_xmac_is_on
      001344 74 01            [12] 4453 	mov	a,#0x01
      001346 F0               [24] 4454 	movx	@dptr,a
                                   4455 ;	../../../../core/net/mac/xmac.c:983: list_init(encounter_list);
      001347 90r00r10         [24] 4456 	mov	dptr,#_encounter_list
      00134A E0               [24] 4457 	movx	a,@dptr
      00134B FD               [12] 4458 	mov	r5,a
      00134C A3               [24] 4459 	inc	dptr
      00134D E0               [24] 4460 	movx	a,@dptr
      00134E FE               [12] 4461 	mov	r6,a
      00134F A3               [24] 4462 	inc	dptr
      001350 E0               [24] 4463 	movx	a,@dptr
      001351 FF               [12] 4464 	mov	r7,a
      001352 8D 82            [24] 4465 	mov	dpl,r5
      001354 8E 83            [24] 4466 	mov	dph,r6
      001356 8F F0            [24] 4467 	mov	b,r7
      001358 78r00            [12] 4468 	mov	r0,#_list_init
      00135A 79s00            [12] 4469 	mov	r1,#(_list_init >> 8)
      00135C 7As00            [12] 4470 	mov	r2,#(_list_init >> 16)
      00135E 12r00r00         [24] 4471 	lcall	__sdcc_banked_call
                                   4472 ;	../../../../core/net/mac/xmac.c:984: memb_init(&encounter_memb);
      001361 90r00r13         [24] 4473 	mov	dptr,#_encounter_memb
      001364 75 F0 00         [24] 4474 	mov	b,#0x00
      001367 78r00            [12] 4475 	mov	r0,#_memb_init
      001369 79s00            [12] 4476 	mov	r1,#(_memb_init >> 8)
      00136B 7As00            [12] 4477 	mov	r2,#(_memb_init >> 16)
      00136D 12r00r00         [24] 4478 	lcall	__sdcc_banked_call
      001370 02r00r00         [24] 4479 	ljmp	__sdcc_banked_ret
                                   4480 ;------------------------------------------------------------
                                   4481 ;Allocation info for local variables in function 'turn_on'
                                   4482 ;------------------------------------------------------------
                                   4483 ;	../../../../core/net/mac/xmac.c:995: turn_on(void)
                                   4484 ;	-----------------------------------------
                                   4485 ;	 function turn_on
                                   4486 ;	-----------------------------------------
      001373                       4487 _turn_on:
                                   4488 ;	../../../../core/net/mac/xmac.c:997: xmac_is_on = 1;
      001373 90r00r08         [24] 4489 	mov	dptr,#_xmac_is_on
      001376 74 01            [12] 4490 	mov	a,#0x01
      001378 F0               [24] 4491 	movx	@dptr,a
                                   4492 ;	../../../../core/net/mac/xmac.c:999: (void (*)(struct rtimer *, void *))powercycle, NULL);
      001379 7Dr32            [12] 4493 	mov	r5,#_powercycle
      00137B 7Es01            [12] 4494 	mov	r6,#(_powercycle >> 8)
      00137D 7Fs00            [12] 4495 	mov	r7,#(_powercycle >> 16)
                                   4496 ;	../../../../core/net/mac/xmac.c:998: rtimer_set(&rt, RTIMER_NOW() + xmac_config.off_time, 1,
      00137F AB E2            [24] 4497 	mov	r3,_T1CNTL
      001381 7C 00            [12] 4498 	mov	r4,#0x00
      001383 A9 E3            [24] 4499 	mov	r1,_T1CNTH
      001385 89 02            [24] 4500 	mov	ar2,r1
      001387 E4               [12] 4501 	clr	a
      001388 2B               [12] 4502 	add	a,r3
      001389 FB               [12] 4503 	mov	r3,a
      00138A EA               [12] 4504 	mov	a,r2
      00138B 3C               [12] 4505 	addc	a,r4
      00138C FC               [12] 4506 	mov	r4,a
      00138D 90r00r02         [24] 4507 	mov	dptr,#(_xmac_config + 0x0002)
      001390 E0               [24] 4508 	movx	a,@dptr
      001391 F9               [12] 4509 	mov	r1,a
      001392 A3               [24] 4510 	inc	dptr
      001393 E0               [24] 4511 	movx	a,@dptr
      001394 FA               [12] 4512 	mov	r2,a
      001395 E9               [12] 4513 	mov	a,r1
      001396 2B               [12] 4514 	add	a,r3
      001397 F9               [12] 4515 	mov	r1,a
      001398 EA               [12] 4516 	mov	a,r2
      001399 3C               [12] 4517 	addc	a,r4
      00139A FA               [12] 4518 	mov	r2,a
      00139B E4               [12] 4519 	clr	a
      00139C C0 E0            [24] 4520 	push	acc
      00139E C0 E0            [24] 4521 	push	acc
      0013A0 C0 E0            [24] 4522 	push	acc
      0013A2 C0 05            [24] 4523 	push	ar5
      0013A4 C0 06            [24] 4524 	push	ar6
      0013A6 C0 07            [24] 4525 	push	ar7
      0013A8 74 01            [12] 4526 	mov	a,#0x01
      0013AA C0 E0            [24] 4527 	push	acc
      0013AC E4               [12] 4528 	clr	a
      0013AD C0 E0            [24] 4529 	push	acc
      0013AF C0 01            [24] 4530 	push	ar1
      0013B1 C0 02            [24] 4531 	push	ar2
      0013B3 90r00r00         [24] 4532 	mov	dptr,#_rt
      0013B6 75 F0 00         [24] 4533 	mov	b,#0x00
      0013B9 78r00            [12] 4534 	mov	r0,#_rtimer_set
      0013BB 79s00            [12] 4535 	mov	r1,#(_rtimer_set >> 8)
      0013BD 7As00            [12] 4536 	mov	r2,#(_rtimer_set >> 16)
      0013BF 12r00r00         [24] 4537 	lcall	__sdcc_banked_call
      0013C2 E5 81            [12] 4538 	mov	a,sp
      0013C4 24 F6            [12] 4539 	add	a,#0xf6
      0013C6 F5 81            [12] 4540 	mov	sp,a
                                   4541 ;	../../../../core/net/mac/xmac.c:1000: return 1;
      0013C8 90 00 01         [24] 4542 	mov	dptr,#0x0001
      0013CB 02r00r00         [24] 4543 	ljmp	__sdcc_banked_ret
                                   4544 ;------------------------------------------------------------
                                   4545 ;Allocation info for local variables in function 'turn_off'
                                   4546 ;------------------------------------------------------------
                                   4547 ;keep_radio_on             Allocated to registers r6 r7 
                                   4548 ;------------------------------------------------------------
                                   4549 ;	../../../../core/net/mac/xmac.c:1004: turn_off(int keep_radio_on)
                                   4550 ;	-----------------------------------------
                                   4551 ;	 function turn_off
                                   4552 ;	-----------------------------------------
      0013CE                       4553 _turn_off:
      0013CE AE 82            [24] 4554 	mov	r6,dpl
      0013D0 AF 83            [24] 4555 	mov	r7,dph
                                   4556 ;	../../../../core/net/mac/xmac.c:1006: xmac_is_on = 0;
      0013D2 90r00r08         [24] 4557 	mov	dptr,#_xmac_is_on
      0013D5 E4               [12] 4558 	clr	a
      0013D6 F0               [24] 4559 	movx	@dptr,a
                                   4560 ;	../../../../core/net/mac/xmac.c:1007: if(keep_radio_on) {
      0013D7 EE               [12] 4561 	mov	a,r6
      0013D8 4F               [12] 4562 	orl	a,r7
      0013D9 60 2B            [24] 4563 	jz	00102$
                                   4564 ;	../../../../core/net/mac/xmac.c:1008: return NETSTACK_RADIO.on();
      0013DB 90r00r18         [24] 4565 	mov	dptr,#(_cc2530_rf_driver + 0x0018)
      0013DE E4               [12] 4566 	clr	a
      0013DF 93               [24] 4567 	movc	a,@a+dptr
      0013E0 FD               [12] 4568 	mov	r5,a
      0013E1 A3               [24] 4569 	inc	dptr
      0013E2 E4               [12] 4570 	clr	a
      0013E3 93               [24] 4571 	movc	a,@a+dptr
      0013E4 FE               [12] 4572 	mov	r6,a
      0013E5 A3               [24] 4573 	inc	dptr
      0013E6 E4               [12] 4574 	clr	a
      0013E7 93               [24] 4575 	movc	a,@a+dptr
      0013E8 FF               [12] 4576 	mov	r7,a
      0013E9 C0 07            [24] 4577 	push	ar7
      0013EB C0 05            [24] 4578 	push	ar5
      0013ED C0 06            [24] 4579 	push	ar6
      0013EF C0 07            [24] 4580 	push	ar7
      0013F1 D0 02            [24] 4581 	pop	ar2
      0013F3 D0 01            [24] 4582 	pop	ar1
      0013F5 D0 00            [24] 4583 	pop	ar0
      0013F7 12r00r00         [24] 4584 	lcall	__sdcc_banked_call
      0013FA AD 82            [24] 4585 	mov	r5,dpl
      0013FC AE 83            [24] 4586 	mov	r6,dph
      0013FE D0 07            [24] 4587 	pop	ar7
      001400 8D 82            [24] 4588 	mov	dpl,r5
      001402 8E 83            [24] 4589 	mov	dph,r6
      001404 80 29            [24] 4590 	sjmp	00104$
      001406                       4591 00102$:
                                   4592 ;	../../../../core/net/mac/xmac.c:1010: return NETSTACK_RADIO.off();
      001406 90r00r1B         [24] 4593 	mov	dptr,#(_cc2530_rf_driver + 0x001b)
      001409 E4               [12] 4594 	clr	a
      00140A 93               [24] 4595 	movc	a,@a+dptr
      00140B FD               [12] 4596 	mov	r5,a
      00140C A3               [24] 4597 	inc	dptr
      00140D E4               [12] 4598 	clr	a
      00140E 93               [24] 4599 	movc	a,@a+dptr
      00140F FE               [12] 4600 	mov	r6,a
      001410 A3               [24] 4601 	inc	dptr
      001411 E4               [12] 4602 	clr	a
      001412 93               [24] 4603 	movc	a,@a+dptr
      001413 FF               [12] 4604 	mov	r7,a
      001414 C0 07            [24] 4605 	push	ar7
      001416 C0 05            [24] 4606 	push	ar5
      001418 C0 06            [24] 4607 	push	ar6
      00141A C0 07            [24] 4608 	push	ar7
      00141C D0 02            [24] 4609 	pop	ar2
      00141E D0 01            [24] 4610 	pop	ar1
      001420 D0 00            [24] 4611 	pop	ar0
      001422 12r00r00         [24] 4612 	lcall	__sdcc_banked_call
      001425 AD 82            [24] 4613 	mov	r5,dpl
      001427 AE 83            [24] 4614 	mov	r6,dph
      001429 D0 07            [24] 4615 	pop	ar7
      00142B 8D 82            [24] 4616 	mov	dpl,r5
      00142D 8E 83            [24] 4617 	mov	dph,r6
      00142F                       4618 00104$:
      00142F 02r00r00         [24] 4619 	ljmp	__sdcc_banked_ret
                                   4620 ;------------------------------------------------------------
                                   4621 ;Allocation info for local variables in function 'channel_check_interval'
                                   4622 ;------------------------------------------------------------
                                   4623 ;	../../../../core/net/mac/xmac.c:1015: channel_check_interval(void)
                                   4624 ;	-----------------------------------------
                                   4625 ;	 function channel_check_interval
                                   4626 ;	-----------------------------------------
      001432                       4627 _channel_check_interval:
                                   4628 ;	../../../../core/net/mac/xmac.c:1017: return (1ul * CLOCK_SECOND * DEFAULT_PERIOD) / RTIMER_ARCH_SECOND;
      001432 90 00 0F         [24] 4629 	mov	dptr,#0x000F
      001435 02r00r00         [24] 4630 	ljmp	__sdcc_banked_ret
                                   4631 	.area CSEG    (CODE)
                                   4632 	.area CONST   (CODE)
      000000                       4633 _xmac_driver:
      000000r18s00 80              4634 	.byte _str_0,(_str_0 >> 8),#0x80
      000003rE2s12s00              4635 	.byte _init,(_init >> 8),(_init >> 16)
      000006r77s0Es00              4636 	.byte _qsend_packet,(_qsend_packet >> 8),(_qsend_packet >> 16)
      000009r36s0Fs00              4637 	.byte _qsend_list,(_qsend_list >> 8),(_qsend_list >> 16)
      00000CrB1s0Fs00              4638 	.byte _input_packet,(_input_packet >> 8),(_input_packet >> 16)
      00000Fr73s13s00              4639 	.byte _turn_on,(_turn_on >> 8),(_turn_on >> 16)
      000012rCEs13s00              4640 	.byte _turn_off,(_turn_off >> 8),(_turn_off >> 16)
      000015r32s14s00              4641 	.byte _channel_check_interval,(_channel_check_interval >> 8),(_channel_check_interval >> 16)
      000018                       4642 _str_0:
      000018 58 2D 4D 41 43        4643 	.ascii "X-MAC"
      00001D 00                    4644 	.db 0x00
                                   4645 	.area XINIT   (CODE)
      000000                       4646 __xinit__xmac_config:
      000000 61 00                 4647 	.byte #0x61,#0x00	; 97
      000002 40 07                 4648 	.byte #0x40,#0x07	; 1856
      000004 C4 08                 4649 	.byte #0xC4,#0x08	; 2244
      000006 3C 00                 4650 	.byte #0x3C,#0x00	; 60
      000008                       4651 __xinit__xmac_is_on:
      000008 00                    4652 	.db #0x00	; 0
      000009                       4653 __xinit__waiting_for_packet:
      000009 00                    4654 	.db #0x00	; 0
      00000A                       4655 __xinit__someone_is_sending:
      00000A 00                    4656 	.db #0x00	; 0
      00000B                       4657 __xinit__we_are_sending:
      00000B 00                    4658 	.db #0x00	; 0
      00000C                       4659 __xinit__radio_is_on:
      00000C 00                    4660 	.db #0x00	; 0
      00000D                       4661 __xinit__encounter_list_list:
                                   4662 ; generic printIvalPtr
      00000D 00 00 00              4663 	.byte #0x00,#0x00,#0x00
      000010                       4664 __xinit__encounter_list:
      000010r0Ds00 00              4665 	.byte _encounter_list_list,(_encounter_list_list >> 8),#0x00
      000013                       4666 __xinit__encounter_memb:
      000013 0D 00                 4667 	.byte #0x0D,#0x00	; 13
      000015 04 00                 4668 	.byte #0x04,#0x00	; 4
      000017r0Bs00 00              4669 	.byte _encounter_memb_memb_count,(_encounter_memb_memb_count >> 8),#0x00
      00001Ar0Fs00 00              4670 	.byte _encounter_memb_memb_mem,(_encounter_memb_memb_mem >> 8),#0x00
                                   4671 	.area CABS    (ABS,CODE)
