                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8804 (Aug  6 2013) (Linux)
                                      4 ; This file was generated Mon Aug 25 04:16:29 2014
                                      5 ;--------------------------------------------------------
                                      6 	.module list
                                      7 	.optsdcc -mmcs51 --model-huge
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _list_init
                                     13 	.globl _list_head
                                     14 	.globl _list_copy
                                     15 	.globl _list_tail
                                     16 	.globl _list_add
                                     17 	.globl _list_push
                                     18 	.globl _list_chop
                                     19 	.globl _list_pop
                                     20 	.globl _list_remove
                                     21 	.globl _list_length
                                     22 	.globl _list_insert
                                     23 	.globl _list_item_next
                                     24 ;--------------------------------------------------------
                                     25 ; special function registers
                                     26 ;--------------------------------------------------------
                                     27 	.area RSEG    (ABS,DATA)
      000000                         28 	.org 0x0000
                                     29 ;--------------------------------------------------------
                                     30 ; special function bits
                                     31 ;--------------------------------------------------------
                                     32 	.area RSEG    (ABS,DATA)
      000000                         33 	.org 0x0000
                                     34 ;--------------------------------------------------------
                                     35 ; overlayable register banks
                                     36 ;--------------------------------------------------------
                                     37 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         38 	.ds 8
                                     39 ;--------------------------------------------------------
                                     40 ; internal ram data
                                     41 ;--------------------------------------------------------
                                     42 	.area DSEG    (DATA)
                                     43 ;--------------------------------------------------------
                                     44 ; overlayable items in internal ram 
                                     45 ;--------------------------------------------------------
                                     46 ;--------------------------------------------------------
                                     47 ; indirectly addressable internal ram data
                                     48 ;--------------------------------------------------------
                                     49 	.area ISEG    (DATA)
                                     50 ;--------------------------------------------------------
                                     51 ; absolute internal ram data
                                     52 ;--------------------------------------------------------
                                     53 	.area IABS    (ABS,DATA)
                                     54 	.area IABS    (ABS,DATA)
                                     55 ;--------------------------------------------------------
                                     56 ; bit data
                                     57 ;--------------------------------------------------------
                                     58 	.area BSEG    (BIT)
                                     59 ;--------------------------------------------------------
                                     60 ; paged external ram data
                                     61 ;--------------------------------------------------------
                                     62 	.area PSEG    (PAG,XDATA)
                                     63 ;--------------------------------------------------------
                                     64 ; external ram data
                                     65 ;--------------------------------------------------------
                                     66 	.area XSEG    (XDATA)
                                     67 ;--------------------------------------------------------
                                     68 ; absolute external ram data
                                     69 ;--------------------------------------------------------
                                     70 	.area XABS    (ABS,XDATA)
                                     71 ;--------------------------------------------------------
                                     72 ; external initialized ram data
                                     73 ;--------------------------------------------------------
                                     74 	.area XISEG   (XDATA)
                                     75 	.area HOME    (CODE)
                                     76 	.area GSINIT0 (CODE)
                                     77 	.area GSINIT1 (CODE)
                                     78 	.area GSINIT2 (CODE)
                                     79 	.area GSINIT3 (CODE)
                                     80 	.area GSINIT4 (CODE)
                                     81 	.area GSINIT5 (CODE)
                                     82 	.area GSINIT  (CODE)
                                     83 	.area GSFINAL (CODE)
                                     84 	.area CSEG    (CODE)
                                     85 ;--------------------------------------------------------
                                     86 ; global & static initialisations
                                     87 ;--------------------------------------------------------
                                     88 	.area HOME    (CODE)
                                     89 	.area GSINIT  (CODE)
                                     90 	.area GSFINAL (CODE)
                                     91 	.area GSINIT  (CODE)
                                     92 ;--------------------------------------------------------
                                     93 ; Home
                                     94 ;--------------------------------------------------------
                                     95 	.area HOME    (CODE)
                                     96 	.area HOME    (CODE)
                                     97 ;--------------------------------------------------------
                                     98 ; code
                                     99 ;--------------------------------------------------------
                                    100 	.area BANK1   (CODE)
                                    101 ;------------------------------------------------------------
                                    102 ;Allocation info for local variables in function 'list_init'
                                    103 ;------------------------------------------------------------
                                    104 ;list                      Allocated to registers r5 r6 r7 
                                    105 ;------------------------------------------------------------
                                    106 ;	../../../../core/lib/list.c:65: list_init(list_t list)
                                    107 ;	-----------------------------------------
                                    108 ;	 function list_init
                                    109 ;	-----------------------------------------
      000000                        110 _list_init:
                           000007   111 	ar7 = 0x07
                           000006   112 	ar6 = 0x06
                           000005   113 	ar5 = 0x05
                           000004   114 	ar4 = 0x04
                           000003   115 	ar3 = 0x03
                           000002   116 	ar2 = 0x02
                           000001   117 	ar1 = 0x01
                           000000   118 	ar0 = 0x00
                                    119 ;	../../../../core/lib/list.c:67: *list = NULL;
      000000 AD 82            [24]  120 	mov	r5,dpl
      000002 AE 83            [24]  121 	mov	r6,dph
      000004 AF F0            [24]  122 	mov	r7,b
      000006 E4               [12]  123 	clr	a
      000007 12r00r00         [24]  124 	lcall	__gptrput
      00000A A3               [24]  125 	inc	dptr
      00000B E4               [12]  126 	clr	a
      00000C 12r00r00         [24]  127 	lcall	__gptrput
      00000F A3               [24]  128 	inc	dptr
      000010 E4               [12]  129 	clr	a
      000011 12r00r00         [24]  130 	lcall	__gptrput
      000014 02r00r00         [24]  131 	ljmp	__sdcc_banked_ret
                                    132 ;------------------------------------------------------------
                                    133 ;Allocation info for local variables in function 'list_head'
                                    134 ;------------------------------------------------------------
                                    135 ;list                      Allocated to registers r5 r6 r7 
                                    136 ;------------------------------------------------------------
                                    137 ;	../../../../core/lib/list.c:82: list_head(list_t list)
                                    138 ;	-----------------------------------------
                                    139 ;	 function list_head
                                    140 ;	-----------------------------------------
      000017                        141 _list_head:
                                    142 ;	../../../../core/lib/list.c:84: return *list;
      000017 12r00r00         [24]  143 	lcall	__gptrget
      00001A FD               [12]  144 	mov	r5,a
      00001B A3               [24]  145 	inc	dptr
      00001C 12r00r00         [24]  146 	lcall	__gptrget
      00001F FE               [12]  147 	mov	r6,a
      000020 A3               [24]  148 	inc	dptr
      000021 12r00r00         [24]  149 	lcall	__gptrget
      000024 FF               [12]  150 	mov	r7,a
      000025 8D 82            [24]  151 	mov	dpl,r5
      000027 8E 83            [24]  152 	mov	dph,r6
      000029 8F F0            [24]  153 	mov	b,r7
      00002B 02r00r00         [24]  154 	ljmp	__sdcc_banked_ret
                                    155 ;------------------------------------------------------------
                                    156 ;Allocation info for local variables in function 'list_copy'
                                    157 ;------------------------------------------------------------
                                    158 ;src                       Allocated to stack - sp -5
                                    159 ;dest                      Allocated to registers r5 r6 r7 
                                    160 ;------------------------------------------------------------
                                    161 ;	../../../../core/lib/list.c:100: list_copy(list_t dest, list_t src)
                                    162 ;	-----------------------------------------
                                    163 ;	 function list_copy
                                    164 ;	-----------------------------------------
      00002E                        165 _list_copy:
      00002E AD 82            [24]  166 	mov	r5,dpl
      000030 AE 83            [24]  167 	mov	r6,dph
      000032 AF F0            [24]  168 	mov	r7,b
                                    169 ;	../../../../core/lib/list.c:102: *dest = *src;
      000034 E5 81            [12]  170 	mov	a,sp
      000036 24 FB            [12]  171 	add	a,#0xfb
      000038 F8               [12]  172 	mov	r0,a
      000039 86 02            [24]  173 	mov	ar2,@r0
      00003B 08               [12]  174 	inc	r0
      00003C 86 03            [24]  175 	mov	ar3,@r0
      00003E 08               [12]  176 	inc	r0
      00003F 86 04            [24]  177 	mov	ar4,@r0
      000041 8A 82            [24]  178 	mov	dpl,r2
      000043 8B 83            [24]  179 	mov	dph,r3
      000045 8C F0            [24]  180 	mov	b,r4
      000047 12r00r00         [24]  181 	lcall	__gptrget
      00004A FA               [12]  182 	mov	r2,a
      00004B A3               [24]  183 	inc	dptr
      00004C 12r00r00         [24]  184 	lcall	__gptrget
      00004F FB               [12]  185 	mov	r3,a
      000050 A3               [24]  186 	inc	dptr
      000051 12r00r00         [24]  187 	lcall	__gptrget
      000054 FC               [12]  188 	mov	r4,a
      000055 8D 82            [24]  189 	mov	dpl,r5
      000057 8E 83            [24]  190 	mov	dph,r6
      000059 8F F0            [24]  191 	mov	b,r7
      00005B EA               [12]  192 	mov	a,r2
      00005C 12r00r00         [24]  193 	lcall	__gptrput
      00005F A3               [24]  194 	inc	dptr
      000060 EB               [12]  195 	mov	a,r3
      000061 12r00r00         [24]  196 	lcall	__gptrput
      000064 A3               [24]  197 	inc	dptr
      000065 EC               [12]  198 	mov	a,r4
      000066 12r00r00         [24]  199 	lcall	__gptrput
      000069 02r00r00         [24]  200 	ljmp	__sdcc_banked_ret
                                    201 ;------------------------------------------------------------
                                    202 ;Allocation info for local variables in function 'list_tail'
                                    203 ;------------------------------------------------------------
                                    204 ;list                      Allocated to registers r5 r6 r7 
                                    205 ;l                         Allocated to registers r5 r6 r7 
                                    206 ;------------------------------------------------------------
                                    207 ;	../../../../core/lib/list.c:117: list_tail(list_t list)
                                    208 ;	-----------------------------------------
                                    209 ;	 function list_tail
                                    210 ;	-----------------------------------------
      00006C                        211 _list_tail:
                                    212 ;	../../../../core/lib/list.c:121: if(*list == NULL) {
      00006C 12r00r00         [24]  213 	lcall	__gptrget
      00006F FD               [12]  214 	mov	r5,a
      000070 A3               [24]  215 	inc	dptr
      000071 12r00r00         [24]  216 	lcall	__gptrget
      000074 FE               [12]  217 	mov	r6,a
      000075 A3               [24]  218 	inc	dptr
      000076 12r00r00         [24]  219 	lcall	__gptrget
      000079 FF               [12]  220 	mov	r7,a
      00007A ED               [12]  221 	mov	a,r5
      00007B 4E               [12]  222 	orl	a,r6
                                    223 ;	../../../../core/lib/list.c:122: return NULL;
      00007C 70 07            [24]  224 	jnz	00102$
      00007E 90 00 00         [24]  225 	mov	dptr,#0x0000
      000081 F5 F0            [12]  226 	mov	b,a
      000083 80 3C            [24]  227 	sjmp	00107$
      000085                        228 00102$:
                                    229 ;	../../../../core/lib/list.c:125: for(l = *list; l->next != NULL; l = l->next);
      000085                        230 00105$:
      000085 8D 82            [24]  231 	mov	dpl,r5
      000087 8E 83            [24]  232 	mov	dph,r6
      000089 8F F0            [24]  233 	mov	b,r7
      00008B 12r00r00         [24]  234 	lcall	__gptrget
      00008E FA               [12]  235 	mov	r2,a
      00008F A3               [24]  236 	inc	dptr
      000090 12r00r00         [24]  237 	lcall	__gptrget
      000093 FB               [12]  238 	mov	r3,a
      000094 A3               [24]  239 	inc	dptr
      000095 12r00r00         [24]  240 	lcall	__gptrget
      000098 FC               [12]  241 	mov	r4,a
      000099 E4               [12]  242 	clr	a
      00009A C0 E0            [24]  243 	push	acc
      00009C E4               [12]  244 	clr	a
      00009D C0 E0            [24]  245 	push	acc
      00009F E4               [12]  246 	clr	a
      0000A0 C0 E0            [24]  247 	push	acc
      0000A2 8A 82            [24]  248 	mov	dpl,r2
      0000A4 8B 83            [24]  249 	mov	dph,r3
      0000A6 8C F0            [24]  250 	mov	b,r4
      0000A8 12r00r00         [24]  251 	lcall	___gptr_cmp
      0000AB 15 81            [12]  252 	dec	sp
      0000AD 15 81            [12]  253 	dec	sp
      0000AF 15 81            [12]  254 	dec	sp
      0000B1 60 08            [24]  255 	jz	00103$
      0000B3 8A 05            [24]  256 	mov	ar5,r2
      0000B5 8B 06            [24]  257 	mov	ar6,r3
      0000B7 8C 07            [24]  258 	mov	ar7,r4
      0000B9 80 CA            [24]  259 	sjmp	00105$
      0000BB                        260 00103$:
                                    261 ;	../../../../core/lib/list.c:127: return l;
      0000BB 8D 82            [24]  262 	mov	dpl,r5
      0000BD 8E 83            [24]  263 	mov	dph,r6
      0000BF 8F F0            [24]  264 	mov	b,r7
      0000C1                        265 00107$:
      0000C1 02r00r00         [24]  266 	ljmp	__sdcc_banked_ret
                                    267 ;------------------------------------------------------------
                                    268 ;Allocation info for local variables in function 'list_add'
                                    269 ;------------------------------------------------------------
                                    270 ;item                      Allocated to stack - sp -5
                                    271 ;list                      Allocated to registers r5 r6 r7 
                                    272 ;l                         Allocated to registers r2 r3 r4 
                                    273 ;------------------------------------------------------------
                                    274 ;	../../../../core/lib/list.c:142: list_add(list_t list, void *item)
                                    275 ;	-----------------------------------------
                                    276 ;	 function list_add
                                    277 ;	-----------------------------------------
      0000C4                        278 _list_add:
      0000C4 AD 82            [24]  279 	mov	r5,dpl
      0000C6 AE 83            [24]  280 	mov	r6,dph
      0000C8 AF F0            [24]  281 	mov	r7,b
                                    282 ;	../../../../core/lib/list.c:147: list_remove(list, item);
      0000CA C0 07            [24]  283 	push	ar7
      0000CC C0 06            [24]  284 	push	ar6
      0000CE C0 05            [24]  285 	push	ar5
      0000D0 E5 81            [12]  286 	mov	a,sp
      0000D2 24 F8            [12]  287 	add	a,#0xf8
      0000D4 F8               [12]  288 	mov	r0,a
      0000D5 E6               [12]  289 	mov	a,@r0
      0000D6 C0 E0            [24]  290 	push	acc
      0000D8 08               [12]  291 	inc	r0
      0000D9 E6               [12]  292 	mov	a,@r0
      0000DA C0 E0            [24]  293 	push	acc
      0000DC 08               [12]  294 	inc	r0
      0000DD E6               [12]  295 	mov	a,@r0
      0000DE C0 E0            [24]  296 	push	acc
      0000E0 8D 82            [24]  297 	mov	dpl,r5
      0000E2 8E 83            [24]  298 	mov	dph,r6
      0000E4 8F F0            [24]  299 	mov	b,r7
      0000E6 78rD0            [12]  300 	mov	r0,#_list_remove
      0000E8 79s03            [12]  301 	mov	r1,#(_list_remove >> 8)
      0000EA 7As00            [12]  302 	mov	r2,#(_list_remove >> 16)
      0000EC 12r00r00         [24]  303 	lcall	__sdcc_banked_call
      0000EF 15 81            [12]  304 	dec	sp
      0000F1 15 81            [12]  305 	dec	sp
      0000F3 15 81            [12]  306 	dec	sp
      0000F5 D0 05            [24]  307 	pop	ar5
      0000F7 D0 06            [24]  308 	pop	ar6
      0000F9 D0 07            [24]  309 	pop	ar7
                                    310 ;	../../../../core/lib/list.c:149: ((struct list *)item)->next = NULL;
      0000FB E5 81            [12]  311 	mov	a,sp
      0000FD 24 FB            [12]  312 	add	a,#0xfb
      0000FF F8               [12]  313 	mov	r0,a
      000100 86 02            [24]  314 	mov	ar2,@r0
      000102 08               [12]  315 	inc	r0
      000103 86 03            [24]  316 	mov	ar3,@r0
      000105 08               [12]  317 	inc	r0
      000106 86 04            [24]  318 	mov	ar4,@r0
      000108 8A 82            [24]  319 	mov	dpl,r2
      00010A 8B 83            [24]  320 	mov	dph,r3
      00010C 8C F0            [24]  321 	mov	b,r4
      00010E E4               [12]  322 	clr	a
      00010F 12r00r00         [24]  323 	lcall	__gptrput
      000112 A3               [24]  324 	inc	dptr
      000113 E4               [12]  325 	clr	a
      000114 12r00r00         [24]  326 	lcall	__gptrput
      000117 A3               [24]  327 	inc	dptr
      000118 E4               [12]  328 	clr	a
      000119 12r00r00         [24]  329 	lcall	__gptrput
                                    330 ;	../../../../core/lib/list.c:151: l = list_tail(list);
      00011C 8D 82            [24]  331 	mov	dpl,r5
      00011E 8E 83            [24]  332 	mov	dph,r6
      000120 8F F0            [24]  333 	mov	b,r7
      000122 C0 07            [24]  334 	push	ar7
      000124 C0 06            [24]  335 	push	ar6
      000126 C0 05            [24]  336 	push	ar5
      000128 78r6C            [12]  337 	mov	r0,#_list_tail
      00012A 79s00            [12]  338 	mov	r1,#(_list_tail >> 8)
      00012C 7As00            [12]  339 	mov	r2,#(_list_tail >> 16)
      00012E 12r00r00         [24]  340 	lcall	__sdcc_banked_call
      000131 AA 82            [24]  341 	mov	r2,dpl
      000133 AB 83            [24]  342 	mov	r3,dph
      000135 AC F0            [24]  343 	mov	r4,b
      000137 D0 05            [24]  344 	pop	ar5
      000139 D0 06            [24]  345 	pop	ar6
      00013B D0 07            [24]  346 	pop	ar7
                                    347 ;	../../../../core/lib/list.c:153: if(l == NULL) {
      00013D EA               [12]  348 	mov	a,r2
      00013E 4B               [12]  349 	orl	a,r3
      00013F 70 1D            [24]  350 	jnz	00102$
                                    351 ;	../../../../core/lib/list.c:154: *list = item;
      000141 8D 82            [24]  352 	mov	dpl,r5
      000143 8E 83            [24]  353 	mov	dph,r6
      000145 8F F0            [24]  354 	mov	b,r7
      000147 E5 81            [12]  355 	mov	a,sp
      000149 24 FB            [12]  356 	add	a,#0xfb
      00014B F8               [12]  357 	mov	r0,a
      00014C E6               [12]  358 	mov	a,@r0
      00014D 12r00r00         [24]  359 	lcall	__gptrput
      000150 A3               [24]  360 	inc	dptr
      000151 08               [12]  361 	inc	r0
      000152 E6               [12]  362 	mov	a,@r0
      000153 12r00r00         [24]  363 	lcall	__gptrput
      000156 A3               [24]  364 	inc	dptr
      000157 08               [12]  365 	inc	r0
      000158 E6               [12]  366 	mov	a,@r0
      000159 12r00r00         [24]  367 	lcall	__gptrput
      00015C 80 21            [24]  368 	sjmp	00104$
      00015E                        369 00102$:
                                    370 ;	../../../../core/lib/list.c:156: l->next = item;
      00015E E5 81            [12]  371 	mov	a,sp
      000160 24 FB            [12]  372 	add	a,#0xfb
      000162 F8               [12]  373 	mov	r0,a
      000163 86 05            [24]  374 	mov	ar5,@r0
      000165 08               [12]  375 	inc	r0
      000166 86 06            [24]  376 	mov	ar6,@r0
      000168 08               [12]  377 	inc	r0
      000169 86 07            [24]  378 	mov	ar7,@r0
      00016B 8A 82            [24]  379 	mov	dpl,r2
      00016D 8B 83            [24]  380 	mov	dph,r3
      00016F 8C F0            [24]  381 	mov	b,r4
      000171 ED               [12]  382 	mov	a,r5
      000172 12r00r00         [24]  383 	lcall	__gptrput
      000175 A3               [24]  384 	inc	dptr
      000176 EE               [12]  385 	mov	a,r6
      000177 12r00r00         [24]  386 	lcall	__gptrput
      00017A A3               [24]  387 	inc	dptr
      00017B EF               [12]  388 	mov	a,r7
      00017C 12r00r00         [24]  389 	lcall	__gptrput
      00017F                        390 00104$:
      00017F 02r00r00         [24]  391 	ljmp	__sdcc_banked_ret
                                    392 ;------------------------------------------------------------
                                    393 ;Allocation info for local variables in function 'list_push'
                                    394 ;------------------------------------------------------------
                                    395 ;item                      Allocated to stack - sp -8
                                    396 ;list                      Allocated to stack - sp -2
                                    397 ;------------------------------------------------------------
                                    398 ;	../../../../core/lib/list.c:164: list_push(list_t list, void *item)
                                    399 ;	-----------------------------------------
                                    400 ;	 function list_push
                                    401 ;	-----------------------------------------
      000182                        402 _list_push:
      000182 C0 82            [24]  403 	push	dpl
      000184 C0 83            [24]  404 	push	dph
      000186 C0 F0            [24]  405 	push	b
                                    406 ;	../../../../core/lib/list.c:169: list_remove(list, item);
      000188 E5 81            [12]  407 	mov	a,sp
      00018A 24 F8            [12]  408 	add	a,#0xf8
      00018C F8               [12]  409 	mov	r0,a
      00018D E6               [12]  410 	mov	a,@r0
      00018E C0 E0            [24]  411 	push	acc
      000190 08               [12]  412 	inc	r0
      000191 E6               [12]  413 	mov	a,@r0
      000192 C0 E0            [24]  414 	push	acc
      000194 08               [12]  415 	inc	r0
      000195 E6               [12]  416 	mov	a,@r0
      000196 C0 E0            [24]  417 	push	acc
      000198 E5 81            [12]  418 	mov	a,sp
      00019A 24 FB            [12]  419 	add	a,#0xfb
      00019C F8               [12]  420 	mov	r0,a
      00019D 86 82            [24]  421 	mov	dpl,@r0
      00019F 08               [12]  422 	inc	r0
      0001A0 86 83            [24]  423 	mov	dph,@r0
      0001A2 08               [12]  424 	inc	r0
      0001A3 86 F0            [24]  425 	mov	b,@r0
      0001A5 78rD0            [12]  426 	mov	r0,#_list_remove
      0001A7 79s03            [12]  427 	mov	r1,#(_list_remove >> 8)
      0001A9 7As00            [12]  428 	mov	r2,#(_list_remove >> 16)
      0001AB 12r00r00         [24]  429 	lcall	__sdcc_banked_call
      0001AE 15 81            [12]  430 	dec	sp
      0001B0 15 81            [12]  431 	dec	sp
      0001B2 15 81            [12]  432 	dec	sp
                                    433 ;	../../../../core/lib/list.c:171: ((struct list *)item)->next = *list;
      0001B4 E5 81            [12]  434 	mov	a,sp
      0001B6 24 F8            [12]  435 	add	a,#0xf8
      0001B8 F8               [12]  436 	mov	r0,a
      0001B9 86 02            [24]  437 	mov	ar2,@r0
      0001BB 08               [12]  438 	inc	r0
      0001BC 86 03            [24]  439 	mov	ar3,@r0
      0001BE 08               [12]  440 	inc	r0
      0001BF 86 04            [24]  441 	mov	ar4,@r0
      0001C1 A8 81            [24]  442 	mov	r0,sp
      0001C3 18               [12]  443 	dec	r0
      0001C4 18               [12]  444 	dec	r0
      0001C5 86 82            [24]  445 	mov	dpl,@r0
      0001C7 08               [12]  446 	inc	r0
      0001C8 86 83            [24]  447 	mov	dph,@r0
      0001CA 08               [12]  448 	inc	r0
      0001CB 86 F0            [24]  449 	mov	b,@r0
      0001CD 12r00r00         [24]  450 	lcall	__gptrget
      0001D0 FD               [12]  451 	mov	r5,a
      0001D1 A3               [24]  452 	inc	dptr
      0001D2 12r00r00         [24]  453 	lcall	__gptrget
      0001D5 FE               [12]  454 	mov	r6,a
      0001D6 A3               [24]  455 	inc	dptr
      0001D7 12r00r00         [24]  456 	lcall	__gptrget
      0001DA FF               [12]  457 	mov	r7,a
      0001DB 8A 82            [24]  458 	mov	dpl,r2
      0001DD 8B 83            [24]  459 	mov	dph,r3
      0001DF 8C F0            [24]  460 	mov	b,r4
      0001E1 ED               [12]  461 	mov	a,r5
      0001E2 12r00r00         [24]  462 	lcall	__gptrput
      0001E5 A3               [24]  463 	inc	dptr
      0001E6 EE               [12]  464 	mov	a,r6
      0001E7 12r00r00         [24]  465 	lcall	__gptrput
      0001EA A3               [24]  466 	inc	dptr
      0001EB EF               [12]  467 	mov	a,r7
      0001EC 12r00r00         [24]  468 	lcall	__gptrput
                                    469 ;	../../../../core/lib/list.c:172: *list = item;
      0001EF A8 81            [24]  470 	mov	r0,sp
      0001F1 18               [12]  471 	dec	r0
      0001F2 18               [12]  472 	dec	r0
      0001F3 86 82            [24]  473 	mov	dpl,@r0
      0001F5 08               [12]  474 	inc	r0
      0001F6 86 83            [24]  475 	mov	dph,@r0
      0001F8 08               [12]  476 	inc	r0
      0001F9 86 F0            [24]  477 	mov	b,@r0
      0001FB E5 81            [12]  478 	mov	a,sp
      0001FD 24 F8            [12]  479 	add	a,#0xf8
      0001FF F9               [12]  480 	mov	r1,a
      000200 E7               [12]  481 	mov	a,@r1
      000201 12r00r00         [24]  482 	lcall	__gptrput
      000204 A3               [24]  483 	inc	dptr
      000205 09               [12]  484 	inc	r1
      000206 E7               [12]  485 	mov	a,@r1
      000207 12r00r00         [24]  486 	lcall	__gptrput
      00020A A3               [24]  487 	inc	dptr
      00020B 09               [12]  488 	inc	r1
      00020C E7               [12]  489 	mov	a,@r1
      00020D 12r00r00         [24]  490 	lcall	__gptrput
      000210 15 81            [12]  491 	dec	sp
      000212 15 81            [12]  492 	dec	sp
      000214 15 81            [12]  493 	dec	sp
      000216 02r00r00         [24]  494 	ljmp	__sdcc_banked_ret
                                    495 ;------------------------------------------------------------
                                    496 ;Allocation info for local variables in function 'list_chop'
                                    497 ;------------------------------------------------------------
                                    498 ;list                      Allocated to stack - sp -5
                                    499 ;l                         Allocated to stack - sp -2
                                    500 ;r                         Allocated to registers r5 r6 r7 
                                    501 ;------------------------------------------------------------
                                    502 ;	../../../../core/lib/list.c:185: list_chop(list_t list)
                                    503 ;	-----------------------------------------
                                    504 ;	 function list_chop
                                    505 ;	-----------------------------------------
      000219                        506 _list_chop:
      000219 C0 82            [24]  507 	push	dpl
      00021B C0 83            [24]  508 	push	dph
      00021D C0 F0            [24]  509 	push	b
      00021F 05 81            [12]  510 	inc	sp
      000221 05 81            [12]  511 	inc	sp
      000223 05 81            [12]  512 	inc	sp
                                    513 ;	../../../../core/lib/list.c:189: if(*list == NULL) {
      000225 E5 81            [12]  514 	mov	a,sp
      000227 24 FB            [12]  515 	add	a,#0xfb
      000229 F8               [12]  516 	mov	r0,a
      00022A 86 82            [24]  517 	mov	dpl,@r0
      00022C 08               [12]  518 	inc	r0
      00022D 86 83            [24]  519 	mov	dph,@r0
      00022F 08               [12]  520 	inc	r0
      000230 86 F0            [24]  521 	mov	b,@r0
      000232 12r00r00         [24]  522 	lcall	__gptrget
      000235 FA               [12]  523 	mov	r2,a
      000236 A3               [24]  524 	inc	dptr
      000237 12r00r00         [24]  525 	lcall	__gptrget
      00023A FB               [12]  526 	mov	r3,a
      00023B A3               [24]  527 	inc	dptr
      00023C 12r00r00         [24]  528 	lcall	__gptrget
      00023F FC               [12]  529 	mov	r4,a
      000240 EA               [12]  530 	mov	a,r2
      000241 4B               [12]  531 	orl	a,r3
                                    532 ;	../../../../core/lib/list.c:190: return NULL;
      000242 70 08            [24]  533 	jnz	00102$
      000244 90 00 00         [24]  534 	mov	dptr,#0x0000
      000247 F5 F0            [12]  535 	mov	b,a
      000249 02r03r5A         [24]  536 	ljmp	00109$
      00024C                        537 00102$:
                                    538 ;	../../../../core/lib/list.c:192: if(((struct list *)*list)->next == NULL) {
      00024C 8A 05            [24]  539 	mov	ar5,r2
      00024E 8B 06            [24]  540 	mov	ar6,r3
      000250 8C 07            [24]  541 	mov	ar7,r4
      000252 8D 82            [24]  542 	mov	dpl,r5
      000254 8E 83            [24]  543 	mov	dph,r6
      000256 8F F0            [24]  544 	mov	b,r7
      000258 12r00r00         [24]  545 	lcall	__gptrget
      00025B FD               [12]  546 	mov	r5,a
      00025C A3               [24]  547 	inc	dptr
      00025D 12r00r00         [24]  548 	lcall	__gptrget
      000260 FE               [12]  549 	mov	r6,a
      000261 A3               [24]  550 	inc	dptr
      000262 12r00r00         [24]  551 	lcall	__gptrget
      000265 FF               [12]  552 	mov	r7,a
      000266 ED               [12]  553 	mov	a,r5
      000267 4E               [12]  554 	orl	a,r6
      000268 70 42            [24]  555 	jnz	00104$
                                    556 ;	../../../../core/lib/list.c:193: l = *list;
      00026A 8A 05            [24]  557 	mov	ar5,r2
      00026C 8B 06            [24]  558 	mov	ar6,r3
      00026E 8C 07            [24]  559 	mov	ar7,r4
      000270 A8 81            [24]  560 	mov	r0,sp
      000272 18               [12]  561 	dec	r0
      000273 18               [12]  562 	dec	r0
      000274 A6 05            [24]  563 	mov	@r0,ar5
      000276 08               [12]  564 	inc	r0
      000277 A6 06            [24]  565 	mov	@r0,ar6
      000279 08               [12]  566 	inc	r0
      00027A A6 07            [24]  567 	mov	@r0,ar7
                                    568 ;	../../../../core/lib/list.c:194: *list = NULL;
      00027C E5 81            [12]  569 	mov	a,sp
      00027E 24 FB            [12]  570 	add	a,#0xfb
      000280 F8               [12]  571 	mov	r0,a
      000281 86 82            [24]  572 	mov	dpl,@r0
      000283 08               [12]  573 	inc	r0
      000284 86 83            [24]  574 	mov	dph,@r0
      000286 08               [12]  575 	inc	r0
      000287 86 F0            [24]  576 	mov	b,@r0
      000289 E4               [12]  577 	clr	a
      00028A 12r00r00         [24]  578 	lcall	__gptrput
      00028D A3               [24]  579 	inc	dptr
      00028E E4               [12]  580 	clr	a
      00028F 12r00r00         [24]  581 	lcall	__gptrput
      000292 A3               [24]  582 	inc	dptr
      000293 E4               [12]  583 	clr	a
      000294 12r00r00         [24]  584 	lcall	__gptrput
                                    585 ;	../../../../core/lib/list.c:195: return l;
      000297 A8 81            [24]  586 	mov	r0,sp
      000299 18               [12]  587 	dec	r0
      00029A 18               [12]  588 	dec	r0
      00029B 86 05            [24]  589 	mov	ar5,@r0
      00029D 08               [12]  590 	inc	r0
      00029E 86 06            [24]  591 	mov	ar6,@r0
      0002A0 08               [12]  592 	inc	r0
      0002A1 86 07            [24]  593 	mov	ar7,@r0
      0002A3 8D 82            [24]  594 	mov	dpl,r5
      0002A5 8E 83            [24]  595 	mov	dph,r6
      0002A7 8F F0            [24]  596 	mov	b,r7
      0002A9 02r03r5A         [24]  597 	ljmp	00109$
      0002AC                        598 00104$:
                                    599 ;	../../../../core/lib/list.c:198: for(l = *list; l->next->next != NULL; l = l->next);
      0002AC A8 81            [24]  600 	mov	r0,sp
      0002AE 18               [12]  601 	dec	r0
      0002AF 18               [12]  602 	dec	r0
      0002B0 A6 02            [24]  603 	mov	@r0,ar2
      0002B2 08               [12]  604 	inc	r0
      0002B3 A6 03            [24]  605 	mov	@r0,ar3
      0002B5 08               [12]  606 	inc	r0
      0002B6 A6 04            [24]  607 	mov	@r0,ar4
      0002B8                        608 00107$:
      0002B8 A8 81            [24]  609 	mov	r0,sp
      0002BA 18               [12]  610 	dec	r0
      0002BB 18               [12]  611 	dec	r0
      0002BC 86 82            [24]  612 	mov	dpl,@r0
      0002BE 08               [12]  613 	inc	r0
      0002BF 86 83            [24]  614 	mov	dph,@r0
      0002C1 08               [12]  615 	inc	r0
      0002C2 86 F0            [24]  616 	mov	b,@r0
      0002C4 12r00r00         [24]  617 	lcall	__gptrget
      0002C7 FD               [12]  618 	mov	r5,a
      0002C8 A3               [24]  619 	inc	dptr
      0002C9 12r00r00         [24]  620 	lcall	__gptrget
      0002CC FE               [12]  621 	mov	r6,a
      0002CD A3               [24]  622 	inc	dptr
      0002CE 12r00r00         [24]  623 	lcall	__gptrget
      0002D1 FF               [12]  624 	mov	r7,a
      0002D2 8D 82            [24]  625 	mov	dpl,r5
      0002D4 8E 83            [24]  626 	mov	dph,r6
      0002D6 8F F0            [24]  627 	mov	b,r7
      0002D8 12r00r00         [24]  628 	lcall	__gptrget
      0002DB FD               [12]  629 	mov	r5,a
      0002DC A3               [24]  630 	inc	dptr
      0002DD 12r00r00         [24]  631 	lcall	__gptrget
      0002E0 FE               [12]  632 	mov	r6,a
      0002E1 A3               [24]  633 	inc	dptr
      0002E2 12r00r00         [24]  634 	lcall	__gptrget
      0002E5 FF               [12]  635 	mov	r7,a
      0002E6 E4               [12]  636 	clr	a
      0002E7 C0 E0            [24]  637 	push	acc
      0002E9 E4               [12]  638 	clr	a
      0002EA C0 E0            [24]  639 	push	acc
      0002EC E4               [12]  640 	clr	a
      0002ED C0 E0            [24]  641 	push	acc
      0002EF 8D 82            [24]  642 	mov	dpl,r5
      0002F1 8E 83            [24]  643 	mov	dph,r6
      0002F3 8F F0            [24]  644 	mov	b,r7
      0002F5 12r00r00         [24]  645 	lcall	___gptr_cmp
      0002F8 15 81            [12]  646 	dec	sp
      0002FA 15 81            [12]  647 	dec	sp
      0002FC 15 81            [12]  648 	dec	sp
      0002FE 60 20            [24]  649 	jz	00105$
      000300 A8 81            [24]  650 	mov	r0,sp
      000302 18               [12]  651 	dec	r0
      000303 18               [12]  652 	dec	r0
      000304 86 82            [24]  653 	mov	dpl,@r0
      000306 08               [12]  654 	inc	r0
      000307 86 83            [24]  655 	mov	dph,@r0
      000309 08               [12]  656 	inc	r0
      00030A 86 F0            [24]  657 	mov	b,@r0
      00030C 12r00r00         [24]  658 	lcall	__gptrget
      00030F 18               [12]  659 	dec	r0
      000310 18               [12]  660 	dec	r0
      000311 F6               [12]  661 	mov	@r0,a
      000312 A3               [24]  662 	inc	dptr
      000313 12r00r00         [24]  663 	lcall	__gptrget
      000316 08               [12]  664 	inc	r0
      000317 F6               [12]  665 	mov	@r0,a
      000318 A3               [24]  666 	inc	dptr
      000319 12r00r00         [24]  667 	lcall	__gptrget
      00031C 08               [12]  668 	inc	r0
      00031D F6               [12]  669 	mov	@r0,a
      00031E 80 98            [24]  670 	sjmp	00107$
      000320                        671 00105$:
                                    672 ;	../../../../core/lib/list.c:200: r = l->next;
      000320 A8 81            [24]  673 	mov	r0,sp
      000322 18               [12]  674 	dec	r0
      000323 18               [12]  675 	dec	r0
      000324 86 82            [24]  676 	mov	dpl,@r0
      000326 08               [12]  677 	inc	r0
      000327 86 83            [24]  678 	mov	dph,@r0
      000329 08               [12]  679 	inc	r0
      00032A 86 F0            [24]  680 	mov	b,@r0
      00032C 12r00r00         [24]  681 	lcall	__gptrget
      00032F FD               [12]  682 	mov	r5,a
      000330 A3               [24]  683 	inc	dptr
      000331 12r00r00         [24]  684 	lcall	__gptrget
      000334 FE               [12]  685 	mov	r6,a
      000335 A3               [24]  686 	inc	dptr
      000336 12r00r00         [24]  687 	lcall	__gptrget
      000339 FF               [12]  688 	mov	r7,a
                                    689 ;	../../../../core/lib/list.c:201: l->next = NULL;
      00033A A8 81            [24]  690 	mov	r0,sp
      00033C 18               [12]  691 	dec	r0
      00033D 18               [12]  692 	dec	r0
      00033E 86 82            [24]  693 	mov	dpl,@r0
      000340 08               [12]  694 	inc	r0
      000341 86 83            [24]  695 	mov	dph,@r0
      000343 08               [12]  696 	inc	r0
      000344 86 F0            [24]  697 	mov	b,@r0
      000346 E4               [12]  698 	clr	a
      000347 12r00r00         [24]  699 	lcall	__gptrput
      00034A A3               [24]  700 	inc	dptr
      00034B E4               [12]  701 	clr	a
      00034C 12r00r00         [24]  702 	lcall	__gptrput
      00034F A3               [24]  703 	inc	dptr
      000350 E4               [12]  704 	clr	a
      000351 12r00r00         [24]  705 	lcall	__gptrput
                                    706 ;	../../../../core/lib/list.c:203: return r;
      000354 8D 82            [24]  707 	mov	dpl,r5
      000356 8E 83            [24]  708 	mov	dph,r6
      000358 8F F0            [24]  709 	mov	b,r7
      00035A                        710 00109$:
      00035A E5 81            [12]  711 	mov	a,sp
      00035C 24 FA            [12]  712 	add	a,#0xFA
      00035E F5 81            [12]  713 	mov	sp,a
      000360 02r00r00         [24]  714 	ljmp	__sdcc_banked_ret
                                    715 ;------------------------------------------------------------
                                    716 ;Allocation info for local variables in function 'list_pop'
                                    717 ;------------------------------------------------------------
                                    718 ;list                      Allocated to registers r5 r6 r7 
                                    719 ;l                         Allocated to stack - sp -2
                                    720 ;------------------------------------------------------------
                                    721 ;	../../../../core/lib/list.c:217: list_pop(list_t list)
                                    722 ;	-----------------------------------------
                                    723 ;	 function list_pop
                                    724 ;	-----------------------------------------
      000363                        725 _list_pop:
      000363 05 81            [12]  726 	inc	sp
      000365 05 81            [12]  727 	inc	sp
      000367 05 81            [12]  728 	inc	sp
                                    729 ;	../../../../core/lib/list.c:220: l = *list;
      000369 AD 82            [24]  730 	mov	r5,dpl
      00036B AE 83            [24]  731 	mov	r6,dph
      00036D AF F0            [24]  732 	mov	r7,b
      00036F 12r00r00         [24]  733 	lcall	__gptrget
      000372 FA               [12]  734 	mov	r2,a
      000373 A3               [24]  735 	inc	dptr
      000374 12r00r00         [24]  736 	lcall	__gptrget
      000377 FB               [12]  737 	mov	r3,a
      000378 A3               [24]  738 	inc	dptr
      000379 12r00r00         [24]  739 	lcall	__gptrget
      00037C FC               [12]  740 	mov	r4,a
      00037D A8 81            [24]  741 	mov	r0,sp
      00037F 18               [12]  742 	dec	r0
      000380 18               [12]  743 	dec	r0
      000381 A6 02            [24]  744 	mov	@r0,ar2
      000383 08               [12]  745 	inc	r0
      000384 A6 03            [24]  746 	mov	@r0,ar3
      000386 08               [12]  747 	inc	r0
      000387 A6 04            [24]  748 	mov	@r0,ar4
                                    749 ;	../../../../core/lib/list.c:221: if(*list != NULL) {
      000389 EA               [12]  750 	mov	a,r2
      00038A 4B               [12]  751 	orl	a,r3
      00038B 60 28            [24]  752 	jz	00102$
                                    753 ;	../../../../core/lib/list.c:222: *list = ((struct list *)*list)->next;
      00038D 8A 82            [24]  754 	mov	dpl,r2
      00038F 8B 83            [24]  755 	mov	dph,r3
      000391 8C F0            [24]  756 	mov	b,r4
      000393 12r00r00         [24]  757 	lcall	__gptrget
      000396 FA               [12]  758 	mov	r2,a
      000397 A3               [24]  759 	inc	dptr
      000398 12r00r00         [24]  760 	lcall	__gptrget
      00039B FB               [12]  761 	mov	r3,a
      00039C A3               [24]  762 	inc	dptr
      00039D 12r00r00         [24]  763 	lcall	__gptrget
      0003A0 FC               [12]  764 	mov	r4,a
      0003A1 8D 82            [24]  765 	mov	dpl,r5
      0003A3 8E 83            [24]  766 	mov	dph,r6
      0003A5 8F F0            [24]  767 	mov	b,r7
      0003A7 EA               [12]  768 	mov	a,r2
      0003A8 12r00r00         [24]  769 	lcall	__gptrput
      0003AB A3               [24]  770 	inc	dptr
      0003AC EB               [12]  771 	mov	a,r3
      0003AD 12r00r00         [24]  772 	lcall	__gptrput
      0003B0 A3               [24]  773 	inc	dptr
      0003B1 EC               [12]  774 	mov	a,r4
      0003B2 12r00r00         [24]  775 	lcall	__gptrput
      0003B5                        776 00102$:
                                    777 ;	../../../../core/lib/list.c:225: return l;
      0003B5 A8 81            [24]  778 	mov	r0,sp
      0003B7 18               [12]  779 	dec	r0
      0003B8 18               [12]  780 	dec	r0
      0003B9 86 05            [24]  781 	mov	ar5,@r0
      0003BB 08               [12]  782 	inc	r0
      0003BC 86 06            [24]  783 	mov	ar6,@r0
      0003BE 08               [12]  784 	inc	r0
      0003BF 86 07            [24]  785 	mov	ar7,@r0
      0003C1 8D 82            [24]  786 	mov	dpl,r5
      0003C3 8E 83            [24]  787 	mov	dph,r6
      0003C5 8F F0            [24]  788 	mov	b,r7
      0003C7 15 81            [12]  789 	dec	sp
      0003C9 15 81            [12]  790 	dec	sp
      0003CB 15 81            [12]  791 	dec	sp
      0003CD 02r00r00         [24]  792 	ljmp	__sdcc_banked_ret
                                    793 ;------------------------------------------------------------
                                    794 ;Allocation info for local variables in function 'list_remove'
                                    795 ;------------------------------------------------------------
                                    796 ;item                      Allocated to stack - sp -11
                                    797 ;list                      Allocated to stack - sp -5
                                    798 ;l                         Allocated to stack - sp -2
                                    799 ;r                         Allocated to registers r5 r6 r7 
                                    800 ;------------------------------------------------------------
                                    801 ;	../../../../core/lib/list.c:239: list_remove(list_t list, void *item)
                                    802 ;	-----------------------------------------
                                    803 ;	 function list_remove
                                    804 ;	-----------------------------------------
      0003D0                        805 _list_remove:
      0003D0 C0 82            [24]  806 	push	dpl
      0003D2 C0 83            [24]  807 	push	dph
      0003D4 C0 F0            [24]  808 	push	b
      0003D6 05 81            [12]  809 	inc	sp
      0003D8 05 81            [12]  810 	inc	sp
      0003DA 05 81            [12]  811 	inc	sp
                                    812 ;	../../../../core/lib/list.c:243: if(*list == NULL) {
      0003DC E5 81            [12]  813 	mov	a,sp
      0003DE 24 FB            [12]  814 	add	a,#0xfb
      0003E0 F8               [12]  815 	mov	r0,a
      0003E1 86 82            [24]  816 	mov	dpl,@r0
      0003E3 08               [12]  817 	inc	r0
      0003E4 86 83            [24]  818 	mov	dph,@r0
      0003E6 08               [12]  819 	inc	r0
      0003E7 86 F0            [24]  820 	mov	b,@r0
      0003E9 12r00r00         [24]  821 	lcall	__gptrget
      0003EC FA               [12]  822 	mov	r2,a
      0003ED A3               [24]  823 	inc	dptr
      0003EE 12r00r00         [24]  824 	lcall	__gptrget
      0003F1 FB               [12]  825 	mov	r3,a
      0003F2 A3               [24]  826 	inc	dptr
      0003F3 12r00r00         [24]  827 	lcall	__gptrget
      0003F6 FC               [12]  828 	mov	r4,a
      0003F7 EA               [12]  829 	mov	a,r2
      0003F8 4B               [12]  830 	orl	a,r3
      0003F9 70 03            [24]  831 	jnz	00102$
                                    832 ;	../../../../core/lib/list.c:244: return;
      0003FB 02r05r25         [24]  833 	ljmp	00112$
      0003FE                        834 00102$:
                                    835 ;	../../../../core/lib/list.c:247: r = NULL;
      0003FE 7D 00            [12]  836 	mov	r5,#0x00
      000400 7E 00            [12]  837 	mov	r6,#0x00
      000402 7F 00            [12]  838 	mov	r7,#0x00
                                    839 ;	../../../../core/lib/list.c:248: for(l = *list; l != NULL; l = l->next) {
      000404 A8 81            [24]  840 	mov	r0,sp
      000406 18               [12]  841 	dec	r0
      000407 18               [12]  842 	dec	r0
      000408 A6 02            [24]  843 	mov	@r0,ar2
      00040A 08               [12]  844 	inc	r0
      00040B A6 03            [24]  845 	mov	@r0,ar3
      00040D 08               [12]  846 	inc	r0
      00040E A6 04            [24]  847 	mov	@r0,ar4
      000410                        848 00110$:
      000410 A8 81            [24]  849 	mov	r0,sp
      000412 18               [12]  850 	dec	r0
      000413 18               [12]  851 	dec	r0
      000414 E4               [12]  852 	clr	a
      000415 C0 E0            [24]  853 	push	acc
      000417 E4               [12]  854 	clr	a
      000418 C0 E0            [24]  855 	push	acc
      00041A E4               [12]  856 	clr	a
      00041B C0 E0            [24]  857 	push	acc
      00041D 86 82            [24]  858 	mov	dpl,@r0
      00041F 08               [12]  859 	inc	r0
      000420 86 83            [24]  860 	mov	dph,@r0
      000422 08               [12]  861 	inc	r0
      000423 86 F0            [24]  862 	mov	b,@r0
      000425 12r00r00         [24]  863 	lcall	___gptr_cmp
      000428 15 81            [12]  864 	dec	sp
      00042A 15 81            [12]  865 	dec	sp
      00042C 15 81            [12]  866 	dec	sp
      00042E 70 03            [24]  867 	jnz	00130$
      000430 02r05r25         [24]  868 	ljmp	00112$
      000433                        869 00130$:
                                    870 ;	../../../../core/lib/list.c:249: if(l == item) {
      000433 C0 05            [24]  871 	push	ar5
      000435 C0 06            [24]  872 	push	ar6
      000437 C0 07            [24]  873 	push	ar7
      000439 E5 81            [12]  874 	mov	a,sp
      00043B 24 F2            [12]  875 	add	a,#0xf2
      00043D F8               [12]  876 	mov	r0,a
      00043E 86 05            [24]  877 	mov	ar5,@r0
      000440 08               [12]  878 	inc	r0
      000441 86 06            [24]  879 	mov	ar6,@r0
      000443 08               [12]  880 	inc	r0
      000444 86 07            [24]  881 	mov	ar7,@r0
      000446 E5 81            [12]  882 	mov	a,sp
      000448 24 FB            [12]  883 	add	a,#0xfb
      00044A F8               [12]  884 	mov	r0,a
      00044B C0 05            [24]  885 	push	ar5
      00044D C0 06            [24]  886 	push	ar6
      00044F C0 07            [24]  887 	push	ar7
      000451 86 82            [24]  888 	mov	dpl,@r0
      000453 08               [12]  889 	inc	r0
      000454 86 83            [24]  890 	mov	dph,@r0
      000456 08               [12]  891 	inc	r0
      000457 86 F0            [24]  892 	mov	b,@r0
      000459 12r00r00         [24]  893 	lcall	___gptr_cmp
      00045C 15 81            [12]  894 	dec	sp
      00045E 15 81            [12]  895 	dec	sp
      000460 15 81            [12]  896 	dec	sp
      000462 60 09            [24]  897 	jz	00132$
      000464 D0 07            [24]  898 	pop	ar7
      000466 D0 06            [24]  899 	pop	ar6
      000468 D0 05            [24]  900 	pop	ar5
      00046A 02r04rF8         [24]  901 	ljmp	00107$
      00046D                        902 00132$:
      00046D D0 07            [24]  903 	pop	ar7
      00046F D0 06            [24]  904 	pop	ar6
      000471 D0 05            [24]  905 	pop	ar5
                                    906 ;	../../../../core/lib/list.c:250: if(r == NULL) {
      000473 ED               [12]  907 	mov	a,r5
      000474 4E               [12]  908 	orl	a,r6
      000475 70 37            [24]  909 	jnz	00104$
                                    910 ;	../../../../core/lib/list.c:252: *list = l->next;
      000477 A8 81            [24]  911 	mov	r0,sp
      000479 18               [12]  912 	dec	r0
      00047A 18               [12]  913 	dec	r0
      00047B 86 82            [24]  914 	mov	dpl,@r0
      00047D 08               [12]  915 	inc	r0
      00047E 86 83            [24]  916 	mov	dph,@r0
      000480 08               [12]  917 	inc	r0
      000481 86 F0            [24]  918 	mov	b,@r0
      000483 12r00r00         [24]  919 	lcall	__gptrget
      000486 FA               [12]  920 	mov	r2,a
      000487 A3               [24]  921 	inc	dptr
      000488 12r00r00         [24]  922 	lcall	__gptrget
      00048B FB               [12]  923 	mov	r3,a
      00048C A3               [24]  924 	inc	dptr
      00048D 12r00r00         [24]  925 	lcall	__gptrget
      000490 FC               [12]  926 	mov	r4,a
      000491 E5 81            [12]  927 	mov	a,sp
      000493 24 FB            [12]  928 	add	a,#0xfb
      000495 F8               [12]  929 	mov	r0,a
      000496 86 82            [24]  930 	mov	dpl,@r0
      000498 08               [12]  931 	inc	r0
      000499 86 83            [24]  932 	mov	dph,@r0
      00049B 08               [12]  933 	inc	r0
      00049C 86 F0            [24]  934 	mov	b,@r0
      00049E EA               [12]  935 	mov	a,r2
      00049F 12r00r00         [24]  936 	lcall	__gptrput
      0004A2 A3               [24]  937 	inc	dptr
      0004A3 EB               [12]  938 	mov	a,r3
      0004A4 12r00r00         [24]  939 	lcall	__gptrput
      0004A7 A3               [24]  940 	inc	dptr
      0004A8 EC               [12]  941 	mov	a,r4
      0004A9 12r00r00         [24]  942 	lcall	__gptrput
      0004AC 80 2E            [24]  943 	sjmp	00105$
      0004AE                        944 00104$:
                                    945 ;	../../../../core/lib/list.c:255: r->next = l->next;
      0004AE A8 81            [24]  946 	mov	r0,sp
      0004B0 18               [12]  947 	dec	r0
      0004B1 18               [12]  948 	dec	r0
      0004B2 86 82            [24]  949 	mov	dpl,@r0
      0004B4 08               [12]  950 	inc	r0
      0004B5 86 83            [24]  951 	mov	dph,@r0
      0004B7 08               [12]  952 	inc	r0
      0004B8 86 F0            [24]  953 	mov	b,@r0
      0004BA 12r00r00         [24]  954 	lcall	__gptrget
      0004BD FA               [12]  955 	mov	r2,a
      0004BE A3               [24]  956 	inc	dptr
      0004BF 12r00r00         [24]  957 	lcall	__gptrget
      0004C2 FB               [12]  958 	mov	r3,a
      0004C3 A3               [24]  959 	inc	dptr
      0004C4 12r00r00         [24]  960 	lcall	__gptrget
      0004C7 FC               [12]  961 	mov	r4,a
      0004C8 8D 82            [24]  962 	mov	dpl,r5
      0004CA 8E 83            [24]  963 	mov	dph,r6
      0004CC 8F F0            [24]  964 	mov	b,r7
      0004CE EA               [12]  965 	mov	a,r2
      0004CF 12r00r00         [24]  966 	lcall	__gptrput
      0004D2 A3               [24]  967 	inc	dptr
      0004D3 EB               [12]  968 	mov	a,r3
      0004D4 12r00r00         [24]  969 	lcall	__gptrput
      0004D7 A3               [24]  970 	inc	dptr
      0004D8 EC               [12]  971 	mov	a,r4
      0004D9 12r00r00         [24]  972 	lcall	__gptrput
      0004DC                        973 00105$:
                                    974 ;	../../../../core/lib/list.c:257: l->next = NULL;
      0004DC A8 81            [24]  975 	mov	r0,sp
      0004DE 18               [12]  976 	dec	r0
      0004DF 18               [12]  977 	dec	r0
      0004E0 86 82            [24]  978 	mov	dpl,@r0
      0004E2 08               [12]  979 	inc	r0
      0004E3 86 83            [24]  980 	mov	dph,@r0
      0004E5 08               [12]  981 	inc	r0
      0004E6 86 F0            [24]  982 	mov	b,@r0
      0004E8 E4               [12]  983 	clr	a
      0004E9 12r00r00         [24]  984 	lcall	__gptrput
      0004EC A3               [24]  985 	inc	dptr
      0004ED E4               [12]  986 	clr	a
      0004EE 12r00r00         [24]  987 	lcall	__gptrput
      0004F1 A3               [24]  988 	inc	dptr
      0004F2 E4               [12]  989 	clr	a
      0004F3 12r00r00         [24]  990 	lcall	__gptrput
                                    991 ;	../../../../core/lib/list.c:258: return;
      0004F6 80 2D            [24]  992 	sjmp	00112$
      0004F8                        993 00107$:
                                    994 ;	../../../../core/lib/list.c:260: r = l;
      0004F8 A8 81            [24]  995 	mov	r0,sp
      0004FA 18               [12]  996 	dec	r0
      0004FB 18               [12]  997 	dec	r0
      0004FC 86 05            [24]  998 	mov	ar5,@r0
      0004FE 08               [12]  999 	inc	r0
      0004FF 86 06            [24] 1000 	mov	ar6,@r0
      000501 08               [12] 1001 	inc	r0
      000502 86 07            [24] 1002 	mov	ar7,@r0
                                   1003 ;	../../../../core/lib/list.c:248: for(l = *list; l != NULL; l = l->next) {
      000504 A8 81            [24] 1004 	mov	r0,sp
      000506 18               [12] 1005 	dec	r0
      000507 18               [12] 1006 	dec	r0
      000508 86 82            [24] 1007 	mov	dpl,@r0
      00050A 08               [12] 1008 	inc	r0
      00050B 86 83            [24] 1009 	mov	dph,@r0
      00050D 08               [12] 1010 	inc	r0
      00050E 86 F0            [24] 1011 	mov	b,@r0
      000510 12r00r00         [24] 1012 	lcall	__gptrget
      000513 18               [12] 1013 	dec	r0
      000514 18               [12] 1014 	dec	r0
      000515 F6               [12] 1015 	mov	@r0,a
      000516 A3               [24] 1016 	inc	dptr
      000517 12r00r00         [24] 1017 	lcall	__gptrget
      00051A 08               [12] 1018 	inc	r0
      00051B F6               [12] 1019 	mov	@r0,a
      00051C A3               [24] 1020 	inc	dptr
      00051D 12r00r00         [24] 1021 	lcall	__gptrget
      000520 08               [12] 1022 	inc	r0
      000521 F6               [12] 1023 	mov	@r0,a
      000522 02r04r10         [24] 1024 	ljmp	00110$
      000525                       1025 00112$:
      000525 E5 81            [12] 1026 	mov	a,sp
      000527 24 FA            [12] 1027 	add	a,#0xFA
      000529 F5 81            [12] 1028 	mov	sp,a
      00052B 02r00r00         [24] 1029 	ljmp	__sdcc_banked_ret
                                   1030 ;------------------------------------------------------------
                                   1031 ;Allocation info for local variables in function 'list_length'
                                   1032 ;------------------------------------------------------------
                                   1033 ;list                      Allocated to registers r5 r6 r7 
                                   1034 ;l                         Allocated to registers r5 r6 r7 
                                   1035 ;n                         Allocated to registers r3 r4 
                                   1036 ;------------------------------------------------------------
                                   1037 ;	../../../../core/lib/list.c:274: list_length(list_t list)
                                   1038 ;	-----------------------------------------
                                   1039 ;	 function list_length
                                   1040 ;	-----------------------------------------
      00052E                       1041 _list_length:
                                   1042 ;	../../../../core/lib/list.c:279: for(l = *list; l != NULL; l = l->next) {
      00052E 12r00r00         [24] 1043 	lcall	__gptrget
      000531 FD               [12] 1044 	mov	r5,a
      000532 A3               [24] 1045 	inc	dptr
      000533 12r00r00         [24] 1046 	lcall	__gptrget
      000536 FE               [12] 1047 	mov	r6,a
      000537 A3               [24] 1048 	inc	dptr
      000538 12r00r00         [24] 1049 	lcall	__gptrget
      00053B FF               [12] 1050 	mov	r7,a
      00053C 7B 00            [12] 1051 	mov	r3,#0x00
      00053E 7C 00            [12] 1052 	mov	r4,#0x00
      000540                       1053 00103$:
      000540 E4               [12] 1054 	clr	a
      000541 C0 E0            [24] 1055 	push	acc
      000543 E4               [12] 1056 	clr	a
      000544 C0 E0            [24] 1057 	push	acc
      000546 E4               [12] 1058 	clr	a
      000547 C0 E0            [24] 1059 	push	acc
      000549 8D 82            [24] 1060 	mov	dpl,r5
      00054B 8E 83            [24] 1061 	mov	dph,r6
      00054D 8F F0            [24] 1062 	mov	b,r7
      00054F 12r00r00         [24] 1063 	lcall	___gptr_cmp
      000552 15 81            [12] 1064 	dec	sp
      000554 15 81            [12] 1065 	dec	sp
      000556 15 81            [12] 1066 	dec	sp
      000558 60 1B            [24] 1067 	jz	00101$
                                   1068 ;	../../../../core/lib/list.c:280: ++n;
      00055A 0B               [12] 1069 	inc	r3
      00055B BB 00 01         [24] 1070 	cjne	r3,#0x00,00115$
      00055E 0C               [12] 1071 	inc	r4
      00055F                       1072 00115$:
                                   1073 ;	../../../../core/lib/list.c:279: for(l = *list; l != NULL; l = l->next) {
      00055F 8D 82            [24] 1074 	mov	dpl,r5
      000561 8E 83            [24] 1075 	mov	dph,r6
      000563 8F F0            [24] 1076 	mov	b,r7
      000565 12r00r00         [24] 1077 	lcall	__gptrget
      000568 FD               [12] 1078 	mov	r5,a
      000569 A3               [24] 1079 	inc	dptr
      00056A 12r00r00         [24] 1080 	lcall	__gptrget
      00056D FE               [12] 1081 	mov	r6,a
      00056E A3               [24] 1082 	inc	dptr
      00056F 12r00r00         [24] 1083 	lcall	__gptrget
      000572 FF               [12] 1084 	mov	r7,a
      000573 80 CB            [24] 1085 	sjmp	00103$
      000575                       1086 00101$:
                                   1087 ;	../../../../core/lib/list.c:283: return n;
      000575 8B 82            [24] 1088 	mov	dpl,r3
      000577 8C 83            [24] 1089 	mov	dph,r4
      000579 02r00r00         [24] 1090 	ljmp	__sdcc_banked_ret
                                   1091 ;------------------------------------------------------------
                                   1092 ;Allocation info for local variables in function 'list_insert'
                                   1093 ;------------------------------------------------------------
                                   1094 ;previtem                  Allocated to stack - sp -8
                                   1095 ;newitem                   Allocated to stack - sp -11
                                   1096 ;list                      Allocated to registers r5 r6 r7 
                                   1097 ;sloc0                     Allocated to stack - sp -2
                                   1098 ;------------------------------------------------------------
                                   1099 ;	../../../../core/lib/list.c:302: list_insert(list_t list, void *previtem, void *newitem)
                                   1100 ;	-----------------------------------------
                                   1101 ;	 function list_insert
                                   1102 ;	-----------------------------------------
      00057C                       1103 _list_insert:
      00057C 05 81            [12] 1104 	inc	sp
      00057E 05 81            [12] 1105 	inc	sp
      000580 05 81            [12] 1106 	inc	sp
      000582 AD 82            [24] 1107 	mov	r5,dpl
      000584 AE 83            [24] 1108 	mov	r6,dph
      000586 AF F0            [24] 1109 	mov	r7,b
                                   1110 ;	../../../../core/lib/list.c:304: if(previtem == NULL) {
      000588 E5 81            [12] 1111 	mov	a,sp
      00058A 24 F8            [12] 1112 	add	a,#0xf8
      00058C F8               [12] 1113 	mov	r0,a
      00058D E6               [12] 1114 	mov	a,@r0
      00058E 08               [12] 1115 	inc	r0
      00058F 46               [12] 1116 	orl	a,@r0
      000590 70 27            [24] 1117 	jnz	00102$
                                   1118 ;	../../../../core/lib/list.c:305: list_push(list, newitem);
      000592 E5 81            [12] 1119 	mov	a,sp
      000594 24 F5            [12] 1120 	add	a,#0xf5
      000596 F8               [12] 1121 	mov	r0,a
      000597 E6               [12] 1122 	mov	a,@r0
      000598 C0 E0            [24] 1123 	push	acc
      00059A 08               [12] 1124 	inc	r0
      00059B E6               [12] 1125 	mov	a,@r0
      00059C C0 E0            [24] 1126 	push	acc
      00059E 08               [12] 1127 	inc	r0
      00059F E6               [12] 1128 	mov	a,@r0
      0005A0 C0 E0            [24] 1129 	push	acc
      0005A2 8D 82            [24] 1130 	mov	dpl,r5
      0005A4 8E 83            [24] 1131 	mov	dph,r6
      0005A6 8F F0            [24] 1132 	mov	b,r7
      0005A8 78r82            [12] 1133 	mov	r0,#_list_push
      0005AA 79s01            [12] 1134 	mov	r1,#(_list_push >> 8)
      0005AC 7As00            [12] 1135 	mov	r2,#(_list_push >> 16)
      0005AE 12r00r00         [24] 1136 	lcall	__sdcc_banked_call
      0005B1 15 81            [12] 1137 	dec	sp
      0005B3 15 81            [12] 1138 	dec	sp
      0005B5 15 81            [12] 1139 	dec	sp
      0005B7 80 6F            [24] 1140 	sjmp	00104$
      0005B9                       1141 00102$:
                                   1142 ;	../../../../core/lib/list.c:308: ((struct list *)newitem)->next = ((struct list *)previtem)->next;
      0005B9 E5 81            [12] 1143 	mov	a,sp
      0005BB 24 F5            [12] 1144 	add	a,#0xf5
      0005BD F8               [12] 1145 	mov	r0,a
      0005BE A9 81            [24] 1146 	mov	r1,sp
      0005C0 19               [12] 1147 	dec	r1
      0005C1 19               [12] 1148 	dec	r1
      0005C2 E6               [12] 1149 	mov	a,@r0
      0005C3 F7               [12] 1150 	mov	@r1,a
      0005C4 08               [12] 1151 	inc	r0
      0005C5 09               [12] 1152 	inc	r1
      0005C6 E6               [12] 1153 	mov	a,@r0
      0005C7 F7               [12] 1154 	mov	@r1,a
      0005C8 08               [12] 1155 	inc	r0
      0005C9 09               [12] 1156 	inc	r1
      0005CA E6               [12] 1157 	mov	a,@r0
      0005CB F7               [12] 1158 	mov	@r1,a
      0005CC E5 81            [12] 1159 	mov	a,sp
      0005CE 24 F8            [12] 1160 	add	a,#0xf8
      0005D0 F8               [12] 1161 	mov	r0,a
      0005D1 86 02            [24] 1162 	mov	ar2,@r0
      0005D3 08               [12] 1163 	inc	r0
      0005D4 86 03            [24] 1164 	mov	ar3,@r0
      0005D6 08               [12] 1165 	inc	r0
      0005D7 86 04            [24] 1166 	mov	ar4,@r0
      0005D9 8A 82            [24] 1167 	mov	dpl,r2
      0005DB 8B 83            [24] 1168 	mov	dph,r3
      0005DD 8C F0            [24] 1169 	mov	b,r4
      0005DF 12r00r00         [24] 1170 	lcall	__gptrget
      0005E2 FD               [12] 1171 	mov	r5,a
      0005E3 A3               [24] 1172 	inc	dptr
      0005E4 12r00r00         [24] 1173 	lcall	__gptrget
      0005E7 FE               [12] 1174 	mov	r6,a
      0005E8 A3               [24] 1175 	inc	dptr
      0005E9 12r00r00         [24] 1176 	lcall	__gptrget
      0005EC FF               [12] 1177 	mov	r7,a
      0005ED A8 81            [24] 1178 	mov	r0,sp
      0005EF 18               [12] 1179 	dec	r0
      0005F0 18               [12] 1180 	dec	r0
      0005F1 86 82            [24] 1181 	mov	dpl,@r0
      0005F3 08               [12] 1182 	inc	r0
      0005F4 86 83            [24] 1183 	mov	dph,@r0
      0005F6 08               [12] 1184 	inc	r0
      0005F7 86 F0            [24] 1185 	mov	b,@r0
      0005F9 ED               [12] 1186 	mov	a,r5
      0005FA 12r00r00         [24] 1187 	lcall	__gptrput
      0005FD A3               [24] 1188 	inc	dptr
      0005FE EE               [12] 1189 	mov	a,r6
      0005FF 12r00r00         [24] 1190 	lcall	__gptrput
      000602 A3               [24] 1191 	inc	dptr
      000603 EF               [12] 1192 	mov	a,r7
      000604 12r00r00         [24] 1193 	lcall	__gptrput
                                   1194 ;	../../../../core/lib/list.c:309: ((struct list *)previtem)->next = newitem;
      000607 E5 81            [12] 1195 	mov	a,sp
      000609 24 F5            [12] 1196 	add	a,#0xf5
      00060B F8               [12] 1197 	mov	r0,a
      00060C 86 05            [24] 1198 	mov	ar5,@r0
      00060E 08               [12] 1199 	inc	r0
      00060F 86 06            [24] 1200 	mov	ar6,@r0
      000611 08               [12] 1201 	inc	r0
      000612 86 07            [24] 1202 	mov	ar7,@r0
      000614 8A 82            [24] 1203 	mov	dpl,r2
      000616 8B 83            [24] 1204 	mov	dph,r3
      000618 8C F0            [24] 1205 	mov	b,r4
      00061A ED               [12] 1206 	mov	a,r5
      00061B 12r00r00         [24] 1207 	lcall	__gptrput
      00061E A3               [24] 1208 	inc	dptr
      00061F EE               [12] 1209 	mov	a,r6
      000620 12r00r00         [24] 1210 	lcall	__gptrput
      000623 A3               [24] 1211 	inc	dptr
      000624 EF               [12] 1212 	mov	a,r7
      000625 12r00r00         [24] 1213 	lcall	__gptrput
      000628                       1214 00104$:
      000628 15 81            [12] 1215 	dec	sp
      00062A 15 81            [12] 1216 	dec	sp
      00062C 15 81            [12] 1217 	dec	sp
      00062E 02r00r00         [24] 1218 	ljmp	__sdcc_banked_ret
                                   1219 ;------------------------------------------------------------
                                   1220 ;Allocation info for local variables in function 'list_item_next'
                                   1221 ;------------------------------------------------------------
                                   1222 ;item                      Allocated to registers r5 r6 r7 
                                   1223 ;------------------------------------------------------------
                                   1224 ;	../../../../core/lib/list.c:324: list_item_next(void *item)
                                   1225 ;	-----------------------------------------
                                   1226 ;	 function list_item_next
                                   1227 ;	-----------------------------------------
      000631                       1228 _list_item_next:
      000631 AD 82            [24] 1229 	mov	r5,dpl
      000633 AE 83            [24] 1230 	mov	r6,dph
      000635 AF F0            [24] 1231 	mov	r7,b
                                   1232 ;	../../../../core/lib/list.c:326: return item == NULL? NULL: ((struct list *)item)->next;
      000637 ED               [12] 1233 	mov	a,r5
      000638 4E               [12] 1234 	orl	a,r6
      000639 B4 01 00         [24] 1235 	cjne	a,#0x01,00108$
      00063C                       1236 00108$:
      00063C E4               [12] 1237 	clr	a
      00063D 33               [12] 1238 	rlc	a
      00063E FC               [12] 1239 	mov	r4,a
      00063F 60 08            [24] 1240 	jz	00103$
      000641 7A 00            [12] 1241 	mov	r2,#0x00
      000643 7B 00            [12] 1242 	mov	r3,#0x00
      000645 7C 00            [12] 1243 	mov	r4,#0x00
      000647 80 14            [24] 1244 	sjmp	00104$
      000649                       1245 00103$:
      000649 8D 82            [24] 1246 	mov	dpl,r5
      00064B 8E 83            [24] 1247 	mov	dph,r6
      00064D 8F F0            [24] 1248 	mov	b,r7
      00064F 12r00r00         [24] 1249 	lcall	__gptrget
      000652 FA               [12] 1250 	mov	r2,a
      000653 A3               [24] 1251 	inc	dptr
      000654 12r00r00         [24] 1252 	lcall	__gptrget
      000657 FB               [12] 1253 	mov	r3,a
      000658 A3               [24] 1254 	inc	dptr
      000659 12r00r00         [24] 1255 	lcall	__gptrget
      00065C FC               [12] 1256 	mov	r4,a
      00065D                       1257 00104$:
      00065D 8A 82            [24] 1258 	mov	dpl,r2
      00065F 8B 83            [24] 1259 	mov	dph,r3
      000661 8C F0            [24] 1260 	mov	b,r4
      000663 02r00r00         [24] 1261 	ljmp	__sdcc_banked_ret
                                   1262 	.area CSEG    (CODE)
                                   1263 	.area CONST   (CODE)
                                   1264 	.area XINIT   (CODE)
                                   1265 	.area CABS    (ABS,CODE)
