                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8804 (Aug  6 2013) (Linux)
                                      4 ; This file was generated Mon Aug 25 04:16:26 2014
                                      5 ;--------------------------------------------------------
                                      6 	.module autostart
                                      7 	.optsdcc -mmcs51 --model-huge
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _process_exit
                                     13 	.globl _process_start
                                     14 	.globl _autostart_start
                                     15 	.globl _autostart_exit
                                     16 ;--------------------------------------------------------
                                     17 ; special function registers
                                     18 ;--------------------------------------------------------
                                     19 	.area RSEG    (ABS,DATA)
      000000                         20 	.org 0x0000
                                     21 ;--------------------------------------------------------
                                     22 ; special function bits
                                     23 ;--------------------------------------------------------
                                     24 	.area RSEG    (ABS,DATA)
      000000                         25 	.org 0x0000
                                     26 ;--------------------------------------------------------
                                     27 ; overlayable register banks
                                     28 ;--------------------------------------------------------
                                     29 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         30 	.ds 8
                                     31 ;--------------------------------------------------------
                                     32 ; internal ram data
                                     33 ;--------------------------------------------------------
                                     34 	.area DSEG    (DATA)
                                     35 ;--------------------------------------------------------
                                     36 ; overlayable items in internal ram 
                                     37 ;--------------------------------------------------------
                                     38 ;--------------------------------------------------------
                                     39 ; indirectly addressable internal ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area ISEG    (DATA)
                                     42 ;--------------------------------------------------------
                                     43 ; absolute internal ram data
                                     44 ;--------------------------------------------------------
                                     45 	.area IABS    (ABS,DATA)
                                     46 	.area IABS    (ABS,DATA)
                                     47 ;--------------------------------------------------------
                                     48 ; bit data
                                     49 ;--------------------------------------------------------
                                     50 	.area BSEG    (BIT)
                                     51 ;--------------------------------------------------------
                                     52 ; paged external ram data
                                     53 ;--------------------------------------------------------
                                     54 	.area PSEG    (PAG,XDATA)
                                     55 ;--------------------------------------------------------
                                     56 ; external ram data
                                     57 ;--------------------------------------------------------
                                     58 	.area XSEG    (XDATA)
                                     59 ;--------------------------------------------------------
                                     60 ; absolute external ram data
                                     61 ;--------------------------------------------------------
                                     62 	.area XABS    (ABS,XDATA)
                                     63 ;--------------------------------------------------------
                                     64 ; external initialized ram data
                                     65 ;--------------------------------------------------------
                                     66 	.area XISEG   (XDATA)
                                     67 	.area HOME    (CODE)
                                     68 	.area GSINIT0 (CODE)
                                     69 	.area GSINIT1 (CODE)
                                     70 	.area GSINIT2 (CODE)
                                     71 	.area GSINIT3 (CODE)
                                     72 	.area GSINIT4 (CODE)
                                     73 	.area GSINIT5 (CODE)
                                     74 	.area GSINIT  (CODE)
                                     75 	.area GSFINAL (CODE)
                                     76 	.area CSEG    (CODE)
                                     77 ;--------------------------------------------------------
                                     78 ; global & static initialisations
                                     79 ;--------------------------------------------------------
                                     80 	.area HOME    (CODE)
                                     81 	.area GSINIT  (CODE)
                                     82 	.area GSFINAL (CODE)
                                     83 	.area GSINIT  (CODE)
                                     84 ;--------------------------------------------------------
                                     85 ; Home
                                     86 ;--------------------------------------------------------
                                     87 	.area HOME    (CODE)
                                     88 	.area HOME    (CODE)
                                     89 ;--------------------------------------------------------
                                     90 ; code
                                     91 ;--------------------------------------------------------
                                     92 	.area BANK1   (CODE)
                                     93 ;------------------------------------------------------------
                                     94 ;Allocation info for local variables in function 'autostart_start'
                                     95 ;------------------------------------------------------------
                                     96 ;processes                 Allocated to registers r5 r6 r7 
                                     97 ;i                         Allocated to registers 
                                     98 ;------------------------------------------------------------
                                     99 ;	../../../../core/sys/autostart.c:52: autostart_start(struct process * const processes[])
                                    100 ;	-----------------------------------------
                                    101 ;	 function autostart_start
                                    102 ;	-----------------------------------------
      000000                        103 _autostart_start:
                           000007   104 	ar7 = 0x07
                           000006   105 	ar6 = 0x06
                           000005   106 	ar5 = 0x05
                           000004   107 	ar4 = 0x04
                           000003   108 	ar3 = 0x03
                           000002   109 	ar2 = 0x02
                           000001   110 	ar1 = 0x01
                           000000   111 	ar0 = 0x00
      000000 AD 82            [24]  112 	mov	r5,dpl
      000002 AE 83            [24]  113 	mov	r6,dph
      000004 AF F0            [24]  114 	mov	r7,b
                                    115 ;	../../../../core/sys/autostart.c:56: for(i = 0; processes[i] != NULL; ++i) {
      000006 E5 81            [12]  116 	mov	a,sp
      000008 24 04            [12]  117 	add	a,#0x04
      00000A F8               [12]  118 	mov	r0,a
      00000B E4               [12]  119 	clr	a
      00000C F6               [12]  120 	mov	@r0,a
      00000D 08               [12]  121 	inc	r0
      00000E F6               [12]  122 	mov	@r0,a
      00000F 7B 00            [12]  123 	mov	r3,#0x00
      000011 7C 00            [12]  124 	mov	r4,#0x00
      000013                        125 00103$:
      000013 EB               [12]  126 	mov	a,r3
      000014 2D               [12]  127 	add	a,r5
      000015 F8               [12]  128 	mov	r0,a
      000016 EC               [12]  129 	mov	a,r4
      000017 3E               [12]  130 	addc	a,r6
      000018 F9               [12]  131 	mov	r1,a
      000019 8F 02            [24]  132 	mov	ar2,r7
      00001B 88 82            [24]  133 	mov	dpl,r0
      00001D 89 83            [24]  134 	mov	dph,r1
      00001F 8A F0            [24]  135 	mov	b,r2
      000021 12r00r00         [24]  136 	lcall	__gptrget
      000024 F8               [12]  137 	mov	r0,a
      000025 A3               [24]  138 	inc	dptr
      000026 12r00r00         [24]  139 	lcall	__gptrget
      000029 F9               [12]  140 	mov	r1,a
      00002A A3               [24]  141 	inc	dptr
      00002B 12r00r00         [24]  142 	lcall	__gptrget
      00002E FA               [12]  143 	mov	r2,a
      00002F E4               [12]  144 	clr	a
      000030 C0 E0            [24]  145 	push	acc
      000032 E4               [12]  146 	clr	a
      000033 C0 E0            [24]  147 	push	acc
      000035 E4               [12]  148 	clr	a
      000036 C0 E0            [24]  149 	push	acc
      000038 88 82            [24]  150 	mov	dpl,r0
      00003A 89 83            [24]  151 	mov	dph,r1
      00003C 8A F0            [24]  152 	mov	b,r2
      00003E 12r00r00         [24]  153 	lcall	___gptr_cmp
      000041 15 81            [12]  154 	dec	sp
      000043 15 81            [12]  155 	dec	sp
      000045 15 81            [12]  156 	dec	sp
      000047 60 39            [24]  157 	jz	00105$
                                    158 ;	../../../../core/sys/autostart.c:57: process_start(processes[i], NULL);
      000049 C0 07            [24]  159 	push	ar7
      00004B C0 06            [24]  160 	push	ar6
      00004D C0 05            [24]  161 	push	ar5
      00004F C0 04            [24]  162 	push	ar4
      000051 C0 03            [24]  163 	push	ar3
      000053 E4               [12]  164 	clr	a
      000054 C0 E0            [24]  165 	push	acc
      000056 C0 E0            [24]  166 	push	acc
      000058 C0 E0            [24]  167 	push	acc
      00005A 88 82            [24]  168 	mov	dpl,r0
      00005C 89 83            [24]  169 	mov	dph,r1
      00005E 8A F0            [24]  170 	mov	b,r2
      000060 78r00            [12]  171 	mov	r0,#_process_start
      000062 79s00            [12]  172 	mov	r1,#(_process_start >> 8)
      000064 7As00            [12]  173 	mov	r2,#(_process_start >> 16)
      000066 12r00r00         [24]  174 	lcall	__sdcc_banked_call
      000069 15 81            [12]  175 	dec	sp
      00006B 15 81            [12]  176 	dec	sp
      00006D 15 81            [12]  177 	dec	sp
      00006F D0 03            [24]  178 	pop	ar3
      000071 D0 04            [24]  179 	pop	ar4
      000073 D0 05            [24]  180 	pop	ar5
      000075 D0 06            [24]  181 	pop	ar6
      000077 D0 07            [24]  182 	pop	ar7
                                    183 ;	../../../../core/sys/autostart.c:56: for(i = 0; processes[i] != NULL; ++i) {
      000079 74 03            [12]  184 	mov	a,#0x03
      00007B 2B               [12]  185 	add	a,r3
      00007C FB               [12]  186 	mov	r3,a
      00007D E4               [12]  187 	clr	a
      00007E 3C               [12]  188 	addc	a,r4
      00007F FC               [12]  189 	mov	r4,a
      000080 80 91            [24]  190 	sjmp	00103$
      000082                        191 00105$:
      000082 02r00r00         [24]  192 	ljmp	__sdcc_banked_ret
                                    193 ;------------------------------------------------------------
                                    194 ;Allocation info for local variables in function 'autostart_exit'
                                    195 ;------------------------------------------------------------
                                    196 ;processes                 Allocated to registers r5 r6 r7 
                                    197 ;i                         Allocated to registers 
                                    198 ;------------------------------------------------------------
                                    199 ;	../../../../core/sys/autostart.c:63: autostart_exit(struct process * const processes[])
                                    200 ;	-----------------------------------------
                                    201 ;	 function autostart_exit
                                    202 ;	-----------------------------------------
      000085                        203 _autostart_exit:
      000085 AD 82            [24]  204 	mov	r5,dpl
      000087 AE 83            [24]  205 	mov	r6,dph
      000089 AF F0            [24]  206 	mov	r7,b
                                    207 ;	../../../../core/sys/autostart.c:67: for(i = 0; processes[i] != NULL; ++i) {
      00008B E5 81            [12]  208 	mov	a,sp
      00008D 24 04            [12]  209 	add	a,#0x04
      00008F F8               [12]  210 	mov	r0,a
      000090 E4               [12]  211 	clr	a
      000091 F6               [12]  212 	mov	@r0,a
      000092 08               [12]  213 	inc	r0
      000093 F6               [12]  214 	mov	@r0,a
      000094 7B 00            [12]  215 	mov	r3,#0x00
      000096 7C 00            [12]  216 	mov	r4,#0x00
      000098                        217 00103$:
      000098 EB               [12]  218 	mov	a,r3
      000099 2D               [12]  219 	add	a,r5
      00009A F8               [12]  220 	mov	r0,a
      00009B EC               [12]  221 	mov	a,r4
      00009C 3E               [12]  222 	addc	a,r6
      00009D F9               [12]  223 	mov	r1,a
      00009E 8F 02            [24]  224 	mov	ar2,r7
      0000A0 88 82            [24]  225 	mov	dpl,r0
      0000A2 89 83            [24]  226 	mov	dph,r1
      0000A4 8A F0            [24]  227 	mov	b,r2
      0000A6 12r00r00         [24]  228 	lcall	__gptrget
      0000A9 F8               [12]  229 	mov	r0,a
      0000AA A3               [24]  230 	inc	dptr
      0000AB 12r00r00         [24]  231 	lcall	__gptrget
      0000AE F9               [12]  232 	mov	r1,a
      0000AF A3               [24]  233 	inc	dptr
      0000B0 12r00r00         [24]  234 	lcall	__gptrget
      0000B3 FA               [12]  235 	mov	r2,a
      0000B4 E4               [12]  236 	clr	a
      0000B5 C0 E0            [24]  237 	push	acc
      0000B7 E4               [12]  238 	clr	a
      0000B8 C0 E0            [24]  239 	push	acc
      0000BA E4               [12]  240 	clr	a
      0000BB C0 E0            [24]  241 	push	acc
      0000BD 88 82            [24]  242 	mov	dpl,r0
      0000BF 89 83            [24]  243 	mov	dph,r1
      0000C1 8A F0            [24]  244 	mov	b,r2
      0000C3 12r00r00         [24]  245 	lcall	___gptr_cmp
      0000C6 15 81            [12]  246 	dec	sp
      0000C8 15 81            [12]  247 	dec	sp
      0000CA 15 81            [12]  248 	dec	sp
      0000CC 60 2C            [24]  249 	jz	00105$
                                    250 ;	../../../../core/sys/autostart.c:68: process_exit(processes[i]);
      0000CE 88 82            [24]  251 	mov	dpl,r0
      0000D0 89 83            [24]  252 	mov	dph,r1
      0000D2 8A F0            [24]  253 	mov	b,r2
      0000D4 C0 07            [24]  254 	push	ar7
      0000D6 C0 06            [24]  255 	push	ar6
      0000D8 C0 05            [24]  256 	push	ar5
      0000DA C0 04            [24]  257 	push	ar4
      0000DC C0 03            [24]  258 	push	ar3
      0000DE 78r00            [12]  259 	mov	r0,#_process_exit
      0000E0 79s00            [12]  260 	mov	r1,#(_process_exit >> 8)
      0000E2 7As00            [12]  261 	mov	r2,#(_process_exit >> 16)
      0000E4 12r00r00         [24]  262 	lcall	__sdcc_banked_call
      0000E7 D0 03            [24]  263 	pop	ar3
      0000E9 D0 04            [24]  264 	pop	ar4
      0000EB D0 05            [24]  265 	pop	ar5
      0000ED D0 06            [24]  266 	pop	ar6
      0000EF D0 07            [24]  267 	pop	ar7
                                    268 ;	../../../../core/sys/autostart.c:67: for(i = 0; processes[i] != NULL; ++i) {
      0000F1 74 03            [12]  269 	mov	a,#0x03
      0000F3 2B               [12]  270 	add	a,r3
      0000F4 FB               [12]  271 	mov	r3,a
      0000F5 E4               [12]  272 	clr	a
      0000F6 3C               [12]  273 	addc	a,r4
      0000F7 FC               [12]  274 	mov	r4,a
      0000F8 80 9E            [24]  275 	sjmp	00103$
      0000FA                        276 00105$:
      0000FA 02r00r00         [24]  277 	ljmp	__sdcc_banked_ret
                                    278 	.area CSEG    (CODE)
                                    279 	.area CONST   (CODE)
                                    280 	.area XINIT   (CODE)
                                    281 	.area CABS    (ABS,CODE)
