                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8804 (Aug  6 2013) (Linux)
                                      4 ; This file was generated Mon Aug 25 04:16:29 2014
                                      5 ;--------------------------------------------------------
                                      6 	.module mmem
                                      7 	.optsdcc -mmcs51 --model-huge
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _memmove
                                     13 	.globl _list_remove
                                     14 	.globl _list_add
                                     15 	.globl _list_init
                                     16 	.globl _avail_memory
                                     17 	.globl _mmem_alloc
                                     18 	.globl _mmem_free
                                     19 	.globl _mmem_init
                                     20 ;--------------------------------------------------------
                                     21 ; special function registers
                                     22 ;--------------------------------------------------------
                                     23 	.area RSEG    (ABS,DATA)
      000000                         24 	.org 0x0000
                                     25 ;--------------------------------------------------------
                                     26 ; special function bits
                                     27 ;--------------------------------------------------------
                                     28 	.area RSEG    (ABS,DATA)
      000000                         29 	.org 0x0000
                                     30 ;--------------------------------------------------------
                                     31 ; overlayable register banks
                                     32 ;--------------------------------------------------------
                                     33 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         34 	.ds 8
                                     35 ;--------------------------------------------------------
                                     36 ; internal ram data
                                     37 ;--------------------------------------------------------
                                     38 	.area DSEG    (DATA)
                                     39 ;--------------------------------------------------------
                                     40 ; overlayable items in internal ram 
                                     41 ;--------------------------------------------------------
                                     42 ;--------------------------------------------------------
                                     43 ; indirectly addressable internal ram data
                                     44 ;--------------------------------------------------------
                                     45 	.area ISEG    (DATA)
                                     46 ;--------------------------------------------------------
                                     47 ; absolute internal ram data
                                     48 ;--------------------------------------------------------
                                     49 	.area IABS    (ABS,DATA)
                                     50 	.area IABS    (ABS,DATA)
                                     51 ;--------------------------------------------------------
                                     52 ; bit data
                                     53 ;--------------------------------------------------------
                                     54 	.area BSEG    (BIT)
                                     55 ;--------------------------------------------------------
                                     56 ; paged external ram data
                                     57 ;--------------------------------------------------------
                                     58 	.area PSEG    (PAG,XDATA)
                                     59 ;--------------------------------------------------------
                                     60 ; external ram data
                                     61 ;--------------------------------------------------------
                                     62 	.area XSEG    (XDATA)
      000000                         63 _avail_memory::
      000000                         64 	.ds 2
      000002                         65 _memory:
      000002                         66 	.ds 4096
                                     67 ;--------------------------------------------------------
                                     68 ; absolute external ram data
                                     69 ;--------------------------------------------------------
                                     70 	.area XABS    (ABS,XDATA)
                                     71 ;--------------------------------------------------------
                                     72 ; external initialized ram data
                                     73 ;--------------------------------------------------------
                                     74 	.area XISEG   (XDATA)
      000000                         75 _mmemlist_list:
      000000                         76 	.ds 3
      000003                         77 _mmemlist:
      000003                         78 	.ds 3
                                     79 	.area HOME    (CODE)
                                     80 	.area GSINIT0 (CODE)
                                     81 	.area GSINIT1 (CODE)
                                     82 	.area GSINIT2 (CODE)
                                     83 	.area GSINIT3 (CODE)
                                     84 	.area GSINIT4 (CODE)
                                     85 	.area GSINIT5 (CODE)
                                     86 	.area GSINIT  (CODE)
                                     87 	.area GSFINAL (CODE)
                                     88 	.area CSEG    (CODE)
                                     89 ;--------------------------------------------------------
                                     90 ; global & static initialisations
                                     91 ;--------------------------------------------------------
                                     92 	.area HOME    (CODE)
                                     93 	.area GSINIT  (CODE)
                                     94 	.area GSFINAL (CODE)
                                     95 	.area GSINIT  (CODE)
                                     96 ;--------------------------------------------------------
                                     97 ; Home
                                     98 ;--------------------------------------------------------
                                     99 	.area HOME    (CODE)
                                    100 	.area HOME    (CODE)
                                    101 ;--------------------------------------------------------
                                    102 ; code
                                    103 ;--------------------------------------------------------
                                    104 	.area BANK1   (CODE)
                                    105 ;------------------------------------------------------------
                                    106 ;Allocation info for local variables in function 'mmem_alloc'
                                    107 ;------------------------------------------------------------
                                    108 ;size                      Allocated to stack - sp -7
                                    109 ;m                         Allocated to stack - sp -2
                                    110 ;------------------------------------------------------------
                                    111 ;	../../../../core/lib/mmem.c:83: mmem_alloc(struct mmem *m, unsigned int size)
                                    112 ;	-----------------------------------------
                                    113 ;	 function mmem_alloc
                                    114 ;	-----------------------------------------
      000000                        115 _mmem_alloc:
                           000007   116 	ar7 = 0x07
                           000006   117 	ar6 = 0x06
                           000005   118 	ar5 = 0x05
                           000004   119 	ar4 = 0x04
                           000003   120 	ar3 = 0x03
                           000002   121 	ar2 = 0x02
                           000001   122 	ar1 = 0x01
                           000000   123 	ar0 = 0x00
      000000 C0 82            [24]  124 	push	dpl
      000002 C0 83            [24]  125 	push	dph
      000004 C0 F0            [24]  126 	push	b
                                    127 ;	../../../../core/lib/mmem.c:86: if(avail_memory < size) {
      000006 90r00r00         [24]  128 	mov	dptr,#_avail_memory
      000009 E0               [24]  129 	movx	a,@dptr
      00000A FB               [12]  130 	mov	r3,a
      00000B A3               [24]  131 	inc	dptr
      00000C E0               [24]  132 	movx	a,@dptr
      00000D FC               [12]  133 	mov	r4,a
      00000E E5 81            [12]  134 	mov	a,sp
      000010 24 F9            [12]  135 	add	a,#0xf9
      000012 F8               [12]  136 	mov	r0,a
      000013 C3               [12]  137 	clr	c
      000014 EB               [12]  138 	mov	a,r3
      000015 96               [12]  139 	subb	a,@r0
      000016 EC               [12]  140 	mov	a,r4
      000017 08               [12]  141 	inc	r0
      000018 96               [12]  142 	subb	a,@r0
      000019 50 06            [24]  143 	jnc	00102$
                                    144 ;	../../../../core/lib/mmem.c:87: return 0;
      00001B 90 00 00         [24]  145 	mov	dptr,#0x0000
      00001E 02r00rD0         [24]  146 	ljmp	00103$
      000021                        147 00102$:
                                    148 ;	../../../../core/lib/mmem.c:92: list_add(mmemlist, m);
      000021 A8 81            [24]  149 	mov	r0,sp
      000023 18               [12]  150 	dec	r0
      000024 18               [12]  151 	dec	r0
      000025 86 02            [24]  152 	mov	ar2,@r0
      000027 08               [12]  153 	inc	r0
      000028 86 03            [24]  154 	mov	ar3,@r0
      00002A 08               [12]  155 	inc	r0
      00002B 86 04            [24]  156 	mov	ar4,@r0
      00002D 90r00r03         [24]  157 	mov	dptr,#_mmemlist
      000030 E0               [24]  158 	movx	a,@dptr
      000031 FD               [12]  159 	mov	r5,a
      000032 A3               [24]  160 	inc	dptr
      000033 E0               [24]  161 	movx	a,@dptr
      000034 FE               [12]  162 	mov	r6,a
      000035 A3               [24]  163 	inc	dptr
      000036 E0               [24]  164 	movx	a,@dptr
      000037 FF               [12]  165 	mov	r7,a
      000038 C0 02            [24]  166 	push	ar2
      00003A C0 03            [24]  167 	push	ar3
      00003C C0 04            [24]  168 	push	ar4
      00003E 8D 82            [24]  169 	mov	dpl,r5
      000040 8E 83            [24]  170 	mov	dph,r6
      000042 8F F0            [24]  171 	mov	b,r7
      000044 78r00            [12]  172 	mov	r0,#_list_add
      000046 79s00            [12]  173 	mov	r1,#(_list_add >> 8)
      000048 7As00            [12]  174 	mov	r2,#(_list_add >> 16)
      00004A 12r00r00         [24]  175 	lcall	__sdcc_banked_call
      00004D 15 81            [12]  176 	dec	sp
      00004F 15 81            [12]  177 	dec	sp
      000051 15 81            [12]  178 	dec	sp
                                    179 ;	../../../../core/lib/mmem.c:96: m->ptr = &memory[MMEM_SIZE - avail_memory];
      000053 A8 81            [24]  180 	mov	r0,sp
      000055 18               [12]  181 	dec	r0
      000056 18               [12]  182 	dec	r0
      000057 74 05            [12]  183 	mov	a,#0x05
      000059 26               [12]  184 	add	a,@r0
      00005A FD               [12]  185 	mov	r5,a
      00005B E4               [12]  186 	clr	a
      00005C 08               [12]  187 	inc	r0
      00005D 36               [12]  188 	addc	a,@r0
      00005E FE               [12]  189 	mov	r6,a
      00005F 08               [12]  190 	inc	r0
      000060 86 07            [24]  191 	mov	ar7,@r0
      000062 90r00r00         [24]  192 	mov	dptr,#_avail_memory
      000065 E0               [24]  193 	movx	a,@dptr
      000066 FB               [12]  194 	mov	r3,a
      000067 A3               [24]  195 	inc	dptr
      000068 E0               [24]  196 	movx	a,@dptr
      000069 FC               [12]  197 	mov	r4,a
      00006A E4               [12]  198 	clr	a
      00006B C3               [12]  199 	clr	c
      00006C 9B               [12]  200 	subb	a,r3
      00006D FB               [12]  201 	mov	r3,a
      00006E 74 10            [12]  202 	mov	a,#0x10
      000070 9C               [12]  203 	subb	a,r4
      000071 FC               [12]  204 	mov	r4,a
      000072 EB               [12]  205 	mov	a,r3
      000073 24r02            [12]  206 	add	a,#_memory
      000075 FB               [12]  207 	mov	r3,a
      000076 EC               [12]  208 	mov	a,r4
      000077 34s00            [12]  209 	addc	a,#(_memory >> 8)
      000079 FC               [12]  210 	mov	r4,a
      00007A 7A 00            [12]  211 	mov	r2,#0x00
      00007C 8D 82            [24]  212 	mov	dpl,r5
      00007E 8E 83            [24]  213 	mov	dph,r6
      000080 8F F0            [24]  214 	mov	b,r7
      000082 EB               [12]  215 	mov	a,r3
      000083 12r00r00         [24]  216 	lcall	__gptrput
      000086 A3               [24]  217 	inc	dptr
      000087 EC               [12]  218 	mov	a,r4
      000088 12r00r00         [24]  219 	lcall	__gptrput
      00008B A3               [24]  220 	inc	dptr
      00008C EA               [12]  221 	mov	a,r2
      00008D 12r00r00         [24]  222 	lcall	__gptrput
                                    223 ;	../../../../core/lib/mmem.c:99: m->size = size;
      000090 A8 81            [24]  224 	mov	r0,sp
      000092 18               [12]  225 	dec	r0
      000093 18               [12]  226 	dec	r0
      000094 74 03            [12]  227 	mov	a,#0x03
      000096 26               [12]  228 	add	a,@r0
      000097 FD               [12]  229 	mov	r5,a
      000098 E4               [12]  230 	clr	a
      000099 08               [12]  231 	inc	r0
      00009A 36               [12]  232 	addc	a,@r0
      00009B FE               [12]  233 	mov	r6,a
      00009C 08               [12]  234 	inc	r0
      00009D 86 07            [24]  235 	mov	ar7,@r0
      00009F 8D 82            [24]  236 	mov	dpl,r5
      0000A1 8E 83            [24]  237 	mov	dph,r6
      0000A3 8F F0            [24]  238 	mov	b,r7
      0000A5 E5 81            [12]  239 	mov	a,sp
      0000A7 24 F9            [12]  240 	add	a,#0xf9
      0000A9 F8               [12]  241 	mov	r0,a
      0000AA E6               [12]  242 	mov	a,@r0
      0000AB 12r00r00         [24]  243 	lcall	__gptrput
      0000AE A3               [24]  244 	inc	dptr
      0000AF 08               [12]  245 	inc	r0
      0000B0 E6               [12]  246 	mov	a,@r0
      0000B1 12r00r00         [24]  247 	lcall	__gptrput
                                    248 ;	../../../../core/lib/mmem.c:102: avail_memory -= size;
      0000B4 90r00r00         [24]  249 	mov	dptr,#_avail_memory
      0000B7 E0               [24]  250 	movx	a,@dptr
      0000B8 FE               [12]  251 	mov	r6,a
      0000B9 A3               [24]  252 	inc	dptr
      0000BA E0               [24]  253 	movx	a,@dptr
      0000BB FF               [12]  254 	mov	r7,a
      0000BC E5 81            [12]  255 	mov	a,sp
      0000BE 24 F9            [12]  256 	add	a,#0xf9
      0000C0 F8               [12]  257 	mov	r0,a
      0000C1 90r00r00         [24]  258 	mov	dptr,#_avail_memory
      0000C4 EE               [12]  259 	mov	a,r6
      0000C5 C3               [12]  260 	clr	c
      0000C6 96               [12]  261 	subb	a,@r0
      0000C7 F0               [24]  262 	movx	@dptr,a
      0000C8 EF               [12]  263 	mov	a,r7
      0000C9 08               [12]  264 	inc	r0
      0000CA 96               [12]  265 	subb	a,@r0
      0000CB A3               [24]  266 	inc	dptr
      0000CC F0               [24]  267 	movx	@dptr,a
                                    268 ;	../../../../core/lib/mmem.c:106: return 1;
      0000CD 90 00 01         [24]  269 	mov	dptr,#0x0001
      0000D0                        270 00103$:
      0000D0 15 81            [12]  271 	dec	sp
      0000D2 15 81            [12]  272 	dec	sp
      0000D4 15 81            [12]  273 	dec	sp
      0000D6 02r00r00         [24]  274 	ljmp	__sdcc_banked_ret
                                    275 ;------------------------------------------------------------
                                    276 ;Allocation info for local variables in function 'mmem_free'
                                    277 ;------------------------------------------------------------
                                    278 ;m                         Allocated to stack - sp -13
                                    279 ;n                         Allocated to stack - sp -2
                                    280 ;sloc0                     Allocated to stack - sp -10
                                    281 ;sloc1                     Allocated to stack - sp -8
                                    282 ;sloc2                     Allocated to stack - sp -5
                                    283 ;------------------------------------------------------------
                                    284 ;	../../../../core/lib/mmem.c:119: mmem_free(struct mmem *m)
                                    285 ;	-----------------------------------------
                                    286 ;	 function mmem_free
                                    287 ;	-----------------------------------------
      0000D9                        288 _mmem_free:
      0000D9 C0 82            [24]  289 	push	dpl
      0000DB C0 83            [24]  290 	push	dph
      0000DD C0 F0            [24]  291 	push	b
      0000DF E5 81            [12]  292 	mov	a,sp
      0000E1 24 0B            [12]  293 	add	a,#0x0B
                                    294 ;	../../../../core/lib/mmem.c:123: if(m->next != NULL) {
      0000E3 F5 81            [12]  295 	mov	sp,a
      0000E5 24 F3            [12]  296 	add	a,#0xf3
      0000E7 F8               [12]  297 	mov	r0,a
      0000E8 86 82            [24]  298 	mov	dpl,@r0
      0000EA 08               [12]  299 	inc	r0
      0000EB 86 83            [24]  300 	mov	dph,@r0
      0000ED 08               [12]  301 	inc	r0
      0000EE 86 F0            [24]  302 	mov	b,@r0
      0000F0 12r00r00         [24]  303 	lcall	__gptrget
      0000F3 FA               [12]  304 	mov	r2,a
      0000F4 A3               [24]  305 	inc	dptr
      0000F5 12r00r00         [24]  306 	lcall	__gptrget
      0000F8 FB               [12]  307 	mov	r3,a
      0000F9 A3               [24]  308 	inc	dptr
      0000FA 12r00r00         [24]  309 	lcall	__gptrget
      0000FD FC               [12]  310 	mov	r4,a
      0000FE EA               [12]  311 	mov	a,r2
      0000FF 4B               [12]  312 	orl	a,r3
      000100 70 03            [24]  313 	jnz	00118$
      000102 02r02r80         [24]  314 	ljmp	00103$
      000105                        315 00118$:
                                    316 ;	../../../../core/lib/mmem.c:127: &memory[MMEM_SIZE - avail_memory] - (char *)m->next->ptr);
      000105 90r00r00         [24]  317 	mov	dptr,#_avail_memory
      000108 E0               [24]  318 	movx	a,@dptr
      000109 FE               [12]  319 	mov	r6,a
      00010A A3               [24]  320 	inc	dptr
      00010B E0               [24]  321 	movx	a,@dptr
      00010C FF               [12]  322 	mov	r7,a
      00010D E4               [12]  323 	clr	a
      00010E C3               [12]  324 	clr	c
      00010F 9E               [12]  325 	subb	a,r6
      000110 FE               [12]  326 	mov	r6,a
      000111 74 10            [12]  327 	mov	a,#0x10
      000113 9F               [12]  328 	subb	a,r7
      000114 FF               [12]  329 	mov	r7,a
      000115 E5 81            [12]  330 	mov	a,sp
      000117 24 F6            [12]  331 	add	a,#0xf6
      000119 F8               [12]  332 	mov	r0,a
      00011A EE               [12]  333 	mov	a,r6
      00011B 24r02            [12]  334 	add	a,#_memory
      00011D F6               [12]  335 	mov	@r0,a
      00011E EF               [12]  336 	mov	a,r7
      00011F 34s00            [12]  337 	addc	a,#(_memory >> 8)
      000121 08               [12]  338 	inc	r0
      000122 F6               [12]  339 	mov	@r0,a
      000123 74 05            [12]  340 	mov	a,#0x05
      000125 2A               [12]  341 	add	a,r2
      000126 FA               [12]  342 	mov	r2,a
      000127 E4               [12]  343 	clr	a
      000128 3B               [12]  344 	addc	a,r3
      000129 FB               [12]  345 	mov	r3,a
      00012A 8A 82            [24]  346 	mov	dpl,r2
      00012C 8B 83            [24]  347 	mov	dph,r3
      00012E 8C F0            [24]  348 	mov	b,r4
      000130 12r00r00         [24]  349 	lcall	__gptrget
      000133 FA               [12]  350 	mov	r2,a
      000134 A3               [24]  351 	inc	dptr
      000135 12r00r00         [24]  352 	lcall	__gptrget
      000138 FB               [12]  353 	mov	r3,a
      000139 A3               [24]  354 	inc	dptr
      00013A 12r00r00         [24]  355 	lcall	__gptrget
      00013D FC               [12]  356 	mov	r4,a
      00013E 8A 05            [24]  357 	mov	ar5,r2
      000140 8B 06            [24]  358 	mov	ar6,r3
      000142 8C 07            [24]  359 	mov	ar7,r4
      000144 E5 81            [12]  360 	mov	a,sp
      000146 24 F6            [12]  361 	add	a,#0xf6
      000148 F8               [12]  362 	mov	r0,a
      000149 E6               [12]  363 	mov	a,@r0
      00014A C3               [12]  364 	clr	c
      00014B 9D               [12]  365 	subb	a,r5
      00014C F6               [12]  366 	mov	@r0,a
      00014D 08               [12]  367 	inc	r0
      00014E E6               [12]  368 	mov	a,@r0
      00014F 9E               [12]  369 	subb	a,r6
      000150 F6               [12]  370 	mov	@r0,a
                                    371 ;	../../../../core/lib/mmem.c:126: memmove(m->ptr, m->next->ptr,
      000151 E5 81            [12]  372 	mov	a,sp
      000153 24 F3            [12]  373 	add	a,#0xf3
      000155 F8               [12]  374 	mov	r0,a
      000156 74 05            [12]  375 	mov	a,#0x05
      000158 26               [12]  376 	add	a,@r0
      000159 FD               [12]  377 	mov	r5,a
      00015A E4               [12]  378 	clr	a
      00015B 08               [12]  379 	inc	r0
      00015C 36               [12]  380 	addc	a,@r0
      00015D FE               [12]  381 	mov	r6,a
      00015E 08               [12]  382 	inc	r0
      00015F 86 07            [24]  383 	mov	ar7,@r0
      000161 8D 82            [24]  384 	mov	dpl,r5
      000163 8E 83            [24]  385 	mov	dph,r6
      000165 8F F0            [24]  386 	mov	b,r7
      000167 12r00r00         [24]  387 	lcall	__gptrget
      00016A FD               [12]  388 	mov	r5,a
      00016B A3               [24]  389 	inc	dptr
      00016C 12r00r00         [24]  390 	lcall	__gptrget
      00016F FE               [12]  391 	mov	r6,a
      000170 A3               [24]  392 	inc	dptr
      000171 12r00r00         [24]  393 	lcall	__gptrget
      000174 FF               [12]  394 	mov	r7,a
      000175 E5 81            [12]  395 	mov	a,sp
      000177 24 F6            [12]  396 	add	a,#0xf6
      000179 F8               [12]  397 	mov	r0,a
      00017A E6               [12]  398 	mov	a,@r0
      00017B C0 E0            [24]  399 	push	acc
      00017D 08               [12]  400 	inc	r0
      00017E E6               [12]  401 	mov	a,@r0
      00017F C0 E0            [24]  402 	push	acc
      000181 C0 02            [24]  403 	push	ar2
      000183 C0 03            [24]  404 	push	ar3
      000185 C0 04            [24]  405 	push	ar4
      000187 8D 82            [24]  406 	mov	dpl,r5
      000189 8E 83            [24]  407 	mov	dph,r6
      00018B 8F F0            [24]  408 	mov	b,r7
      00018D 78r00            [12]  409 	mov	r0,#_memmove
      00018F 79s00            [12]  410 	mov	r1,#(_memmove >> 8)
      000191 7As00            [12]  411 	mov	r2,#(_memmove >> 16)
      000193 12r00r00         [24]  412 	lcall	__sdcc_banked_call
      000196 E5 81            [12]  413 	mov	a,sp
      000198 24 FB            [12]  414 	add	a,#0xfb
                                    415 ;	../../../../core/lib/mmem.c:131: for(n = m->next; n != NULL; n = n->next) {
      00019A F5 81            [12]  416 	mov	sp,a
      00019C 24 F3            [12]  417 	add	a,#0xf3
      00019E F8               [12]  418 	mov	r0,a
      00019F 86 82            [24]  419 	mov	dpl,@r0
      0001A1 08               [12]  420 	inc	r0
      0001A2 86 83            [24]  421 	mov	dph,@r0
      0001A4 08               [12]  422 	inc	r0
      0001A5 86 F0            [24]  423 	mov	b,@r0
      0001A7 A9 81            [24]  424 	mov	r1,sp
      0001A9 19               [12]  425 	dec	r1
      0001AA 19               [12]  426 	dec	r1
      0001AB 12r00r00         [24]  427 	lcall	__gptrget
      0001AE F7               [12]  428 	mov	@r1,a
      0001AF A3               [24]  429 	inc	dptr
      0001B0 12r00r00         [24]  430 	lcall	__gptrget
      0001B3 09               [12]  431 	inc	r1
      0001B4 F7               [12]  432 	mov	@r1,a
      0001B5 A3               [24]  433 	inc	dptr
      0001B6 12r00r00         [24]  434 	lcall	__gptrget
      0001B9 09               [12]  435 	inc	r1
      0001BA F7               [12]  436 	mov	@r1,a
      0001BB E5 81            [12]  437 	mov	a,sp
      0001BD 24 F3            [12]  438 	add	a,#0xf3
      0001BF F8               [12]  439 	mov	r0,a
      0001C0 E5 81            [12]  440 	mov	a,sp
      0001C2 24 F8            [12]  441 	add	a,#0xf8
      0001C4 F9               [12]  442 	mov	r1,a
      0001C5 74 03            [12]  443 	mov	a,#0x03
      0001C7 26               [12]  444 	add	a,@r0
      0001C8 F7               [12]  445 	mov	@r1,a
      0001C9 E4               [12]  446 	clr	a
      0001CA 08               [12]  447 	inc	r0
      0001CB 36               [12]  448 	addc	a,@r0
      0001CC 09               [12]  449 	inc	r1
      0001CD F7               [12]  450 	mov	@r1,a
      0001CE 08               [12]  451 	inc	r0
      0001CF 09               [12]  452 	inc	r1
      0001D0 E6               [12]  453 	mov	a,@r0
      0001D1 F7               [12]  454 	mov	@r1,a
      0001D2                        455 00105$:
      0001D2 A8 81            [24]  456 	mov	r0,sp
      0001D4 18               [12]  457 	dec	r0
      0001D5 18               [12]  458 	dec	r0
      0001D6 E4               [12]  459 	clr	a
      0001D7 C0 E0            [24]  460 	push	acc
      0001D9 E4               [12]  461 	clr	a
      0001DA C0 E0            [24]  462 	push	acc
      0001DC E4               [12]  463 	clr	a
      0001DD C0 E0            [24]  464 	push	acc
      0001DF 86 82            [24]  465 	mov	dpl,@r0
      0001E1 08               [12]  466 	inc	r0
      0001E2 86 83            [24]  467 	mov	dph,@r0
      0001E4 08               [12]  468 	inc	r0
      0001E5 86 F0            [24]  469 	mov	b,@r0
      0001E7 12r00r00         [24]  470 	lcall	___gptr_cmp
      0001EA 15 81            [12]  471 	dec	sp
      0001EC 15 81            [12]  472 	dec	sp
      0001EE 15 81            [12]  473 	dec	sp
      0001F0 70 03            [24]  474 	jnz	00119$
      0001F2 02r02r80         [24]  475 	ljmp	00103$
      0001F5                        476 00119$:
                                    477 ;	../../../../core/lib/mmem.c:132: n->ptr = (void *)((char *)n->ptr - m->size);
      0001F5 A8 81            [24]  478 	mov	r0,sp
      0001F7 18               [12]  479 	dec	r0
      0001F8 18               [12]  480 	dec	r0
      0001F9 74 05            [12]  481 	mov	a,#0x05
      0001FB 26               [12]  482 	add	a,@r0
      0001FC FD               [12]  483 	mov	r5,a
      0001FD E4               [12]  484 	clr	a
      0001FE 08               [12]  485 	inc	r0
      0001FF 36               [12]  486 	addc	a,@r0
      000200 FE               [12]  487 	mov	r6,a
      000201 08               [12]  488 	inc	r0
      000202 86 07            [24]  489 	mov	ar7,@r0
      000204 8D 82            [24]  490 	mov	dpl,r5
      000206 8E 83            [24]  491 	mov	dph,r6
      000208 8F F0            [24]  492 	mov	b,r7
      00020A 12r00r00         [24]  493 	lcall	__gptrget
      00020D FA               [12]  494 	mov	r2,a
      00020E A3               [24]  495 	inc	dptr
      00020F 12r00r00         [24]  496 	lcall	__gptrget
      000212 FB               [12]  497 	mov	r3,a
      000213 A3               [24]  498 	inc	dptr
      000214 12r00r00         [24]  499 	lcall	__gptrget
      000217 FC               [12]  500 	mov	r4,a
      000218 E5 81            [12]  501 	mov	a,sp
      00021A 24 FB            [12]  502 	add	a,#0xfb
      00021C F8               [12]  503 	mov	r0,a
      00021D A6 02            [24]  504 	mov	@r0,ar2
      00021F 08               [12]  505 	inc	r0
      000220 A6 03            [24]  506 	mov	@r0,ar3
      000222 08               [12]  507 	inc	r0
      000223 A6 04            [24]  508 	mov	@r0,ar4
      000225 E5 81            [12]  509 	mov	a,sp
      000227 24 F8            [12]  510 	add	a,#0xf8
      000229 F8               [12]  511 	mov	r0,a
      00022A 86 82            [24]  512 	mov	dpl,@r0
      00022C 08               [12]  513 	inc	r0
      00022D 86 83            [24]  514 	mov	dph,@r0
      00022F 08               [12]  515 	inc	r0
      000230 86 F0            [24]  516 	mov	b,@r0
      000232 12r00r00         [24]  517 	lcall	__gptrget
      000235 FB               [12]  518 	mov	r3,a
      000236 A3               [24]  519 	inc	dptr
      000237 12r00r00         [24]  520 	lcall	__gptrget
      00023A FC               [12]  521 	mov	r4,a
      00023B E5 81            [12]  522 	mov	a,sp
      00023D 24 FB            [12]  523 	add	a,#0xfb
      00023F F8               [12]  524 	mov	r0,a
      000240 E6               [12]  525 	mov	a,@r0
      000241 C3               [12]  526 	clr	c
      000242 9B               [12]  527 	subb	a,r3
      000243 FB               [12]  528 	mov	r3,a
      000244 08               [12]  529 	inc	r0
      000245 E6               [12]  530 	mov	a,@r0
      000246 9C               [12]  531 	subb	a,r4
      000247 FC               [12]  532 	mov	r4,a
      000248 08               [12]  533 	inc	r0
      000249 86 02            [24]  534 	mov	ar2,@r0
      00024B 8D 82            [24]  535 	mov	dpl,r5
      00024D 8E 83            [24]  536 	mov	dph,r6
      00024F 8F F0            [24]  537 	mov	b,r7
      000251 EB               [12]  538 	mov	a,r3
      000252 12r00r00         [24]  539 	lcall	__gptrput
      000255 A3               [24]  540 	inc	dptr
      000256 EC               [12]  541 	mov	a,r4
      000257 12r00r00         [24]  542 	lcall	__gptrput
      00025A A3               [24]  543 	inc	dptr
      00025B EA               [12]  544 	mov	a,r2
      00025C 12r00r00         [24]  545 	lcall	__gptrput
                                    546 ;	../../../../core/lib/mmem.c:131: for(n = m->next; n != NULL; n = n->next) {
      00025F A8 81            [24]  547 	mov	r0,sp
      000261 18               [12]  548 	dec	r0
      000262 18               [12]  549 	dec	r0
      000263 86 82            [24]  550 	mov	dpl,@r0
      000265 08               [12]  551 	inc	r0
      000266 86 83            [24]  552 	mov	dph,@r0
      000268 08               [12]  553 	inc	r0
      000269 86 F0            [24]  554 	mov	b,@r0
      00026B 12r00r00         [24]  555 	lcall	__gptrget
      00026E 18               [12]  556 	dec	r0
      00026F 18               [12]  557 	dec	r0
      000270 F6               [12]  558 	mov	@r0,a
      000271 A3               [24]  559 	inc	dptr
      000272 12r00r00         [24]  560 	lcall	__gptrget
      000275 08               [12]  561 	inc	r0
      000276 F6               [12]  562 	mov	@r0,a
      000277 A3               [24]  563 	inc	dptr
      000278 12r00r00         [24]  564 	lcall	__gptrget
      00027B 08               [12]  565 	inc	r0
      00027C F6               [12]  566 	mov	@r0,a
      00027D 02r01rD2         [24]  567 	ljmp	00105$
      000280                        568 00103$:
                                    569 ;	../../../../core/lib/mmem.c:136: avail_memory += m->size;
      000280 E5 81            [12]  570 	mov	a,sp
      000282 24 F3            [12]  571 	add	a,#0xf3
      000284 F8               [12]  572 	mov	r0,a
      000285 74 03            [12]  573 	mov	a,#0x03
      000287 26               [12]  574 	add	a,@r0
      000288 FD               [12]  575 	mov	r5,a
      000289 E4               [12]  576 	clr	a
      00028A 08               [12]  577 	inc	r0
      00028B 36               [12]  578 	addc	a,@r0
      00028C FE               [12]  579 	mov	r6,a
      00028D 08               [12]  580 	inc	r0
      00028E 86 07            [24]  581 	mov	ar7,@r0
      000290 8D 82            [24]  582 	mov	dpl,r5
      000292 8E 83            [24]  583 	mov	dph,r6
      000294 8F F0            [24]  584 	mov	b,r7
      000296 12r00r00         [24]  585 	lcall	__gptrget
      000299 FD               [12]  586 	mov	r5,a
      00029A A3               [24]  587 	inc	dptr
      00029B 12r00r00         [24]  588 	lcall	__gptrget
      00029E FE               [12]  589 	mov	r6,a
      00029F 90r00r00         [24]  590 	mov	dptr,#_avail_memory
      0002A2 E0               [24]  591 	movx	a,@dptr
      0002A3 FC               [12]  592 	mov	r4,a
      0002A4 A3               [24]  593 	inc	dptr
      0002A5 E0               [24]  594 	movx	a,@dptr
      0002A6 FF               [12]  595 	mov	r7,a
      0002A7 90r00r00         [24]  596 	mov	dptr,#_avail_memory
      0002AA ED               [12]  597 	mov	a,r5
      0002AB 2C               [12]  598 	add	a,r4
      0002AC F0               [24]  599 	movx	@dptr,a
      0002AD EE               [12]  600 	mov	a,r6
      0002AE 3F               [12]  601 	addc	a,r7
      0002AF A3               [24]  602 	inc	dptr
      0002B0 F0               [24]  603 	movx	@dptr,a
                                    604 ;	../../../../core/lib/mmem.c:139: list_remove(mmemlist, m);
      0002B1 E5 81            [12]  605 	mov	a,sp
      0002B3 24 F3            [12]  606 	add	a,#0xf3
      0002B5 F8               [12]  607 	mov	r0,a
      0002B6 86 05            [24]  608 	mov	ar5,@r0
      0002B8 08               [12]  609 	inc	r0
      0002B9 86 06            [24]  610 	mov	ar6,@r0
      0002BB 08               [12]  611 	inc	r0
      0002BC 86 07            [24]  612 	mov	ar7,@r0
      0002BE 90r00r03         [24]  613 	mov	dptr,#_mmemlist
      0002C1 E0               [24]  614 	movx	a,@dptr
      0002C2 FA               [12]  615 	mov	r2,a
      0002C3 A3               [24]  616 	inc	dptr
      0002C4 E0               [24]  617 	movx	a,@dptr
      0002C5 FB               [12]  618 	mov	r3,a
      0002C6 A3               [24]  619 	inc	dptr
      0002C7 E0               [24]  620 	movx	a,@dptr
      0002C8 FC               [12]  621 	mov	r4,a
      0002C9 C0 05            [24]  622 	push	ar5
      0002CB C0 06            [24]  623 	push	ar6
      0002CD C0 07            [24]  624 	push	ar7
      0002CF 8A 82            [24]  625 	mov	dpl,r2
      0002D1 8B 83            [24]  626 	mov	dph,r3
      0002D3 8C F0            [24]  627 	mov	b,r4
      0002D5 78r00            [12]  628 	mov	r0,#_list_remove
      0002D7 79s00            [12]  629 	mov	r1,#(_list_remove >> 8)
      0002D9 7As00            [12]  630 	mov	r2,#(_list_remove >> 16)
      0002DB 12r00r00         [24]  631 	lcall	__sdcc_banked_call
      0002DE 15 81            [12]  632 	dec	sp
      0002E0 15 81            [12]  633 	dec	sp
      0002E2 15 81            [12]  634 	dec	sp
      0002E4 E5 81            [12]  635 	mov	a,sp
      0002E6 24 F2            [12]  636 	add	a,#0xF2
      0002E8 F5 81            [12]  637 	mov	sp,a
      0002EA 02r00r00         [24]  638 	ljmp	__sdcc_banked_ret
                                    639 ;------------------------------------------------------------
                                    640 ;Allocation info for local variables in function 'mmem_init'
                                    641 ;------------------------------------------------------------
                                    642 ;	../../../../core/lib/mmem.c:152: mmem_init(void)
                                    643 ;	-----------------------------------------
                                    644 ;	 function mmem_init
                                    645 ;	-----------------------------------------
      0002ED                        646 _mmem_init:
                                    647 ;	../../../../core/lib/mmem.c:154: list_init(mmemlist);
      0002ED 90r00r03         [24]  648 	mov	dptr,#_mmemlist
      0002F0 E0               [24]  649 	movx	a,@dptr
      0002F1 FD               [12]  650 	mov	r5,a
      0002F2 A3               [24]  651 	inc	dptr
      0002F3 E0               [24]  652 	movx	a,@dptr
      0002F4 FE               [12]  653 	mov	r6,a
      0002F5 A3               [24]  654 	inc	dptr
      0002F6 E0               [24]  655 	movx	a,@dptr
      0002F7 FF               [12]  656 	mov	r7,a
      0002F8 8D 82            [24]  657 	mov	dpl,r5
      0002FA 8E 83            [24]  658 	mov	dph,r6
      0002FC 8F F0            [24]  659 	mov	b,r7
      0002FE 78r00            [12]  660 	mov	r0,#_list_init
      000300 79s00            [12]  661 	mov	r1,#(_list_init >> 8)
      000302 7As00            [12]  662 	mov	r2,#(_list_init >> 16)
      000304 12r00r00         [24]  663 	lcall	__sdcc_banked_call
                                    664 ;	../../../../core/lib/mmem.c:155: avail_memory = MMEM_SIZE;
      000307 90r00r00         [24]  665 	mov	dptr,#_avail_memory
      00030A E4               [12]  666 	clr	a
      00030B F0               [24]  667 	movx	@dptr,a
      00030C 74 10            [12]  668 	mov	a,#0x10
      00030E A3               [24]  669 	inc	dptr
      00030F F0               [24]  670 	movx	@dptr,a
      000310 02r00r00         [24]  671 	ljmp	__sdcc_banked_ret
                                    672 	.area CSEG    (CODE)
                                    673 	.area CONST   (CODE)
                                    674 	.area XINIT   (CODE)
      000000                        675 __xinit__mmemlist_list:
                                    676 ; generic printIvalPtr
      000000 00 00 00               677 	.byte #0x00,#0x00,#0x00
      000003                        678 __xinit__mmemlist:
      000003r00s00 00               679 	.byte _mmemlist_list,(_mmemlist_list >> 8),#0x00
                                    680 	.area CABS    (ABS,CODE)
