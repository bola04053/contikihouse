                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8804 (Aug  6 2013) (Linux)
                                      4 ; This file was generated Mon Aug 25 04:16:31 2014
                                      5 ;--------------------------------------------------------
                                      6 	.module ringbuf
                                      7 	.optsdcc -mmcs51 --model-huge
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _ringbuf_init
                                     13 	.globl _ringbuf_put
                                     14 	.globl _ringbuf_get
                                     15 	.globl _ringbuf_size
                                     16 	.globl _ringbuf_elements
                                     17 ;--------------------------------------------------------
                                     18 ; special function registers
                                     19 ;--------------------------------------------------------
                                     20 	.area RSEG    (ABS,DATA)
      000000                         21 	.org 0x0000
                                     22 ;--------------------------------------------------------
                                     23 ; special function bits
                                     24 ;--------------------------------------------------------
                                     25 	.area RSEG    (ABS,DATA)
      000000                         26 	.org 0x0000
                                     27 ;--------------------------------------------------------
                                     28 ; overlayable register banks
                                     29 ;--------------------------------------------------------
                                     30 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         31 	.ds 8
                                     32 ;--------------------------------------------------------
                                     33 ; internal ram data
                                     34 ;--------------------------------------------------------
                                     35 	.area DSEG    (DATA)
                                     36 ;--------------------------------------------------------
                                     37 ; overlayable items in internal ram 
                                     38 ;--------------------------------------------------------
                                     39 ;--------------------------------------------------------
                                     40 ; indirectly addressable internal ram data
                                     41 ;--------------------------------------------------------
                                     42 	.area ISEG    (DATA)
                                     43 ;--------------------------------------------------------
                                     44 ; absolute internal ram data
                                     45 ;--------------------------------------------------------
                                     46 	.area IABS    (ABS,DATA)
                                     47 	.area IABS    (ABS,DATA)
                                     48 ;--------------------------------------------------------
                                     49 ; bit data
                                     50 ;--------------------------------------------------------
                                     51 	.area BSEG    (BIT)
                                     52 ;--------------------------------------------------------
                                     53 ; paged external ram data
                                     54 ;--------------------------------------------------------
                                     55 	.area PSEG    (PAG,XDATA)
                                     56 ;--------------------------------------------------------
                                     57 ; external ram data
                                     58 ;--------------------------------------------------------
                                     59 	.area XSEG    (XDATA)
                                     60 ;--------------------------------------------------------
                                     61 ; absolute external ram data
                                     62 ;--------------------------------------------------------
                                     63 	.area XABS    (ABS,XDATA)
                                     64 ;--------------------------------------------------------
                                     65 ; external initialized ram data
                                     66 ;--------------------------------------------------------
                                     67 	.area XISEG   (XDATA)
                                     68 	.area HOME    (CODE)
                                     69 	.area GSINIT0 (CODE)
                                     70 	.area GSINIT1 (CODE)
                                     71 	.area GSINIT2 (CODE)
                                     72 	.area GSINIT3 (CODE)
                                     73 	.area GSINIT4 (CODE)
                                     74 	.area GSINIT5 (CODE)
                                     75 	.area GSINIT  (CODE)
                                     76 	.area GSFINAL (CODE)
                                     77 	.area CSEG    (CODE)
                                     78 ;--------------------------------------------------------
                                     79 ; global & static initialisations
                                     80 ;--------------------------------------------------------
                                     81 	.area HOME    (CODE)
                                     82 	.area GSINIT  (CODE)
                                     83 	.area GSFINAL (CODE)
                                     84 	.area GSINIT  (CODE)
                                     85 ;--------------------------------------------------------
                                     86 ; Home
                                     87 ;--------------------------------------------------------
                                     88 	.area HOME    (CODE)
                                     89 	.area HOME    (CODE)
                                     90 ;--------------------------------------------------------
                                     91 ; code
                                     92 ;--------------------------------------------------------
                                     93 	.area BANK1   (CODE)
                                     94 ;------------------------------------------------------------
                                     95 ;Allocation info for local variables in function 'ringbuf_init'
                                     96 ;------------------------------------------------------------
                                     97 ;dataptr                   Allocated to stack - sp -8
                                     98 ;size                      Allocated to stack - sp -9
                                     99 ;r                         Allocated to stack - sp -2
                                    100 ;------------------------------------------------------------
                                    101 ;	../../../../core/lib/ringbuf.c:43: ringbuf_init(struct ringbuf *r, uint8_t *dataptr, uint8_t size)
                                    102 ;	-----------------------------------------
                                    103 ;	 function ringbuf_init
                                    104 ;	-----------------------------------------
      000000                        105 _ringbuf_init:
                           000007   106 	ar7 = 0x07
                           000006   107 	ar6 = 0x06
                           000005   108 	ar5 = 0x05
                           000004   109 	ar4 = 0x04
                           000003   110 	ar3 = 0x03
                           000002   111 	ar2 = 0x02
                           000001   112 	ar1 = 0x01
                           000000   113 	ar0 = 0x00
      000000 C0 82            [24]  114 	push	dpl
      000002 C0 83            [24]  115 	push	dph
      000004 C0 F0            [24]  116 	push	b
                                    117 ;	../../../../core/lib/ringbuf.c:45: r->data = dataptr;
      000006 A8 81            [24]  118 	mov	r0,sp
      000008 18               [12]  119 	dec	r0
      000009 18               [12]  120 	dec	r0
      00000A 86 82            [24]  121 	mov	dpl,@r0
      00000C 08               [12]  122 	inc	r0
      00000D 86 83            [24]  123 	mov	dph,@r0
      00000F 08               [12]  124 	inc	r0
      000010 86 F0            [24]  125 	mov	b,@r0
      000012 E5 81            [12]  126 	mov	a,sp
      000014 24 F8            [12]  127 	add	a,#0xf8
      000016 F9               [12]  128 	mov	r1,a
      000017 E7               [12]  129 	mov	a,@r1
      000018 12r00r00         [24]  130 	lcall	__gptrput
      00001B A3               [24]  131 	inc	dptr
      00001C 09               [12]  132 	inc	r1
      00001D E7               [12]  133 	mov	a,@r1
      00001E 12r00r00         [24]  134 	lcall	__gptrput
      000021 A3               [24]  135 	inc	dptr
      000022 09               [12]  136 	inc	r1
      000023 E7               [12]  137 	mov	a,@r1
      000024 12r00r00         [24]  138 	lcall	__gptrput
                                    139 ;	../../../../core/lib/ringbuf.c:46: r->mask = size - 1;
      000027 A8 81            [24]  140 	mov	r0,sp
      000029 18               [12]  141 	dec	r0
      00002A 18               [12]  142 	dec	r0
      00002B 74 03            [12]  143 	mov	a,#0x03
      00002D 26               [12]  144 	add	a,@r0
      00002E FA               [12]  145 	mov	r2,a
      00002F E4               [12]  146 	clr	a
      000030 08               [12]  147 	inc	r0
      000031 36               [12]  148 	addc	a,@r0
      000032 FB               [12]  149 	mov	r3,a
      000033 08               [12]  150 	inc	r0
      000034 86 04            [24]  151 	mov	ar4,@r0
      000036 E5 81            [12]  152 	mov	a,sp
      000038 24 F7            [12]  153 	add	a,#0xf7
      00003A F8               [12]  154 	mov	r0,a
      00003B E6               [12]  155 	mov	a,@r0
      00003C 14               [12]  156 	dec	a
      00003D 8A 82            [24]  157 	mov	dpl,r2
      00003F 8B 83            [24]  158 	mov	dph,r3
      000041 8C F0            [24]  159 	mov	b,r4
      000043 12r00r00         [24]  160 	lcall	__gptrput
                                    161 ;	../../../../core/lib/ringbuf.c:47: r->put_ptr = 0;
      000046 A8 81            [24]  162 	mov	r0,sp
      000048 18               [12]  163 	dec	r0
      000049 18               [12]  164 	dec	r0
      00004A 74 04            [12]  165 	mov	a,#0x04
      00004C 26               [12]  166 	add	a,@r0
      00004D FD               [12]  167 	mov	r5,a
      00004E E4               [12]  168 	clr	a
      00004F 08               [12]  169 	inc	r0
      000050 36               [12]  170 	addc	a,@r0
      000051 FE               [12]  171 	mov	r6,a
      000052 08               [12]  172 	inc	r0
      000053 86 07            [24]  173 	mov	ar7,@r0
      000055 8D 82            [24]  174 	mov	dpl,r5
      000057 8E 83            [24]  175 	mov	dph,r6
      000059 8F F0            [24]  176 	mov	b,r7
      00005B E4               [12]  177 	clr	a
      00005C 12r00r00         [24]  178 	lcall	__gptrput
                                    179 ;	../../../../core/lib/ringbuf.c:48: r->get_ptr = 0;
      00005F A8 81            [24]  180 	mov	r0,sp
      000061 18               [12]  181 	dec	r0
      000062 18               [12]  182 	dec	r0
      000063 74 05            [12]  183 	mov	a,#0x05
      000065 26               [12]  184 	add	a,@r0
      000066 FD               [12]  185 	mov	r5,a
      000067 E4               [12]  186 	clr	a
      000068 08               [12]  187 	inc	r0
      000069 36               [12]  188 	addc	a,@r0
      00006A FE               [12]  189 	mov	r6,a
      00006B 08               [12]  190 	inc	r0
      00006C 86 07            [24]  191 	mov	ar7,@r0
      00006E 8D 82            [24]  192 	mov	dpl,r5
      000070 8E 83            [24]  193 	mov	dph,r6
      000072 8F F0            [24]  194 	mov	b,r7
      000074 E4               [12]  195 	clr	a
      000075 12r00r00         [24]  196 	lcall	__gptrput
      000078 15 81            [12]  197 	dec	sp
      00007A 15 81            [12]  198 	dec	sp
      00007C 15 81            [12]  199 	dec	sp
      00007E 02r00r00         [24]  200 	ljmp	__sdcc_banked_ret
                                    201 ;------------------------------------------------------------
                                    202 ;Allocation info for local variables in function 'ringbuf_put'
                                    203 ;------------------------------------------------------------
                                    204 ;c                         Allocated to stack - sp -14
                                    205 ;r                         Allocated to stack - sp -10
                                    206 ;sloc0                     Allocated to stack - sp -7
                                    207 ;sloc1                     Allocated to stack - sp -6
                                    208 ;sloc2                     Allocated to stack - sp -4
                                    209 ;sloc3                     Allocated to stack - sp -1
                                    210 ;------------------------------------------------------------
                                    211 ;	../../../../core/lib/ringbuf.c:52: ringbuf_put(struct ringbuf *r, uint8_t c)
                                    212 ;	-----------------------------------------
                                    213 ;	 function ringbuf_put
                                    214 ;	-----------------------------------------
      000081                        215 _ringbuf_put:
      000081 C0 82            [24]  216 	push	dpl
      000083 C0 83            [24]  217 	push	dph
      000085 C0 F0            [24]  218 	push	b
      000087 E5 81            [12]  219 	mov	a,sp
      000089 24 08            [12]  220 	add	a,#0x08
                                    221 ;	../../../../core/lib/ringbuf.c:63: if(((r->put_ptr - r->get_ptr) & r->mask) == r->mask) {
      00008B F5 81            [12]  222 	mov	sp,a
      00008D 24 F6            [12]  223 	add	a,#0xf6
      00008F F8               [12]  224 	mov	r0,a
      000090 74 04            [12]  225 	mov	a,#0x04
      000092 26               [12]  226 	add	a,@r0
      000093 FA               [12]  227 	mov	r2,a
      000094 E4               [12]  228 	clr	a
      000095 08               [12]  229 	inc	r0
      000096 36               [12]  230 	addc	a,@r0
      000097 FB               [12]  231 	mov	r3,a
      000098 08               [12]  232 	inc	r0
      000099 86 04            [24]  233 	mov	ar4,@r0
      00009B 8A 82            [24]  234 	mov	dpl,r2
      00009D 8B 83            [24]  235 	mov	dph,r3
      00009F 8C F0            [24]  236 	mov	b,r4
      0000A1 E5 81            [12]  237 	mov	a,sp
      0000A3 24 F9            [12]  238 	add	a,#0xf9
      0000A5 F8               [12]  239 	mov	r0,a
      0000A6 12r00r00         [24]  240 	lcall	__gptrget
      0000A9 F6               [12]  241 	mov	@r0,a
      0000AA E5 81            [12]  242 	mov	a,sp
      0000AC 24 F9            [12]  243 	add	a,#0xf9
      0000AE F8               [12]  244 	mov	r0,a
      0000AF E5 81            [12]  245 	mov	a,sp
      0000B1 24 FA            [12]  246 	add	a,#0xfa
      0000B3 F9               [12]  247 	mov	r1,a
      0000B4 E6               [12]  248 	mov	a,@r0
      0000B5 F7               [12]  249 	mov	@r1,a
      0000B6 09               [12]  250 	inc	r1
      0000B7 77 00            [12]  251 	mov	@r1,#0x00
      0000B9 E5 81            [12]  252 	mov	a,sp
      0000BB 24 F6            [12]  253 	add	a,#0xf6
      0000BD F8               [12]  254 	mov	r0,a
      0000BE 74 05            [12]  255 	mov	a,#0x05
      0000C0 26               [12]  256 	add	a,@r0
      0000C1 FD               [12]  257 	mov	r5,a
      0000C2 E4               [12]  258 	clr	a
      0000C3 08               [12]  259 	inc	r0
      0000C4 36               [12]  260 	addc	a,@r0
      0000C5 FE               [12]  261 	mov	r6,a
      0000C6 08               [12]  262 	inc	r0
      0000C7 86 07            [24]  263 	mov	ar7,@r0
      0000C9 8D 82            [24]  264 	mov	dpl,r5
      0000CB 8E 83            [24]  265 	mov	dph,r6
      0000CD 8F F0            [24]  266 	mov	b,r7
      0000CF 12r00r00         [24]  267 	lcall	__gptrget
      0000D2 FD               [12]  268 	mov	r5,a
      0000D3 7F 00            [12]  269 	mov	r7,#0x00
      0000D5 E5 81            [12]  270 	mov	a,sp
      0000D7 24 FA            [12]  271 	add	a,#0xfa
      0000D9 F8               [12]  272 	mov	r0,a
      0000DA E6               [12]  273 	mov	a,@r0
      0000DB C3               [12]  274 	clr	c
      0000DC 9D               [12]  275 	subb	a,r5
      0000DD FD               [12]  276 	mov	r5,a
      0000DE 08               [12]  277 	inc	r0
      0000DF E6               [12]  278 	mov	a,@r0
      0000E0 9F               [12]  279 	subb	a,r7
      0000E1 FF               [12]  280 	mov	r7,a
      0000E2 E5 81            [12]  281 	mov	a,sp
      0000E4 24 F6            [12]  282 	add	a,#0xf6
      0000E6 F8               [12]  283 	mov	r0,a
      0000E7 E5 81            [12]  284 	mov	a,sp
      0000E9 24 FC            [12]  285 	add	a,#0xfc
      0000EB F9               [12]  286 	mov	r1,a
      0000EC 74 03            [12]  287 	mov	a,#0x03
      0000EE 26               [12]  288 	add	a,@r0
      0000EF F7               [12]  289 	mov	@r1,a
      0000F0 E4               [12]  290 	clr	a
      0000F1 08               [12]  291 	inc	r0
      0000F2 36               [12]  292 	addc	a,@r0
      0000F3 09               [12]  293 	inc	r1
      0000F4 F7               [12]  294 	mov	@r1,a
      0000F5 08               [12]  295 	inc	r0
      0000F6 09               [12]  296 	inc	r1
      0000F7 E6               [12]  297 	mov	a,@r0
      0000F8 F7               [12]  298 	mov	@r1,a
      0000F9 E5 81            [12]  299 	mov	a,sp
      0000FB 24 FC            [12]  300 	add	a,#0xfc
      0000FD F8               [12]  301 	mov	r0,a
      0000FE 86 82            [24]  302 	mov	dpl,@r0
      000100 08               [12]  303 	inc	r0
      000101 86 83            [24]  304 	mov	dph,@r0
      000103 08               [12]  305 	inc	r0
      000104 86 F0            [24]  306 	mov	b,@r0
      000106 12r00r00         [24]  307 	lcall	__gptrget
      000109 FE               [12]  308 	mov	r6,a
      00010A A8 81            [24]  309 	mov	r0,sp
      00010C 18               [12]  310 	dec	r0
      00010D A6 06            [24]  311 	mov	@r0,ar6
      00010F 08               [12]  312 	inc	r0
      000110 76 00            [12]  313 	mov	@r0,#0x00
      000112 A8 81            [24]  314 	mov	r0,sp
      000114 18               [12]  315 	dec	r0
      000115 E6               [12]  316 	mov	a,@r0
      000116 52 05            [12]  317 	anl	ar5,a
      000118 08               [12]  318 	inc	r0
      000119 E6               [12]  319 	mov	a,@r0
      00011A 52 07            [12]  320 	anl	ar7,a
      00011C A8 81            [24]  321 	mov	r0,sp
      00011E 18               [12]  322 	dec	r0
      00011F E6               [12]  323 	mov	a,@r0
      000120 B5 05 07         [24]  324 	cjne	a,ar5,00108$
      000123 08               [12]  325 	inc	r0
      000124 E6               [12]  326 	mov	a,@r0
      000125 B5 07 02         [24]  327 	cjne	a,ar7,00108$
      000128 80 02            [24]  328 	sjmp	00109$
      00012A                        329 00108$:
      00012A 80 05            [24]  330 	sjmp	00102$
      00012C                        331 00109$:
                                    332 ;	../../../../core/lib/ringbuf.c:64: return 0;
      00012C 90 00 00         [24]  333 	mov	dptr,#0x0000
      00012F 80 60            [24]  334 	sjmp	00103$
      000131                        335 00102$:
                                    336 ;	../../../../core/lib/ringbuf.c:66: r->data[r->put_ptr] = c;
      000131 E5 81            [12]  337 	mov	a,sp
      000133 24 F6            [12]  338 	add	a,#0xf6
      000135 F8               [12]  339 	mov	r0,a
      000136 86 82            [24]  340 	mov	dpl,@r0
      000138 08               [12]  341 	inc	r0
      000139 86 83            [24]  342 	mov	dph,@r0
      00013B 08               [12]  343 	inc	r0
      00013C 86 F0            [24]  344 	mov	b,@r0
      00013E 12r00r00         [24]  345 	lcall	__gptrget
      000141 FD               [12]  346 	mov	r5,a
      000142 A3               [24]  347 	inc	dptr
      000143 12r00r00         [24]  348 	lcall	__gptrget
      000146 FE               [12]  349 	mov	r6,a
      000147 A3               [24]  350 	inc	dptr
      000148 12r00r00         [24]  351 	lcall	__gptrget
      00014B FF               [12]  352 	mov	r7,a
      00014C E5 81            [12]  353 	mov	a,sp
      00014E 24 F9            [12]  354 	add	a,#0xf9
      000150 F8               [12]  355 	mov	r0,a
      000151 E6               [12]  356 	mov	a,@r0
      000152 2D               [12]  357 	add	a,r5
      000153 FD               [12]  358 	mov	r5,a
      000154 E4               [12]  359 	clr	a
      000155 3E               [12]  360 	addc	a,r6
      000156 FE               [12]  361 	mov	r6,a
      000157 8D 82            [24]  362 	mov	dpl,r5
      000159 8E 83            [24]  363 	mov	dph,r6
      00015B 8F F0            [24]  364 	mov	b,r7
      00015D E5 81            [12]  365 	mov	a,sp
      00015F 24 F2            [12]  366 	add	a,#0xf2
      000161 F8               [12]  367 	mov	r0,a
      000162 E6               [12]  368 	mov	a,@r0
      000163 12r00r00         [24]  369 	lcall	__gptrput
                                    370 ;	../../../../core/lib/ringbuf.c:67: r->put_ptr = (r->put_ptr + 1) & r->mask;
      000166 8A 82            [24]  371 	mov	dpl,r2
      000168 8B 83            [24]  372 	mov	dph,r3
      00016A 8C F0            [24]  373 	mov	b,r4
      00016C 12r00r00         [24]  374 	lcall	__gptrget
      00016F FF               [12]  375 	mov	r7,a
      000170 0F               [12]  376 	inc	r7
      000171 E5 81            [12]  377 	mov	a,sp
      000173 24 FC            [12]  378 	add	a,#0xfc
      000175 F8               [12]  379 	mov	r0,a
      000176 86 82            [24]  380 	mov	dpl,@r0
      000178 08               [12]  381 	inc	r0
      000179 86 83            [24]  382 	mov	dph,@r0
      00017B 08               [12]  383 	inc	r0
      00017C 86 F0            [24]  384 	mov	b,@r0
      00017E 12r00r00         [24]  385 	lcall	__gptrget
      000181 FE               [12]  386 	mov	r6,a
      000182 52 07            [12]  387 	anl	ar7,a
      000184 8A 82            [24]  388 	mov	dpl,r2
      000186 8B 83            [24]  389 	mov	dph,r3
      000188 8C F0            [24]  390 	mov	b,r4
      00018A EF               [12]  391 	mov	a,r7
      00018B 12r00r00         [24]  392 	lcall	__gptrput
                                    393 ;	../../../../core/lib/ringbuf.c:68: return 1;
      00018E 90 00 01         [24]  394 	mov	dptr,#0x0001
      000191                        395 00103$:
      000191 E5 81            [12]  396 	mov	a,sp
      000193 24 F5            [12]  397 	add	a,#0xF5
      000195 F5 81            [12]  398 	mov	sp,a
      000197 02r00r00         [24]  399 	ljmp	__sdcc_banked_ret
                                    400 ;------------------------------------------------------------
                                    401 ;Allocation info for local variables in function 'ringbuf_get'
                                    402 ;------------------------------------------------------------
                                    403 ;r                         Allocated to stack - sp -5
                                    404 ;c                         Allocated to registers r4 
                                    405 ;sloc0                     Allocated to stack - sp -2
                                    406 ;------------------------------------------------------------
                                    407 ;	../../../../core/lib/ringbuf.c:72: ringbuf_get(struct ringbuf *r)
                                    408 ;	-----------------------------------------
                                    409 ;	 function ringbuf_get
                                    410 ;	-----------------------------------------
      00019A                        411 _ringbuf_get:
      00019A C0 82            [24]  412 	push	dpl
      00019C C0 83            [24]  413 	push	dph
      00019E C0 F0            [24]  414 	push	b
      0001A0 05 81            [12]  415 	inc	sp
      0001A2 05 81            [12]  416 	inc	sp
      0001A4 05 81            [12]  417 	inc	sp
                                    418 ;	../../../../core/lib/ringbuf.c:86: if(((r->put_ptr - r->get_ptr) & r->mask) > 0) {
      0001A6 E5 81            [12]  419 	mov	a,sp
      0001A8 24 FB            [12]  420 	add	a,#0xfb
      0001AA F8               [12]  421 	mov	r0,a
      0001AB 74 04            [12]  422 	mov	a,#0x04
      0001AD 26               [12]  423 	add	a,@r0
      0001AE FA               [12]  424 	mov	r2,a
      0001AF E4               [12]  425 	clr	a
      0001B0 08               [12]  426 	inc	r0
      0001B1 36               [12]  427 	addc	a,@r0
      0001B2 FB               [12]  428 	mov	r3,a
      0001B3 08               [12]  429 	inc	r0
      0001B4 86 04            [24]  430 	mov	ar4,@r0
      0001B6 8A 82            [24]  431 	mov	dpl,r2
      0001B8 8B 83            [24]  432 	mov	dph,r3
      0001BA 8C F0            [24]  433 	mov	b,r4
      0001BC 12r00r00         [24]  434 	lcall	__gptrget
      0001BF FA               [12]  435 	mov	r2,a
      0001C0 7C 00            [12]  436 	mov	r4,#0x00
      0001C2 E5 81            [12]  437 	mov	a,sp
      0001C4 24 FB            [12]  438 	add	a,#0xfb
      0001C6 F8               [12]  439 	mov	r0,a
      0001C7 A9 81            [24]  440 	mov	r1,sp
      0001C9 19               [12]  441 	dec	r1
      0001CA 19               [12]  442 	dec	r1
      0001CB 74 05            [12]  443 	mov	a,#0x05
      0001CD 26               [12]  444 	add	a,@r0
      0001CE F7               [12]  445 	mov	@r1,a
      0001CF E4               [12]  446 	clr	a
      0001D0 08               [12]  447 	inc	r0
      0001D1 36               [12]  448 	addc	a,@r0
      0001D2 09               [12]  449 	inc	r1
      0001D3 F7               [12]  450 	mov	@r1,a
      0001D4 08               [12]  451 	inc	r0
      0001D5 09               [12]  452 	inc	r1
      0001D6 E6               [12]  453 	mov	a,@r0
      0001D7 F7               [12]  454 	mov	@r1,a
      0001D8 A8 81            [24]  455 	mov	r0,sp
      0001DA 18               [12]  456 	dec	r0
      0001DB 18               [12]  457 	dec	r0
      0001DC 86 82            [24]  458 	mov	dpl,@r0
      0001DE 08               [12]  459 	inc	r0
      0001DF 86 83            [24]  460 	mov	dph,@r0
      0001E1 08               [12]  461 	inc	r0
      0001E2 86 F0            [24]  462 	mov	b,@r0
      0001E4 12r00r00         [24]  463 	lcall	__gptrget
      0001E7 FB               [12]  464 	mov	r3,a
      0001E8 FE               [12]  465 	mov	r6,a
      0001E9 7F 00            [12]  466 	mov	r7,#0x00
      0001EB EA               [12]  467 	mov	a,r2
      0001EC C3               [12]  468 	clr	c
      0001ED 9E               [12]  469 	subb	a,r6
      0001EE FA               [12]  470 	mov	r2,a
      0001EF EC               [12]  471 	mov	a,r4
      0001F0 9F               [12]  472 	subb	a,r7
      0001F1 FC               [12]  473 	mov	r4,a
      0001F2 E5 81            [12]  474 	mov	a,sp
      0001F4 24 FB            [12]  475 	add	a,#0xfb
      0001F6 F8               [12]  476 	mov	r0,a
      0001F7 74 03            [12]  477 	mov	a,#0x03
      0001F9 26               [12]  478 	add	a,@r0
      0001FA FD               [12]  479 	mov	r5,a
      0001FB E4               [12]  480 	clr	a
      0001FC 08               [12]  481 	inc	r0
      0001FD 36               [12]  482 	addc	a,@r0
      0001FE FE               [12]  483 	mov	r6,a
      0001FF 08               [12]  484 	inc	r0
      000200 86 07            [24]  485 	mov	ar7,@r0
      000202 8D 82            [24]  486 	mov	dpl,r5
      000204 8E 83            [24]  487 	mov	dph,r6
      000206 8F F0            [24]  488 	mov	b,r7
      000208 12r00r00         [24]  489 	lcall	__gptrget
      00020B FF               [12]  490 	mov	r7,a
      00020C FD               [12]  491 	mov	r5,a
      00020D 7E 00            [12]  492 	mov	r6,#0x00
      00020F ED               [12]  493 	mov	a,r5
      000210 52 02            [12]  494 	anl	ar2,a
      000212 EE               [12]  495 	mov	a,r6
      000213 52 04            [12]  496 	anl	ar4,a
      000215 C3               [12]  497 	clr	c
      000216 E4               [12]  498 	clr	a
      000217 9A               [12]  499 	subb	a,r2
      000218 E4               [12]  500 	clr	a
      000219 64 80            [12]  501 	xrl	a,#0x80
      00021B 8C F0            [24]  502 	mov	b,r4
      00021D 63 F0 80         [24]  503 	xrl	b,#0x80
      000220 95 F0            [12]  504 	subb	a,b
      000222 50 47            [24]  505 	jnc	00102$
                                    506 ;	../../../../core/lib/ringbuf.c:87: c = r->data[r->get_ptr];
      000224 E5 81            [12]  507 	mov	a,sp
      000226 24 FB            [12]  508 	add	a,#0xfb
      000228 F8               [12]  509 	mov	r0,a
      000229 86 82            [24]  510 	mov	dpl,@r0
      00022B 08               [12]  511 	inc	r0
      00022C 86 83            [24]  512 	mov	dph,@r0
      00022E 08               [12]  513 	inc	r0
      00022F 86 F0            [24]  514 	mov	b,@r0
      000231 12r00r00         [24]  515 	lcall	__gptrget
      000234 FC               [12]  516 	mov	r4,a
      000235 A3               [24]  517 	inc	dptr
      000236 12r00r00         [24]  518 	lcall	__gptrget
      000239 FD               [12]  519 	mov	r5,a
      00023A A3               [24]  520 	inc	dptr
      00023B 12r00r00         [24]  521 	lcall	__gptrget
      00023E FE               [12]  522 	mov	r6,a
      00023F EB               [12]  523 	mov	a,r3
      000240 2C               [12]  524 	add	a,r4
      000241 FC               [12]  525 	mov	r4,a
      000242 E4               [12]  526 	clr	a
      000243 3D               [12]  527 	addc	a,r5
      000244 FD               [12]  528 	mov	r5,a
      000245 8C 82            [24]  529 	mov	dpl,r4
      000247 8D 83            [24]  530 	mov	dph,r5
      000249 8E F0            [24]  531 	mov	b,r6
      00024B 12r00r00         [24]  532 	lcall	__gptrget
      00024E FC               [12]  533 	mov	r4,a
                                    534 ;	../../../../core/lib/ringbuf.c:88: r->get_ptr = (r->get_ptr + 1) & r->mask;
      00024F EB               [12]  535 	mov	a,r3
      000250 04               [12]  536 	inc	a
      000251 52 07            [12]  537 	anl	ar7,a
      000253 A8 81            [24]  538 	mov	r0,sp
      000255 18               [12]  539 	dec	r0
      000256 18               [12]  540 	dec	r0
      000257 86 82            [24]  541 	mov	dpl,@r0
      000259 08               [12]  542 	inc	r0
      00025A 86 83            [24]  543 	mov	dph,@r0
      00025C 08               [12]  544 	inc	r0
      00025D 86 F0            [24]  545 	mov	b,@r0
      00025F EF               [12]  546 	mov	a,r7
      000260 12r00r00         [24]  547 	lcall	__gptrput
                                    548 ;	../../../../core/lib/ringbuf.c:89: return c;
      000263 7F 00            [12]  549 	mov	r7,#0x00
      000265 8C 82            [24]  550 	mov	dpl,r4
      000267 8F 83            [24]  551 	mov	dph,r7
      000269 80 03            [24]  552 	sjmp	00104$
      00026B                        553 00102$:
                                    554 ;	../../../../core/lib/ringbuf.c:91: return -1;
      00026B 90 FF FF         [24]  555 	mov	dptr,#0xFFFF
      00026E                        556 00104$:
      00026E E5 81            [12]  557 	mov	a,sp
      000270 24 FA            [12]  558 	add	a,#0xFA
      000272 F5 81            [12]  559 	mov	sp,a
      000274 02r00r00         [24]  560 	ljmp	__sdcc_banked_ret
                                    561 ;------------------------------------------------------------
                                    562 ;Allocation info for local variables in function 'ringbuf_size'
                                    563 ;------------------------------------------------------------
                                    564 ;r                         Allocated to registers r5 r6 r7 
                                    565 ;------------------------------------------------------------
                                    566 ;	../../../../core/lib/ringbuf.c:96: ringbuf_size(struct ringbuf *r)
                                    567 ;	-----------------------------------------
                                    568 ;	 function ringbuf_size
                                    569 ;	-----------------------------------------
      000277                        570 _ringbuf_size:
      000277 AD 82            [24]  571 	mov	r5,dpl
      000279 AE 83            [24]  572 	mov	r6,dph
      00027B AF F0            [24]  573 	mov	r7,b
                                    574 ;	../../../../core/lib/ringbuf.c:98: return r->mask + 1;
      00027D 74 03            [12]  575 	mov	a,#0x03
      00027F 2D               [12]  576 	add	a,r5
      000280 FD               [12]  577 	mov	r5,a
      000281 E4               [12]  578 	clr	a
      000282 3E               [12]  579 	addc	a,r6
      000283 FE               [12]  580 	mov	r6,a
      000284 8D 82            [24]  581 	mov	dpl,r5
      000286 8E 83            [24]  582 	mov	dph,r6
      000288 8F F0            [24]  583 	mov	b,r7
      00028A 12r00r00         [24]  584 	lcall	__gptrget
      00028D FD               [12]  585 	mov	r5,a
      00028E 7F 00            [12]  586 	mov	r7,#0x00
      000290 0D               [12]  587 	inc	r5
      000291 BD 00 01         [24]  588 	cjne	r5,#0x00,00103$
      000294 0F               [12]  589 	inc	r7
      000295                        590 00103$:
      000295 8D 82            [24]  591 	mov	dpl,r5
      000297 8F 83            [24]  592 	mov	dph,r7
      000299 02r00r00         [24]  593 	ljmp	__sdcc_banked_ret
                                    594 ;------------------------------------------------------------
                                    595 ;Allocation info for local variables in function 'ringbuf_elements'
                                    596 ;------------------------------------------------------------
                                    597 ;r                         Allocated to registers r5 r6 r7 
                                    598 ;------------------------------------------------------------
                                    599 ;	../../../../core/lib/ringbuf.c:102: ringbuf_elements(struct ringbuf *r)
                                    600 ;	-----------------------------------------
                                    601 ;	 function ringbuf_elements
                                    602 ;	-----------------------------------------
      00029C                        603 _ringbuf_elements:
      00029C AD 82            [24]  604 	mov	r5,dpl
      00029E AE 83            [24]  605 	mov	r6,dph
      0002A0 AF F0            [24]  606 	mov	r7,b
                                    607 ;	../../../../core/lib/ringbuf.c:104: return (r->put_ptr - r->get_ptr) & r->mask;
      0002A2 74 04            [12]  608 	mov	a,#0x04
      0002A4 2D               [12]  609 	add	a,r5
      0002A5 FA               [12]  610 	mov	r2,a
      0002A6 E4               [12]  611 	clr	a
      0002A7 3E               [12]  612 	addc	a,r6
      0002A8 FB               [12]  613 	mov	r3,a
      0002A9 8F 04            [24]  614 	mov	ar4,r7
      0002AB 8A 82            [24]  615 	mov	dpl,r2
      0002AD 8B 83            [24]  616 	mov	dph,r3
      0002AF 8C F0            [24]  617 	mov	b,r4
      0002B1 12r00r00         [24]  618 	lcall	__gptrget
      0002B4 FA               [12]  619 	mov	r2,a
      0002B5 7C 00            [12]  620 	mov	r4,#0x00
      0002B7 74 05            [12]  621 	mov	a,#0x05
      0002B9 2D               [12]  622 	add	a,r5
      0002BA F8               [12]  623 	mov	r0,a
      0002BB E4               [12]  624 	clr	a
      0002BC 3E               [12]  625 	addc	a,r6
      0002BD F9               [12]  626 	mov	r1,a
      0002BE 8F 03            [24]  627 	mov	ar3,r7
      0002C0 88 82            [24]  628 	mov	dpl,r0
      0002C2 89 83            [24]  629 	mov	dph,r1
      0002C4 8B F0            [24]  630 	mov	b,r3
      0002C6 12r00r00         [24]  631 	lcall	__gptrget
      0002C9 F8               [12]  632 	mov	r0,a
      0002CA 7B 00            [12]  633 	mov	r3,#0x00
      0002CC EA               [12]  634 	mov	a,r2
      0002CD C3               [12]  635 	clr	c
      0002CE 98               [12]  636 	subb	a,r0
      0002CF FA               [12]  637 	mov	r2,a
      0002D0 EC               [12]  638 	mov	a,r4
      0002D1 9B               [12]  639 	subb	a,r3
      0002D2 FC               [12]  640 	mov	r4,a
      0002D3 74 03            [12]  641 	mov	a,#0x03
      0002D5 2D               [12]  642 	add	a,r5
      0002D6 FD               [12]  643 	mov	r5,a
      0002D7 E4               [12]  644 	clr	a
      0002D8 3E               [12]  645 	addc	a,r6
      0002D9 FE               [12]  646 	mov	r6,a
      0002DA 8D 82            [24]  647 	mov	dpl,r5
      0002DC 8E 83            [24]  648 	mov	dph,r6
      0002DE 8F F0            [24]  649 	mov	b,r7
      0002E0 12r00r00         [24]  650 	lcall	__gptrget
      0002E3 FD               [12]  651 	mov	r5,a
      0002E4 7F 00            [12]  652 	mov	r7,#0x00
      0002E6 52 02            [12]  653 	anl	ar2,a
      0002E8 EF               [12]  654 	mov	a,r7
      0002E9 52 04            [12]  655 	anl	ar4,a
      0002EB 8A 82            [24]  656 	mov	dpl,r2
      0002ED 8C 83            [24]  657 	mov	dph,r4
      0002EF 02r00r00         [24]  658 	ljmp	__sdcc_banked_ret
                                    659 	.area CSEG    (CODE)
                                    660 	.area CONST   (CODE)
                                    661 	.area XINIT   (CODE)
                                    662 	.area CABS    (ABS,CODE)
