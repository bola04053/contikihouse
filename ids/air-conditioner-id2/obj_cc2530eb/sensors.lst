                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8804 (Aug  6 2013) (Linux)
                                      4 ; This file was generated Mon Aug 25 04:16:51 2014
                                      5 ;--------------------------------------------------------
                                      6 	.module sensors
                                      7 	.optsdcc -mmcs51 --model-huge
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _process_poll
                                     13 	.globl _process_alloc_event
                                     14 	.globl _process_post
                                     15 	.globl _strlen
                                     16 	.globl _strncmp
                                     17 	.globl _ACTIVE
                                     18 	.globl _TX_BYTE
                                     19 	.globl _RX_BYTE
                                     20 	.globl _ERR
                                     21 	.globl _FE
                                     22 	.globl _SLAVE
                                     23 	.globl _RE
                                     24 	.globl _MODE
                                     25 	.globl _T3OVFIF
                                     26 	.globl _T3CH0IF
                                     27 	.globl _T3CH1IF
                                     28 	.globl _T4OVFIF
                                     29 	.globl _T4CH0IF
                                     30 	.globl _T4CH1IF
                                     31 	.globl _OVFIM
                                     32 	.globl _B_0
                                     33 	.globl _B_1
                                     34 	.globl _B_2
                                     35 	.globl _B_3
                                     36 	.globl _B_4
                                     37 	.globl _B_5
                                     38 	.globl _B_6
                                     39 	.globl _B_7
                                     40 	.globl _P2IF
                                     41 	.globl _UTX0IF
                                     42 	.globl _UTX1IF
                                     43 	.globl _P1IF
                                     44 	.globl _WDTIF
                                     45 	.globl _ACC_0
                                     46 	.globl _ACC_1
                                     47 	.globl _ACC_2
                                     48 	.globl _ACC_3
                                     49 	.globl _ACC_4
                                     50 	.globl _ACC_5
                                     51 	.globl _ACC_6
                                     52 	.globl _ACC_7
                                     53 	.globl _P
                                     54 	.globl _F1
                                     55 	.globl _OV
                                     56 	.globl _RS0
                                     57 	.globl _RS1
                                     58 	.globl _F0
                                     59 	.globl _AC
                                     60 	.globl _CY
                                     61 	.globl _DMAIF
                                     62 	.globl _T1IF
                                     63 	.globl _T2IF
                                     64 	.globl _T3IF
                                     65 	.globl _T4IF
                                     66 	.globl _P0IF
                                     67 	.globl _STIF
                                     68 	.globl _DMAIE
                                     69 	.globl _T1IE
                                     70 	.globl _T2IE
                                     71 	.globl _T3IE
                                     72 	.globl _T4IE
                                     73 	.globl _P0IE
                                     74 	.globl _RFERRIE
                                     75 	.globl _ADCIE
                                     76 	.globl _URX0IE
                                     77 	.globl _URX1IE
                                     78 	.globl _ENCIE
                                     79 	.globl _STIE
                                     80 	.globl _EA
                                     81 	.globl _P2_0
                                     82 	.globl _P2_1
                                     83 	.globl _P2_2
                                     84 	.globl _P2_3
                                     85 	.globl _P2_4
                                     86 	.globl _P2_5
                                     87 	.globl _P2_6
                                     88 	.globl _P2_7
                                     89 	.globl _ENCIF_0
                                     90 	.globl _ENCIF_1
                                     91 	.globl _P1_0
                                     92 	.globl _P1_1
                                     93 	.globl _P1_2
                                     94 	.globl _P1_3
                                     95 	.globl _P1_4
                                     96 	.globl _P1_5
                                     97 	.globl _P1_6
                                     98 	.globl _P1_7
                                     99 	.globl _IT0
                                    100 	.globl _RFERRIF
                                    101 	.globl _IT1
                                    102 	.globl _URX0IF
                                    103 	.globl _ADCIF
                                    104 	.globl _URX1IF
                                    105 	.globl _P0_0
                                    106 	.globl _P0_1
                                    107 	.globl _P0_2
                                    108 	.globl _P0_3
                                    109 	.globl _P0_4
                                    110 	.globl _P0_5
                                    111 	.globl _P0_6
                                    112 	.globl _P0_7
                                    113 	.globl _WDCTL
                                    114 	.globl _U1GCR
                                    115 	.globl _U1UCR
                                    116 	.globl _U1BAUD
                                    117 	.globl _U1DBUF
                                    118 	.globl _U1CSR
                                    119 	.globl _U0GCR
                                    120 	.globl _U0UCR
                                    121 	.globl _U0BAUD
                                    122 	.globl _U0DBUF
                                    123 	.globl _U0CSR
                                    124 	.globl _TIMIF
                                    125 	.globl _T4CC1
                                    126 	.globl _T4CCTL1
                                    127 	.globl _T4CC0
                                    128 	.globl _T4CCTL0
                                    129 	.globl _T4CTL
                                    130 	.globl _T4CNT
                                    131 	.globl _T3CC1
                                    132 	.globl _T3CCTL1
                                    133 	.globl _T3CC0
                                    134 	.globl _T3CCTL0
                                    135 	.globl _T3CTL
                                    136 	.globl _T3CNT
                                    137 	.globl _T2MSEL
                                    138 	.globl _T2IRQM
                                    139 	.globl _T2MOVF2
                                    140 	.globl _T2MOVF1
                                    141 	.globl _T2MOVF0
                                    142 	.globl _T2M1
                                    143 	.globl _T2M0
                                    144 	.globl _T2IRQF
                                    145 	.globl _T2EVTCFG
                                    146 	.globl _T2CTRL
                                    147 	.globl _T1STAT
                                    148 	.globl _T1CCTL2
                                    149 	.globl _T1CCTL1
                                    150 	.globl _T1CCTL0
                                    151 	.globl _T1CTL
                                    152 	.globl _T1CNTH
                                    153 	.globl _T1CNTL
                                    154 	.globl _T1CC2H
                                    155 	.globl _T1CC2L
                                    156 	.globl _T1CC1H
                                    157 	.globl _T1CC1L
                                    158 	.globl _T1CC0H
                                    159 	.globl _T1CC0L
                                    160 	.globl _CLKCONSTA
                                    161 	.globl _CLKCONCMD
                                    162 	.globl _SLEEPSTA
                                    163 	.globl _SLEEPCMD
                                    164 	.globl _STLOAD
                                    165 	.globl _ST2
                                    166 	.globl _ST1
                                    167 	.globl _ST0
                                    168 	.globl _RFERRF
                                    169 	.globl _RFIRQF0
                                    170 	.globl _RFST
                                    171 	.globl _RFD
                                    172 	.globl _RFIRQF1
                                    173 	.globl _PSBANK
                                    174 	.globl _FMAP
                                    175 	.globl _MEMCTR
                                    176 	.globl __XPAGE
                                    177 	.globl _MPAGE
                                    178 	.globl _PMUX
                                    179 	.globl _P2DIR
                                    180 	.globl _P1DIR
                                    181 	.globl _P0DIR
                                    182 	.globl _P2INP
                                    183 	.globl _P1INP
                                    184 	.globl _P2SEL
                                    185 	.globl _P1SEL
                                    186 	.globl _P0SEL
                                    187 	.globl _APCFG
                                    188 	.globl _PERCFG
                                    189 	.globl _P0INP
                                    190 	.globl _P2IEN
                                    191 	.globl _P1IEN
                                    192 	.globl _P0IEN
                                    193 	.globl _PICTL
                                    194 	.globl _P2IFG
                                    195 	.globl _P1IFG
                                    196 	.globl _P0IFG
                                    197 	.globl _DMAREQ
                                    198 	.globl _DMAARM
                                    199 	.globl _DMA0CFGH
                                    200 	.globl _DMA0CFGL
                                    201 	.globl _DMA1CFGH
                                    202 	.globl _DMA1CFGL
                                    203 	.globl _DMAIRQ
                                    204 	.globl _ENCCS
                                    205 	.globl _ENCDO
                                    206 	.globl _ENCDI
                                    207 	.globl _RNDH
                                    208 	.globl _RNDL
                                    209 	.globl _ADCH
                                    210 	.globl _ADCL
                                    211 	.globl _ADCCON3
                                    212 	.globl _ADCCON2
                                    213 	.globl _ADCCON1
                                    214 	.globl _B
                                    215 	.globl _IRCON2
                                    216 	.globl _ACC
                                    217 	.globl _PSW
                                    218 	.globl _IRCON
                                    219 	.globl _IP1
                                    220 	.globl _IEN1
                                    221 	.globl _IP0
                                    222 	.globl _IEN0
                                    223 	.globl _P2
                                    224 	.globl _S1CON
                                    225 	.globl _IEN2
                                    226 	.globl _S0CON
                                    227 	.globl _DPS
                                    228 	.globl _P1
                                    229 	.globl _TCON
                                    230 	.globl _PCON
                                    231 	.globl _DPH1
                                    232 	.globl _DPL1
                                    233 	.globl _DPH0
                                    234 	.globl _DPL0
                                    235 	.globl _SP
                                    236 	.globl _P0
                                    237 	.globl _sensors_process
                                    238 	.globl _sensors_event
                                    239 	.globl _X_IEEE_ADDR
                                    240 	.globl _X_INFOPAGE
                                    241 	.globl _X_P2DIR
                                    242 	.globl _X_P1DIR
                                    243 	.globl _X_P0DIR
                                    244 	.globl _X_U1GCR
                                    245 	.globl _X_U1UCR
                                    246 	.globl _X_U1BAUD
                                    247 	.globl _X_U1DBUF
                                    248 	.globl _X_U1CSR
                                    249 	.globl _X_P2INP
                                    250 	.globl _X_P1INP
                                    251 	.globl _X_P2SEL
                                    252 	.globl _X_P1SEL
                                    253 	.globl _X_P0SEL
                                    254 	.globl _X_APCFG
                                    255 	.globl _X_PERCFG
                                    256 	.globl _X_T4CC1
                                    257 	.globl _X_T4CCTL1
                                    258 	.globl _X_T4CC0
                                    259 	.globl _X_T4CCTL0
                                    260 	.globl _X_T4CTL
                                    261 	.globl _X_T4CNT
                                    262 	.globl _X_RFIRQF0
                                    263 	.globl _X_T1CCTL2
                                    264 	.globl _X_T1CCTL1
                                    265 	.globl _X_T1CCTL0
                                    266 	.globl _X_T1CTL
                                    267 	.globl _X_T1CNTH
                                    268 	.globl _X_T1CNTL
                                    269 	.globl _X_RFST
                                    270 	.globl _X_T1CC2H
                                    271 	.globl _X_T1CC2L
                                    272 	.globl _X_T1CC1H
                                    273 	.globl _X_T1CC1L
                                    274 	.globl _X_T1CC0H
                                    275 	.globl _X_T1CC0L
                                    276 	.globl _X_RFD
                                    277 	.globl _X_TIMIF
                                    278 	.globl _X_DMAREQ
                                    279 	.globl _X_DMAARM
                                    280 	.globl _X_DMA0CFGH
                                    281 	.globl _X_DMA0CFGL
                                    282 	.globl _X_DMA1CFGH
                                    283 	.globl _X_DMA1CFGL
                                    284 	.globl _X_DMAIRQ
                                    285 	.globl _X_T3CC1
                                    286 	.globl _X_T3CCTL1
                                    287 	.globl _X_T3CC0
                                    288 	.globl _X_T3CCTL0
                                    289 	.globl _X_T3CTL
                                    290 	.globl _X_T3CNT
                                    291 	.globl _X_WDCTL
                                    292 	.globl _X_MEMCTR
                                    293 	.globl _X_CLKCONCMD
                                    294 	.globl _X_U0GCR
                                    295 	.globl _X_U0UCR
                                    296 	.globl _X_T2MSEL
                                    297 	.globl _X_U0BAUD
                                    298 	.globl _X_U0DBUF
                                    299 	.globl _X_RFERRF
                                    300 	.globl _X_SLEEPCMD
                                    301 	.globl _X_RNDH
                                    302 	.globl _X_RNDL
                                    303 	.globl _X_ADCH
                                    304 	.globl _X_ADCL
                                    305 	.globl _X_ADCCON3
                                    306 	.globl _X_ADCCON2
                                    307 	.globl _X_ADCCON1
                                    308 	.globl _X_ENCCS
                                    309 	.globl _X_ENCDO
                                    310 	.globl _X_ENCDI
                                    311 	.globl _X_T1STAT
                                    312 	.globl _X_PMUX
                                    313 	.globl _X_STLOAD
                                    314 	.globl _X_P2IEN
                                    315 	.globl _X_P0IEN
                                    316 	.globl _X_T2IRQM
                                    317 	.globl _X_T2MOVF2
                                    318 	.globl _X_T2MOVF1
                                    319 	.globl _X_T2MOVF0
                                    320 	.globl _X_T2M1
                                    321 	.globl _X_T2M0
                                    322 	.globl _X_T2IRQF
                                    323 	.globl _X_P2
                                    324 	.globl _X_PSBANK
                                    325 	.globl _X_FMAP
                                    326 	.globl _X_CLKCONSTA
                                    327 	.globl _X_SLEEPSTA
                                    328 	.globl _X_T2EVTCFG
                                    329 	.globl _X_ST2
                                    330 	.globl _X_ST1
                                    331 	.globl _X_ST0
                                    332 	.globl _X_T2CTRL
                                    333 	.globl _X__XPAGE
                                    334 	.globl _X_MPAGE
                                    335 	.globl _X_RFIRQF1
                                    336 	.globl _X_P1
                                    337 	.globl _X_P0INP
                                    338 	.globl _X_P1IEN
                                    339 	.globl _X_PICTL
                                    340 	.globl _X_P2IFG
                                    341 	.globl _X_P1IFG
                                    342 	.globl _X_P0IFG
                                    343 	.globl _X_U0CSR
                                    344 	.globl _X_P0
                                    345 	.globl _USBF5
                                    346 	.globl _USBF4
                                    347 	.globl _USBF3
                                    348 	.globl _USBF2
                                    349 	.globl _USBF1
                                    350 	.globl _USBF0
                                    351 	.globl _USBCNTH
                                    352 	.globl _USBCNTL
                                    353 	.globl _USBCNT0
                                    354 	.globl _USBCSOH
                                    355 	.globl _USBCSOL
                                    356 	.globl _USBMAXO
                                    357 	.globl _USBCSIH
                                    358 	.globl _USBCSIL
                                    359 	.globl _USBCS0
                                    360 	.globl _USBMAXI
                                    361 	.globl _USBCTRL
                                    362 	.globl _USBINDEX
                                    363 	.globl _USBFRMH
                                    364 	.globl _USBFRML
                                    365 	.globl _USBCIE
                                    366 	.globl _USBOIE
                                    367 	.globl _USBIIE
                                    368 	.globl _USBCIF
                                    369 	.globl _USBOIF
                                    370 	.globl _USBIIF
                                    371 	.globl _USBPOW
                                    372 	.globl _USBADDR
                                    373 	.globl _CSPT
                                    374 	.globl _CSPZ
                                    375 	.globl _CSPY
                                    376 	.globl _CSPX
                                    377 	.globl _CSPSTAT
                                    378 	.globl _CSPCTRL
                                    379 	.globl _CSPPROG23
                                    380 	.globl _CSPPROG22
                                    381 	.globl _CSPPROG21
                                    382 	.globl _CSPPROG20
                                    383 	.globl _CSPPROG19
                                    384 	.globl _CSPPROG18
                                    385 	.globl _CSPPROG17
                                    386 	.globl _CSPPROG16
                                    387 	.globl _CSPPROG15
                                    388 	.globl _CSPPROG14
                                    389 	.globl _CSPPROG13
                                    390 	.globl _CSPPROG12
                                    391 	.globl _CSPPROG11
                                    392 	.globl _CSPPROG10
                                    393 	.globl _CSPPROG9
                                    394 	.globl _CSPPROG8
                                    395 	.globl _CSPPROG7
                                    396 	.globl _CSPPROG6
                                    397 	.globl _CSPPROG5
                                    398 	.globl _CSPPROG4
                                    399 	.globl _CSPPROG3
                                    400 	.globl _CSPPROG2
                                    401 	.globl _CSPPROG1
                                    402 	.globl _CSPPROG0
                                    403 	.globl _RFC_OBS_CTRL2
                                    404 	.globl _RFC_OBS_CTRL1
                                    405 	.globl _RFC_OBS_CTRL0
                                    406 	.globl _TXFILTCFG
                                    407 	.globl _PTEST1
                                    408 	.globl _PTEST0
                                    409 	.globl _ATEST
                                    410 	.globl _DACTEST2
                                    411 	.globl _DACTEST1
                                    412 	.globl _DACTEST0
                                    413 	.globl _MDMTEST1
                                    414 	.globl _MDMTEST0
                                    415 	.globl _ADCTEST2
                                    416 	.globl _ADCTEST1
                                    417 	.globl _ADCTEST0
                                    418 	.globl _AGCCTRL3
                                    419 	.globl _AGCCTRL2
                                    420 	.globl _AGCCTRL1
                                    421 	.globl _AGCCTRL0
                                    422 	.globl _FSCAL3
                                    423 	.globl _FSCAL2
                                    424 	.globl _FSCAL1
                                    425 	.globl _FSCAL0
                                    426 	.globl _FSCTRL
                                    427 	.globl _RXCTRL
                                    428 	.globl _FREQEST
                                    429 	.globl _MDMCTRL1
                                    430 	.globl _MDMCTRL0
                                    431 	.globl _RFRND
                                    432 	.globl _RFERRM
                                    433 	.globl _RFIRQM1
                                    434 	.globl _RFIRQM0
                                    435 	.globl _TXLAST_PTR
                                    436 	.globl _TXFIRST_PTR
                                    437 	.globl _RXP1_PTR
                                    438 	.globl _RXLAST_PTR
                                    439 	.globl _RXFIRST_PTR
                                    440 	.globl _TXFIFOCNT
                                    441 	.globl _RXFIFOCNT
                                    442 	.globl _RXFIRST
                                    443 	.globl _RSSISTAT
                                    444 	.globl _RSSI
                                    445 	.globl _CCACTRL1
                                    446 	.globl _CCACTRL0
                                    447 	.globl _FSMCTRL
                                    448 	.globl _FIFOPCTRL
                                    449 	.globl _FSMSTAT1
                                    450 	.globl _FSMSTAT0
                                    451 	.globl _TXCTRL
                                    452 	.globl _TXPOWER
                                    453 	.globl _FREQCTRL
                                    454 	.globl _FREQTUNE
                                    455 	.globl _RXMASKCLR
                                    456 	.globl _RXMASKSET
                                    457 	.globl _RXENABLE
                                    458 	.globl _FRMCTRL1
                                    459 	.globl _FRMCTRL0
                                    460 	.globl _SRCEXTEN2
                                    461 	.globl _SRCEXTEN1
                                    462 	.globl _SRCEXTEN0
                                    463 	.globl _SRCSHORTEN2
                                    464 	.globl _SRCSHORTEN1
                                    465 	.globl _SRCSHORTEN0
                                    466 	.globl _SRCMATCH
                                    467 	.globl _FRMFILT1
                                    468 	.globl _FRMFILT0
                                    469 	.globl _SHORT_ADDR1
                                    470 	.globl _SHORT_ADDR0
                                    471 	.globl _PAN_ID1
                                    472 	.globl _PAN_ID0
                                    473 	.globl _EXT_ADDR7
                                    474 	.globl _EXT_ADDR6
                                    475 	.globl _EXT_ADDR5
                                    476 	.globl _EXT_ADDR4
                                    477 	.globl _EXT_ADDR3
                                    478 	.globl _EXT_ADDR2
                                    479 	.globl _EXT_ADDR1
                                    480 	.globl _EXT_ADDR0
                                    481 	.globl _SRCSHORTPENDEN2
                                    482 	.globl _SRCSHORTPENDEN1
                                    483 	.globl _SRCSHORTPENDEN0
                                    484 	.globl _SRCEXTPENDEN2
                                    485 	.globl _SRCEXTPENDEN1
                                    486 	.globl _SRCEXTPENDEN0
                                    487 	.globl _SRCRESINDEX
                                    488 	.globl _SRCRESMASK2
                                    489 	.globl _SRCRESMASK1
                                    490 	.globl _SRCRESMASK0
                                    491 	.globl _SRC_ADDR_TABLE
                                    492 	.globl _TXFIFO
                                    493 	.globl _RXFIFO
                                    494 	.globl _RFCORE_RAM
                                    495 	.globl _CMPCTL
                                    496 	.globl _OPAMPS
                                    497 	.globl _OPAMPC
                                    498 	.globl _STCV2
                                    499 	.globl _STCV1
                                    500 	.globl _STCV0
                                    501 	.globl _STCS
                                    502 	.globl _STCC
                                    503 	.globl _T1CC4H
                                    504 	.globl _T1CC4L
                                    505 	.globl _T1CC3H
                                    506 	.globl _T1CC3L
                                    507 	.globl _XX_T1CC2H
                                    508 	.globl _XX_T1CC2L
                                    509 	.globl _XX_T1CC1H
                                    510 	.globl _XX_T1CC1L
                                    511 	.globl _XX_T1CC0H
                                    512 	.globl _XX_T1CC0L
                                    513 	.globl _T1CCTL4
                                    514 	.globl _T1CCTL3
                                    515 	.globl _XX_T1CCTL2
                                    516 	.globl _XX_T1CCTL1
                                    517 	.globl _XX_T1CCTL0
                                    518 	.globl _CLD
                                    519 	.globl _IRCTL
                                    520 	.globl _CHIPINFO1
                                    521 	.globl _CHIPINFO0
                                    522 	.globl _FWDATA
                                    523 	.globl _FADDRH
                                    524 	.globl _FADDRL
                                    525 	.globl _FCTL
                                    526 	.globl _IVCTRL
                                    527 	.globl _BATTMON
                                    528 	.globl _SRCRC
                                    529 	.globl _DBGDATA
                                    530 	.globl _TESTREG0
                                    531 	.globl _CHIPID
                                    532 	.globl _CHVER
                                    533 	.globl _OBSSEL5
                                    534 	.globl _OBSSEL4
                                    535 	.globl _OBSSEL3
                                    536 	.globl _OBSSEL2
                                    537 	.globl _OBSSEL1
                                    538 	.globl _OBSSEL0
                                    539 	.globl _I2CIO
                                    540 	.globl _I2CWC
                                    541 	.globl _I2CADDR
                                    542 	.globl _I2CDATA
                                    543 	.globl _I2CSTAT
                                    544 	.globl _I2CCFG
                                    545 	.globl _OPAMPMC
                                    546 	.globl _MONMUX
                                    547 	.globl _sensors_first
                                    548 	.globl _sensors_next
                                    549 	.globl _sensors_changed
                                    550 	.globl _sensors_find
                                    551 ;--------------------------------------------------------
                                    552 ; special function registers
                                    553 ;--------------------------------------------------------
                                    554 	.area RSEG    (ABS,DATA)
      000000                        555 	.org 0x0000
                           000080   556 _P0	=	0x0080
                           000081   557 _SP	=	0x0081
                           000082   558 _DPL0	=	0x0082
                           000083   559 _DPH0	=	0x0083
                           000084   560 _DPL1	=	0x0084
                           000085   561 _DPH1	=	0x0085
                           000087   562 _PCON	=	0x0087
                           000088   563 _TCON	=	0x0088
                           000090   564 _P1	=	0x0090
                           000092   565 _DPS	=	0x0092
                           000098   566 _S0CON	=	0x0098
                           00009A   567 _IEN2	=	0x009a
                           00009B   568 _S1CON	=	0x009b
                           0000A0   569 _P2	=	0x00a0
                           0000A8   570 _IEN0	=	0x00a8
                           0000A9   571 _IP0	=	0x00a9
                           0000B8   572 _IEN1	=	0x00b8
                           0000B9   573 _IP1	=	0x00b9
                           0000C0   574 _IRCON	=	0x00c0
                           0000D0   575 _PSW	=	0x00d0
                           0000E0   576 _ACC	=	0x00e0
                           0000E8   577 _IRCON2	=	0x00e8
                           0000F0   578 _B	=	0x00f0
                           0000B4   579 _ADCCON1	=	0x00b4
                           0000B5   580 _ADCCON2	=	0x00b5
                           0000B6   581 _ADCCON3	=	0x00b6
                           0000BA   582 _ADCL	=	0x00ba
                           0000BB   583 _ADCH	=	0x00bb
                           0000BC   584 _RNDL	=	0x00bc
                           0000BD   585 _RNDH	=	0x00bd
                           0000B1   586 _ENCDI	=	0x00b1
                           0000B2   587 _ENCDO	=	0x00b2
                           0000B3   588 _ENCCS	=	0x00b3
                           0000D1   589 _DMAIRQ	=	0x00d1
                           0000D2   590 _DMA1CFGL	=	0x00d2
                           0000D3   591 _DMA1CFGH	=	0x00d3
                           0000D4   592 _DMA0CFGL	=	0x00d4
                           0000D5   593 _DMA0CFGH	=	0x00d5
                           0000D6   594 _DMAARM	=	0x00d6
                           0000D7   595 _DMAREQ	=	0x00d7
                           000089   596 _P0IFG	=	0x0089
                           00008A   597 _P1IFG	=	0x008a
                           00008B   598 _P2IFG	=	0x008b
                           00008C   599 _PICTL	=	0x008c
                           0000AB   600 _P0IEN	=	0x00ab
                           00008D   601 _P1IEN	=	0x008d
                           0000AC   602 _P2IEN	=	0x00ac
                           00008F   603 _P0INP	=	0x008f
                           0000F1   604 _PERCFG	=	0x00f1
                           0000F2   605 _APCFG	=	0x00f2
                           0000F3   606 _P0SEL	=	0x00f3
                           0000F4   607 _P1SEL	=	0x00f4
                           0000F5   608 _P2SEL	=	0x00f5
                           0000F6   609 _P1INP	=	0x00f6
                           0000F7   610 _P2INP	=	0x00f7
                           0000FD   611 _P0DIR	=	0x00fd
                           0000FE   612 _P1DIR	=	0x00fe
                           0000FF   613 _P2DIR	=	0x00ff
                           0000AE   614 _PMUX	=	0x00ae
                           000093   615 _MPAGE	=	0x0093
                           000093   616 __XPAGE	=	0x0093
                           0000C7   617 _MEMCTR	=	0x00c7
                           00009F   618 _FMAP	=	0x009f
                           00009F   619 _PSBANK	=	0x009f
                           000091   620 _RFIRQF1	=	0x0091
                           0000D9   621 _RFD	=	0x00d9
                           0000E1   622 _RFST	=	0x00e1
                           0000E9   623 _RFIRQF0	=	0x00e9
                           0000BF   624 _RFERRF	=	0x00bf
                           000095   625 _ST0	=	0x0095
                           000096   626 _ST1	=	0x0096
                           000097   627 _ST2	=	0x0097
                           0000AD   628 _STLOAD	=	0x00ad
                           0000BE   629 _SLEEPCMD	=	0x00be
                           00009D   630 _SLEEPSTA	=	0x009d
                           0000C6   631 _CLKCONCMD	=	0x00c6
                           00009E   632 _CLKCONSTA	=	0x009e
                           0000DA   633 _T1CC0L	=	0x00da
                           0000DB   634 _T1CC0H	=	0x00db
                           0000DC   635 _T1CC1L	=	0x00dc
                           0000DD   636 _T1CC1H	=	0x00dd
                           0000DE   637 _T1CC2L	=	0x00de
                           0000DF   638 _T1CC2H	=	0x00df
                           0000E2   639 _T1CNTL	=	0x00e2
                           0000E3   640 _T1CNTH	=	0x00e3
                           0000E4   641 _T1CTL	=	0x00e4
                           0000E5   642 _T1CCTL0	=	0x00e5
                           0000E6   643 _T1CCTL1	=	0x00e6
                           0000E7   644 _T1CCTL2	=	0x00e7
                           0000AF   645 _T1STAT	=	0x00af
                           000094   646 _T2CTRL	=	0x0094
                           00009C   647 _T2EVTCFG	=	0x009c
                           0000A1   648 _T2IRQF	=	0x00a1
                           0000A2   649 _T2M0	=	0x00a2
                           0000A3   650 _T2M1	=	0x00a3
                           0000A4   651 _T2MOVF0	=	0x00a4
                           0000A5   652 _T2MOVF1	=	0x00a5
                           0000A6   653 _T2MOVF2	=	0x00a6
                           0000A7   654 _T2IRQM	=	0x00a7
                           0000C3   655 _T2MSEL	=	0x00c3
                           0000CA   656 _T3CNT	=	0x00ca
                           0000CB   657 _T3CTL	=	0x00cb
                           0000CC   658 _T3CCTL0	=	0x00cc
                           0000CD   659 _T3CC0	=	0x00cd
                           0000CE   660 _T3CCTL1	=	0x00ce
                           0000CF   661 _T3CC1	=	0x00cf
                           0000EA   662 _T4CNT	=	0x00ea
                           0000EB   663 _T4CTL	=	0x00eb
                           0000EC   664 _T4CCTL0	=	0x00ec
                           0000ED   665 _T4CC0	=	0x00ed
                           0000EE   666 _T4CCTL1	=	0x00ee
                           0000EF   667 _T4CC1	=	0x00ef
                           0000D8   668 _TIMIF	=	0x00d8
                           000086   669 _U0CSR	=	0x0086
                           0000C1   670 _U0DBUF	=	0x00c1
                           0000C2   671 _U0BAUD	=	0x00c2
                           0000C4   672 _U0UCR	=	0x00c4
                           0000C5   673 _U0GCR	=	0x00c5
                           0000F8   674 _U1CSR	=	0x00f8
                           0000F9   675 _U1DBUF	=	0x00f9
                           0000FA   676 _U1BAUD	=	0x00fa
                           0000FB   677 _U1UCR	=	0x00fb
                           0000FC   678 _U1GCR	=	0x00fc
                           0000C9   679 _WDCTL	=	0x00c9
                                    680 ;--------------------------------------------------------
                                    681 ; special function bits
                                    682 ;--------------------------------------------------------
                                    683 	.area RSEG    (ABS,DATA)
      000000                        684 	.org 0x0000
                           000087   685 _P0_7	=	0x0087
                           000086   686 _P0_6	=	0x0086
                           000085   687 _P0_5	=	0x0085
                           000084   688 _P0_4	=	0x0084
                           000083   689 _P0_3	=	0x0083
                           000082   690 _P0_2	=	0x0082
                           000081   691 _P0_1	=	0x0081
                           000080   692 _P0_0	=	0x0080
                           00008F   693 _URX1IF	=	0x008f
                           00008D   694 _ADCIF	=	0x008d
                           00008B   695 _URX0IF	=	0x008b
                           00008A   696 _IT1	=	0x008a
                           000089   697 _RFERRIF	=	0x0089
                           000088   698 _IT0	=	0x0088
                           000097   699 _P1_7	=	0x0097
                           000096   700 _P1_6	=	0x0096
                           000095   701 _P1_5	=	0x0095
                           000094   702 _P1_4	=	0x0094
                           000093   703 _P1_3	=	0x0093
                           000092   704 _P1_2	=	0x0092
                           000091   705 _P1_1	=	0x0091
                           000090   706 _P1_0	=	0x0090
                           000099   707 _ENCIF_1	=	0x0099
                           000098   708 _ENCIF_0	=	0x0098
                           0000A7   709 _P2_7	=	0x00a7
                           0000A6   710 _P2_6	=	0x00a6
                           0000A5   711 _P2_5	=	0x00a5
                           0000A4   712 _P2_4	=	0x00a4
                           0000A3   713 _P2_3	=	0x00a3
                           0000A2   714 _P2_2	=	0x00a2
                           0000A1   715 _P2_1	=	0x00a1
                           0000A0   716 _P2_0	=	0x00a0
                           0000AF   717 _EA	=	0x00af
                           0000AD   718 _STIE	=	0x00ad
                           0000AC   719 _ENCIE	=	0x00ac
                           0000AB   720 _URX1IE	=	0x00ab
                           0000AA   721 _URX0IE	=	0x00aa
                           0000A9   722 _ADCIE	=	0x00a9
                           0000A8   723 _RFERRIE	=	0x00a8
                           0000BD   724 _P0IE	=	0x00bd
                           0000BC   725 _T4IE	=	0x00bc
                           0000BB   726 _T3IE	=	0x00bb
                           0000BA   727 _T2IE	=	0x00ba
                           0000B9   728 _T1IE	=	0x00b9
                           0000B8   729 _DMAIE	=	0x00b8
                           0000C7   730 _STIF	=	0x00c7
                           0000C5   731 _P0IF	=	0x00c5
                           0000C4   732 _T4IF	=	0x00c4
                           0000C3   733 _T3IF	=	0x00c3
                           0000C2   734 _T2IF	=	0x00c2
                           0000C1   735 _T1IF	=	0x00c1
                           0000C0   736 _DMAIF	=	0x00c0
                           0000D7   737 _CY	=	0x00d7
                           0000D6   738 _AC	=	0x00d6
                           0000D5   739 _F0	=	0x00d5
                           0000D4   740 _RS1	=	0x00d4
                           0000D3   741 _RS0	=	0x00d3
                           0000D2   742 _OV	=	0x00d2
                           0000D1   743 _F1	=	0x00d1
                           0000D0   744 _P	=	0x00d0
                           0000E7   745 _ACC_7	=	0x00e7
                           0000E6   746 _ACC_6	=	0x00e6
                           0000E5   747 _ACC_5	=	0x00e5
                           0000E4   748 _ACC_4	=	0x00e4
                           0000E3   749 _ACC_3	=	0x00e3
                           0000E2   750 _ACC_2	=	0x00e2
                           0000E1   751 _ACC_1	=	0x00e1
                           0000E0   752 _ACC_0	=	0x00e0
                           0000EC   753 _WDTIF	=	0x00ec
                           0000EB   754 _P1IF	=	0x00eb
                           0000EA   755 _UTX1IF	=	0x00ea
                           0000E9   756 _UTX0IF	=	0x00e9
                           0000E8   757 _P2IF	=	0x00e8
                           0000F7   758 _B_7	=	0x00f7
                           0000F6   759 _B_6	=	0x00f6
                           0000F5   760 _B_5	=	0x00f5
                           0000F4   761 _B_4	=	0x00f4
                           0000F3   762 _B_3	=	0x00f3
                           0000F2   763 _B_2	=	0x00f2
                           0000F1   764 _B_1	=	0x00f1
                           0000F0   765 _B_0	=	0x00f0
                           0000DE   766 _OVFIM	=	0x00de
                           0000DD   767 _T4CH1IF	=	0x00dd
                           0000DC   768 _T4CH0IF	=	0x00dc
                           0000DB   769 _T4OVFIF	=	0x00db
                           0000DA   770 _T3CH1IF	=	0x00da
                           0000D9   771 _T3CH0IF	=	0x00d9
                           0000D8   772 _T3OVFIF	=	0x00d8
                           0000FF   773 _MODE	=	0x00ff
                           0000FE   774 _RE	=	0x00fe
                           0000FD   775 _SLAVE	=	0x00fd
                           0000FC   776 _FE	=	0x00fc
                           0000FB   777 _ERR	=	0x00fb
                           0000FA   778 _RX_BYTE	=	0x00fa
                           0000F9   779 _TX_BYTE	=	0x00f9
                           0000F8   780 _ACTIVE	=	0x00f8
                                    781 ;--------------------------------------------------------
                                    782 ; overlayable register banks
                                    783 ;--------------------------------------------------------
                                    784 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        785 	.ds 8
                                    786 ;--------------------------------------------------------
                                    787 ; internal ram data
                                    788 ;--------------------------------------------------------
                                    789 	.area DSEG    (DATA)
                                    790 ;--------------------------------------------------------
                                    791 ; overlayable items in internal ram 
                                    792 ;--------------------------------------------------------
                                    793 ;--------------------------------------------------------
                                    794 ; indirectly addressable internal ram data
                                    795 ;--------------------------------------------------------
                                    796 	.area ISEG    (DATA)
                                    797 ;--------------------------------------------------------
                                    798 ; absolute internal ram data
                                    799 ;--------------------------------------------------------
                                    800 	.area IABS    (ABS,DATA)
                                    801 	.area IABS    (ABS,DATA)
                                    802 ;--------------------------------------------------------
                                    803 ; bit data
                                    804 ;--------------------------------------------------------
                                    805 	.area BSEG    (BIT)
                                    806 ;--------------------------------------------------------
                                    807 ; paged external ram data
                                    808 ;--------------------------------------------------------
                                    809 	.area PSEG    (PAG,XDATA)
                                    810 ;--------------------------------------------------------
                                    811 ; external ram data
                                    812 ;--------------------------------------------------------
                                    813 	.area XSEG    (XDATA)
                           0061A6   814 _MONMUX	=	0x61a6
                           0061A6   815 _OPAMPMC	=	0x61a6
                           006230   816 _I2CCFG	=	0x6230
                           006231   817 _I2CSTAT	=	0x6231
                           006232   818 _I2CDATA	=	0x6232
                           006233   819 _I2CADDR	=	0x6233
                           006234   820 _I2CWC	=	0x6234
                           006235   821 _I2CIO	=	0x6235
                           006243   822 _OBSSEL0	=	0x6243
                           006244   823 _OBSSEL1	=	0x6244
                           006245   824 _OBSSEL2	=	0x6245
                           006246   825 _OBSSEL3	=	0x6246
                           006247   826 _OBSSEL4	=	0x6247
                           006248   827 _OBSSEL5	=	0x6248
                           006249   828 _CHVER	=	0x6249
                           00624A   829 _CHIPID	=	0x624a
                           00624B   830 _TESTREG0	=	0x624b
                           006260   831 _DBGDATA	=	0x6260
                           006262   832 _SRCRC	=	0x6262
                           006264   833 _BATTMON	=	0x6264
                           006265   834 _IVCTRL	=	0x6265
                           006270   835 _FCTL	=	0x6270
                           006271   836 _FADDRL	=	0x6271
                           006272   837 _FADDRH	=	0x6272
                           006273   838 _FWDATA	=	0x6273
                           006276   839 _CHIPINFO0	=	0x6276
                           006277   840 _CHIPINFO1	=	0x6277
                           006281   841 _IRCTL	=	0x6281
                           006290   842 _CLD	=	0x6290
                           0062A0   843 _XX_T1CCTL0	=	0x62a0
                           0062A1   844 _XX_T1CCTL1	=	0x62a1
                           0062A2   845 _XX_T1CCTL2	=	0x62a2
                           0062A3   846 _T1CCTL3	=	0x62a3
                           0062A4   847 _T1CCTL4	=	0x62a4
                           0062A6   848 _XX_T1CC0L	=	0x62a6
                           0062A7   849 _XX_T1CC0H	=	0x62a7
                           0062A8   850 _XX_T1CC1L	=	0x62a8
                           0062A9   851 _XX_T1CC1H	=	0x62a9
                           0062AA   852 _XX_T1CC2L	=	0x62aa
                           0062AB   853 _XX_T1CC2H	=	0x62ab
                           0062AC   854 _T1CC3L	=	0x62ac
                           0062AD   855 _T1CC3H	=	0x62ad
                           0062AE   856 _T1CC4L	=	0x62ae
                           0062AF   857 _T1CC4H	=	0x62af
                           0062B0   858 _STCC	=	0x62b0
                           0062B1   859 _STCS	=	0x62b1
                           0062B2   860 _STCV0	=	0x62b2
                           0062B3   861 _STCV1	=	0x62b3
                           0062B4   862 _STCV2	=	0x62b4
                           0062C0   863 _OPAMPC	=	0x62c0
                           0062C1   864 _OPAMPS	=	0x62c1
                           0062D0   865 _CMPCTL	=	0x62d0
                           006000   866 _RFCORE_RAM	=	0x6000
                           006000   867 _RXFIFO	=	0x6000
                           006080   868 _TXFIFO	=	0x6080
                           006100   869 _SRC_ADDR_TABLE	=	0x6100
                           006160   870 _SRCRESMASK0	=	0x6160
                           006161   871 _SRCRESMASK1	=	0x6161
                           006162   872 _SRCRESMASK2	=	0x6162
                           006163   873 _SRCRESINDEX	=	0x6163
                           006164   874 _SRCEXTPENDEN0	=	0x6164
                           006165   875 _SRCEXTPENDEN1	=	0x6165
                           006166   876 _SRCEXTPENDEN2	=	0x6166
                           006167   877 _SRCSHORTPENDEN0	=	0x6167
                           006168   878 _SRCSHORTPENDEN1	=	0x6168
                           006169   879 _SRCSHORTPENDEN2	=	0x6169
                           00616A   880 _EXT_ADDR0	=	0x616a
                           00616B   881 _EXT_ADDR1	=	0x616b
                           00616C   882 _EXT_ADDR2	=	0x616c
                           00616D   883 _EXT_ADDR3	=	0x616d
                           00616E   884 _EXT_ADDR4	=	0x616e
                           00616F   885 _EXT_ADDR5	=	0x616f
                           006170   886 _EXT_ADDR6	=	0x6170
                           006171   887 _EXT_ADDR7	=	0x6171
                           006172   888 _PAN_ID0	=	0x6172
                           006173   889 _PAN_ID1	=	0x6173
                           006174   890 _SHORT_ADDR0	=	0x6174
                           006175   891 _SHORT_ADDR1	=	0x6175
                           006180   892 _FRMFILT0	=	0x6180
                           006181   893 _FRMFILT1	=	0x6181
                           006182   894 _SRCMATCH	=	0x6182
                           006183   895 _SRCSHORTEN0	=	0x6183
                           006184   896 _SRCSHORTEN1	=	0x6184
                           006185   897 _SRCSHORTEN2	=	0x6185
                           006186   898 _SRCEXTEN0	=	0x6186
                           006187   899 _SRCEXTEN1	=	0x6187
                           006188   900 _SRCEXTEN2	=	0x6188
                           006189   901 _FRMCTRL0	=	0x6189
                           00618A   902 _FRMCTRL1	=	0x618a
                           00618B   903 _RXENABLE	=	0x618b
                           00618C   904 _RXMASKSET	=	0x618c
                           00618D   905 _RXMASKCLR	=	0x618d
                           00618E   906 _FREQTUNE	=	0x618e
                           00618F   907 _FREQCTRL	=	0x618f
                           006190   908 _TXPOWER	=	0x6190
                           006191   909 _TXCTRL	=	0x6191
                           006192   910 _FSMSTAT0	=	0x6192
                           006193   911 _FSMSTAT1	=	0x6193
                           006194   912 _FIFOPCTRL	=	0x6194
                           006195   913 _FSMCTRL	=	0x6195
                           006196   914 _CCACTRL0	=	0x6196
                           006197   915 _CCACTRL1	=	0x6197
                           006198   916 _RSSI	=	0x6198
                           006199   917 _RSSISTAT	=	0x6199
                           00619A   918 _RXFIRST	=	0x619a
                           00619B   919 _RXFIFOCNT	=	0x619b
                           00619C   920 _TXFIFOCNT	=	0x619c
                           00619D   921 _RXFIRST_PTR	=	0x619d
                           00619E   922 _RXLAST_PTR	=	0x619e
                           00619F   923 _RXP1_PTR	=	0x619f
                           0061A1   924 _TXFIRST_PTR	=	0x61a1
                           0061A2   925 _TXLAST_PTR	=	0x61a2
                           0061A3   926 _RFIRQM0	=	0x61a3
                           0061A4   927 _RFIRQM1	=	0x61a4
                           0061A5   928 _RFERRM	=	0x61a5
                           0061A7   929 _RFRND	=	0x61a7
                           0061A8   930 _MDMCTRL0	=	0x61a8
                           0061A9   931 _MDMCTRL1	=	0x61a9
                           0061AA   932 _FREQEST	=	0x61aa
                           0061AB   933 _RXCTRL	=	0x61ab
                           0061AC   934 _FSCTRL	=	0x61ac
                           0061AD   935 _FSCAL0	=	0x61ad
                           0061AE   936 _FSCAL1	=	0x61ae
                           0061AF   937 _FSCAL2	=	0x61af
                           0061B0   938 _FSCAL3	=	0x61b0
                           0061B1   939 _AGCCTRL0	=	0x61b1
                           0061B2   940 _AGCCTRL1	=	0x61b2
                           0061B3   941 _AGCCTRL2	=	0x61b3
                           0061B4   942 _AGCCTRL3	=	0x61b4
                           0061B5   943 _ADCTEST0	=	0x61b5
                           0061B6   944 _ADCTEST1	=	0x61b6
                           0061B7   945 _ADCTEST2	=	0x61b7
                           0061B8   946 _MDMTEST0	=	0x61b8
                           0061B9   947 _MDMTEST1	=	0x61b9
                           0061BA   948 _DACTEST0	=	0x61ba
                           0061BB   949 _DACTEST1	=	0x61bb
                           0061BC   950 _DACTEST2	=	0x61bc
                           0061BD   951 _ATEST	=	0x61bd
                           0061BE   952 _PTEST0	=	0x61be
                           0061BF   953 _PTEST1	=	0x61bf
                           0061FA   954 _TXFILTCFG	=	0x61fa
                           0061EB   955 _RFC_OBS_CTRL0	=	0x61eb
                           0061EC   956 _RFC_OBS_CTRL1	=	0x61ec
                           0061ED   957 _RFC_OBS_CTRL2	=	0x61ed
                           0061C0   958 _CSPPROG0	=	0x61c0
                           0061C1   959 _CSPPROG1	=	0x61c1
                           0061C2   960 _CSPPROG2	=	0x61c2
                           0061C3   961 _CSPPROG3	=	0x61c3
                           0061C4   962 _CSPPROG4	=	0x61c4
                           0061C5   963 _CSPPROG5	=	0x61c5
                           0061C6   964 _CSPPROG6	=	0x61c6
                           0061C7   965 _CSPPROG7	=	0x61c7
                           0061C8   966 _CSPPROG8	=	0x61c8
                           0061C9   967 _CSPPROG9	=	0x61c9
                           0061CA   968 _CSPPROG10	=	0x61ca
                           0061CB   969 _CSPPROG11	=	0x61cb
                           0061CC   970 _CSPPROG12	=	0x61cc
                           0061CD   971 _CSPPROG13	=	0x61cd
                           0061CE   972 _CSPPROG14	=	0x61ce
                           0061CF   973 _CSPPROG15	=	0x61cf
                           0061D0   974 _CSPPROG16	=	0x61d0
                           0061D1   975 _CSPPROG17	=	0x61d1
                           0061D2   976 _CSPPROG18	=	0x61d2
                           0061D3   977 _CSPPROG19	=	0x61d3
                           0061D4   978 _CSPPROG20	=	0x61d4
                           0061D5   979 _CSPPROG21	=	0x61d5
                           0061D6   980 _CSPPROG22	=	0x61d6
                           0061D7   981 _CSPPROG23	=	0x61d7
                           0061E0   982 _CSPCTRL	=	0x61e0
                           0061E1   983 _CSPSTAT	=	0x61e1
                           0061E2   984 _CSPX	=	0x61e2
                           0061E3   985 _CSPY	=	0x61e3
                           0061E4   986 _CSPZ	=	0x61e4
                           0061E5   987 _CSPT	=	0x61e5
                           006200   988 _USBADDR	=	0x6200
                           006201   989 _USBPOW	=	0x6201
                           006202   990 _USBIIF	=	0x6202
                           006204   991 _USBOIF	=	0x6204
                           006206   992 _USBCIF	=	0x6206
                           006207   993 _USBIIE	=	0x6207
                           006209   994 _USBOIE	=	0x6209
                           00620B   995 _USBCIE	=	0x620b
                           00620C   996 _USBFRML	=	0x620c
                           00620D   997 _USBFRMH	=	0x620d
                           00620E   998 _USBINDEX	=	0x620e
                           00620F   999 _USBCTRL	=	0x620f
                           006210  1000 _USBMAXI	=	0x6210
                           006211  1001 _USBCS0	=	0x6211
                           006211  1002 _USBCSIL	=	0x6211
                           006212  1003 _USBCSIH	=	0x6212
                           006213  1004 _USBMAXO	=	0x6213
                           006214  1005 _USBCSOL	=	0x6214
                           006215  1006 _USBCSOH	=	0x6215
                           006216  1007 _USBCNT0	=	0x6216
                           006216  1008 _USBCNTL	=	0x6216
                           006217  1009 _USBCNTH	=	0x6217
                           006220  1010 _USBF0	=	0x6220
                           006222  1011 _USBF1	=	0x6222
                           006224  1012 _USBF2	=	0x6224
                           006226  1013 _USBF3	=	0x6226
                           006228  1014 _USBF4	=	0x6228
                           00622A  1015 _USBF5	=	0x622a
                           007080  1016 _X_P0	=	0x7080
                           007086  1017 _X_U0CSR	=	0x7086
                           007089  1018 _X_P0IFG	=	0x7089
                           00708A  1019 _X_P1IFG	=	0x708a
                           00708B  1020 _X_P2IFG	=	0x708b
                           00708C  1021 _X_PICTL	=	0x708c
                           00708D  1022 _X_P1IEN	=	0x708d
                           00708F  1023 _X_P0INP	=	0x708f
                           007090  1024 _X_P1	=	0x7090
                           007091  1025 _X_RFIRQF1	=	0x7091
                           007093  1026 _X_MPAGE	=	0x7093
                           007093  1027 _X__XPAGE	=	0x7093
                           007094  1028 _X_T2CTRL	=	0x7094
                           007095  1029 _X_ST0	=	0x7095
                           007096  1030 _X_ST1	=	0x7096
                           007097  1031 _X_ST2	=	0x7097
                           00709C  1032 _X_T2EVTCFG	=	0x709c
                           00709D  1033 _X_SLEEPSTA	=	0x709d
                           00709E  1034 _X_CLKCONSTA	=	0x709e
                           00709F  1035 _X_FMAP	=	0x709f
                           00709F  1036 _X_PSBANK	=	0x709f
                           0070A0  1037 _X_P2	=	0x70a0
                           0070A1  1038 _X_T2IRQF	=	0x70a1
                           0070A2  1039 _X_T2M0	=	0x70a2
                           0070A3  1040 _X_T2M1	=	0x70a3
                           0070A4  1041 _X_T2MOVF0	=	0x70a4
                           0070A5  1042 _X_T2MOVF1	=	0x70a5
                           0070A6  1043 _X_T2MOVF2	=	0x70a6
                           0070A7  1044 _X_T2IRQM	=	0x70a7
                           0070AB  1045 _X_P0IEN	=	0x70ab
                           0070AC  1046 _X_P2IEN	=	0x70ac
                           0070AD  1047 _X_STLOAD	=	0x70ad
                           0070AE  1048 _X_PMUX	=	0x70ae
                           0070AF  1049 _X_T1STAT	=	0x70af
                           0070B1  1050 _X_ENCDI	=	0x70b1
                           0070B2  1051 _X_ENCDO	=	0x70b2
                           0070B3  1052 _X_ENCCS	=	0x70b3
                           0070B4  1053 _X_ADCCON1	=	0x70b4
                           0070B5  1054 _X_ADCCON2	=	0x70b5
                           0070B6  1055 _X_ADCCON3	=	0x70b6
                           0070BA  1056 _X_ADCL	=	0x70ba
                           0070BB  1057 _X_ADCH	=	0x70bb
                           0070BC  1058 _X_RNDL	=	0x70bc
                           0070BD  1059 _X_RNDH	=	0x70bd
                           0070BE  1060 _X_SLEEPCMD	=	0x70be
                           0070BF  1061 _X_RFERRF	=	0x70bf
                           0070C1  1062 _X_U0DBUF	=	0x70c1
                           0070C2  1063 _X_U0BAUD	=	0x70c2
                           0070C3  1064 _X_T2MSEL	=	0x70c3
                           0070C4  1065 _X_U0UCR	=	0x70c4
                           0070C5  1066 _X_U0GCR	=	0x70c5
                           0070C6  1067 _X_CLKCONCMD	=	0x70c6
                           0070C7  1068 _X_MEMCTR	=	0x70c7
                           0070C9  1069 _X_WDCTL	=	0x70c9
                           0070CA  1070 _X_T3CNT	=	0x70ca
                           0070CB  1071 _X_T3CTL	=	0x70cb
                           0070CC  1072 _X_T3CCTL0	=	0x70cc
                           0070CD  1073 _X_T3CC0	=	0x70cd
                           0070CE  1074 _X_T3CCTL1	=	0x70ce
                           0070CF  1075 _X_T3CC1	=	0x70cf
                           0070D1  1076 _X_DMAIRQ	=	0x70d1
                           0070D2  1077 _X_DMA1CFGL	=	0x70d2
                           0070D3  1078 _X_DMA1CFGH	=	0x70d3
                           0070D4  1079 _X_DMA0CFGL	=	0x70d4
                           0070D5  1080 _X_DMA0CFGH	=	0x70d5
                           0070D6  1081 _X_DMAARM	=	0x70d6
                           0070D7  1082 _X_DMAREQ	=	0x70d7
                           0070D8  1083 _X_TIMIF	=	0x70d8
                           0070D9  1084 _X_RFD	=	0x70d9
                           0070DA  1085 _X_T1CC0L	=	0x70da
                           0070DB  1086 _X_T1CC0H	=	0x70db
                           0070DC  1087 _X_T1CC1L	=	0x70dc
                           0070DD  1088 _X_T1CC1H	=	0x70dd
                           0070DE  1089 _X_T1CC2L	=	0x70de
                           0070DF  1090 _X_T1CC2H	=	0x70df
                           0070E1  1091 _X_RFST	=	0x70e1
                           0070E2  1092 _X_T1CNTL	=	0x70e2
                           0070E3  1093 _X_T1CNTH	=	0x70e3
                           0070E4  1094 _X_T1CTL	=	0x70e4
                           0070E5  1095 _X_T1CCTL0	=	0x70e5
                           0070E6  1096 _X_T1CCTL1	=	0x70e6
                           0070E7  1097 _X_T1CCTL2	=	0x70e7
                           0070E9  1098 _X_RFIRQF0	=	0x70e9
                           0070EA  1099 _X_T4CNT	=	0x70ea
                           0070EB  1100 _X_T4CTL	=	0x70eb
                           0070EC  1101 _X_T4CCTL0	=	0x70ec
                           0070ED  1102 _X_T4CC0	=	0x70ed
                           0070EE  1103 _X_T4CCTL1	=	0x70ee
                           0070EF  1104 _X_T4CC1	=	0x70ef
                           0070F1  1105 _X_PERCFG	=	0x70f1
                           0070F2  1106 _X_APCFG	=	0x70f2
                           0070F3  1107 _X_P0SEL	=	0x70f3
                           0070F4  1108 _X_P1SEL	=	0x70f4
                           0070F5  1109 _X_P2SEL	=	0x70f5
                           0070F6  1110 _X_P1INP	=	0x70f6
                           0070F7  1111 _X_P2INP	=	0x70f7
                           0070F8  1112 _X_U1CSR	=	0x70f8
                           0070F9  1113 _X_U1DBUF	=	0x70f9
                           0070FA  1114 _X_U1BAUD	=	0x70fa
                           0070FB  1115 _X_U1UCR	=	0x70fb
                           0070FC  1116 _X_U1GCR	=	0x70fc
                           0070FD  1117 _X_P0DIR	=	0x70fd
                           0070FE  1118 _X_P1DIR	=	0x70fe
                           0070FF  1119 _X_P2DIR	=	0x70ff
                           007800  1120 _X_INFOPAGE	=	0x7800
                           00780C  1121 _X_IEEE_ADDR	=	0x780c
      000000                       1122 _sensors_event::
      000000                       1123 	.ds 1
      000001                       1124 _num_sensors:
      000001                       1125 	.ds 1
      000002                       1126 _process_thread_sensors_process_i_1_107:
      000002                       1127 	.ds 2
      000004                       1128 _process_thread_sensors_process_events_1_107:
      000004                       1129 	.ds 2
                                   1130 ;--------------------------------------------------------
                                   1131 ; absolute external ram data
                                   1132 ;--------------------------------------------------------
                                   1133 	.area XABS    (ABS,XDATA)
                                   1134 ;--------------------------------------------------------
                                   1135 ; external initialized ram data
                                   1136 ;--------------------------------------------------------
                                   1137 	.area XISEG   (XDATA)
      000000                       1138 _sensors_process::
      000000                       1139 	.ds 10
                                   1140 	.area HOME    (CODE)
                                   1141 	.area GSINIT0 (CODE)
                                   1142 	.area GSINIT1 (CODE)
                                   1143 	.area GSINIT2 (CODE)
                                   1144 	.area GSINIT3 (CODE)
                                   1145 	.area GSINIT4 (CODE)
                                   1146 	.area GSINIT5 (CODE)
                                   1147 	.area GSINIT  (CODE)
                                   1148 	.area GSFINAL (CODE)
                                   1149 	.area CSEG    (CODE)
                                   1150 ;--------------------------------------------------------
                                   1151 ; global & static initialisations
                                   1152 ;--------------------------------------------------------
                                   1153 	.area HOME    (CODE)
                                   1154 	.area GSINIT  (CODE)
                                   1155 	.area GSFINAL (CODE)
                                   1156 	.area GSINIT  (CODE)
                                   1157 ;--------------------------------------------------------
                                   1158 ; Home
                                   1159 ;--------------------------------------------------------
                                   1160 	.area HOME    (CODE)
                                   1161 	.area HOME    (CODE)
                                   1162 ;--------------------------------------------------------
                                   1163 ; code
                                   1164 ;--------------------------------------------------------
                                   1165 	.area BANK1   (CODE)
                                   1166 ;------------------------------------------------------------
                                   1167 ;Allocation info for local variables in function 'get_sensor_index'
                                   1168 ;------------------------------------------------------------
                                   1169 ;s                         Allocated to stack - sp -4
                                   1170 ;i                         Allocated to stack - sp -1
                                   1171 ;------------------------------------------------------------
                                   1172 ;	../../../../core/lib/sensors.c:54: get_sensor_index(const struct sensors_sensor *s)
                                   1173 ;	-----------------------------------------
                                   1174 ;	 function get_sensor_index
                                   1175 ;	-----------------------------------------
      000000                       1176 _get_sensor_index:
                           000007  1177 	ar7 = 0x07
                           000006  1178 	ar6 = 0x06
                           000005  1179 	ar5 = 0x05
                           000004  1180 	ar4 = 0x04
                           000003  1181 	ar3 = 0x03
                           000002  1182 	ar2 = 0x02
                           000001  1183 	ar1 = 0x01
                           000000  1184 	ar0 = 0x00
      000000 C0 82            [24] 1185 	push	dpl
      000002 C0 83            [24] 1186 	push	dph
      000004 C0 F0            [24] 1187 	push	b
      000006 05 81            [12] 1188 	inc	sp
      000008 05 81            [12] 1189 	inc	sp
                                   1190 ;	../../../../core/lib/sensors.c:57: for(i = 0; i < num_sensors; ++i) {
      00000A 7B 00            [12] 1191 	mov	r3,#0x00
      00000C 7C 00            [12] 1192 	mov	r4,#0x00
      00000E A8 81            [24] 1193 	mov	r0,sp
      000010 18               [12] 1194 	dec	r0
      000011 E4               [12] 1195 	clr	a
      000012 F6               [12] 1196 	mov	@r0,a
      000013 08               [12] 1197 	inc	r0
      000014 F6               [12] 1198 	mov	@r0,a
      000015 7D 00            [12] 1199 	mov	r5,#0x00
      000017 7E 00            [12] 1200 	mov	r6,#0x00
      000019                       1201 00105$:
      000019 C0 03            [24] 1202 	push	ar3
      00001B C0 04            [24] 1203 	push	ar4
      00001D 90r00r01         [24] 1204 	mov	dptr,#_num_sensors
      000020 E0               [24] 1205 	movx	a,@dptr
      000021 FC               [12] 1206 	mov	r4,a
      000022 7B 00            [12] 1207 	mov	r3,#0x00
      000024 E5 81            [12] 1208 	mov	a,sp
      000026 24 FD            [12] 1209 	add	a,#0xfd
      000028 F8               [12] 1210 	mov	r0,a
      000029 C3               [12] 1211 	clr	c
      00002A E6               [12] 1212 	mov	a,@r0
      00002B 9C               [12] 1213 	subb	a,r4
      00002C 08               [12] 1214 	inc	r0
      00002D E6               [12] 1215 	mov	a,@r0
      00002E 64 80            [12] 1216 	xrl	a,#0x80
      000030 8B F0            [24] 1217 	mov	b,r3
      000032 63 F0 80         [24] 1218 	xrl	b,#0x80
      000035 95 F0            [12] 1219 	subb	a,b
      000037 D0 04            [24] 1220 	pop	ar4
      000039 D0 03            [24] 1221 	pop	ar3
      00003B 50 5F            [24] 1222 	jnc	00103$
                                   1223 ;	../../../../core/lib/sensors.c:58: if(sensors[i] == s) {
      00003D C0 03            [24] 1224 	push	ar3
      00003F C0 04            [24] 1225 	push	ar4
      000041 ED               [12] 1226 	mov	a,r5
      000042 24r00            [12] 1227 	add	a,#_sensors
      000044 F5 82            [12] 1228 	mov	dpl,a
      000046 EE               [12] 1229 	mov	a,r6
      000047 34s00            [12] 1230 	addc	a,#(_sensors >> 8)
      000049 F5 83            [12] 1231 	mov	dph,a
      00004B E0               [24] 1232 	movx	a,@dptr
      00004C FB               [12] 1233 	mov	r3,a
      00004D A3               [24] 1234 	inc	dptr
      00004E E0               [24] 1235 	movx	a,@dptr
      00004F FC               [12] 1236 	mov	r4,a
      000050 A3               [24] 1237 	inc	dptr
      000051 E0               [24] 1238 	movx	a,@dptr
      000052 FF               [12] 1239 	mov	r7,a
      000053 E5 81            [12] 1240 	mov	a,sp
      000055 24 FA            [12] 1241 	add	a,#0xfa
      000057 F8               [12] 1242 	mov	r0,a
      000058 C0 03            [24] 1243 	push	ar3
      00005A C0 04            [24] 1244 	push	ar4
      00005C C0 07            [24] 1245 	push	ar7
      00005E 86 82            [24] 1246 	mov	dpl,@r0
      000060 08               [12] 1247 	inc	r0
      000061 86 83            [24] 1248 	mov	dph,@r0
      000063 08               [12] 1249 	inc	r0
      000064 86 F0            [24] 1250 	mov	b,@r0
      000066 12r00r00         [24] 1251 	lcall	___gptr_cmp
      000069 15 81            [12] 1252 	dec	sp
      00006B 15 81            [12] 1253 	dec	sp
      00006D 15 81            [12] 1254 	dec	sp
      00006F 60 06            [24] 1255 	jz	00120$
      000071 D0 04            [24] 1256 	pop	ar4
      000073 D0 03            [24] 1257 	pop	ar3
      000075 80 0A            [24] 1258 	sjmp	00106$
      000077                       1259 00120$:
      000077 D0 04            [24] 1260 	pop	ar4
      000079 D0 03            [24] 1261 	pop	ar3
                                   1262 ;	../../../../core/lib/sensors.c:59: return i;
      00007B 8B 82            [24] 1263 	mov	dpl,r3
      00007D 8C 83            [24] 1264 	mov	dph,r4
      00007F 80 1F            [24] 1265 	sjmp	00107$
      000081                       1266 00106$:
                                   1267 ;	../../../../core/lib/sensors.c:57: for(i = 0; i < num_sensors; ++i) {
      000081 74 03            [12] 1268 	mov	a,#0x03
      000083 2D               [12] 1269 	add	a,r5
      000084 FD               [12] 1270 	mov	r5,a
      000085 E4               [12] 1271 	clr	a
      000086 3E               [12] 1272 	addc	a,r6
      000087 FE               [12] 1273 	mov	r6,a
      000088 A8 81            [24] 1274 	mov	r0,sp
      00008A 18               [12] 1275 	dec	r0
      00008B 06               [12] 1276 	inc	@r0
      00008C B6 00 02         [24] 1277 	cjne	@r0,#0x00,00121$
      00008F 08               [12] 1278 	inc	r0
      000090 06               [12] 1279 	inc	@r0
      000091                       1280 00121$:
      000091 A8 81            [24] 1281 	mov	r0,sp
      000093 18               [12] 1282 	dec	r0
      000094 86 03            [24] 1283 	mov	ar3,@r0
      000096 08               [12] 1284 	inc	r0
      000097 86 04            [24] 1285 	mov	ar4,@r0
      000099 02r00r19         [24] 1286 	ljmp	00105$
      00009C                       1287 00103$:
                                   1288 ;	../../../../core/lib/sensors.c:62: return i;
      00009C 8B 82            [24] 1289 	mov	dpl,r3
      00009E 8C 83            [24] 1290 	mov	dph,r4
      0000A0                       1291 00107$:
      0000A0 E5 81            [12] 1292 	mov	a,sp
      0000A2 24 FB            [12] 1293 	add	a,#0xFB
      0000A4 F5 81            [12] 1294 	mov	sp,a
      0000A6 02r00r00         [24] 1295 	ljmp	__sdcc_banked_ret
                                   1296 ;------------------------------------------------------------
                                   1297 ;Allocation info for local variables in function 'sensors_first'
                                   1298 ;------------------------------------------------------------
                                   1299 ;	../../../../core/lib/sensors.c:66: sensors_first(void)
                                   1300 ;	-----------------------------------------
                                   1301 ;	 function sensors_first
                                   1302 ;	-----------------------------------------
      0000A9                       1303 _sensors_first:
                                   1304 ;	../../../../core/lib/sensors.c:68: return sensors[0];
      0000A9 90r00r00         [24] 1305 	mov	dptr,#_sensors
      0000AC E0               [24] 1306 	movx	a,@dptr
      0000AD FD               [12] 1307 	mov	r5,a
      0000AE A3               [24] 1308 	inc	dptr
      0000AF E0               [24] 1309 	movx	a,@dptr
      0000B0 FE               [12] 1310 	mov	r6,a
      0000B1 A3               [24] 1311 	inc	dptr
      0000B2 E0               [24] 1312 	movx	a,@dptr
      0000B3 FF               [12] 1313 	mov	r7,a
      0000B4 8D 82            [24] 1314 	mov	dpl,r5
      0000B6 8E 83            [24] 1315 	mov	dph,r6
      0000B8 8F F0            [24] 1316 	mov	b,r7
      0000BA 02r00r00         [24] 1317 	ljmp	__sdcc_banked_ret
                                   1318 ;------------------------------------------------------------
                                   1319 ;Allocation info for local variables in function 'sensors_next'
                                   1320 ;------------------------------------------------------------
                                   1321 ;s                         Allocated to registers r5 r6 r7 
                                   1322 ;------------------------------------------------------------
                                   1323 ;	../../../../core/lib/sensors.c:72: sensors_next(const struct sensors_sensor *s)
                                   1324 ;	-----------------------------------------
                                   1325 ;	 function sensors_next
                                   1326 ;	-----------------------------------------
      0000BD                       1327 _sensors_next:
                                   1328 ;	../../../../core/lib/sensors.c:74: return sensors[get_sensor_index(s) + 1];
      0000BD 78r00            [12] 1329 	mov	r0,#_get_sensor_index
      0000BF 79s00            [12] 1330 	mov	r1,#(_get_sensor_index >> 8)
      0000C1 7As00            [12] 1331 	mov	r2,#(_get_sensor_index >> 16)
      0000C3 12r00r00         [24] 1332 	lcall	__sdcc_banked_call
      0000C6 E5 82            [12] 1333 	mov	a,dpl
      0000C8 85 83 F0         [24] 1334 	mov	b,dph
      0000CB 24 01            [12] 1335 	add	a,#0x01
      0000CD FE               [12] 1336 	mov	r6,a
      0000CE E4               [12] 1337 	clr	a
      0000CF 35 F0            [12] 1338 	addc	a,b
      0000D1 FF               [12] 1339 	mov	r7,a
      0000D2 C0 06            [24] 1340 	push	ar6
      0000D4 C0 07            [24] 1341 	push	ar7
      0000D6 90 00 03         [24] 1342 	mov	dptr,#0x0003
      0000D9 12r00r00         [24] 1343 	lcall	__mulint
      0000DC AE 82            [24] 1344 	mov	r6,dpl
      0000DE AF 83            [24] 1345 	mov	r7,dph
      0000E0 15 81            [12] 1346 	dec	sp
      0000E2 15 81            [12] 1347 	dec	sp
      0000E4 EE               [12] 1348 	mov	a,r6
      0000E5 24r00            [12] 1349 	add	a,#_sensors
      0000E7 F5 82            [12] 1350 	mov	dpl,a
      0000E9 EF               [12] 1351 	mov	a,r7
      0000EA 34s00            [12] 1352 	addc	a,#(_sensors >> 8)
      0000EC F5 83            [12] 1353 	mov	dph,a
      0000EE E0               [24] 1354 	movx	a,@dptr
      0000EF FD               [12] 1355 	mov	r5,a
      0000F0 A3               [24] 1356 	inc	dptr
      0000F1 E0               [24] 1357 	movx	a,@dptr
      0000F2 FE               [12] 1358 	mov	r6,a
      0000F3 A3               [24] 1359 	inc	dptr
      0000F4 E0               [24] 1360 	movx	a,@dptr
      0000F5 FF               [12] 1361 	mov	r7,a
      0000F6 8D 82            [24] 1362 	mov	dpl,r5
      0000F8 8E 83            [24] 1363 	mov	dph,r6
      0000FA 8F F0            [24] 1364 	mov	b,r7
      0000FC 02r00r00         [24] 1365 	ljmp	__sdcc_banked_ret
                                   1366 ;------------------------------------------------------------
                                   1367 ;Allocation info for local variables in function 'sensors_changed'
                                   1368 ;------------------------------------------------------------
                                   1369 ;s                         Allocated to registers r5 r6 r7 
                                   1370 ;__00010001                Allocated to registers 
                                   1371 ;------------------------------------------------------------
                                   1372 ;	../../../../core/lib/sensors.c:78: sensors_changed(const struct sensors_sensor *s)
                                   1373 ;	-----------------------------------------
                                   1374 ;	 function sensors_changed
                                   1375 ;	-----------------------------------------
      0000FF                       1376 _sensors_changed:
                                   1377 ;	../../../../core/lib/sensors.c:80: sensors_flags[get_sensor_index(s)] |= FLAG_CHANGED;
      0000FF 78r00            [12] 1378 	mov	r0,#_get_sensor_index
      000101 79s00            [12] 1379 	mov	r1,#(_get_sensor_index >> 8)
      000103 7As00            [12] 1380 	mov	r2,#(_get_sensor_index >> 16)
      000105 12r00r00         [24] 1381 	lcall	__sdcc_banked_call
      000108 AE 82            [24] 1382 	mov	r6,dpl
      00010A AF 83            [24] 1383 	mov	r7,dph
      00010C EE               [12] 1384 	mov	a,r6
      00010D 24r00            [12] 1385 	add	a,#_sensors_flags
      00010F FE               [12] 1386 	mov	r6,a
      000110 EF               [12] 1387 	mov	a,r7
      000111 34s00            [12] 1388 	addc	a,#(_sensors_flags >> 8)
      000113 FF               [12] 1389 	mov	r7,a
      000114 8E 82            [24] 1390 	mov	dpl,r6
      000116 8F 83            [24] 1391 	mov	dph,r7
      000118 E0               [24] 1392 	movx	a,@dptr
      000119 FD               [12] 1393 	mov	r5,a
      00011A 43 05 80         [24] 1394 	orl	ar5,#0x80
      00011D 8E 82            [24] 1395 	mov	dpl,r6
      00011F 8F 83            [24] 1396 	mov	dph,r7
      000121 ED               [12] 1397 	mov	a,r5
      000122 F0               [24] 1398 	movx	@dptr,a
                                   1399 ;	../../../../core/lib/sensors.c:81: process_poll(&sensors_process);
      000123 90r00r00         [24] 1400 	mov	dptr,#_sensors_process
      000126 75 F0 00         [24] 1401 	mov	b,#0x00
      000129 78r00            [12] 1402 	mov	r0,#_process_poll
      00012B 79s00            [12] 1403 	mov	r1,#(_process_poll >> 8)
      00012D 7As00            [12] 1404 	mov	r2,#(_process_poll >> 16)
      00012F 12r00r00         [24] 1405 	lcall	__sdcc_banked_call
      000132 02r00r00         [24] 1406 	ljmp	__sdcc_banked_ret
                                   1407 ;------------------------------------------------------------
                                   1408 ;Allocation info for local variables in function 'sensors_find'
                                   1409 ;------------------------------------------------------------
                                   1410 ;prefix                    Allocated to stack - sp -9
                                   1411 ;i                         Allocated to registers r2 r4 
                                   1412 ;len                       Allocated to stack - sp -1
                                   1413 ;sloc0                     Allocated to stack - sp -6
                                   1414 ;sloc1                     Allocated to stack - sp -4
                                   1415 ;------------------------------------------------------------
                                   1416 ;	../../../../core/lib/sensors.c:85: sensors_find(const char *prefix)
                                   1417 ;	-----------------------------------------
                                   1418 ;	 function sensors_find
                                   1419 ;	-----------------------------------------
      000135                       1420 _sensors_find:
      000135 C0 82            [24] 1421 	push	dpl
      000137 C0 83            [24] 1422 	push	dph
      000139 C0 F0            [24] 1423 	push	b
      00013B E5 81            [12] 1424 	mov	a,sp
      00013D 24 07            [12] 1425 	add	a,#0x07
                                   1426 ;	../../../../core/lib/sensors.c:92: len = strlen(prefix);
      00013F F5 81            [12] 1427 	mov	sp,a
      000141 24 F7            [12] 1428 	add	a,#0xf7
      000143 F8               [12] 1429 	mov	r0,a
      000144 86 82            [24] 1430 	mov	dpl,@r0
      000146 08               [12] 1431 	inc	r0
      000147 86 83            [24] 1432 	mov	dph,@r0
      000149 08               [12] 1433 	inc	r0
      00014A 86 F0            [24] 1434 	mov	b,@r0
      00014C 78r00            [12] 1435 	mov	r0,#_strlen
      00014E 79s00            [12] 1436 	mov	r1,#(_strlen >> 8)
      000150 7As00            [12] 1437 	mov	r2,#(_strlen >> 16)
      000152 12r00r00         [24] 1438 	lcall	__sdcc_banked_call
      000155 A8 81            [24] 1439 	mov	r0,sp
      000157 18               [12] 1440 	dec	r0
      000158 A6 82            [24] 1441 	mov	@r0,dpl
      00015A 08               [12] 1442 	inc	r0
      00015B A6 83            [24] 1443 	mov	@r0,dph
                                   1444 ;	../../../../core/lib/sensors.c:94: for(i = 0; i < num_sensors; ++i) {
      00015D 7A 00            [12] 1445 	mov	r2,#0x00
      00015F 7C 00            [12] 1446 	mov	r4,#0x00
      000161 7B 00            [12] 1447 	mov	r3,#0x00
      000163 7F 00            [12] 1448 	mov	r7,#0x00
      000165                       1449 00105$:
      000165 90r00r01         [24] 1450 	mov	dptr,#_num_sensors
      000168 E0               [24] 1451 	movx	a,@dptr
      000169 FE               [12] 1452 	mov	r6,a
      00016A 7D 00            [12] 1453 	mov	r5,#0x00
      00016C C3               [12] 1454 	clr	c
      00016D EA               [12] 1455 	mov	a,r2
      00016E 9E               [12] 1456 	subb	a,r6
      00016F EC               [12] 1457 	mov	a,r4
      000170 64 80            [12] 1458 	xrl	a,#0x80
      000172 8D F0            [24] 1459 	mov	b,r5
      000174 63 F0 80         [24] 1460 	xrl	b,#0x80
      000177 95 F0            [12] 1461 	subb	a,b
      000179 40 03            [24] 1462 	jc	00118$
      00017B 02r02r37         [24] 1463 	ljmp	00103$
      00017E                       1464 00118$:
                                   1465 ;	../../../../core/lib/sensors.c:95: if(strncmp(prefix, sensors[i]->type, len) == 0) {
      00017E C0 02            [24] 1466 	push	ar2
      000180 C0 04            [24] 1467 	push	ar4
      000182 E5 81            [12] 1468 	mov	a,sp
      000184 24 F8            [12] 1469 	add	a,#0xf8
      000186 F8               [12] 1470 	mov	r0,a
      000187 EB               [12] 1471 	mov	a,r3
      000188 24r00            [12] 1472 	add	a,#_sensors
      00018A F6               [12] 1473 	mov	@r0,a
      00018B EF               [12] 1474 	mov	a,r7
      00018C 34s00            [12] 1475 	addc	a,#(_sensors >> 8)
      00018E 08               [12] 1476 	inc	r0
      00018F F6               [12] 1477 	mov	@r0,a
      000190 E5 81            [12] 1478 	mov	a,sp
      000192 24 F8            [12] 1479 	add	a,#0xf8
      000194 F8               [12] 1480 	mov	r0,a
      000195 86 82            [24] 1481 	mov	dpl,@r0
      000197 08               [12] 1482 	inc	r0
      000198 86 83            [24] 1483 	mov	dph,@r0
      00019A E0               [24] 1484 	movx	a,@dptr
      00019B FA               [12] 1485 	mov	r2,a
      00019C A3               [24] 1486 	inc	dptr
      00019D E0               [24] 1487 	movx	a,@dptr
      00019E FC               [12] 1488 	mov	r4,a
      00019F A3               [24] 1489 	inc	dptr
      0001A0 E0               [24] 1490 	movx	a,@dptr
      0001A1 FE               [12] 1491 	mov	r6,a
      0001A2 8A 82            [24] 1492 	mov	dpl,r2
      0001A4 8C 83            [24] 1493 	mov	dph,r4
      0001A6 8E F0            [24] 1494 	mov	b,r6
      0001A8 12r00r00         [24] 1495 	lcall	__gptrget
      0001AB FA               [12] 1496 	mov	r2,a
      0001AC A3               [24] 1497 	inc	dptr
      0001AD 12r00r00         [24] 1498 	lcall	__gptrget
      0001B0 FC               [12] 1499 	mov	r4,a
      0001B1 A3               [24] 1500 	inc	dptr
      0001B2 12r00r00         [24] 1501 	lcall	__gptrget
      0001B5 FE               [12] 1502 	mov	r6,a
      0001B6 C0 07            [24] 1503 	push	ar7
      0001B8 C0 04            [24] 1504 	push	ar4
      0001BA C0 03            [24] 1505 	push	ar3
      0001BC C0 02            [24] 1506 	push	ar2
      0001BE E5 81            [12] 1507 	mov	a,sp
      0001C0 24 F9            [12] 1508 	add	a,#0xf9
      0001C2 F8               [12] 1509 	mov	r0,a
      0001C3 E6               [12] 1510 	mov	a,@r0
      0001C4 C0 E0            [24] 1511 	push	acc
      0001C6 08               [12] 1512 	inc	r0
      0001C7 E6               [12] 1513 	mov	a,@r0
      0001C8 C0 E0            [24] 1514 	push	acc
      0001CA C0 02            [24] 1515 	push	ar2
      0001CC C0 04            [24] 1516 	push	ar4
      0001CE C0 06            [24] 1517 	push	ar6
      0001D0 E5 81            [12] 1518 	mov	a,sp
      0001D2 24 EC            [12] 1519 	add	a,#0xec
      0001D4 F8               [12] 1520 	mov	r0,a
      0001D5 86 82            [24] 1521 	mov	dpl,@r0
      0001D7 08               [12] 1522 	inc	r0
      0001D8 86 83            [24] 1523 	mov	dph,@r0
      0001DA 08               [12] 1524 	inc	r0
      0001DB 86 F0            [24] 1525 	mov	b,@r0
      0001DD 78r00            [12] 1526 	mov	r0,#_strncmp
      0001DF 79s00            [12] 1527 	mov	r1,#(_strncmp >> 8)
      0001E1 7As00            [12] 1528 	mov	r2,#(_strncmp >> 16)
      0001E3 12r00r00         [24] 1529 	lcall	__sdcc_banked_call
      0001E6 AD 82            [24] 1530 	mov	r5,dpl
      0001E8 AE 83            [24] 1531 	mov	r6,dph
      0001EA E5 81            [12] 1532 	mov	a,sp
      0001EC 24 FB            [12] 1533 	add	a,#0xfb
      0001EE F5 81            [12] 1534 	mov	sp,a
      0001F0 D0 02            [24] 1535 	pop	ar2
      0001F2 D0 03            [24] 1536 	pop	ar3
      0001F4 D0 04            [24] 1537 	pop	ar4
      0001F6 D0 07            [24] 1538 	pop	ar7
      0001F8 D0 04            [24] 1539 	pop	ar4
      0001FA D0 02            [24] 1540 	pop	ar2
      0001FC ED               [12] 1541 	mov	a,r5
      0001FD 4E               [12] 1542 	orl	a,r6
      0001FE 70 28            [24] 1543 	jnz	00106$
                                   1544 ;	../../../../core/lib/sensors.c:96: return sensors[i];
      000200 E5 81            [12] 1545 	mov	a,sp
      000202 24 FA            [12] 1546 	add	a,#0xfa
      000204 F8               [12] 1547 	mov	r0,a
      000205 86 82            [24] 1548 	mov	dpl,@r0
      000207 08               [12] 1549 	inc	r0
      000208 86 83            [24] 1550 	mov	dph,@r0
      00020A E5 81            [12] 1551 	mov	a,sp
      00020C 24 FC            [12] 1552 	add	a,#0xfc
      00020E F9               [12] 1553 	mov	r1,a
      00020F E0               [24] 1554 	movx	a,@dptr
      000210 F7               [12] 1555 	mov	@r1,a
      000211 A3               [24] 1556 	inc	dptr
      000212 E0               [24] 1557 	movx	a,@dptr
      000213 09               [12] 1558 	inc	r1
      000214 F7               [12] 1559 	mov	@r1,a
      000215 A3               [24] 1560 	inc	dptr
      000216 E0               [24] 1561 	movx	a,@dptr
      000217 09               [12] 1562 	inc	r1
      000218 F7               [12] 1563 	mov	@r1,a
      000219 E5 81            [12] 1564 	mov	a,sp
      00021B 24 FC            [12] 1565 	add	a,#0xfc
      00021D F8               [12] 1566 	mov	r0,a
      00021E 86 82            [24] 1567 	mov	dpl,@r0
      000220 08               [12] 1568 	inc	r0
      000221 86 83            [24] 1569 	mov	dph,@r0
      000223 08               [12] 1570 	inc	r0
      000224 86 F0            [24] 1571 	mov	b,@r0
      000226 80 15            [24] 1572 	sjmp	00107$
      000228                       1573 00106$:
                                   1574 ;	../../../../core/lib/sensors.c:94: for(i = 0; i < num_sensors; ++i) {
      000228 74 03            [12] 1575 	mov	a,#0x03
      00022A 2B               [12] 1576 	add	a,r3
      00022B FB               [12] 1577 	mov	r3,a
      00022C E4               [12] 1578 	clr	a
      00022D 3F               [12] 1579 	addc	a,r7
      00022E FF               [12] 1580 	mov	r7,a
      00022F 0A               [12] 1581 	inc	r2
      000230 BA 00 01         [24] 1582 	cjne	r2,#0x00,00120$
      000233 0C               [12] 1583 	inc	r4
      000234                       1584 00120$:
      000234 02r01r65         [24] 1585 	ljmp	00105$
      000237                       1586 00103$:
                                   1587 ;	../../../../core/lib/sensors.c:99: return NULL;
      000237 90 00 00         [24] 1588 	mov	dptr,#0x0000
      00023A 75 F0 00         [24] 1589 	mov	b,#0x00
      00023D                       1590 00107$:
      00023D C8               [12] 1591 	xch	a,r0
      00023E E5 81            [12] 1592 	mov	a,sp
      000240 24 F6            [12] 1593 	add	a,#0xF6
      000242 F5 81            [12] 1594 	mov	sp,a
      000244 C8               [12] 1595 	xch	a,r0
      000245 02r00r00         [24] 1596 	ljmp	__sdcc_banked_ret
                                   1597 ;------------------------------------------------------------
                                   1598 ;Allocation info for local variables in function 'process_thread_sensors_process'
                                   1599 ;------------------------------------------------------------
                                   1600 ;ev                        Allocated to stack - sp -3
                                   1601 ;data                      Allocated to stack - sp -6
                                   1602 ;process_pt                Allocated to registers r5 r6 r7 
                                   1603 ;PT_YIELD_FLAG             Allocated to registers r4 
                                   1604 ;i                         Allocated with name '_process_thread_sensors_process_i_1_107'
                                   1605 ;events                    Allocated with name '_process_thread_sensors_process_events_1_107'
                                   1606 ;------------------------------------------------------------
                                   1607 ;	../../../../core/lib/sensors.c:102: PROCESS_THREAD(sensors_process, ev, data)
                                   1608 ;	-----------------------------------------
                                   1609 ;	 function process_thread_sensors_process
                                   1610 ;	-----------------------------------------
      000248                       1611 _process_thread_sensors_process:
                                   1612 ;	../../../../core/lib/sensors.c:107: PROCESS_BEGIN();
      000248 AD 82            [24] 1613 	mov	r5,dpl
      00024A AE 83            [24] 1614 	mov	r6,dph
      00024C AF F0            [24] 1615 	mov	r7,b
      00024E 7C 01            [12] 1616 	mov	r4,#0x01
      000250 12r00r00         [24] 1617 	lcall	__gptrget
      000253 FA               [12] 1618 	mov	r2,a
      000254 A3               [24] 1619 	inc	dptr
      000255 12r00r00         [24] 1620 	lcall	__gptrget
      000258 FB               [12] 1621 	mov	r3,a
      000259 BA 00 05         [24] 1622 	cjne	r2,#0x00,00178$
      00025C BB 00 02         [24] 1623 	cjne	r3,#0x00,00178$
      00025F 80 15            [24] 1624 	sjmp	00101$
      000261                       1625 00178$:
      000261 BA 77 06         [24] 1626 	cjne	r2,#0x77,00179$
      000264 BB 00 03         [24] 1627 	cjne	r3,#0x00,00179$
      000267 02r03rAE         [24] 1628 	ljmp	00103$
      00026A                       1629 00179$:
      00026A BA 7E 06         [24] 1630 	cjne	r2,#0x7E,00180$
      00026D BB 00 03         [24] 1631 	cjne	r3,#0x00,00180$
      000270 02r04r8B         [24] 1632 	ljmp	00109$
      000273                       1633 00180$:
      000273 02r04rEE         [24] 1634 	ljmp	00127$
      000276                       1635 00101$:
                                   1636 ;	../../../../core/lib/sensors.c:109: sensors_event = process_alloc_event();
      000276 C0 07            [24] 1637 	push	ar7
      000278 C0 06            [24] 1638 	push	ar6
      00027A C0 05            [24] 1639 	push	ar5
      00027C 78r00            [12] 1640 	mov	r0,#_process_alloc_event
      00027E 79s00            [12] 1641 	mov	r1,#(_process_alloc_event >> 8)
      000280 7As00            [12] 1642 	mov	r2,#(_process_alloc_event >> 16)
      000282 12r00r00         [24] 1643 	lcall	__sdcc_banked_call
      000285 E5 82            [12] 1644 	mov	a,dpl
      000287 D0 05            [24] 1645 	pop	ar5
      000289 D0 06            [24] 1646 	pop	ar6
      00028B D0 07            [24] 1647 	pop	ar7
      00028D 90r00r00         [24] 1648 	mov	dptr,#_sensors_event
      000290 F0               [24] 1649 	movx	@dptr,a
                                   1650 ;	../../../../core/lib/sensors.c:111: for(i = 0; sensors[i] != NULL; ++i) {
      000291 90r00r02         [24] 1651 	mov	dptr,#_process_thread_sensors_process_i_1_107
      000294 E4               [12] 1652 	clr	a
      000295 F0               [24] 1653 	movx	@dptr,a
      000296 E4               [12] 1654 	clr	a
      000297 A3               [24] 1655 	inc	dptr
      000298 F0               [24] 1656 	movx	@dptr,a
      000299                       1657 00129$:
      000299 C0 05            [24] 1658 	push	ar5
      00029B C0 06            [24] 1659 	push	ar6
      00029D C0 07            [24] 1660 	push	ar7
      00029F 90r00r02         [24] 1661 	mov	dptr,#_process_thread_sensors_process_i_1_107
      0002A2 E0               [24] 1662 	movx	a,@dptr
      0002A3 FA               [12] 1663 	mov	r2,a
      0002A4 A3               [24] 1664 	inc	dptr
      0002A5 E0               [24] 1665 	movx	a,@dptr
      0002A6 FB               [12] 1666 	mov	r3,a
      0002A7 C0 05            [24] 1667 	push	ar5
      0002A9 C0 03            [24] 1668 	push	ar3
      0002AB C0 02            [24] 1669 	push	ar2
      0002AD C0 02            [24] 1670 	push	ar2
      0002AF C0 03            [24] 1671 	push	ar3
      0002B1 90 00 03         [24] 1672 	mov	dptr,#0x0003
      0002B4 12r00r00         [24] 1673 	lcall	__mulint
      0002B7 AE 82            [24] 1674 	mov	r6,dpl
      0002B9 AF 83            [24] 1675 	mov	r7,dph
      0002BB 15 81            [12] 1676 	dec	sp
      0002BD 15 81            [12] 1677 	dec	sp
      0002BF D0 02            [24] 1678 	pop	ar2
      0002C1 D0 03            [24] 1679 	pop	ar3
      0002C3 D0 05            [24] 1680 	pop	ar5
      0002C5 EE               [12] 1681 	mov	a,r6
      0002C6 24r00            [12] 1682 	add	a,#_sensors
      0002C8 F5 82            [12] 1683 	mov	dpl,a
      0002CA EF               [12] 1684 	mov	a,r7
      0002CB 34s00            [12] 1685 	addc	a,#(_sensors >> 8)
      0002CD F5 83            [12] 1686 	mov	dph,a
      0002CF E0               [24] 1687 	movx	a,@dptr
      0002D0 FD               [12] 1688 	mov	r5,a
      0002D1 A3               [24] 1689 	inc	dptr
      0002D2 E0               [24] 1690 	movx	a,@dptr
      0002D3 FE               [12] 1691 	mov	r6,a
      0002D4 A3               [24] 1692 	inc	dptr
      0002D5 E0               [24] 1693 	movx	a,@dptr
      0002D6 FF               [12] 1694 	mov	r7,a
      0002D7 E4               [12] 1695 	clr	a
      0002D8 C0 E0            [24] 1696 	push	acc
      0002DA E4               [12] 1697 	clr	a
      0002DB C0 E0            [24] 1698 	push	acc
      0002DD E4               [12] 1699 	clr	a
      0002DE C0 E0            [24] 1700 	push	acc
      0002E0 8D 82            [24] 1701 	mov	dpl,r5
      0002E2 8E 83            [24] 1702 	mov	dph,r6
      0002E4 8F F0            [24] 1703 	mov	b,r7
      0002E6 12r00r00         [24] 1704 	lcall	___gptr_cmp
      0002E9 15 81            [12] 1705 	dec	sp
      0002EB 15 81            [12] 1706 	dec	sp
      0002ED 15 81            [12] 1707 	dec	sp
      0002EF 70 09            [24] 1708 	jnz	00181$
      0002F1 D0 07            [24] 1709 	pop	ar7
      0002F3 D0 06            [24] 1710 	pop	ar6
      0002F5 D0 05            [24] 1711 	pop	ar5
      0002F7 02r03r97         [24] 1712 	ljmp	00102$
      0002FA                       1713 00181$:
      0002FA D0 07            [24] 1714 	pop	ar7
      0002FC D0 06            [24] 1715 	pop	ar6
      0002FE D0 05            [24] 1716 	pop	ar5
                                   1717 ;	../../../../core/lib/sensors.c:112: sensors_flags[i] = 0;
      000300 C0 05            [24] 1718 	push	ar5
      000302 C0 06            [24] 1719 	push	ar6
      000304 C0 07            [24] 1720 	push	ar7
      000306 EA               [12] 1721 	mov	a,r2
      000307 24r00            [12] 1722 	add	a,#_sensors_flags
      000309 F5 82            [12] 1723 	mov	dpl,a
      00030B EB               [12] 1724 	mov	a,r3
      00030C 34s00            [12] 1725 	addc	a,#(_sensors_flags >> 8)
      00030E F5 83            [12] 1726 	mov	dph,a
      000310 E4               [12] 1727 	clr	a
      000311 F0               [24] 1728 	movx	@dptr,a
                                   1729 ;	../../../../core/lib/sensors.c:113: sensors[i]->configure(SENSORS_HW_INIT, 0);
      000312 C0 05            [24] 1730 	push	ar5
      000314 90r00r02         [24] 1731 	mov	dptr,#_process_thread_sensors_process_i_1_107
      000317 E0               [24] 1732 	movx	a,@dptr
      000318 C0 E0            [24] 1733 	push	acc
      00031A A3               [24] 1734 	inc	dptr
      00031B E0               [24] 1735 	movx	a,@dptr
      00031C C0 E0            [24] 1736 	push	acc
      00031E 90 00 03         [24] 1737 	mov	dptr,#0x0003
      000321 12r00r00         [24] 1738 	lcall	__mulint
      000324 AE 82            [24] 1739 	mov	r6,dpl
      000326 AF 83            [24] 1740 	mov	r7,dph
      000328 15 81            [12] 1741 	dec	sp
      00032A 15 81            [12] 1742 	dec	sp
      00032C D0 05            [24] 1743 	pop	ar5
      00032E EE               [12] 1744 	mov	a,r6
      00032F 24r00            [12] 1745 	add	a,#_sensors
      000331 F5 82            [12] 1746 	mov	dpl,a
      000333 EF               [12] 1747 	mov	a,r7
      000334 34s00            [12] 1748 	addc	a,#(_sensors >> 8)
      000336 F5 83            [12] 1749 	mov	dph,a
      000338 E0               [24] 1750 	movx	a,@dptr
      000339 FD               [12] 1751 	mov	r5,a
      00033A A3               [24] 1752 	inc	dptr
      00033B E0               [24] 1753 	movx	a,@dptr
      00033C FE               [12] 1754 	mov	r6,a
      00033D A3               [24] 1755 	inc	dptr
      00033E E0               [24] 1756 	movx	a,@dptr
      00033F FF               [12] 1757 	mov	r7,a
      000340 74 06            [12] 1758 	mov	a,#0x06
      000342 2D               [12] 1759 	add	a,r5
      000343 FD               [12] 1760 	mov	r5,a
      000344 E4               [12] 1761 	clr	a
      000345 3E               [12] 1762 	addc	a,r6
      000346 FE               [12] 1763 	mov	r6,a
      000347 8D 82            [24] 1764 	mov	dpl,r5
      000349 8E 83            [24] 1765 	mov	dph,r6
      00034B 8F F0            [24] 1766 	mov	b,r7
      00034D 12r00r00         [24] 1767 	lcall	__gptrget
      000350 FD               [12] 1768 	mov	r5,a
      000351 A3               [24] 1769 	inc	dptr
      000352 12r00r00         [24] 1770 	lcall	__gptrget
      000355 FE               [12] 1771 	mov	r6,a
      000356 A3               [24] 1772 	inc	dptr
      000357 12r00r00         [24] 1773 	lcall	__gptrget
      00035A FF               [12] 1774 	mov	r7,a
      00035B C0 07            [24] 1775 	push	ar7
      00035D C0 06            [24] 1776 	push	ar6
      00035F C0 05            [24] 1777 	push	ar5
      000361 E4               [12] 1778 	clr	a
      000362 C0 E0            [24] 1779 	push	acc
      000364 C0 E0            [24] 1780 	push	acc
      000366 C0 05            [24] 1781 	push	ar5
      000368 C0 06            [24] 1782 	push	ar6
      00036A C0 07            [24] 1783 	push	ar7
      00036C 90 00 80         [24] 1784 	mov	dptr,#0x0080
      00036F D0 02            [24] 1785 	pop	ar2
      000371 D0 01            [24] 1786 	pop	ar1
      000373 D0 00            [24] 1787 	pop	ar0
      000375 12r00r00         [24] 1788 	lcall	__sdcc_banked_call
      000378 15 81            [12] 1789 	dec	sp
      00037A 15 81            [12] 1790 	dec	sp
      00037C D0 05            [24] 1791 	pop	ar5
      00037E D0 06            [24] 1792 	pop	ar6
      000380 D0 07            [24] 1793 	pop	ar7
                                   1794 ;	../../../../core/lib/sensors.c:111: for(i = 0; sensors[i] != NULL; ++i) {
      000382 90r00r02         [24] 1795 	mov	dptr,#_process_thread_sensors_process_i_1_107
      000385 E0               [24] 1796 	movx	a,@dptr
      000386 24 01            [12] 1797 	add	a,#0x01
      000388 F0               [24] 1798 	movx	@dptr,a
      000389 A3               [24] 1799 	inc	dptr
      00038A E0               [24] 1800 	movx	a,@dptr
      00038B 34 00            [12] 1801 	addc	a,#0x00
      00038D F0               [24] 1802 	movx	@dptr,a
      00038E D0 07            [24] 1803 	pop	ar7
      000390 D0 06            [24] 1804 	pop	ar6
      000392 D0 05            [24] 1805 	pop	ar5
      000394 02r02r99         [24] 1806 	ljmp	00129$
      000397                       1807 00102$:
                                   1808 ;	../../../../core/lib/sensors.c:115: num_sensors = i;
      000397 90r00r01         [24] 1809 	mov	dptr,#_num_sensors
      00039A EA               [12] 1810 	mov	a,r2
      00039B F0               [24] 1811 	movx	@dptr,a
                                   1812 ;	../../../../core/lib/sensors.c:117: while(1) {
      00039C                       1813 00125$:
                                   1814 ;	../../../../core/lib/sensors.c:119: PROCESS_WAIT_EVENT();
      00039C 7C 00            [12] 1815 	mov	r4,#0x00
      00039E 8D 82            [24] 1816 	mov	dpl,r5
      0003A0 8E 83            [24] 1817 	mov	dph,r6
      0003A2 8F F0            [24] 1818 	mov	b,r7
      0003A4 74 77            [12] 1819 	mov	a,#0x77
      0003A6 12r00r00         [24] 1820 	lcall	__gptrput
      0003A9 A3               [24] 1821 	inc	dptr
      0003AA E4               [12] 1822 	clr	a
      0003AB 12r00r00         [24] 1823 	lcall	__gptrput
      0003AE                       1824 00103$:
      0003AE EC               [12] 1825 	mov	a,r4
      0003AF 70 06            [24] 1826 	jnz	00121$
      0003B1 75 82 01         [24] 1827 	mov	dpl,#0x01
      0003B4 02r05r00         [24] 1828 	ljmp	00134$
                                   1829 ;	../../../../core/lib/sensors.c:121: do {
      0003B7                       1830 00121$:
                                   1831 ;	../../../../core/lib/sensors.c:122: events = 0;
      0003B7 90r00r04         [24] 1832 	mov	dptr,#_process_thread_sensors_process_events_1_107
      0003BA E4               [12] 1833 	clr	a
      0003BB F0               [24] 1834 	movx	@dptr,a
      0003BC E4               [12] 1835 	clr	a
      0003BD A3               [24] 1836 	inc	dptr
      0003BE F0               [24] 1837 	movx	@dptr,a
                                   1838 ;	../../../../core/lib/sensors.c:123: for(i = 0; i < num_sensors; ++i) {
      0003BF 90r00r02         [24] 1839 	mov	dptr,#_process_thread_sensors_process_i_1_107
      0003C2 E4               [12] 1840 	clr	a
      0003C3 F0               [24] 1841 	movx	@dptr,a
      0003C4 E4               [12] 1842 	clr	a
      0003C5 A3               [24] 1843 	inc	dptr
      0003C6 F0               [24] 1844 	movx	@dptr,a
      0003C7                       1845 00132$:
      0003C7 C0 05            [24] 1846 	push	ar5
      0003C9 C0 06            [24] 1847 	push	ar6
      0003CB C0 07            [24] 1848 	push	ar7
      0003CD 90r00r02         [24] 1849 	mov	dptr,#_process_thread_sensors_process_i_1_107
      0003D0 E0               [24] 1850 	movx	a,@dptr
      0003D1 FA               [12] 1851 	mov	r2,a
      0003D2 A3               [24] 1852 	inc	dptr
      0003D3 E0               [24] 1853 	movx	a,@dptr
      0003D4 FB               [12] 1854 	mov	r3,a
      0003D5 90r00r01         [24] 1855 	mov	dptr,#_num_sensors
      0003D8 E0               [24] 1856 	movx	a,@dptr
      0003D9 FF               [12] 1857 	mov	r7,a
      0003DA 7E 00            [12] 1858 	mov	r6,#0x00
      0003DC C3               [12] 1859 	clr	c
      0003DD EA               [12] 1860 	mov	a,r2
      0003DE 9F               [12] 1861 	subb	a,r7
      0003DF EB               [12] 1862 	mov	a,r3
      0003E0 64 80            [12] 1863 	xrl	a,#0x80
      0003E2 8E F0            [24] 1864 	mov	b,r6
      0003E4 63 F0 80         [24] 1865 	xrl	b,#0x80
      0003E7 95 F0            [12] 1866 	subb	a,b
      0003E9 D0 07            [24] 1867 	pop	ar7
      0003EB D0 06            [24] 1868 	pop	ar6
      0003ED D0 05            [24] 1869 	pop	ar5
      0003EF 40 03            [24] 1870 	jc	00183$
      0003F1 02r04rDD         [24] 1871 	ljmp	00122$
      0003F4                       1872 00183$:
                                   1873 ;	../../../../core/lib/sensors.c:124: if(sensors_flags[i] & FLAG_CHANGED) {
      0003F4 C0 05            [24] 1874 	push	ar5
      0003F6 C0 06            [24] 1875 	push	ar6
      0003F8 C0 07            [24] 1876 	push	ar7
      0003FA EA               [12] 1877 	mov	a,r2
      0003FB 24r00            [12] 1878 	add	a,#_sensors_flags
      0003FD F5 82            [12] 1879 	mov	dpl,a
      0003FF EB               [12] 1880 	mov	a,r3
      000400 34s00            [12] 1881 	addc	a,#(_sensors_flags >> 8)
      000402 F5 83            [12] 1882 	mov	dph,a
      000404 E0               [24] 1883 	movx	a,@dptr
      000405 D0 07            [24] 1884 	pop	ar7
      000407 D0 06            [24] 1885 	pop	ar6
      000409 D0 05            [24] 1886 	pop	ar5
      00040B 20 E7 03         [24] 1887 	jb	acc.7,00184$
      00040E 02r04rCE         [24] 1888 	ljmp	00133$
      000411                       1889 00184$:
                                   1890 ;	../../../../core/lib/sensors.c:125: if(process_post(PROCESS_BROADCAST, sensors_event, (void *)sensors[i]) == PROCESS_ERR_OK) {
      000411 C0 05            [24] 1891 	push	ar5
      000413 C0 06            [24] 1892 	push	ar6
      000415 C0 07            [24] 1893 	push	ar7
      000417 C0 07            [24] 1894 	push	ar7
      000419 C0 06            [24] 1895 	push	ar6
      00041B C0 05            [24] 1896 	push	ar5
      00041D C0 02            [24] 1897 	push	ar2
      00041F C0 03            [24] 1898 	push	ar3
      000421 90 00 03         [24] 1899 	mov	dptr,#0x0003
      000424 12r00r00         [24] 1900 	lcall	__mulint
      000427 AA 82            [24] 1901 	mov	r2,dpl
      000429 AB 83            [24] 1902 	mov	r3,dph
      00042B 15 81            [12] 1903 	dec	sp
      00042D 15 81            [12] 1904 	dec	sp
      00042F D0 05            [24] 1905 	pop	ar5
      000431 D0 06            [24] 1906 	pop	ar6
      000433 D0 07            [24] 1907 	pop	ar7
      000435 EA               [12] 1908 	mov	a,r2
      000436 24r00            [12] 1909 	add	a,#_sensors
      000438 F5 82            [12] 1910 	mov	dpl,a
      00043A EB               [12] 1911 	mov	a,r3
      00043B 34s00            [12] 1912 	addc	a,#(_sensors >> 8)
      00043D F5 83            [12] 1913 	mov	dph,a
      00043F E0               [24] 1914 	movx	a,@dptr
      000440 FA               [12] 1915 	mov	r2,a
      000441 A3               [24] 1916 	inc	dptr
      000442 E0               [24] 1917 	movx	a,@dptr
      000443 FB               [12] 1918 	mov	r3,a
      000444 A3               [24] 1919 	inc	dptr
      000445 E0               [24] 1920 	movx	a,@dptr
      000446 FF               [12] 1921 	mov	r7,a
      000447 C0 05            [24] 1922 	push	ar5
      000449 C0 02            [24] 1923 	push	ar2
      00044B C0 03            [24] 1924 	push	ar3
      00044D C0 07            [24] 1925 	push	ar7
      00044F 90r00r00         [24] 1926 	mov	dptr,#_sensors_event
      000452 E0               [24] 1927 	movx	a,@dptr
      000453 C0 E0            [24] 1928 	push	acc
      000455 90 00 00         [24] 1929 	mov	dptr,#0x0000
      000458 75 F0 00         [24] 1930 	mov	b,#0x00
      00045B 78r00            [12] 1931 	mov	r0,#_process_post
      00045D 79s00            [12] 1932 	mov	r1,#(_process_post >> 8)
      00045F 7As00            [12] 1933 	mov	r2,#(_process_post >> 16)
      000461 12r00r00         [24] 1934 	lcall	__sdcc_banked_call
      000464 AE 82            [24] 1935 	mov	r6,dpl
      000466 AF 83            [24] 1936 	mov	r7,dph
      000468 E5 81            [12] 1937 	mov	a,sp
      00046A 24 FC            [12] 1938 	add	a,#0xfc
      00046C F5 81            [12] 1939 	mov	sp,a
      00046E D0 05            [24] 1940 	pop	ar5
      000470 EE               [12] 1941 	mov	a,r6
      000471 4F               [12] 1942 	orl	a,r7
      000472 D0 07            [24] 1943 	pop	ar7
      000474 D0 06            [24] 1944 	pop	ar6
      000476 D0 05            [24] 1945 	pop	ar5
                                   1946 ;	../../../../core/lib/sensors.c:126: PROCESS_WAIT_EVENT_UNTIL(ev == sensors_event);
      000478 70 29            [24] 1947 	jnz	00117$
      00047A FC               [12] 1948 	mov	r4,a
      00047B 8D 82            [24] 1949 	mov	dpl,r5
      00047D 8E 83            [24] 1950 	mov	dph,r6
      00047F 8F F0            [24] 1951 	mov	b,r7
      000481 74 7E            [12] 1952 	mov	a,#0x7E
      000483 12r00r00         [24] 1953 	lcall	__gptrput
      000486 A3               [24] 1954 	inc	dptr
      000487 E4               [12] 1955 	clr	a
      000488 12r00r00         [24] 1956 	lcall	__gptrput
      00048B                       1957 00109$:
      00048B EC               [12] 1958 	mov	a,r4
      00048C 60 10            [24] 1959 	jz	00110$
      00048E 90r00r00         [24] 1960 	mov	dptr,#_sensors_event
      000491 E0               [24] 1961 	movx	a,@dptr
      000492 FC               [12] 1962 	mov	r4,a
      000493 E5 81            [12] 1963 	mov	a,sp
      000495 24 FD            [12] 1964 	add	a,#0xfd
      000497 F8               [12] 1965 	mov	r0,a
      000498 E6               [12] 1966 	mov	a,@r0
      000499 B5 04 02         [24] 1967 	cjne	a,ar4,00187$
      00049C 80 05            [24] 1968 	sjmp	00117$
      00049E                       1969 00187$:
      00049E                       1970 00110$:
      00049E 75 82 01         [24] 1971 	mov	dpl,#0x01
      0004A1 80 5D            [24] 1972 	sjmp	00134$
      0004A3                       1973 00117$:
                                   1974 ;	../../../../core/lib/sensors.c:128: sensors_flags[i] &= ~FLAG_CHANGED;
      0004A3 90r00r02         [24] 1975 	mov	dptr,#_process_thread_sensors_process_i_1_107
      0004A6 E0               [24] 1976 	movx	a,@dptr
      0004A7 FB               [12] 1977 	mov	r3,a
      0004A8 A3               [24] 1978 	inc	dptr
      0004A9 E0               [24] 1979 	movx	a,@dptr
      0004AA FC               [12] 1980 	mov	r4,a
      0004AB EB               [12] 1981 	mov	a,r3
      0004AC 24r00            [12] 1982 	add	a,#_sensors_flags
      0004AE FB               [12] 1983 	mov	r3,a
      0004AF EC               [12] 1984 	mov	a,r4
      0004B0 34s00            [12] 1985 	addc	a,#(_sensors_flags >> 8)
      0004B2 FC               [12] 1986 	mov	r4,a
      0004B3 8B 82            [24] 1987 	mov	dpl,r3
      0004B5 8C 83            [24] 1988 	mov	dph,r4
      0004B7 E0               [24] 1989 	movx	a,@dptr
      0004B8 FA               [12] 1990 	mov	r2,a
      0004B9 53 02 7F         [24] 1991 	anl	ar2,#0x7F
      0004BC 8B 82            [24] 1992 	mov	dpl,r3
      0004BE 8C 83            [24] 1993 	mov	dph,r4
      0004C0 EA               [12] 1994 	mov	a,r2
      0004C1 F0               [24] 1995 	movx	@dptr,a
                                   1996 ;	../../../../core/lib/sensors.c:129: events++;
      0004C2 90r00r04         [24] 1997 	mov	dptr,#_process_thread_sensors_process_events_1_107
      0004C5 E0               [24] 1998 	movx	a,@dptr
      0004C6 24 01            [12] 1999 	add	a,#0x01
      0004C8 F0               [24] 2000 	movx	@dptr,a
      0004C9 A3               [24] 2001 	inc	dptr
      0004CA E0               [24] 2002 	movx	a,@dptr
      0004CB 34 00            [12] 2003 	addc	a,#0x00
      0004CD F0               [24] 2004 	movx	@dptr,a
      0004CE                       2005 00133$:
                                   2006 ;	../../../../core/lib/sensors.c:123: for(i = 0; i < num_sensors; ++i) {
      0004CE 90r00r02         [24] 2007 	mov	dptr,#_process_thread_sensors_process_i_1_107
      0004D1 E0               [24] 2008 	movx	a,@dptr
      0004D2 24 01            [12] 2009 	add	a,#0x01
      0004D4 F0               [24] 2010 	movx	@dptr,a
      0004D5 A3               [24] 2011 	inc	dptr
      0004D6 E0               [24] 2012 	movx	a,@dptr
      0004D7 34 00            [12] 2013 	addc	a,#0x00
      0004D9 F0               [24] 2014 	movx	@dptr,a
      0004DA 02r03rC7         [24] 2015 	ljmp	00132$
      0004DD                       2016 00122$:
                                   2017 ;	../../../../core/lib/sensors.c:132: } while(events);
      0004DD 90r00r04         [24] 2018 	mov	dptr,#_process_thread_sensors_process_events_1_107
      0004E0 E0               [24] 2019 	movx	a,@dptr
      0004E1 FB               [12] 2020 	mov	r3,a
      0004E2 A3               [24] 2021 	inc	dptr
      0004E3 E0               [24] 2022 	movx	a,@dptr
      0004E4 FC               [12] 2023 	mov	r4,a
      0004E5 4B               [12] 2024 	orl	a,r3
      0004E6 60 03            [24] 2025 	jz	00188$
      0004E8 02r03rB7         [24] 2026 	ljmp	00121$
      0004EB                       2027 00188$:
      0004EB 02r03r9C         [24] 2028 	ljmp	00125$
                                   2029 ;	../../../../core/lib/sensors.c:135: PROCESS_END();
      0004EE                       2030 00127$:
      0004EE 8D 82            [24] 2031 	mov	dpl,r5
      0004F0 8E 83            [24] 2032 	mov	dph,r6
      0004F2 8F F0            [24] 2033 	mov	b,r7
      0004F4 E4               [12] 2034 	clr	a
      0004F5 12r00r00         [24] 2035 	lcall	__gptrput
      0004F8 A3               [24] 2036 	inc	dptr
      0004F9 E4               [12] 2037 	clr	a
      0004FA 12r00r00         [24] 2038 	lcall	__gptrput
      0004FD 75 82 03         [24] 2039 	mov	dpl,#0x03
      000500                       2040 00134$:
      000500 02r00r00         [24] 2041 	ljmp	__sdcc_banked_ret
                                   2042 	.area CSEG    (CODE)
                                   2043 	.area CONST   (CODE)
                                   2044 	.area XINIT   (CODE)
      000000                       2045 __xinit__sensors_process:
                                   2046 ; generic printIvalPtr
      000000 00 00 00              2047 	.byte #0x00,#0x00,#0x00
      000003r48s02s00              2048 	.byte _process_thread_sensors_process,(_process_thread_sensors_process >> 8),(_process_thread_sensors_process >> 16)
      000006 00 00                 2049 	.byte #0x00,#0x00	; 0
      000008 00                    2050 	.db #0x00	; 0
      000009 00                    2051 	.db #0x00	; 0
                                   2052 	.area CABS    (ABS,CODE)
