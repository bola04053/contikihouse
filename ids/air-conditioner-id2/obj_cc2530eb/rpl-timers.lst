                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8804 (Aug  6 2013) (Linux)
                                      4 ; This file was generated Mon Aug 25 04:16:25 2014
                                      5 ;--------------------------------------------------------
                                      6 	.module rpl_timers
                                      7 	.optsdcc -mmcs51 --model-huge
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _random_rand
                                     13 	.globl _rpl_purge_routes
                                     14 	.globl _rpl_recalculate_ranks
                                     15 	.globl _dao_output
                                     16 	.globl _dio_output
                                     17 	.globl _dis_output
                                     18 	.globl _rpl_get_any_dag
                                     19 	.globl _uip_ds6_get_link_local
                                     20 	.globl _ctimer_stop
                                     21 	.globl _ctimer_set
                                     22 	.globl _ctimer_reset
                                     23 	.globl _etimer_expired
                                     24 	.globl _etimer_expiration_time
                                     25 	.globl _ACTIVE
                                     26 	.globl _TX_BYTE
                                     27 	.globl _RX_BYTE
                                     28 	.globl _ERR
                                     29 	.globl _FE
                                     30 	.globl _SLAVE
                                     31 	.globl _RE
                                     32 	.globl _MODE
                                     33 	.globl _T3OVFIF
                                     34 	.globl _T3CH0IF
                                     35 	.globl _T3CH1IF
                                     36 	.globl _T4OVFIF
                                     37 	.globl _T4CH0IF
                                     38 	.globl _T4CH1IF
                                     39 	.globl _OVFIM
                                     40 	.globl _B_0
                                     41 	.globl _B_1
                                     42 	.globl _B_2
                                     43 	.globl _B_3
                                     44 	.globl _B_4
                                     45 	.globl _B_5
                                     46 	.globl _B_6
                                     47 	.globl _B_7
                                     48 	.globl _P2IF
                                     49 	.globl _UTX0IF
                                     50 	.globl _UTX1IF
                                     51 	.globl _P1IF
                                     52 	.globl _WDTIF
                                     53 	.globl _ACC_0
                                     54 	.globl _ACC_1
                                     55 	.globl _ACC_2
                                     56 	.globl _ACC_3
                                     57 	.globl _ACC_4
                                     58 	.globl _ACC_5
                                     59 	.globl _ACC_6
                                     60 	.globl _ACC_7
                                     61 	.globl _P
                                     62 	.globl _F1
                                     63 	.globl _OV
                                     64 	.globl _RS0
                                     65 	.globl _RS1
                                     66 	.globl _F0
                                     67 	.globl _AC
                                     68 	.globl _CY
                                     69 	.globl _DMAIF
                                     70 	.globl _T1IF
                                     71 	.globl _T2IF
                                     72 	.globl _T3IF
                                     73 	.globl _T4IF
                                     74 	.globl _P0IF
                                     75 	.globl _STIF
                                     76 	.globl _DMAIE
                                     77 	.globl _T1IE
                                     78 	.globl _T2IE
                                     79 	.globl _T3IE
                                     80 	.globl _T4IE
                                     81 	.globl _P0IE
                                     82 	.globl _RFERRIE
                                     83 	.globl _ADCIE
                                     84 	.globl _URX0IE
                                     85 	.globl _URX1IE
                                     86 	.globl _ENCIE
                                     87 	.globl _STIE
                                     88 	.globl _EA
                                     89 	.globl _P2_0
                                     90 	.globl _P2_1
                                     91 	.globl _P2_2
                                     92 	.globl _P2_3
                                     93 	.globl _P2_4
                                     94 	.globl _P2_5
                                     95 	.globl _P2_6
                                     96 	.globl _P2_7
                                     97 	.globl _ENCIF_0
                                     98 	.globl _ENCIF_1
                                     99 	.globl _P1_0
                                    100 	.globl _P1_1
                                    101 	.globl _P1_2
                                    102 	.globl _P1_3
                                    103 	.globl _P1_4
                                    104 	.globl _P1_5
                                    105 	.globl _P1_6
                                    106 	.globl _P1_7
                                    107 	.globl _IT0
                                    108 	.globl _RFERRIF
                                    109 	.globl _IT1
                                    110 	.globl _URX0IF
                                    111 	.globl _ADCIF
                                    112 	.globl _URX1IF
                                    113 	.globl _P0_0
                                    114 	.globl _P0_1
                                    115 	.globl _P0_2
                                    116 	.globl _P0_3
                                    117 	.globl _P0_4
                                    118 	.globl _P0_5
                                    119 	.globl _P0_6
                                    120 	.globl _P0_7
                                    121 	.globl _WDCTL
                                    122 	.globl _U1GCR
                                    123 	.globl _U1UCR
                                    124 	.globl _U1BAUD
                                    125 	.globl _U1DBUF
                                    126 	.globl _U1CSR
                                    127 	.globl _U0GCR
                                    128 	.globl _U0UCR
                                    129 	.globl _U0BAUD
                                    130 	.globl _U0DBUF
                                    131 	.globl _U0CSR
                                    132 	.globl _TIMIF
                                    133 	.globl _T4CC1
                                    134 	.globl _T4CCTL1
                                    135 	.globl _T4CC0
                                    136 	.globl _T4CCTL0
                                    137 	.globl _T4CTL
                                    138 	.globl _T4CNT
                                    139 	.globl _T3CC1
                                    140 	.globl _T3CCTL1
                                    141 	.globl _T3CC0
                                    142 	.globl _T3CCTL0
                                    143 	.globl _T3CTL
                                    144 	.globl _T3CNT
                                    145 	.globl _T2MSEL
                                    146 	.globl _T2IRQM
                                    147 	.globl _T2MOVF2
                                    148 	.globl _T2MOVF1
                                    149 	.globl _T2MOVF0
                                    150 	.globl _T2M1
                                    151 	.globl _T2M0
                                    152 	.globl _T2IRQF
                                    153 	.globl _T2EVTCFG
                                    154 	.globl _T2CTRL
                                    155 	.globl _T1STAT
                                    156 	.globl _T1CCTL2
                                    157 	.globl _T1CCTL1
                                    158 	.globl _T1CCTL0
                                    159 	.globl _T1CTL
                                    160 	.globl _T1CNTH
                                    161 	.globl _T1CNTL
                                    162 	.globl _T1CC2H
                                    163 	.globl _T1CC2L
                                    164 	.globl _T1CC1H
                                    165 	.globl _T1CC1L
                                    166 	.globl _T1CC0H
                                    167 	.globl _T1CC0L
                                    168 	.globl _CLKCONSTA
                                    169 	.globl _CLKCONCMD
                                    170 	.globl _SLEEPSTA
                                    171 	.globl _SLEEPCMD
                                    172 	.globl _STLOAD
                                    173 	.globl _ST2
                                    174 	.globl _ST1
                                    175 	.globl _ST0
                                    176 	.globl _RFERRF
                                    177 	.globl _RFIRQF0
                                    178 	.globl _RFST
                                    179 	.globl _RFD
                                    180 	.globl _RFIRQF1
                                    181 	.globl _PSBANK
                                    182 	.globl _FMAP
                                    183 	.globl _MEMCTR
                                    184 	.globl __XPAGE
                                    185 	.globl _MPAGE
                                    186 	.globl _PMUX
                                    187 	.globl _P2DIR
                                    188 	.globl _P1DIR
                                    189 	.globl _P0DIR
                                    190 	.globl _P2INP
                                    191 	.globl _P1INP
                                    192 	.globl _P2SEL
                                    193 	.globl _P1SEL
                                    194 	.globl _P0SEL
                                    195 	.globl _APCFG
                                    196 	.globl _PERCFG
                                    197 	.globl _P0INP
                                    198 	.globl _P2IEN
                                    199 	.globl _P1IEN
                                    200 	.globl _P0IEN
                                    201 	.globl _PICTL
                                    202 	.globl _P2IFG
                                    203 	.globl _P1IFG
                                    204 	.globl _P0IFG
                                    205 	.globl _DMAREQ
                                    206 	.globl _DMAARM
                                    207 	.globl _DMA0CFGH
                                    208 	.globl _DMA0CFGL
                                    209 	.globl _DMA1CFGH
                                    210 	.globl _DMA1CFGL
                                    211 	.globl _DMAIRQ
                                    212 	.globl _ENCCS
                                    213 	.globl _ENCDO
                                    214 	.globl _ENCDI
                                    215 	.globl _RNDH
                                    216 	.globl _RNDL
                                    217 	.globl _ADCH
                                    218 	.globl _ADCL
                                    219 	.globl _ADCCON3
                                    220 	.globl _ADCCON2
                                    221 	.globl _ADCCON1
                                    222 	.globl _B
                                    223 	.globl _IRCON2
                                    224 	.globl _ACC
                                    225 	.globl _PSW
                                    226 	.globl _IRCON
                                    227 	.globl _IP1
                                    228 	.globl _IEN1
                                    229 	.globl _IP0
                                    230 	.globl _IEN0
                                    231 	.globl _P2
                                    232 	.globl _S1CON
                                    233 	.globl _IEN2
                                    234 	.globl _S0CON
                                    235 	.globl _DPS
                                    236 	.globl _P1
                                    237 	.globl _TCON
                                    238 	.globl _PCON
                                    239 	.globl _DPH1
                                    240 	.globl _DPL1
                                    241 	.globl _DPH0
                                    242 	.globl _DPL0
                                    243 	.globl _SP
                                    244 	.globl _P0
                                    245 	.globl _X_IEEE_ADDR
                                    246 	.globl _X_INFOPAGE
                                    247 	.globl _X_P2DIR
                                    248 	.globl _X_P1DIR
                                    249 	.globl _X_P0DIR
                                    250 	.globl _X_U1GCR
                                    251 	.globl _X_U1UCR
                                    252 	.globl _X_U1BAUD
                                    253 	.globl _X_U1DBUF
                                    254 	.globl _X_U1CSR
                                    255 	.globl _X_P2INP
                                    256 	.globl _X_P1INP
                                    257 	.globl _X_P2SEL
                                    258 	.globl _X_P1SEL
                                    259 	.globl _X_P0SEL
                                    260 	.globl _X_APCFG
                                    261 	.globl _X_PERCFG
                                    262 	.globl _X_T4CC1
                                    263 	.globl _X_T4CCTL1
                                    264 	.globl _X_T4CC0
                                    265 	.globl _X_T4CCTL0
                                    266 	.globl _X_T4CTL
                                    267 	.globl _X_T4CNT
                                    268 	.globl _X_RFIRQF0
                                    269 	.globl _X_T1CCTL2
                                    270 	.globl _X_T1CCTL1
                                    271 	.globl _X_T1CCTL0
                                    272 	.globl _X_T1CTL
                                    273 	.globl _X_T1CNTH
                                    274 	.globl _X_T1CNTL
                                    275 	.globl _X_RFST
                                    276 	.globl _X_T1CC2H
                                    277 	.globl _X_T1CC2L
                                    278 	.globl _X_T1CC1H
                                    279 	.globl _X_T1CC1L
                                    280 	.globl _X_T1CC0H
                                    281 	.globl _X_T1CC0L
                                    282 	.globl _X_RFD
                                    283 	.globl _X_TIMIF
                                    284 	.globl _X_DMAREQ
                                    285 	.globl _X_DMAARM
                                    286 	.globl _X_DMA0CFGH
                                    287 	.globl _X_DMA0CFGL
                                    288 	.globl _X_DMA1CFGH
                                    289 	.globl _X_DMA1CFGL
                                    290 	.globl _X_DMAIRQ
                                    291 	.globl _X_T3CC1
                                    292 	.globl _X_T3CCTL1
                                    293 	.globl _X_T3CC0
                                    294 	.globl _X_T3CCTL0
                                    295 	.globl _X_T3CTL
                                    296 	.globl _X_T3CNT
                                    297 	.globl _X_WDCTL
                                    298 	.globl _X_MEMCTR
                                    299 	.globl _X_CLKCONCMD
                                    300 	.globl _X_U0GCR
                                    301 	.globl _X_U0UCR
                                    302 	.globl _X_T2MSEL
                                    303 	.globl _X_U0BAUD
                                    304 	.globl _X_U0DBUF
                                    305 	.globl _X_RFERRF
                                    306 	.globl _X_SLEEPCMD
                                    307 	.globl _X_RNDH
                                    308 	.globl _X_RNDL
                                    309 	.globl _X_ADCH
                                    310 	.globl _X_ADCL
                                    311 	.globl _X_ADCCON3
                                    312 	.globl _X_ADCCON2
                                    313 	.globl _X_ADCCON1
                                    314 	.globl _X_ENCCS
                                    315 	.globl _X_ENCDO
                                    316 	.globl _X_ENCDI
                                    317 	.globl _X_T1STAT
                                    318 	.globl _X_PMUX
                                    319 	.globl _X_STLOAD
                                    320 	.globl _X_P2IEN
                                    321 	.globl _X_P0IEN
                                    322 	.globl _X_T2IRQM
                                    323 	.globl _X_T2MOVF2
                                    324 	.globl _X_T2MOVF1
                                    325 	.globl _X_T2MOVF0
                                    326 	.globl _X_T2M1
                                    327 	.globl _X_T2M0
                                    328 	.globl _X_T2IRQF
                                    329 	.globl _X_P2
                                    330 	.globl _X_PSBANK
                                    331 	.globl _X_FMAP
                                    332 	.globl _X_CLKCONSTA
                                    333 	.globl _X_SLEEPSTA
                                    334 	.globl _X_T2EVTCFG
                                    335 	.globl _X_ST2
                                    336 	.globl _X_ST1
                                    337 	.globl _X_ST0
                                    338 	.globl _X_T2CTRL
                                    339 	.globl _X__XPAGE
                                    340 	.globl _X_MPAGE
                                    341 	.globl _X_RFIRQF1
                                    342 	.globl _X_P1
                                    343 	.globl _X_P0INP
                                    344 	.globl _X_P1IEN
                                    345 	.globl _X_PICTL
                                    346 	.globl _X_P2IFG
                                    347 	.globl _X_P1IFG
                                    348 	.globl _X_P0IFG
                                    349 	.globl _X_U0CSR
                                    350 	.globl _X_P0
                                    351 	.globl _USBF5
                                    352 	.globl _USBF4
                                    353 	.globl _USBF3
                                    354 	.globl _USBF2
                                    355 	.globl _USBF1
                                    356 	.globl _USBF0
                                    357 	.globl _USBCNTH
                                    358 	.globl _USBCNTL
                                    359 	.globl _USBCNT0
                                    360 	.globl _USBCSOH
                                    361 	.globl _USBCSOL
                                    362 	.globl _USBMAXO
                                    363 	.globl _USBCSIH
                                    364 	.globl _USBCSIL
                                    365 	.globl _USBCS0
                                    366 	.globl _USBMAXI
                                    367 	.globl _USBCTRL
                                    368 	.globl _USBINDEX
                                    369 	.globl _USBFRMH
                                    370 	.globl _USBFRML
                                    371 	.globl _USBCIE
                                    372 	.globl _USBOIE
                                    373 	.globl _USBIIE
                                    374 	.globl _USBCIF
                                    375 	.globl _USBOIF
                                    376 	.globl _USBIIF
                                    377 	.globl _USBPOW
                                    378 	.globl _USBADDR
                                    379 	.globl _CSPT
                                    380 	.globl _CSPZ
                                    381 	.globl _CSPY
                                    382 	.globl _CSPX
                                    383 	.globl _CSPSTAT
                                    384 	.globl _CSPCTRL
                                    385 	.globl _CSPPROG23
                                    386 	.globl _CSPPROG22
                                    387 	.globl _CSPPROG21
                                    388 	.globl _CSPPROG20
                                    389 	.globl _CSPPROG19
                                    390 	.globl _CSPPROG18
                                    391 	.globl _CSPPROG17
                                    392 	.globl _CSPPROG16
                                    393 	.globl _CSPPROG15
                                    394 	.globl _CSPPROG14
                                    395 	.globl _CSPPROG13
                                    396 	.globl _CSPPROG12
                                    397 	.globl _CSPPROG11
                                    398 	.globl _CSPPROG10
                                    399 	.globl _CSPPROG9
                                    400 	.globl _CSPPROG8
                                    401 	.globl _CSPPROG7
                                    402 	.globl _CSPPROG6
                                    403 	.globl _CSPPROG5
                                    404 	.globl _CSPPROG4
                                    405 	.globl _CSPPROG3
                                    406 	.globl _CSPPROG2
                                    407 	.globl _CSPPROG1
                                    408 	.globl _CSPPROG0
                                    409 	.globl _RFC_OBS_CTRL2
                                    410 	.globl _RFC_OBS_CTRL1
                                    411 	.globl _RFC_OBS_CTRL0
                                    412 	.globl _TXFILTCFG
                                    413 	.globl _PTEST1
                                    414 	.globl _PTEST0
                                    415 	.globl _ATEST
                                    416 	.globl _DACTEST2
                                    417 	.globl _DACTEST1
                                    418 	.globl _DACTEST0
                                    419 	.globl _MDMTEST1
                                    420 	.globl _MDMTEST0
                                    421 	.globl _ADCTEST2
                                    422 	.globl _ADCTEST1
                                    423 	.globl _ADCTEST0
                                    424 	.globl _AGCCTRL3
                                    425 	.globl _AGCCTRL2
                                    426 	.globl _AGCCTRL1
                                    427 	.globl _AGCCTRL0
                                    428 	.globl _FSCAL3
                                    429 	.globl _FSCAL2
                                    430 	.globl _FSCAL1
                                    431 	.globl _FSCAL0
                                    432 	.globl _FSCTRL
                                    433 	.globl _RXCTRL
                                    434 	.globl _FREQEST
                                    435 	.globl _MDMCTRL1
                                    436 	.globl _MDMCTRL0
                                    437 	.globl _RFRND
                                    438 	.globl _RFERRM
                                    439 	.globl _RFIRQM1
                                    440 	.globl _RFIRQM0
                                    441 	.globl _TXLAST_PTR
                                    442 	.globl _TXFIRST_PTR
                                    443 	.globl _RXP1_PTR
                                    444 	.globl _RXLAST_PTR
                                    445 	.globl _RXFIRST_PTR
                                    446 	.globl _TXFIFOCNT
                                    447 	.globl _RXFIFOCNT
                                    448 	.globl _RXFIRST
                                    449 	.globl _RSSISTAT
                                    450 	.globl _RSSI
                                    451 	.globl _CCACTRL1
                                    452 	.globl _CCACTRL0
                                    453 	.globl _FSMCTRL
                                    454 	.globl _FIFOPCTRL
                                    455 	.globl _FSMSTAT1
                                    456 	.globl _FSMSTAT0
                                    457 	.globl _TXCTRL
                                    458 	.globl _TXPOWER
                                    459 	.globl _FREQCTRL
                                    460 	.globl _FREQTUNE
                                    461 	.globl _RXMASKCLR
                                    462 	.globl _RXMASKSET
                                    463 	.globl _RXENABLE
                                    464 	.globl _FRMCTRL1
                                    465 	.globl _FRMCTRL0
                                    466 	.globl _SRCEXTEN2
                                    467 	.globl _SRCEXTEN1
                                    468 	.globl _SRCEXTEN0
                                    469 	.globl _SRCSHORTEN2
                                    470 	.globl _SRCSHORTEN1
                                    471 	.globl _SRCSHORTEN0
                                    472 	.globl _SRCMATCH
                                    473 	.globl _FRMFILT1
                                    474 	.globl _FRMFILT0
                                    475 	.globl _SHORT_ADDR1
                                    476 	.globl _SHORT_ADDR0
                                    477 	.globl _PAN_ID1
                                    478 	.globl _PAN_ID0
                                    479 	.globl _EXT_ADDR7
                                    480 	.globl _EXT_ADDR6
                                    481 	.globl _EXT_ADDR5
                                    482 	.globl _EXT_ADDR4
                                    483 	.globl _EXT_ADDR3
                                    484 	.globl _EXT_ADDR2
                                    485 	.globl _EXT_ADDR1
                                    486 	.globl _EXT_ADDR0
                                    487 	.globl _SRCSHORTPENDEN2
                                    488 	.globl _SRCSHORTPENDEN1
                                    489 	.globl _SRCSHORTPENDEN0
                                    490 	.globl _SRCEXTPENDEN2
                                    491 	.globl _SRCEXTPENDEN1
                                    492 	.globl _SRCEXTPENDEN0
                                    493 	.globl _SRCRESINDEX
                                    494 	.globl _SRCRESMASK2
                                    495 	.globl _SRCRESMASK1
                                    496 	.globl _SRCRESMASK0
                                    497 	.globl _SRC_ADDR_TABLE
                                    498 	.globl _TXFIFO
                                    499 	.globl _RXFIFO
                                    500 	.globl _RFCORE_RAM
                                    501 	.globl _CMPCTL
                                    502 	.globl _OPAMPS
                                    503 	.globl _OPAMPC
                                    504 	.globl _STCV2
                                    505 	.globl _STCV1
                                    506 	.globl _STCV0
                                    507 	.globl _STCS
                                    508 	.globl _STCC
                                    509 	.globl _T1CC4H
                                    510 	.globl _T1CC4L
                                    511 	.globl _T1CC3H
                                    512 	.globl _T1CC3L
                                    513 	.globl _XX_T1CC2H
                                    514 	.globl _XX_T1CC2L
                                    515 	.globl _XX_T1CC1H
                                    516 	.globl _XX_T1CC1L
                                    517 	.globl _XX_T1CC0H
                                    518 	.globl _XX_T1CC0L
                                    519 	.globl _T1CCTL4
                                    520 	.globl _T1CCTL3
                                    521 	.globl _XX_T1CCTL2
                                    522 	.globl _XX_T1CCTL1
                                    523 	.globl _XX_T1CCTL0
                                    524 	.globl _CLD
                                    525 	.globl _IRCTL
                                    526 	.globl _CHIPINFO1
                                    527 	.globl _CHIPINFO0
                                    528 	.globl _FWDATA
                                    529 	.globl _FADDRH
                                    530 	.globl _FADDRL
                                    531 	.globl _FCTL
                                    532 	.globl _IVCTRL
                                    533 	.globl _BATTMON
                                    534 	.globl _SRCRC
                                    535 	.globl _DBGDATA
                                    536 	.globl _TESTREG0
                                    537 	.globl _CHIPID
                                    538 	.globl _CHVER
                                    539 	.globl _OBSSEL5
                                    540 	.globl _OBSSEL4
                                    541 	.globl _OBSSEL3
                                    542 	.globl _OBSSEL2
                                    543 	.globl _OBSSEL1
                                    544 	.globl _OBSSEL0
                                    545 	.globl _I2CIO
                                    546 	.globl _I2CWC
                                    547 	.globl _I2CADDR
                                    548 	.globl _I2CDATA
                                    549 	.globl _I2CSTAT
                                    550 	.globl _I2CCFG
                                    551 	.globl _OPAMPMC
                                    552 	.globl _MONMUX
                                    553 	.globl _rpl_reset_periodic_timer
                                    554 	.globl _rpl_reset_dio_timer
                                    555 	.globl _rpl_schedule_dao
                                    556 ;--------------------------------------------------------
                                    557 ; special function registers
                                    558 ;--------------------------------------------------------
                                    559 	.area RSEG    (ABS,DATA)
      000000                        560 	.org 0x0000
                           000080   561 _P0	=	0x0080
                           000081   562 _SP	=	0x0081
                           000082   563 _DPL0	=	0x0082
                           000083   564 _DPH0	=	0x0083
                           000084   565 _DPL1	=	0x0084
                           000085   566 _DPH1	=	0x0085
                           000087   567 _PCON	=	0x0087
                           000088   568 _TCON	=	0x0088
                           000090   569 _P1	=	0x0090
                           000092   570 _DPS	=	0x0092
                           000098   571 _S0CON	=	0x0098
                           00009A   572 _IEN2	=	0x009a
                           00009B   573 _S1CON	=	0x009b
                           0000A0   574 _P2	=	0x00a0
                           0000A8   575 _IEN0	=	0x00a8
                           0000A9   576 _IP0	=	0x00a9
                           0000B8   577 _IEN1	=	0x00b8
                           0000B9   578 _IP1	=	0x00b9
                           0000C0   579 _IRCON	=	0x00c0
                           0000D0   580 _PSW	=	0x00d0
                           0000E0   581 _ACC	=	0x00e0
                           0000E8   582 _IRCON2	=	0x00e8
                           0000F0   583 _B	=	0x00f0
                           0000B4   584 _ADCCON1	=	0x00b4
                           0000B5   585 _ADCCON2	=	0x00b5
                           0000B6   586 _ADCCON3	=	0x00b6
                           0000BA   587 _ADCL	=	0x00ba
                           0000BB   588 _ADCH	=	0x00bb
                           0000BC   589 _RNDL	=	0x00bc
                           0000BD   590 _RNDH	=	0x00bd
                           0000B1   591 _ENCDI	=	0x00b1
                           0000B2   592 _ENCDO	=	0x00b2
                           0000B3   593 _ENCCS	=	0x00b3
                           0000D1   594 _DMAIRQ	=	0x00d1
                           0000D2   595 _DMA1CFGL	=	0x00d2
                           0000D3   596 _DMA1CFGH	=	0x00d3
                           0000D4   597 _DMA0CFGL	=	0x00d4
                           0000D5   598 _DMA0CFGH	=	0x00d5
                           0000D6   599 _DMAARM	=	0x00d6
                           0000D7   600 _DMAREQ	=	0x00d7
                           000089   601 _P0IFG	=	0x0089
                           00008A   602 _P1IFG	=	0x008a
                           00008B   603 _P2IFG	=	0x008b
                           00008C   604 _PICTL	=	0x008c
                           0000AB   605 _P0IEN	=	0x00ab
                           00008D   606 _P1IEN	=	0x008d
                           0000AC   607 _P2IEN	=	0x00ac
                           00008F   608 _P0INP	=	0x008f
                           0000F1   609 _PERCFG	=	0x00f1
                           0000F2   610 _APCFG	=	0x00f2
                           0000F3   611 _P0SEL	=	0x00f3
                           0000F4   612 _P1SEL	=	0x00f4
                           0000F5   613 _P2SEL	=	0x00f5
                           0000F6   614 _P1INP	=	0x00f6
                           0000F7   615 _P2INP	=	0x00f7
                           0000FD   616 _P0DIR	=	0x00fd
                           0000FE   617 _P1DIR	=	0x00fe
                           0000FF   618 _P2DIR	=	0x00ff
                           0000AE   619 _PMUX	=	0x00ae
                           000093   620 _MPAGE	=	0x0093
                           000093   621 __XPAGE	=	0x0093
                           0000C7   622 _MEMCTR	=	0x00c7
                           00009F   623 _FMAP	=	0x009f
                           00009F   624 _PSBANK	=	0x009f
                           000091   625 _RFIRQF1	=	0x0091
                           0000D9   626 _RFD	=	0x00d9
                           0000E1   627 _RFST	=	0x00e1
                           0000E9   628 _RFIRQF0	=	0x00e9
                           0000BF   629 _RFERRF	=	0x00bf
                           000095   630 _ST0	=	0x0095
                           000096   631 _ST1	=	0x0096
                           000097   632 _ST2	=	0x0097
                           0000AD   633 _STLOAD	=	0x00ad
                           0000BE   634 _SLEEPCMD	=	0x00be
                           00009D   635 _SLEEPSTA	=	0x009d
                           0000C6   636 _CLKCONCMD	=	0x00c6
                           00009E   637 _CLKCONSTA	=	0x009e
                           0000DA   638 _T1CC0L	=	0x00da
                           0000DB   639 _T1CC0H	=	0x00db
                           0000DC   640 _T1CC1L	=	0x00dc
                           0000DD   641 _T1CC1H	=	0x00dd
                           0000DE   642 _T1CC2L	=	0x00de
                           0000DF   643 _T1CC2H	=	0x00df
                           0000E2   644 _T1CNTL	=	0x00e2
                           0000E3   645 _T1CNTH	=	0x00e3
                           0000E4   646 _T1CTL	=	0x00e4
                           0000E5   647 _T1CCTL0	=	0x00e5
                           0000E6   648 _T1CCTL1	=	0x00e6
                           0000E7   649 _T1CCTL2	=	0x00e7
                           0000AF   650 _T1STAT	=	0x00af
                           000094   651 _T2CTRL	=	0x0094
                           00009C   652 _T2EVTCFG	=	0x009c
                           0000A1   653 _T2IRQF	=	0x00a1
                           0000A2   654 _T2M0	=	0x00a2
                           0000A3   655 _T2M1	=	0x00a3
                           0000A4   656 _T2MOVF0	=	0x00a4
                           0000A5   657 _T2MOVF1	=	0x00a5
                           0000A6   658 _T2MOVF2	=	0x00a6
                           0000A7   659 _T2IRQM	=	0x00a7
                           0000C3   660 _T2MSEL	=	0x00c3
                           0000CA   661 _T3CNT	=	0x00ca
                           0000CB   662 _T3CTL	=	0x00cb
                           0000CC   663 _T3CCTL0	=	0x00cc
                           0000CD   664 _T3CC0	=	0x00cd
                           0000CE   665 _T3CCTL1	=	0x00ce
                           0000CF   666 _T3CC1	=	0x00cf
                           0000EA   667 _T4CNT	=	0x00ea
                           0000EB   668 _T4CTL	=	0x00eb
                           0000EC   669 _T4CCTL0	=	0x00ec
                           0000ED   670 _T4CC0	=	0x00ed
                           0000EE   671 _T4CCTL1	=	0x00ee
                           0000EF   672 _T4CC1	=	0x00ef
                           0000D8   673 _TIMIF	=	0x00d8
                           000086   674 _U0CSR	=	0x0086
                           0000C1   675 _U0DBUF	=	0x00c1
                           0000C2   676 _U0BAUD	=	0x00c2
                           0000C4   677 _U0UCR	=	0x00c4
                           0000C5   678 _U0GCR	=	0x00c5
                           0000F8   679 _U1CSR	=	0x00f8
                           0000F9   680 _U1DBUF	=	0x00f9
                           0000FA   681 _U1BAUD	=	0x00fa
                           0000FB   682 _U1UCR	=	0x00fb
                           0000FC   683 _U1GCR	=	0x00fc
                           0000C9   684 _WDCTL	=	0x00c9
                                    685 ;--------------------------------------------------------
                                    686 ; special function bits
                                    687 ;--------------------------------------------------------
                                    688 	.area RSEG    (ABS,DATA)
      000000                        689 	.org 0x0000
                           000087   690 _P0_7	=	0x0087
                           000086   691 _P0_6	=	0x0086
                           000085   692 _P0_5	=	0x0085
                           000084   693 _P0_4	=	0x0084
                           000083   694 _P0_3	=	0x0083
                           000082   695 _P0_2	=	0x0082
                           000081   696 _P0_1	=	0x0081
                           000080   697 _P0_0	=	0x0080
                           00008F   698 _URX1IF	=	0x008f
                           00008D   699 _ADCIF	=	0x008d
                           00008B   700 _URX0IF	=	0x008b
                           00008A   701 _IT1	=	0x008a
                           000089   702 _RFERRIF	=	0x0089
                           000088   703 _IT0	=	0x0088
                           000097   704 _P1_7	=	0x0097
                           000096   705 _P1_6	=	0x0096
                           000095   706 _P1_5	=	0x0095
                           000094   707 _P1_4	=	0x0094
                           000093   708 _P1_3	=	0x0093
                           000092   709 _P1_2	=	0x0092
                           000091   710 _P1_1	=	0x0091
                           000090   711 _P1_0	=	0x0090
                           000099   712 _ENCIF_1	=	0x0099
                           000098   713 _ENCIF_0	=	0x0098
                           0000A7   714 _P2_7	=	0x00a7
                           0000A6   715 _P2_6	=	0x00a6
                           0000A5   716 _P2_5	=	0x00a5
                           0000A4   717 _P2_4	=	0x00a4
                           0000A3   718 _P2_3	=	0x00a3
                           0000A2   719 _P2_2	=	0x00a2
                           0000A1   720 _P2_1	=	0x00a1
                           0000A0   721 _P2_0	=	0x00a0
                           0000AF   722 _EA	=	0x00af
                           0000AD   723 _STIE	=	0x00ad
                           0000AC   724 _ENCIE	=	0x00ac
                           0000AB   725 _URX1IE	=	0x00ab
                           0000AA   726 _URX0IE	=	0x00aa
                           0000A9   727 _ADCIE	=	0x00a9
                           0000A8   728 _RFERRIE	=	0x00a8
                           0000BD   729 _P0IE	=	0x00bd
                           0000BC   730 _T4IE	=	0x00bc
                           0000BB   731 _T3IE	=	0x00bb
                           0000BA   732 _T2IE	=	0x00ba
                           0000B9   733 _T1IE	=	0x00b9
                           0000B8   734 _DMAIE	=	0x00b8
                           0000C7   735 _STIF	=	0x00c7
                           0000C5   736 _P0IF	=	0x00c5
                           0000C4   737 _T4IF	=	0x00c4
                           0000C3   738 _T3IF	=	0x00c3
                           0000C2   739 _T2IF	=	0x00c2
                           0000C1   740 _T1IF	=	0x00c1
                           0000C0   741 _DMAIF	=	0x00c0
                           0000D7   742 _CY	=	0x00d7
                           0000D6   743 _AC	=	0x00d6
                           0000D5   744 _F0	=	0x00d5
                           0000D4   745 _RS1	=	0x00d4
                           0000D3   746 _RS0	=	0x00d3
                           0000D2   747 _OV	=	0x00d2
                           0000D1   748 _F1	=	0x00d1
                           0000D0   749 _P	=	0x00d0
                           0000E7   750 _ACC_7	=	0x00e7
                           0000E6   751 _ACC_6	=	0x00e6
                           0000E5   752 _ACC_5	=	0x00e5
                           0000E4   753 _ACC_4	=	0x00e4
                           0000E3   754 _ACC_3	=	0x00e3
                           0000E2   755 _ACC_2	=	0x00e2
                           0000E1   756 _ACC_1	=	0x00e1
                           0000E0   757 _ACC_0	=	0x00e0
                           0000EC   758 _WDTIF	=	0x00ec
                           0000EB   759 _P1IF	=	0x00eb
                           0000EA   760 _UTX1IF	=	0x00ea
                           0000E9   761 _UTX0IF	=	0x00e9
                           0000E8   762 _P2IF	=	0x00e8
                           0000F7   763 _B_7	=	0x00f7
                           0000F6   764 _B_6	=	0x00f6
                           0000F5   765 _B_5	=	0x00f5
                           0000F4   766 _B_4	=	0x00f4
                           0000F3   767 _B_3	=	0x00f3
                           0000F2   768 _B_2	=	0x00f2
                           0000F1   769 _B_1	=	0x00f1
                           0000F0   770 _B_0	=	0x00f0
                           0000DE   771 _OVFIM	=	0x00de
                           0000DD   772 _T4CH1IF	=	0x00dd
                           0000DC   773 _T4CH0IF	=	0x00dc
                           0000DB   774 _T4OVFIF	=	0x00db
                           0000DA   775 _T3CH1IF	=	0x00da
                           0000D9   776 _T3CH0IF	=	0x00d9
                           0000D8   777 _T3OVFIF	=	0x00d8
                           0000FF   778 _MODE	=	0x00ff
                           0000FE   779 _RE	=	0x00fe
                           0000FD   780 _SLAVE	=	0x00fd
                           0000FC   781 _FE	=	0x00fc
                           0000FB   782 _ERR	=	0x00fb
                           0000FA   783 _RX_BYTE	=	0x00fa
                           0000F9   784 _TX_BYTE	=	0x00f9
                           0000F8   785 _ACTIVE	=	0x00f8
                                    786 ;--------------------------------------------------------
                                    787 ; overlayable register banks
                                    788 ;--------------------------------------------------------
                                    789 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        790 	.ds 8
                                    791 ;--------------------------------------------------------
                                    792 ; internal ram data
                                    793 ;--------------------------------------------------------
                                    794 	.area DSEG    (DATA)
                                    795 ;--------------------------------------------------------
                                    796 ; overlayable items in internal ram 
                                    797 ;--------------------------------------------------------
                                    798 ;--------------------------------------------------------
                                    799 ; indirectly addressable internal ram data
                                    800 ;--------------------------------------------------------
                                    801 	.area ISEG    (DATA)
                                    802 ;--------------------------------------------------------
                                    803 ; absolute internal ram data
                                    804 ;--------------------------------------------------------
                                    805 	.area IABS    (ABS,DATA)
                                    806 	.area IABS    (ABS,DATA)
                                    807 ;--------------------------------------------------------
                                    808 ; bit data
                                    809 ;--------------------------------------------------------
                                    810 	.area BSEG    (BIT)
                                    811 ;--------------------------------------------------------
                                    812 ; paged external ram data
                                    813 ;--------------------------------------------------------
                                    814 	.area PSEG    (PAG,XDATA)
                                    815 ;--------------------------------------------------------
                                    816 ; external ram data
                                    817 ;--------------------------------------------------------
                                    818 	.area XSEG    (XDATA)
                           0061A6   819 _MONMUX	=	0x61a6
                           0061A6   820 _OPAMPMC	=	0x61a6
                           006230   821 _I2CCFG	=	0x6230
                           006231   822 _I2CSTAT	=	0x6231
                           006232   823 _I2CDATA	=	0x6232
                           006233   824 _I2CADDR	=	0x6233
                           006234   825 _I2CWC	=	0x6234
                           006235   826 _I2CIO	=	0x6235
                           006243   827 _OBSSEL0	=	0x6243
                           006244   828 _OBSSEL1	=	0x6244
                           006245   829 _OBSSEL2	=	0x6245
                           006246   830 _OBSSEL3	=	0x6246
                           006247   831 _OBSSEL4	=	0x6247
                           006248   832 _OBSSEL5	=	0x6248
                           006249   833 _CHVER	=	0x6249
                           00624A   834 _CHIPID	=	0x624a
                           00624B   835 _TESTREG0	=	0x624b
                           006260   836 _DBGDATA	=	0x6260
                           006262   837 _SRCRC	=	0x6262
                           006264   838 _BATTMON	=	0x6264
                           006265   839 _IVCTRL	=	0x6265
                           006270   840 _FCTL	=	0x6270
                           006271   841 _FADDRL	=	0x6271
                           006272   842 _FADDRH	=	0x6272
                           006273   843 _FWDATA	=	0x6273
                           006276   844 _CHIPINFO0	=	0x6276
                           006277   845 _CHIPINFO1	=	0x6277
                           006281   846 _IRCTL	=	0x6281
                           006290   847 _CLD	=	0x6290
                           0062A0   848 _XX_T1CCTL0	=	0x62a0
                           0062A1   849 _XX_T1CCTL1	=	0x62a1
                           0062A2   850 _XX_T1CCTL2	=	0x62a2
                           0062A3   851 _T1CCTL3	=	0x62a3
                           0062A4   852 _T1CCTL4	=	0x62a4
                           0062A6   853 _XX_T1CC0L	=	0x62a6
                           0062A7   854 _XX_T1CC0H	=	0x62a7
                           0062A8   855 _XX_T1CC1L	=	0x62a8
                           0062A9   856 _XX_T1CC1H	=	0x62a9
                           0062AA   857 _XX_T1CC2L	=	0x62aa
                           0062AB   858 _XX_T1CC2H	=	0x62ab
                           0062AC   859 _T1CC3L	=	0x62ac
                           0062AD   860 _T1CC3H	=	0x62ad
                           0062AE   861 _T1CC4L	=	0x62ae
                           0062AF   862 _T1CC4H	=	0x62af
                           0062B0   863 _STCC	=	0x62b0
                           0062B1   864 _STCS	=	0x62b1
                           0062B2   865 _STCV0	=	0x62b2
                           0062B3   866 _STCV1	=	0x62b3
                           0062B4   867 _STCV2	=	0x62b4
                           0062C0   868 _OPAMPC	=	0x62c0
                           0062C1   869 _OPAMPS	=	0x62c1
                           0062D0   870 _CMPCTL	=	0x62d0
                           006000   871 _RFCORE_RAM	=	0x6000
                           006000   872 _RXFIFO	=	0x6000
                           006080   873 _TXFIFO	=	0x6080
                           006100   874 _SRC_ADDR_TABLE	=	0x6100
                           006160   875 _SRCRESMASK0	=	0x6160
                           006161   876 _SRCRESMASK1	=	0x6161
                           006162   877 _SRCRESMASK2	=	0x6162
                           006163   878 _SRCRESINDEX	=	0x6163
                           006164   879 _SRCEXTPENDEN0	=	0x6164
                           006165   880 _SRCEXTPENDEN1	=	0x6165
                           006166   881 _SRCEXTPENDEN2	=	0x6166
                           006167   882 _SRCSHORTPENDEN0	=	0x6167
                           006168   883 _SRCSHORTPENDEN1	=	0x6168
                           006169   884 _SRCSHORTPENDEN2	=	0x6169
                           00616A   885 _EXT_ADDR0	=	0x616a
                           00616B   886 _EXT_ADDR1	=	0x616b
                           00616C   887 _EXT_ADDR2	=	0x616c
                           00616D   888 _EXT_ADDR3	=	0x616d
                           00616E   889 _EXT_ADDR4	=	0x616e
                           00616F   890 _EXT_ADDR5	=	0x616f
                           006170   891 _EXT_ADDR6	=	0x6170
                           006171   892 _EXT_ADDR7	=	0x6171
                           006172   893 _PAN_ID0	=	0x6172
                           006173   894 _PAN_ID1	=	0x6173
                           006174   895 _SHORT_ADDR0	=	0x6174
                           006175   896 _SHORT_ADDR1	=	0x6175
                           006180   897 _FRMFILT0	=	0x6180
                           006181   898 _FRMFILT1	=	0x6181
                           006182   899 _SRCMATCH	=	0x6182
                           006183   900 _SRCSHORTEN0	=	0x6183
                           006184   901 _SRCSHORTEN1	=	0x6184
                           006185   902 _SRCSHORTEN2	=	0x6185
                           006186   903 _SRCEXTEN0	=	0x6186
                           006187   904 _SRCEXTEN1	=	0x6187
                           006188   905 _SRCEXTEN2	=	0x6188
                           006189   906 _FRMCTRL0	=	0x6189
                           00618A   907 _FRMCTRL1	=	0x618a
                           00618B   908 _RXENABLE	=	0x618b
                           00618C   909 _RXMASKSET	=	0x618c
                           00618D   910 _RXMASKCLR	=	0x618d
                           00618E   911 _FREQTUNE	=	0x618e
                           00618F   912 _FREQCTRL	=	0x618f
                           006190   913 _TXPOWER	=	0x6190
                           006191   914 _TXCTRL	=	0x6191
                           006192   915 _FSMSTAT0	=	0x6192
                           006193   916 _FSMSTAT1	=	0x6193
                           006194   917 _FIFOPCTRL	=	0x6194
                           006195   918 _FSMCTRL	=	0x6195
                           006196   919 _CCACTRL0	=	0x6196
                           006197   920 _CCACTRL1	=	0x6197
                           006198   921 _RSSI	=	0x6198
                           006199   922 _RSSISTAT	=	0x6199
                           00619A   923 _RXFIRST	=	0x619a
                           00619B   924 _RXFIFOCNT	=	0x619b
                           00619C   925 _TXFIFOCNT	=	0x619c
                           00619D   926 _RXFIRST_PTR	=	0x619d
                           00619E   927 _RXLAST_PTR	=	0x619e
                           00619F   928 _RXP1_PTR	=	0x619f
                           0061A1   929 _TXFIRST_PTR	=	0x61a1
                           0061A2   930 _TXLAST_PTR	=	0x61a2
                           0061A3   931 _RFIRQM0	=	0x61a3
                           0061A4   932 _RFIRQM1	=	0x61a4
                           0061A5   933 _RFERRM	=	0x61a5
                           0061A7   934 _RFRND	=	0x61a7
                           0061A8   935 _MDMCTRL0	=	0x61a8
                           0061A9   936 _MDMCTRL1	=	0x61a9
                           0061AA   937 _FREQEST	=	0x61aa
                           0061AB   938 _RXCTRL	=	0x61ab
                           0061AC   939 _FSCTRL	=	0x61ac
                           0061AD   940 _FSCAL0	=	0x61ad
                           0061AE   941 _FSCAL1	=	0x61ae
                           0061AF   942 _FSCAL2	=	0x61af
                           0061B0   943 _FSCAL3	=	0x61b0
                           0061B1   944 _AGCCTRL0	=	0x61b1
                           0061B2   945 _AGCCTRL1	=	0x61b2
                           0061B3   946 _AGCCTRL2	=	0x61b3
                           0061B4   947 _AGCCTRL3	=	0x61b4
                           0061B5   948 _ADCTEST0	=	0x61b5
                           0061B6   949 _ADCTEST1	=	0x61b6
                           0061B7   950 _ADCTEST2	=	0x61b7
                           0061B8   951 _MDMTEST0	=	0x61b8
                           0061B9   952 _MDMTEST1	=	0x61b9
                           0061BA   953 _DACTEST0	=	0x61ba
                           0061BB   954 _DACTEST1	=	0x61bb
                           0061BC   955 _DACTEST2	=	0x61bc
                           0061BD   956 _ATEST	=	0x61bd
                           0061BE   957 _PTEST0	=	0x61be
                           0061BF   958 _PTEST1	=	0x61bf
                           0061FA   959 _TXFILTCFG	=	0x61fa
                           0061EB   960 _RFC_OBS_CTRL0	=	0x61eb
                           0061EC   961 _RFC_OBS_CTRL1	=	0x61ec
                           0061ED   962 _RFC_OBS_CTRL2	=	0x61ed
                           0061C0   963 _CSPPROG0	=	0x61c0
                           0061C1   964 _CSPPROG1	=	0x61c1
                           0061C2   965 _CSPPROG2	=	0x61c2
                           0061C3   966 _CSPPROG3	=	0x61c3
                           0061C4   967 _CSPPROG4	=	0x61c4
                           0061C5   968 _CSPPROG5	=	0x61c5
                           0061C6   969 _CSPPROG6	=	0x61c6
                           0061C7   970 _CSPPROG7	=	0x61c7
                           0061C8   971 _CSPPROG8	=	0x61c8
                           0061C9   972 _CSPPROG9	=	0x61c9
                           0061CA   973 _CSPPROG10	=	0x61ca
                           0061CB   974 _CSPPROG11	=	0x61cb
                           0061CC   975 _CSPPROG12	=	0x61cc
                           0061CD   976 _CSPPROG13	=	0x61cd
                           0061CE   977 _CSPPROG14	=	0x61ce
                           0061CF   978 _CSPPROG15	=	0x61cf
                           0061D0   979 _CSPPROG16	=	0x61d0
                           0061D1   980 _CSPPROG17	=	0x61d1
                           0061D2   981 _CSPPROG18	=	0x61d2
                           0061D3   982 _CSPPROG19	=	0x61d3
                           0061D4   983 _CSPPROG20	=	0x61d4
                           0061D5   984 _CSPPROG21	=	0x61d5
                           0061D6   985 _CSPPROG22	=	0x61d6
                           0061D7   986 _CSPPROG23	=	0x61d7
                           0061E0   987 _CSPCTRL	=	0x61e0
                           0061E1   988 _CSPSTAT	=	0x61e1
                           0061E2   989 _CSPX	=	0x61e2
                           0061E3   990 _CSPY	=	0x61e3
                           0061E4   991 _CSPZ	=	0x61e4
                           0061E5   992 _CSPT	=	0x61e5
                           006200   993 _USBADDR	=	0x6200
                           006201   994 _USBPOW	=	0x6201
                           006202   995 _USBIIF	=	0x6202
                           006204   996 _USBOIF	=	0x6204
                           006206   997 _USBCIF	=	0x6206
                           006207   998 _USBIIE	=	0x6207
                           006209   999 _USBOIE	=	0x6209
                           00620B  1000 _USBCIE	=	0x620b
                           00620C  1001 _USBFRML	=	0x620c
                           00620D  1002 _USBFRMH	=	0x620d
                           00620E  1003 _USBINDEX	=	0x620e
                           00620F  1004 _USBCTRL	=	0x620f
                           006210  1005 _USBMAXI	=	0x6210
                           006211  1006 _USBCS0	=	0x6211
                           006211  1007 _USBCSIL	=	0x6211
                           006212  1008 _USBCSIH	=	0x6212
                           006213  1009 _USBMAXO	=	0x6213
                           006214  1010 _USBCSOL	=	0x6214
                           006215  1011 _USBCSOH	=	0x6215
                           006216  1012 _USBCNT0	=	0x6216
                           006216  1013 _USBCNTL	=	0x6216
                           006217  1014 _USBCNTH	=	0x6217
                           006220  1015 _USBF0	=	0x6220
                           006222  1016 _USBF1	=	0x6222
                           006224  1017 _USBF2	=	0x6224
                           006226  1018 _USBF3	=	0x6226
                           006228  1019 _USBF4	=	0x6228
                           00622A  1020 _USBF5	=	0x622a
                           007080  1021 _X_P0	=	0x7080
                           007086  1022 _X_U0CSR	=	0x7086
                           007089  1023 _X_P0IFG	=	0x7089
                           00708A  1024 _X_P1IFG	=	0x708a
                           00708B  1025 _X_P2IFG	=	0x708b
                           00708C  1026 _X_PICTL	=	0x708c
                           00708D  1027 _X_P1IEN	=	0x708d
                           00708F  1028 _X_P0INP	=	0x708f
                           007090  1029 _X_P1	=	0x7090
                           007091  1030 _X_RFIRQF1	=	0x7091
                           007093  1031 _X_MPAGE	=	0x7093
                           007093  1032 _X__XPAGE	=	0x7093
                           007094  1033 _X_T2CTRL	=	0x7094
                           007095  1034 _X_ST0	=	0x7095
                           007096  1035 _X_ST1	=	0x7096
                           007097  1036 _X_ST2	=	0x7097
                           00709C  1037 _X_T2EVTCFG	=	0x709c
                           00709D  1038 _X_SLEEPSTA	=	0x709d
                           00709E  1039 _X_CLKCONSTA	=	0x709e
                           00709F  1040 _X_FMAP	=	0x709f
                           00709F  1041 _X_PSBANK	=	0x709f
                           0070A0  1042 _X_P2	=	0x70a0
                           0070A1  1043 _X_T2IRQF	=	0x70a1
                           0070A2  1044 _X_T2M0	=	0x70a2
                           0070A3  1045 _X_T2M1	=	0x70a3
                           0070A4  1046 _X_T2MOVF0	=	0x70a4
                           0070A5  1047 _X_T2MOVF1	=	0x70a5
                           0070A6  1048 _X_T2MOVF2	=	0x70a6
                           0070A7  1049 _X_T2IRQM	=	0x70a7
                           0070AB  1050 _X_P0IEN	=	0x70ab
                           0070AC  1051 _X_P2IEN	=	0x70ac
                           0070AD  1052 _X_STLOAD	=	0x70ad
                           0070AE  1053 _X_PMUX	=	0x70ae
                           0070AF  1054 _X_T1STAT	=	0x70af
                           0070B1  1055 _X_ENCDI	=	0x70b1
                           0070B2  1056 _X_ENCDO	=	0x70b2
                           0070B3  1057 _X_ENCCS	=	0x70b3
                           0070B4  1058 _X_ADCCON1	=	0x70b4
                           0070B5  1059 _X_ADCCON2	=	0x70b5
                           0070B6  1060 _X_ADCCON3	=	0x70b6
                           0070BA  1061 _X_ADCL	=	0x70ba
                           0070BB  1062 _X_ADCH	=	0x70bb
                           0070BC  1063 _X_RNDL	=	0x70bc
                           0070BD  1064 _X_RNDH	=	0x70bd
                           0070BE  1065 _X_SLEEPCMD	=	0x70be
                           0070BF  1066 _X_RFERRF	=	0x70bf
                           0070C1  1067 _X_U0DBUF	=	0x70c1
                           0070C2  1068 _X_U0BAUD	=	0x70c2
                           0070C3  1069 _X_T2MSEL	=	0x70c3
                           0070C4  1070 _X_U0UCR	=	0x70c4
                           0070C5  1071 _X_U0GCR	=	0x70c5
                           0070C6  1072 _X_CLKCONCMD	=	0x70c6
                           0070C7  1073 _X_MEMCTR	=	0x70c7
                           0070C9  1074 _X_WDCTL	=	0x70c9
                           0070CA  1075 _X_T3CNT	=	0x70ca
                           0070CB  1076 _X_T3CTL	=	0x70cb
                           0070CC  1077 _X_T3CCTL0	=	0x70cc
                           0070CD  1078 _X_T3CC0	=	0x70cd
                           0070CE  1079 _X_T3CCTL1	=	0x70ce
                           0070CF  1080 _X_T3CC1	=	0x70cf
                           0070D1  1081 _X_DMAIRQ	=	0x70d1
                           0070D2  1082 _X_DMA1CFGL	=	0x70d2
                           0070D3  1083 _X_DMA1CFGH	=	0x70d3
                           0070D4  1084 _X_DMA0CFGL	=	0x70d4
                           0070D5  1085 _X_DMA0CFGH	=	0x70d5
                           0070D6  1086 _X_DMAARM	=	0x70d6
                           0070D7  1087 _X_DMAREQ	=	0x70d7
                           0070D8  1088 _X_TIMIF	=	0x70d8
                           0070D9  1089 _X_RFD	=	0x70d9
                           0070DA  1090 _X_T1CC0L	=	0x70da
                           0070DB  1091 _X_T1CC0H	=	0x70db
                           0070DC  1092 _X_T1CC1L	=	0x70dc
                           0070DD  1093 _X_T1CC1H	=	0x70dd
                           0070DE  1094 _X_T1CC2L	=	0x70de
                           0070DF  1095 _X_T1CC2H	=	0x70df
                           0070E1  1096 _X_RFST	=	0x70e1
                           0070E2  1097 _X_T1CNTL	=	0x70e2
                           0070E3  1098 _X_T1CNTH	=	0x70e3
                           0070E4  1099 _X_T1CTL	=	0x70e4
                           0070E5  1100 _X_T1CCTL0	=	0x70e5
                           0070E6  1101 _X_T1CCTL1	=	0x70e6
                           0070E7  1102 _X_T1CCTL2	=	0x70e7
                           0070E9  1103 _X_RFIRQF0	=	0x70e9
                           0070EA  1104 _X_T4CNT	=	0x70ea
                           0070EB  1105 _X_T4CTL	=	0x70eb
                           0070EC  1106 _X_T4CCTL0	=	0x70ec
                           0070ED  1107 _X_T4CC0	=	0x70ed
                           0070EE  1108 _X_T4CCTL1	=	0x70ee
                           0070EF  1109 _X_T4CC1	=	0x70ef
                           0070F1  1110 _X_PERCFG	=	0x70f1
                           0070F2  1111 _X_APCFG	=	0x70f2
                           0070F3  1112 _X_P0SEL	=	0x70f3
                           0070F4  1113 _X_P1SEL	=	0x70f4
                           0070F5  1114 _X_P2SEL	=	0x70f5
                           0070F6  1115 _X_P1INP	=	0x70f6
                           0070F7  1116 _X_P2INP	=	0x70f7
                           0070F8  1117 _X_U1CSR	=	0x70f8
                           0070F9  1118 _X_U1DBUF	=	0x70f9
                           0070FA  1119 _X_U1BAUD	=	0x70fa
                           0070FB  1120 _X_U1UCR	=	0x70fb
                           0070FC  1121 _X_U1GCR	=	0x70fc
                           0070FD  1122 _X_P0DIR	=	0x70fd
                           0070FE  1123 _X_P1DIR	=	0x70fe
                           0070FF  1124 _X_P2DIR	=	0x70ff
                           007800  1125 _X_INFOPAGE	=	0x7800
                           00780C  1126 _X_IEEE_ADDR	=	0x780c
      000000                       1127 _periodic_timer:
      000000                       1128 	.ds 22
      000016                       1129 _next_dis:
      000016                       1130 	.ds 2
      000018                       1131 _dio_send_ok:
      000018                       1132 	.ds 1
                                   1133 ;--------------------------------------------------------
                                   1134 ; absolute external ram data
                                   1135 ;--------------------------------------------------------
                                   1136 	.area XABS    (ABS,XDATA)
                                   1137 ;--------------------------------------------------------
                                   1138 ; external initialized ram data
                                   1139 ;--------------------------------------------------------
                                   1140 	.area XISEG   (XDATA)
                                   1141 	.area HOME    (CODE)
                                   1142 	.area GSINIT0 (CODE)
                                   1143 	.area GSINIT1 (CODE)
                                   1144 	.area GSINIT2 (CODE)
                                   1145 	.area GSINIT3 (CODE)
                                   1146 	.area GSINIT4 (CODE)
                                   1147 	.area GSINIT5 (CODE)
                                   1148 	.area GSINIT  (CODE)
                                   1149 	.area GSFINAL (CODE)
                                   1150 	.area CSEG    (CODE)
                                   1151 ;--------------------------------------------------------
                                   1152 ; global & static initialisations
                                   1153 ;--------------------------------------------------------
                                   1154 	.area HOME    (CODE)
                                   1155 	.area GSINIT  (CODE)
                                   1156 	.area GSFINAL (CODE)
                                   1157 	.area GSINIT  (CODE)
                                   1158 ;--------------------------------------------------------
                                   1159 ; Home
                                   1160 ;--------------------------------------------------------
                                   1161 	.area HOME    (CODE)
                                   1162 	.area HOME    (CODE)
                                   1163 ;--------------------------------------------------------
                                   1164 ; code
                                   1165 ;--------------------------------------------------------
                                   1166 	.area BANK1   (CODE)
                                   1167 ;------------------------------------------------------------
                                   1168 ;Allocation info for local variables in function 'handle_periodic_timer'
                                   1169 ;------------------------------------------------------------
                                   1170 ;ptr                       Allocated to registers 
                                   1171 ;------------------------------------------------------------
                                   1172 ;	../../../../core/net/rpl/rpl-timers.c:64: handle_periodic_timer(void *ptr)
                                   1173 ;	-----------------------------------------
                                   1174 ;	 function handle_periodic_timer
                                   1175 ;	-----------------------------------------
      000000                       1176 _handle_periodic_timer:
                           000007  1177 	ar7 = 0x07
                           000006  1178 	ar6 = 0x06
                           000005  1179 	ar5 = 0x05
                           000004  1180 	ar4 = 0x04
                           000003  1181 	ar3 = 0x03
                           000002  1182 	ar2 = 0x02
                           000001  1183 	ar1 = 0x01
                           000000  1184 	ar0 = 0x00
                                   1185 ;	../../../../core/net/rpl/rpl-timers.c:66: rpl_purge_routes();
      000000 78r00            [12] 1186 	mov	r0,#_rpl_purge_routes
      000002 79s00            [12] 1187 	mov	r1,#(_rpl_purge_routes >> 8)
      000004 7As00            [12] 1188 	mov	r2,#(_rpl_purge_routes >> 16)
      000006 12r00r00         [24] 1189 	lcall	__sdcc_banked_call
                                   1190 ;	../../../../core/net/rpl/rpl-timers.c:67: rpl_recalculate_ranks();
      000009 78r00            [12] 1191 	mov	r0,#_rpl_recalculate_ranks
      00000B 79s00            [12] 1192 	mov	r1,#(_rpl_recalculate_ranks >> 8)
      00000D 7As00            [12] 1193 	mov	r2,#(_rpl_recalculate_ranks >> 16)
      00000F 12r00r00         [24] 1194 	lcall	__sdcc_banked_call
                                   1195 ;	../../../../core/net/rpl/rpl-timers.c:71: next_dis++;
      000012 90r00r16         [24] 1196 	mov	dptr,#_next_dis
      000015 E0               [24] 1197 	movx	a,@dptr
      000016 24 01            [12] 1198 	add	a,#0x01
      000018 F0               [24] 1199 	movx	@dptr,a
      000019 A3               [24] 1200 	inc	dptr
      00001A E0               [24] 1201 	movx	a,@dptr
      00001B 34 00            [12] 1202 	addc	a,#0x00
      00001D F0               [24] 1203 	movx	@dptr,a
                                   1204 ;	../../../../core/net/rpl/rpl-timers.c:72: if(rpl_get_any_dag() == NULL && next_dis >= RPL_DIS_INTERVAL) {
      00001E 78r00            [12] 1205 	mov	r0,#_rpl_get_any_dag
      000020 79s00            [12] 1206 	mov	r1,#(_rpl_get_any_dag >> 8)
      000022 7As00            [12] 1207 	mov	r2,#(_rpl_get_any_dag >> 16)
      000024 12r00r00         [24] 1208 	lcall	__sdcc_banked_call
      000027 AD 82            [24] 1209 	mov	r5,dpl
      000029 AE 83            [24] 1210 	mov	r6,dph
      00002B AF F0            [24] 1211 	mov	r7,b
      00002D ED               [12] 1212 	mov	a,r5
      00002E 4E               [12] 1213 	orl	a,r6
      00002F 70 28            [24] 1214 	jnz	00102$
      000031 90r00r16         [24] 1215 	mov	dptr,#_next_dis
      000034 E0               [24] 1216 	movx	a,@dptr
      000035 FE               [12] 1217 	mov	r6,a
      000036 A3               [24] 1218 	inc	dptr
      000037 E0               [24] 1219 	movx	a,@dptr
      000038 FF               [12] 1220 	mov	r7,a
      000039 C3               [12] 1221 	clr	c
      00003A EE               [12] 1222 	mov	a,r6
      00003B 94 3C            [12] 1223 	subb	a,#0x3C
      00003D EF               [12] 1224 	mov	a,r7
      00003E 94 00            [12] 1225 	subb	a,#0x00
      000040 40 17            [24] 1226 	jc	00102$
                                   1227 ;	../../../../core/net/rpl/rpl-timers.c:73: next_dis = 0;
      000042 90r00r16         [24] 1228 	mov	dptr,#_next_dis
      000045 E4               [12] 1229 	clr	a
      000046 F0               [24] 1230 	movx	@dptr,a
      000047 E4               [12] 1231 	clr	a
      000048 A3               [24] 1232 	inc	dptr
      000049 F0               [24] 1233 	movx	@dptr,a
                                   1234 ;	../../../../core/net/rpl/rpl-timers.c:74: dis_output(NULL);
      00004A 90 00 00         [24] 1235 	mov	dptr,#0x0000
      00004D 75 F0 00         [24] 1236 	mov	b,#0x00
      000050 78r00            [12] 1237 	mov	r0,#_dis_output
      000052 79s00            [12] 1238 	mov	r1,#(_dis_output >> 8)
      000054 7As00            [12] 1239 	mov	r2,#(_dis_output >> 16)
      000056 12r00r00         [24] 1240 	lcall	__sdcc_banked_call
      000059                       1241 00102$:
                                   1242 ;	../../../../core/net/rpl/rpl-timers.c:77: ctimer_reset(&periodic_timer);
      000059 90r00r00         [24] 1243 	mov	dptr,#_periodic_timer
      00005C 75 F0 00         [24] 1244 	mov	b,#0x00
      00005F 78r00            [12] 1245 	mov	r0,#_ctimer_reset
      000061 79s00            [12] 1246 	mov	r1,#(_ctimer_reset >> 8)
      000063 7As00            [12] 1247 	mov	r2,#(_ctimer_reset >> 16)
      000065 12r00r00         [24] 1248 	lcall	__sdcc_banked_call
      000068 02r00r00         [24] 1249 	ljmp	__sdcc_banked_ret
                                   1250 ;------------------------------------------------------------
                                   1251 ;Allocation info for local variables in function 'new_dio_interval'
                                   1252 ;------------------------------------------------------------
                                   1253 ;instance                  Allocated to stack - sp -11
                                   1254 ;time                      Allocated to registers r5 r6 r4 r7 
                                   1255 ;ticks                     Allocated to stack - sp -1
                                   1256 ;sloc0                     Allocated to stack - sp -2
                                   1257 ;sloc1                     Allocated to stack - sp -8
                                   1258 ;sloc2                     Allocated to stack - sp +3
                                   1259 ;sloc3                     Allocated to stack - sp -5
                                   1260 ;------------------------------------------------------------
                                   1261 ;	../../../../core/net/rpl/rpl-timers.c:81: new_dio_interval(rpl_instance_t *instance)
                                   1262 ;	-----------------------------------------
                                   1263 ;	 function new_dio_interval
                                   1264 ;	-----------------------------------------
      00006B                       1265 _new_dio_interval:
      00006B C0 82            [24] 1266 	push	dpl
      00006D C0 83            [24] 1267 	push	dph
      00006F C0 F0            [24] 1268 	push	b
      000071 E5 81            [12] 1269 	mov	a,sp
      000073 24 09            [12] 1270 	add	a,#0x09
                                   1271 ;	../../../../core/net/rpl/rpl-timers.c:87: time = 1UL << instance->dio_intcurrent;
      000075 F5 81            [12] 1272 	mov	sp,a
      000077 24 F5            [12] 1273 	add	a,#0xf5
      000079 F8               [12] 1274 	mov	r0,a
      00007A 74 8E            [12] 1275 	mov	a,#0x8E
      00007C 26               [12] 1276 	add	a,@r0
      00007D FA               [12] 1277 	mov	r2,a
      00007E E4               [12] 1278 	clr	a
      00007F 08               [12] 1279 	inc	r0
      000080 36               [12] 1280 	addc	a,@r0
      000081 FB               [12] 1281 	mov	r3,a
      000082 08               [12] 1282 	inc	r0
      000083 86 04            [24] 1283 	mov	ar4,@r0
      000085 8A 82            [24] 1284 	mov	dpl,r2
      000087 8B 83            [24] 1285 	mov	dph,r3
      000089 8C F0            [24] 1286 	mov	b,r4
      00008B 12r00r00         [24] 1287 	lcall	__gptrget
      00008E FA               [12] 1288 	mov	r2,a
      00008F 8A F0            [24] 1289 	mov	b,r2
      000091 05 F0            [12] 1290 	inc	b
      000093 7D 01            [12] 1291 	mov	r5,#0x01
      000095 7E 00            [12] 1292 	mov	r6,#0x00
      000097 7C 00            [12] 1293 	mov	r4,#0x00
      000099 7F 00            [12] 1294 	mov	r7,#0x00
      00009B 80 0C            [24] 1295 	sjmp	00104$
      00009D                       1296 00103$:
      00009D ED               [12] 1297 	mov	a,r5
      00009E 2D               [12] 1298 	add	a,r5
      00009F FD               [12] 1299 	mov	r5,a
      0000A0 EE               [12] 1300 	mov	a,r6
      0000A1 33               [12] 1301 	rlc	a
      0000A2 FE               [12] 1302 	mov	r6,a
      0000A3 EC               [12] 1303 	mov	a,r4
      0000A4 33               [12] 1304 	rlc	a
      0000A5 FC               [12] 1305 	mov	r4,a
      0000A6 EF               [12] 1306 	mov	a,r7
      0000A7 33               [12] 1307 	rlc	a
      0000A8 FF               [12] 1308 	mov	r7,a
      0000A9                       1309 00104$:
      0000A9 D5 F0 F1         [24] 1310 	djnz	b,00103$
                                   1311 ;	../../../../core/net/rpl/rpl-timers.c:90: ticks = (time * CLOCK_SECOND) / 1000;
      0000AC EF               [12] 1312 	mov	a,r7
      0000AD 54 01            [12] 1313 	anl	a,#0x01
      0000AF A2 E0            [12] 1314 	mov	c,acc.0
      0000B1 CC               [12] 1315 	xch	a,r4
      0000B2 13               [12] 1316 	rrc	a
      0000B3 CC               [12] 1317 	xch	a,r4
      0000B4 13               [12] 1318 	rrc	a
      0000B5 CC               [12] 1319 	xch	a,r4
      0000B6 FF               [12] 1320 	mov	r7,a
      0000B7 EE               [12] 1321 	mov	a,r6
      0000B8 C3               [12] 1322 	clr	c
      0000B9 13               [12] 1323 	rrc	a
      0000BA 4C               [12] 1324 	orl	a,r4
      0000BB FC               [12] 1325 	mov	r4,a
      0000BC 8D 02            [24] 1326 	mov	ar2,r5
      0000BE EE               [12] 1327 	mov	a,r6
      0000BF 54 01            [12] 1328 	anl	a,#0x01
      0000C1 A2 E0            [12] 1329 	mov	c,acc.0
      0000C3 CA               [12] 1330 	xch	a,r2
      0000C4 13               [12] 1331 	rrc	a
      0000C5 CA               [12] 1332 	xch	a,r2
      0000C6 13               [12] 1333 	rrc	a
      0000C7 CA               [12] 1334 	xch	a,r2
      0000C8 FB               [12] 1335 	mov	r3,a
      0000C9 74 E8            [12] 1336 	mov	a,#0xE8
      0000CB C0 E0            [24] 1337 	push	acc
      0000CD 74 03            [12] 1338 	mov	a,#0x03
      0000CF C0 E0            [24] 1339 	push	acc
      0000D1 E4               [12] 1340 	clr	a
      0000D2 C0 E0            [24] 1341 	push	acc
      0000D4 C0 E0            [24] 1342 	push	acc
      0000D6 8A 82            [24] 1343 	mov	dpl,r2
      0000D8 8B 83            [24] 1344 	mov	dph,r3
      0000DA 8C F0            [24] 1345 	mov	b,r4
      0000DC EF               [12] 1346 	mov	a,r7
      0000DD 12r00r00         [24] 1347 	lcall	__divulong
      0000E0 AC 82            [24] 1348 	mov	r4,dpl
      0000E2 AD 83            [24] 1349 	mov	r5,dph
      0000E4 E5 81            [12] 1350 	mov	a,sp
      0000E6 24 FC            [12] 1351 	add	a,#0xfc
      0000E8 F5 81            [12] 1352 	mov	sp,a
      0000EA A8 81            [24] 1353 	mov	r0,sp
      0000EC 18               [12] 1354 	dec	r0
      0000ED A6 04            [24] 1355 	mov	@r0,ar4
      0000EF 08               [12] 1356 	inc	r0
      0000F0 A6 05            [24] 1357 	mov	@r0,ar5
                                   1358 ;	../../../../core/net/rpl/rpl-timers.c:91: instance->dio_next_delay = ticks;
      0000F2 E5 81            [12] 1359 	mov	a,sp
      0000F4 24 F5            [12] 1360 	add	a,#0xf5
      0000F6 F8               [12] 1361 	mov	r0,a
      0000F7 E5 81            [12] 1362 	mov	a,sp
      0000F9 24 F8            [12] 1363 	add	a,#0xf8
      0000FB F9               [12] 1364 	mov	r1,a
      0000FC 74 97            [12] 1365 	mov	a,#0x97
      0000FE 26               [12] 1366 	add	a,@r0
      0000FF F7               [12] 1367 	mov	@r1,a
      000100 E4               [12] 1368 	clr	a
      000101 08               [12] 1369 	inc	r0
      000102 36               [12] 1370 	addc	a,@r0
      000103 09               [12] 1371 	inc	r1
      000104 F7               [12] 1372 	mov	@r1,a
      000105 08               [12] 1373 	inc	r0
      000106 09               [12] 1374 	inc	r1
      000107 E6               [12] 1375 	mov	a,@r0
      000108 F7               [12] 1376 	mov	@r1,a
      000109 E5 81            [12] 1377 	mov	a,sp
      00010B 24 F8            [12] 1378 	add	a,#0xf8
      00010D F8               [12] 1379 	mov	r0,a
      00010E 86 82            [24] 1380 	mov	dpl,@r0
      000110 08               [12] 1381 	inc	r0
      000111 86 83            [24] 1382 	mov	dph,@r0
      000113 08               [12] 1383 	inc	r0
      000114 86 F0            [24] 1384 	mov	b,@r0
      000116 A9 81            [24] 1385 	mov	r1,sp
      000118 19               [12] 1386 	dec	r1
      000119 E7               [12] 1387 	mov	a,@r1
      00011A 12r00r00         [24] 1388 	lcall	__gptrput
      00011D A3               [24] 1389 	inc	dptr
      00011E 09               [12] 1390 	inc	r1
      00011F E7               [12] 1391 	mov	a,@r1
      000120 12r00r00         [24] 1392 	lcall	__gptrput
                                   1393 ;	../../../../core/net/rpl/rpl-timers.c:94: ticks = ticks / 2 + (ticks / 2 * (uint32_t)random_rand()) / RANDOM_RAND_MAX;
      000123 A8 81            [24] 1394 	mov	r0,sp
      000125 18               [12] 1395 	dec	r0
      000126 86 07            [24] 1396 	mov	ar7,@r0
      000128 08               [12] 1397 	inc	r0
      000129 E6               [12] 1398 	mov	a,@r0
      00012A C3               [12] 1399 	clr	c
      00012B 13               [12] 1400 	rrc	a
      00012C CF               [12] 1401 	xch	a,r7
      00012D 13               [12] 1402 	rrc	a
      00012E CF               [12] 1403 	xch	a,r7
      00012F FE               [12] 1404 	mov	r6,a
      000130 C0 07            [24] 1405 	push	ar7
      000132 C0 06            [24] 1406 	push	ar6
      000134 78r00            [12] 1407 	mov	r0,#_random_rand
      000136 79s00            [12] 1408 	mov	r1,#(_random_rand >> 8)
      000138 7As00            [12] 1409 	mov	r2,#(_random_rand >> 16)
      00013A 12r00r00         [24] 1410 	lcall	__sdcc_banked_call
      00013D AC 82            [24] 1411 	mov	r4,dpl
      00013F AD 83            [24] 1412 	mov	r5,dph
      000141 D0 06            [24] 1413 	pop	ar6
      000143 D0 07            [24] 1414 	pop	ar7
      000145 E4               [12] 1415 	clr	a
      000146 FB               [12] 1416 	mov	r3,a
      000147 FA               [12] 1417 	mov	r2,a
      000148 E5 81            [12] 1418 	mov	a,sp
      00014A 24 FB            [12] 1419 	add	a,#0xfb
      00014C F8               [12] 1420 	mov	r0,a
      00014D A6 07            [24] 1421 	mov	@r0,ar7
      00014F 08               [12] 1422 	inc	r0
      000150 A6 06            [24] 1423 	mov	@r0,ar6
      000152 08               [12] 1424 	inc	r0
      000153 76 00            [12] 1425 	mov	@r0,#0x00
      000155 08               [12] 1426 	inc	r0
      000156 76 00            [12] 1427 	mov	@r0,#0x00
      000158 C0 04            [24] 1428 	push	ar4
      00015A C0 05            [24] 1429 	push	ar5
      00015C C0 03            [24] 1430 	push	ar3
      00015E C0 02            [24] 1431 	push	ar2
      000160 E5 81            [12] 1432 	mov	a,sp
      000162 24 F7            [12] 1433 	add	a,#0xf7
      000164 F8               [12] 1434 	mov	r0,a
      000165 86 82            [24] 1435 	mov	dpl,@r0
      000167 08               [12] 1436 	inc	r0
      000168 86 83            [24] 1437 	mov	dph,@r0
      00016A 08               [12] 1438 	inc	r0
      00016B 86 F0            [24] 1439 	mov	b,@r0
      00016D 08               [12] 1440 	inc	r0
      00016E E6               [12] 1441 	mov	a,@r0
      00016F 12r00r00         [24] 1442 	lcall	__mullong
      000172 AA 82            [24] 1443 	mov	r2,dpl
      000174 AC 83            [24] 1444 	mov	r4,dph
      000176 AE F0            [24] 1445 	mov	r6,b
      000178 FF               [12] 1446 	mov	r7,a
      000179 E5 81            [12] 1447 	mov	a,sp
      00017B 24 FC            [12] 1448 	add	a,#0xfc
      00017D F5 81            [12] 1449 	mov	sp,a
      00017F 74 FF            [12] 1450 	mov	a,#0xFF
      000181 C0 E0            [24] 1451 	push	acc
      000183 C0 E0            [24] 1452 	push	acc
      000185 E4               [12] 1453 	clr	a
      000186 C0 E0            [24] 1454 	push	acc
      000188 C0 E0            [24] 1455 	push	acc
      00018A 8A 82            [24] 1456 	mov	dpl,r2
      00018C 8C 83            [24] 1457 	mov	dph,r4
      00018E 8E F0            [24] 1458 	mov	b,r6
      000190 EF               [12] 1459 	mov	a,r7
      000191 12r00r00         [24] 1460 	lcall	__divulong
      000194 AC 82            [24] 1461 	mov	r4,dpl
      000196 AD 83            [24] 1462 	mov	r5,dph
      000198 AE F0            [24] 1463 	mov	r6,b
      00019A FF               [12] 1464 	mov	r7,a
      00019B E5 81            [12] 1465 	mov	a,sp
      00019D 24 FC            [12] 1466 	add	a,#0xfc
      00019F F5 81            [12] 1467 	mov	sp,a
      0001A1 24 FB            [12] 1468 	add	a,#0xfb
      0001A3 F8               [12] 1469 	mov	r0,a
      0001A4 EC               [12] 1470 	mov	a,r4
      0001A5 26               [12] 1471 	add	a,@r0
      0001A6 FC               [12] 1472 	mov	r4,a
      0001A7 ED               [12] 1473 	mov	a,r5
      0001A8 08               [12] 1474 	inc	r0
      0001A9 36               [12] 1475 	addc	a,@r0
      0001AA FD               [12] 1476 	mov	r5,a
      0001AB EE               [12] 1477 	mov	a,r6
      0001AC 08               [12] 1478 	inc	r0
      0001AD 36               [12] 1479 	addc	a,@r0
      0001AE EF               [12] 1480 	mov	a,r7
      0001AF 08               [12] 1481 	inc	r0
      0001B0 36               [12] 1482 	addc	a,@r0
      0001B1 A8 81            [24] 1483 	mov	r0,sp
      0001B3 18               [12] 1484 	dec	r0
      0001B4 A6 04            [24] 1485 	mov	@r0,ar4
      0001B6 08               [12] 1486 	inc	r0
      0001B7 A6 05            [24] 1487 	mov	@r0,ar5
                                   1488 ;	../../../../core/net/rpl/rpl-timers.c:101: instance->dio_next_delay -= ticks;
      0001B9 E5 81            [12] 1489 	mov	a,sp
      0001BB 24 F8            [12] 1490 	add	a,#0xf8
      0001BD F8               [12] 1491 	mov	r0,a
      0001BE 86 82            [24] 1492 	mov	dpl,@r0
      0001C0 08               [12] 1493 	inc	r0
      0001C1 86 83            [24] 1494 	mov	dph,@r0
      0001C3 08               [12] 1495 	inc	r0
      0001C4 86 F0            [24] 1496 	mov	b,@r0
      0001C6 12r00r00         [24] 1497 	lcall	__gptrget
      0001C9 FE               [12] 1498 	mov	r6,a
      0001CA A3               [24] 1499 	inc	dptr
      0001CB 12r00r00         [24] 1500 	lcall	__gptrget
      0001CE FF               [12] 1501 	mov	r7,a
      0001CF A8 81            [24] 1502 	mov	r0,sp
      0001D1 18               [12] 1503 	dec	r0
      0001D2 EE               [12] 1504 	mov	a,r6
      0001D3 C3               [12] 1505 	clr	c
      0001D4 96               [12] 1506 	subb	a,@r0
      0001D5 FE               [12] 1507 	mov	r6,a
      0001D6 EF               [12] 1508 	mov	a,r7
      0001D7 08               [12] 1509 	inc	r0
      0001D8 96               [12] 1510 	subb	a,@r0
      0001D9 FF               [12] 1511 	mov	r7,a
      0001DA E5 81            [12] 1512 	mov	a,sp
      0001DC 24 F8            [12] 1513 	add	a,#0xf8
      0001DE F8               [12] 1514 	mov	r0,a
      0001DF 86 82            [24] 1515 	mov	dpl,@r0
      0001E1 08               [12] 1516 	inc	r0
      0001E2 86 83            [24] 1517 	mov	dph,@r0
      0001E4 08               [12] 1518 	inc	r0
      0001E5 86 F0            [24] 1519 	mov	b,@r0
      0001E7 EE               [12] 1520 	mov	a,r6
      0001E8 12r00r00         [24] 1521 	lcall	__gptrput
      0001EB A3               [24] 1522 	inc	dptr
      0001EC EF               [12] 1523 	mov	a,r7
      0001ED 12r00r00         [24] 1524 	lcall	__gptrput
                                   1525 ;	../../../../core/net/rpl/rpl-timers.c:102: instance->dio_send = 1;
      0001F0 E5 81            [12] 1526 	mov	a,sp
      0001F2 24 F5            [12] 1527 	add	a,#0xf5
      0001F4 F8               [12] 1528 	mov	r0,a
      0001F5 74 8F            [12] 1529 	mov	a,#0x8F
      0001F7 26               [12] 1530 	add	a,@r0
      0001F8 FD               [12] 1531 	mov	r5,a
      0001F9 E4               [12] 1532 	clr	a
      0001FA 08               [12] 1533 	inc	r0
      0001FB 36               [12] 1534 	addc	a,@r0
      0001FC FE               [12] 1535 	mov	r6,a
      0001FD 08               [12] 1536 	inc	r0
      0001FE 86 07            [24] 1537 	mov	ar7,@r0
      000200 8D 82            [24] 1538 	mov	dpl,r5
      000202 8E 83            [24] 1539 	mov	dph,r6
      000204 8F F0            [24] 1540 	mov	b,r7
      000206 74 01            [12] 1541 	mov	a,#0x01
      000208 12r00r00         [24] 1542 	lcall	__gptrput
                                   1543 ;	../../../../core/net/rpl/rpl-timers.c:118: instance->dio_counter = 0;
      00020B E5 81            [12] 1544 	mov	a,sp
      00020D 24 F5            [12] 1545 	add	a,#0xf5
      00020F F8               [12] 1546 	mov	r0,a
      000210 74 90            [12] 1547 	mov	a,#0x90
      000212 26               [12] 1548 	add	a,@r0
      000213 FD               [12] 1549 	mov	r5,a
      000214 E4               [12] 1550 	clr	a
      000215 08               [12] 1551 	inc	r0
      000216 36               [12] 1552 	addc	a,@r0
      000217 FE               [12] 1553 	mov	r6,a
      000218 08               [12] 1554 	inc	r0
      000219 86 07            [24] 1555 	mov	ar7,@r0
      00021B 8D 82            [24] 1556 	mov	dpl,r5
      00021D 8E 83            [24] 1557 	mov	dph,r6
      00021F 8F F0            [24] 1558 	mov	b,r7
      000221 E4               [12] 1559 	clr	a
      000222 12r00r00         [24] 1560 	lcall	__gptrput
                                   1561 ;	../../../../core/net/rpl/rpl-timers.c:122: ctimer_set(&instance->dio_timer, ticks, &handle_dio_timer, instance);
      000225 E5 81            [12] 1562 	mov	a,sp
      000227 24 F5            [12] 1563 	add	a,#0xf5
      000229 F8               [12] 1564 	mov	r0,a
      00022A 86 05            [24] 1565 	mov	ar5,@r0
      00022C 08               [12] 1566 	inc	r0
      00022D 86 06            [24] 1567 	mov	ar6,@r0
      00022F 08               [12] 1568 	inc	r0
      000230 86 07            [24] 1569 	mov	ar7,@r0
      000232 E5 81            [12] 1570 	mov	a,sp
      000234 24 F5            [12] 1571 	add	a,#0xf5
      000236 F8               [12] 1572 	mov	r0,a
      000237 74 99            [12] 1573 	mov	a,#0x99
      000239 26               [12] 1574 	add	a,@r0
      00023A FA               [12] 1575 	mov	r2,a
      00023B E4               [12] 1576 	clr	a
      00023C 08               [12] 1577 	inc	r0
      00023D 36               [12] 1578 	addc	a,@r0
      00023E FB               [12] 1579 	mov	r3,a
      00023F 08               [12] 1580 	inc	r0
      000240 86 04            [24] 1581 	mov	ar4,@r0
      000242 C0 05            [24] 1582 	push	ar5
      000244 C0 06            [24] 1583 	push	ar6
      000246 C0 07            [24] 1584 	push	ar7
      000248 74r7A            [12] 1585 	mov	a,#_handle_dio_timer
      00024A C0 E0            [24] 1586 	push	acc
      00024C 74s02            [12] 1587 	mov	a,#(_handle_dio_timer >> 8)
      00024E C0 E0            [24] 1588 	push	acc
      000250 74s00            [12] 1589 	mov	a,#(_handle_dio_timer >> 16)
      000252 C0 E0            [24] 1590 	push	acc
      000254 E5 81            [12] 1591 	mov	a,sp
      000256 24 F9            [12] 1592 	add	a,#0xf9
      000258 F8               [12] 1593 	mov	r0,a
      000259 E6               [12] 1594 	mov	a,@r0
      00025A C0 E0            [24] 1595 	push	acc
      00025C 08               [12] 1596 	inc	r0
      00025D E6               [12] 1597 	mov	a,@r0
      00025E C0 E0            [24] 1598 	push	acc
      000260 8A 82            [24] 1599 	mov	dpl,r2
      000262 8B 83            [24] 1600 	mov	dph,r3
      000264 8C F0            [24] 1601 	mov	b,r4
      000266 78r00            [12] 1602 	mov	r0,#_ctimer_set
      000268 79s00            [12] 1603 	mov	r1,#(_ctimer_set >> 8)
      00026A 7As00            [12] 1604 	mov	r2,#(_ctimer_set >> 16)
      00026C 12r00r00         [24] 1605 	lcall	__sdcc_banked_call
      00026F E5 81            [12] 1606 	mov	a,sp
      000271 24 F8            [12] 1607 	add	a,#0xf8
      000273 24 F4            [12] 1608 	add	a,#0xF4
      000275 F5 81            [12] 1609 	mov	sp,a
      000277 02r00r00         [24] 1610 	ljmp	__sdcc_banked_ret
                                   1611 ;------------------------------------------------------------
                                   1612 ;Allocation info for local variables in function 'handle_dio_timer'
                                   1613 ;------------------------------------------------------------
                                   1614 ;ptr                       Allocated to registers r5 r6 r7 
                                   1615 ;instance                  Allocated to stack - sp -2
                                   1616 ;sloc0                     Allocated to stack - sp -6
                                   1617 ;sloc1                     Allocated to stack - sp -4
                                   1618 ;------------------------------------------------------------
                                   1619 ;	../../../../core/net/rpl/rpl-timers.c:126: handle_dio_timer(void *ptr)
                                   1620 ;	-----------------------------------------
                                   1621 ;	 function handle_dio_timer
                                   1622 ;	-----------------------------------------
      00027A                       1623 _handle_dio_timer:
      00027A E5 81            [12] 1624 	mov	a,sp
      00027C 24 07            [12] 1625 	add	a,#0x07
      00027E F5 81            [12] 1626 	mov	sp,a
      000280 AD 82            [24] 1627 	mov	r5,dpl
      000282 AE 83            [24] 1628 	mov	r6,dph
      000284 AF F0            [24] 1629 	mov	r7,b
                                   1630 ;	../../../../core/net/rpl/rpl-timers.c:130: instance = (rpl_instance_t *)ptr;
      000286 A8 81            [24] 1631 	mov	r0,sp
      000288 18               [12] 1632 	dec	r0
      000289 18               [12] 1633 	dec	r0
      00028A A6 05            [24] 1634 	mov	@r0,ar5
      00028C 08               [12] 1635 	inc	r0
      00028D A6 06            [24] 1636 	mov	@r0,ar6
      00028F 08               [12] 1637 	inc	r0
      000290 A6 07            [24] 1638 	mov	@r0,ar7
                                   1639 ;	../../../../core/net/rpl/rpl-timers.c:133: if(!dio_send_ok) {
      000292 90r00r18         [24] 1640 	mov	dptr,#_dio_send_ok
      000295 E0               [24] 1641 	movx	a,@dptr
      000296 FC               [12] 1642 	mov	r4,a
      000297 70 6A            [24] 1643 	jnz	00105$
                                   1644 ;	../../../../core/net/rpl/rpl-timers.c:134: if(uip_ds6_get_link_local(ADDR_PREFERRED) != NULL) {
      000299 75 82 01         [24] 1645 	mov	dpl,#0x01
      00029C 78r00            [12] 1646 	mov	r0,#_uip_ds6_get_link_local
      00029E 79s00            [12] 1647 	mov	r1,#(_uip_ds6_get_link_local >> 8)
      0002A0 7As00            [12] 1648 	mov	r2,#(_uip_ds6_get_link_local >> 16)
      0002A2 12r00r00         [24] 1649 	lcall	__sdcc_banked_call
      0002A5 AA 82            [24] 1650 	mov	r2,dpl
      0002A7 AB 83            [24] 1651 	mov	r3,dph
      0002A9 AC F0            [24] 1652 	mov	r4,b
      0002AB EA               [12] 1653 	mov	a,r2
      0002AC 4B               [12] 1654 	orl	a,r3
      0002AD 60 08            [24] 1655 	jz	00102$
                                   1656 ;	../../../../core/net/rpl/rpl-timers.c:135: dio_send_ok = 1;
      0002AF 90r00r18         [24] 1657 	mov	dptr,#_dio_send_ok
      0002B2 74 01            [12] 1658 	mov	a,#0x01
      0002B4 F0               [24] 1659 	movx	@dptr,a
      0002B5 80 4C            [24] 1660 	sjmp	00105$
      0002B7                       1661 00102$:
                                   1662 ;	../../../../core/net/rpl/rpl-timers.c:138: ctimer_set(&instance->dio_timer, CLOCK_SECOND, &handle_dio_timer, instance);
      0002B7 A8 81            [24] 1663 	mov	r0,sp
      0002B9 18               [12] 1664 	dec	r0
      0002BA 18               [12] 1665 	dec	r0
      0002BB 86 02            [24] 1666 	mov	ar2,@r0
      0002BD 08               [12] 1667 	inc	r0
      0002BE 86 03            [24] 1668 	mov	ar3,@r0
      0002C0 08               [12] 1669 	inc	r0
      0002C1 86 04            [24] 1670 	mov	ar4,@r0
      0002C3 A8 81            [24] 1671 	mov	r0,sp
      0002C5 18               [12] 1672 	dec	r0
      0002C6 18               [12] 1673 	dec	r0
      0002C7 74 99            [12] 1674 	mov	a,#0x99
      0002C9 26               [12] 1675 	add	a,@r0
      0002CA FD               [12] 1676 	mov	r5,a
      0002CB E4               [12] 1677 	clr	a
      0002CC 08               [12] 1678 	inc	r0
      0002CD 36               [12] 1679 	addc	a,@r0
      0002CE FE               [12] 1680 	mov	r6,a
      0002CF 08               [12] 1681 	inc	r0
      0002D0 86 07            [24] 1682 	mov	ar7,@r0
      0002D2 C0 02            [24] 1683 	push	ar2
      0002D4 C0 03            [24] 1684 	push	ar3
      0002D6 C0 04            [24] 1685 	push	ar4
      0002D8 74r7A            [12] 1686 	mov	a,#_handle_dio_timer
      0002DA C0 E0            [24] 1687 	push	acc
      0002DC 74s02            [12] 1688 	mov	a,#(_handle_dio_timer >> 8)
      0002DE C0 E0            [24] 1689 	push	acc
      0002E0 74s00            [12] 1690 	mov	a,#(_handle_dio_timer >> 16)
      0002E2 C0 E0            [24] 1691 	push	acc
      0002E4 74 80            [12] 1692 	mov	a,#0x80
      0002E6 C0 E0            [24] 1693 	push	acc
      0002E8 E4               [12] 1694 	clr	a
      0002E9 C0 E0            [24] 1695 	push	acc
      0002EB 8D 82            [24] 1696 	mov	dpl,r5
      0002ED 8E 83            [24] 1697 	mov	dph,r6
      0002EF 8F F0            [24] 1698 	mov	b,r7
      0002F1 78r00            [12] 1699 	mov	r0,#_ctimer_set
      0002F3 79s00            [12] 1700 	mov	r1,#(_ctimer_set >> 8)
      0002F5 7As00            [12] 1701 	mov	r2,#(_ctimer_set >> 16)
      0002F7 12r00r00         [24] 1702 	lcall	__sdcc_banked_call
      0002FA E5 81            [12] 1703 	mov	a,sp
      0002FC 24 F8            [12] 1704 	add	a,#0xf8
      0002FE F5 81            [12] 1705 	mov	sp,a
                                   1706 ;	../../../../core/net/rpl/rpl-timers.c:139: return;
      000300 02r04rBF         [24] 1707 	ljmp	00113$
      000303                       1708 00105$:
                                   1709 ;	../../../../core/net/rpl/rpl-timers.c:143: if(instance->dio_send) {
      000303 A8 81            [24] 1710 	mov	r0,sp
      000305 18               [12] 1711 	dec	r0
      000306 18               [12] 1712 	dec	r0
      000307 74 8F            [12] 1713 	mov	a,#0x8F
      000309 26               [12] 1714 	add	a,@r0
      00030A FD               [12] 1715 	mov	r5,a
      00030B E4               [12] 1716 	clr	a
      00030C 08               [12] 1717 	inc	r0
      00030D 36               [12] 1718 	addc	a,@r0
      00030E FE               [12] 1719 	mov	r6,a
      00030F 08               [12] 1720 	inc	r0
      000310 86 07            [24] 1721 	mov	ar7,@r0
      000312 8D 82            [24] 1722 	mov	dpl,r5
      000314 8E 83            [24] 1723 	mov	dph,r6
      000316 8F F0            [24] 1724 	mov	b,r7
      000318 12r00r00         [24] 1725 	lcall	__gptrget
      00031B 70 03            [24] 1726 	jnz	00132$
      00031D 02r04r13         [24] 1727 	ljmp	00111$
      000320                       1728 00132$:
                                   1729 ;	../../../../core/net/rpl/rpl-timers.c:145: if(instance->dio_counter < instance->dio_redundancy) {
      000320 C0 05            [24] 1730 	push	ar5
      000322 C0 06            [24] 1731 	push	ar6
      000324 C0 07            [24] 1732 	push	ar7
      000326 E5 81            [12] 1733 	mov	a,sp
      000328 24 FB            [12] 1734 	add	a,#0xfb
      00032A F8               [12] 1735 	mov	r0,a
      00032B 74 90            [12] 1736 	mov	a,#0x90
      00032D 26               [12] 1737 	add	a,@r0
      00032E FA               [12] 1738 	mov	r2,a
      00032F E4               [12] 1739 	clr	a
      000330 08               [12] 1740 	inc	r0
      000331 36               [12] 1741 	addc	a,@r0
      000332 FB               [12] 1742 	mov	r3,a
      000333 08               [12] 1743 	inc	r0
      000334 86 04            [24] 1744 	mov	ar4,@r0
      000336 8A 82            [24] 1745 	mov	dpl,r2
      000338 8B 83            [24] 1746 	mov	dph,r3
      00033A 8C F0            [24] 1747 	mov	b,r4
      00033C 12r00r00         [24] 1748 	lcall	__gptrget
      00033F FA               [12] 1749 	mov	r2,a
      000340 E5 81            [12] 1750 	mov	a,sp
      000342 24 FB            [12] 1751 	add	a,#0xfb
      000344 F8               [12] 1752 	mov	r0,a
      000345 74 8C            [12] 1753 	mov	a,#0x8C
      000347 26               [12] 1754 	add	a,@r0
      000348 FB               [12] 1755 	mov	r3,a
      000349 E4               [12] 1756 	clr	a
      00034A 08               [12] 1757 	inc	r0
      00034B 36               [12] 1758 	addc	a,@r0
      00034C FC               [12] 1759 	mov	r4,a
      00034D 08               [12] 1760 	inc	r0
      00034E 86 07            [24] 1761 	mov	ar7,@r0
      000350 8B 82            [24] 1762 	mov	dpl,r3
      000352 8C 83            [24] 1763 	mov	dph,r4
      000354 8F F0            [24] 1764 	mov	b,r7
      000356 12r00r00         [24] 1765 	lcall	__gptrget
      000359 FB               [12] 1766 	mov	r3,a
      00035A C3               [12] 1767 	clr	c
      00035B EA               [12] 1768 	mov	a,r2
      00035C 9B               [12] 1769 	subb	a,r3
      00035D D0 07            [24] 1770 	pop	ar7
      00035F D0 06            [24] 1771 	pop	ar6
      000361 D0 05            [24] 1772 	pop	ar5
      000363 50 2F            [24] 1773 	jnc	00107$
                                   1774 ;	../../../../core/net/rpl/rpl-timers.c:149: dio_output(instance, NULL);
      000365 C0 07            [24] 1775 	push	ar7
      000367 C0 06            [24] 1776 	push	ar6
      000369 C0 05            [24] 1777 	push	ar5
      00036B E4               [12] 1778 	clr	a
      00036C C0 E0            [24] 1779 	push	acc
      00036E C0 E0            [24] 1780 	push	acc
      000370 C0 E0            [24] 1781 	push	acc
      000372 E5 81            [12] 1782 	mov	a,sp
      000374 24 F8            [12] 1783 	add	a,#0xf8
      000376 F8               [12] 1784 	mov	r0,a
      000377 86 82            [24] 1785 	mov	dpl,@r0
      000379 08               [12] 1786 	inc	r0
      00037A 86 83            [24] 1787 	mov	dph,@r0
      00037C 08               [12] 1788 	inc	r0
      00037D 86 F0            [24] 1789 	mov	b,@r0
      00037F 78r00            [12] 1790 	mov	r0,#_dio_output
      000381 79s00            [12] 1791 	mov	r1,#(_dio_output >> 8)
      000383 7As00            [12] 1792 	mov	r2,#(_dio_output >> 16)
      000385 12r00r00         [24] 1793 	lcall	__sdcc_banked_call
      000388 15 81            [12] 1794 	dec	sp
      00038A 15 81            [12] 1795 	dec	sp
      00038C 15 81            [12] 1796 	dec	sp
      00038E D0 05            [24] 1797 	pop	ar5
      000390 D0 06            [24] 1798 	pop	ar6
      000392 D0 07            [24] 1799 	pop	ar7
      000394                       1800 00107$:
                                   1801 ;	../../../../core/net/rpl/rpl-timers.c:154: instance->dio_send = 0;
      000394 8D 82            [24] 1802 	mov	dpl,r5
      000396 8E 83            [24] 1803 	mov	dph,r6
      000398 8F F0            [24] 1804 	mov	b,r7
      00039A E4               [12] 1805 	clr	a
      00039B 12r00r00         [24] 1806 	lcall	__gptrput
                                   1807 ;	../../../../core/net/rpl/rpl-timers.c:157: ctimer_set(&instance->dio_timer, instance->dio_next_delay, handle_dio_timer, instance);
      00039E A8 81            [24] 1808 	mov	r0,sp
      0003A0 18               [12] 1809 	dec	r0
      0003A1 18               [12] 1810 	dec	r0
      0003A2 86 05            [24] 1811 	mov	ar5,@r0
      0003A4 08               [12] 1812 	inc	r0
      0003A5 86 06            [24] 1813 	mov	ar6,@r0
      0003A7 08               [12] 1814 	inc	r0
      0003A8 86 07            [24] 1815 	mov	ar7,@r0
      0003AA A8 81            [24] 1816 	mov	r0,sp
      0003AC 18               [12] 1817 	dec	r0
      0003AD 18               [12] 1818 	dec	r0
      0003AE 74 97            [12] 1819 	mov	a,#0x97
      0003B0 26               [12] 1820 	add	a,@r0
      0003B1 FA               [12] 1821 	mov	r2,a
      0003B2 E4               [12] 1822 	clr	a
      0003B3 08               [12] 1823 	inc	r0
      0003B4 36               [12] 1824 	addc	a,@r0
      0003B5 FB               [12] 1825 	mov	r3,a
      0003B6 08               [12] 1826 	inc	r0
      0003B7 86 04            [24] 1827 	mov	ar4,@r0
      0003B9 8A 82            [24] 1828 	mov	dpl,r2
      0003BB 8B 83            [24] 1829 	mov	dph,r3
      0003BD 8C F0            [24] 1830 	mov	b,r4
      0003BF E5 81            [12] 1831 	mov	a,sp
      0003C1 24 FA            [12] 1832 	add	a,#0xfa
      0003C3 F8               [12] 1833 	mov	r0,a
      0003C4 12r00r00         [24] 1834 	lcall	__gptrget
      0003C7 F6               [12] 1835 	mov	@r0,a
      0003C8 A3               [24] 1836 	inc	dptr
      0003C9 12r00r00         [24] 1837 	lcall	__gptrget
      0003CC 08               [12] 1838 	inc	r0
      0003CD F6               [12] 1839 	mov	@r0,a
      0003CE A8 81            [24] 1840 	mov	r0,sp
      0003D0 18               [12] 1841 	dec	r0
      0003D1 18               [12] 1842 	dec	r0
      0003D2 74 99            [12] 1843 	mov	a,#0x99
      0003D4 26               [12] 1844 	add	a,@r0
      0003D5 FA               [12] 1845 	mov	r2,a
      0003D6 E4               [12] 1846 	clr	a
      0003D7 08               [12] 1847 	inc	r0
      0003D8 36               [12] 1848 	addc	a,@r0
      0003D9 FB               [12] 1849 	mov	r3,a
      0003DA 08               [12] 1850 	inc	r0
      0003DB 86 04            [24] 1851 	mov	ar4,@r0
      0003DD C0 05            [24] 1852 	push	ar5
      0003DF C0 06            [24] 1853 	push	ar6
      0003E1 C0 07            [24] 1854 	push	ar7
      0003E3 74r7A            [12] 1855 	mov	a,#_handle_dio_timer
      0003E5 C0 E0            [24] 1856 	push	acc
      0003E7 74s02            [12] 1857 	mov	a,#(_handle_dio_timer >> 8)
      0003E9 C0 E0            [24] 1858 	push	acc
      0003EB 74s00            [12] 1859 	mov	a,#(_handle_dio_timer >> 16)
      0003ED C0 E0            [24] 1860 	push	acc
      0003EF E5 81            [12] 1861 	mov	a,sp
      0003F1 24 F4            [12] 1862 	add	a,#0xf4
      0003F3 F8               [12] 1863 	mov	r0,a
      0003F4 E6               [12] 1864 	mov	a,@r0
      0003F5 C0 E0            [24] 1865 	push	acc
      0003F7 08               [12] 1866 	inc	r0
      0003F8 E6               [12] 1867 	mov	a,@r0
      0003F9 C0 E0            [24] 1868 	push	acc
      0003FB 8A 82            [24] 1869 	mov	dpl,r2
      0003FD 8B 83            [24] 1870 	mov	dph,r3
      0003FF 8C F0            [24] 1871 	mov	b,r4
      000401 78r00            [12] 1872 	mov	r0,#_ctimer_set
      000403 79s00            [12] 1873 	mov	r1,#(_ctimer_set >> 8)
      000405 7As00            [12] 1874 	mov	r2,#(_ctimer_set >> 16)
      000407 12r00r00         [24] 1875 	lcall	__sdcc_banked_call
      00040A E5 81            [12] 1876 	mov	a,sp
      00040C 24 F8            [12] 1877 	add	a,#0xf8
      00040E F5 81            [12] 1878 	mov	sp,a
      000410 02r04rBF         [24] 1879 	ljmp	00113$
      000413                       1880 00111$:
                                   1881 ;	../../../../core/net/rpl/rpl-timers.c:160: if(instance->dio_intcurrent < instance->dio_intmin + instance->dio_intdoubl) {
      000413 A8 81            [24] 1882 	mov	r0,sp
      000415 18               [12] 1883 	dec	r0
      000416 18               [12] 1884 	dec	r0
      000417 74 8E            [12] 1885 	mov	a,#0x8E
      000419 26               [12] 1886 	add	a,@r0
      00041A FD               [12] 1887 	mov	r5,a
      00041B E4               [12] 1888 	clr	a
      00041C 08               [12] 1889 	inc	r0
      00041D 36               [12] 1890 	addc	a,@r0
      00041E FE               [12] 1891 	mov	r6,a
      00041F 08               [12] 1892 	inc	r0
      000420 86 07            [24] 1893 	mov	ar7,@r0
      000422 8D 82            [24] 1894 	mov	dpl,r5
      000424 8E 83            [24] 1895 	mov	dph,r6
      000426 8F F0            [24] 1896 	mov	b,r7
      000428 E5 81            [12] 1897 	mov	a,sp
      00042A 24 FA            [12] 1898 	add	a,#0xfa
      00042C F8               [12] 1899 	mov	r0,a
      00042D 12r00r00         [24] 1900 	lcall	__gptrget
      000430 F6               [12] 1901 	mov	@r0,a
      000431 A8 81            [24] 1902 	mov	r0,sp
      000433 18               [12] 1903 	dec	r0
      000434 18               [12] 1904 	dec	r0
      000435 74 8B            [12] 1905 	mov	a,#0x8B
      000437 26               [12] 1906 	add	a,@r0
      000438 FA               [12] 1907 	mov	r2,a
      000439 E4               [12] 1908 	clr	a
      00043A 08               [12] 1909 	inc	r0
      00043B 36               [12] 1910 	addc	a,@r0
      00043C FB               [12] 1911 	mov	r3,a
      00043D 08               [12] 1912 	inc	r0
      00043E 86 04            [24] 1913 	mov	ar4,@r0
      000440 8A 82            [24] 1914 	mov	dpl,r2
      000442 8B 83            [24] 1915 	mov	dph,r3
      000444 8C F0            [24] 1916 	mov	b,r4
      000446 12r00r00         [24] 1917 	lcall	__gptrget
      000449 FA               [12] 1918 	mov	r2,a
      00044A E5 81            [12] 1919 	mov	a,sp
      00044C 24 FC            [12] 1920 	add	a,#0xfc
      00044E F8               [12] 1921 	mov	r0,a
      00044F A6 02            [24] 1922 	mov	@r0,ar2
      000451 08               [12] 1923 	inc	r0
      000452 76 00            [12] 1924 	mov	@r0,#0x00
      000454 A8 81            [24] 1925 	mov	r0,sp
      000456 18               [12] 1926 	dec	r0
      000457 18               [12] 1927 	dec	r0
      000458 74 8A            [12] 1928 	mov	a,#0x8A
      00045A 26               [12] 1929 	add	a,@r0
      00045B FA               [12] 1930 	mov	r2,a
      00045C E4               [12] 1931 	clr	a
      00045D 08               [12] 1932 	inc	r0
      00045E 36               [12] 1933 	addc	a,@r0
      00045F FB               [12] 1934 	mov	r3,a
      000460 08               [12] 1935 	inc	r0
      000461 86 04            [24] 1936 	mov	ar4,@r0
      000463 8A 82            [24] 1937 	mov	dpl,r2
      000465 8B 83            [24] 1938 	mov	dph,r3
      000467 8C F0            [24] 1939 	mov	b,r4
      000469 12r00r00         [24] 1940 	lcall	__gptrget
      00046C FA               [12] 1941 	mov	r2,a
      00046D 7C 00            [12] 1942 	mov	r4,#0x00
      00046F E5 81            [12] 1943 	mov	a,sp
      000471 24 FC            [12] 1944 	add	a,#0xfc
      000473 F8               [12] 1945 	mov	r0,a
      000474 EA               [12] 1946 	mov	a,r2
      000475 26               [12] 1947 	add	a,@r0
      000476 F6               [12] 1948 	mov	@r0,a
      000477 EC               [12] 1949 	mov	a,r4
      000478 08               [12] 1950 	inc	r0
      000479 36               [12] 1951 	addc	a,@r0
      00047A F6               [12] 1952 	mov	@r0,a
      00047B E5 81            [12] 1953 	mov	a,sp
      00047D 24 FA            [12] 1954 	add	a,#0xfa
      00047F F8               [12] 1955 	mov	r0,a
      000480 86 03            [24] 1956 	mov	ar3,@r0
      000482 7C 00            [12] 1957 	mov	r4,#0x00
      000484 E5 81            [12] 1958 	mov	a,sp
      000486 24 FC            [12] 1959 	add	a,#0xfc
      000488 F8               [12] 1960 	mov	r0,a
      000489 C3               [12] 1961 	clr	c
      00048A EB               [12] 1962 	mov	a,r3
      00048B 96               [12] 1963 	subb	a,@r0
      00048C EC               [12] 1964 	mov	a,r4
      00048D 64 80            [12] 1965 	xrl	a,#0x80
      00048F 08               [12] 1966 	inc	r0
      000490 86 F0            [24] 1967 	mov	b,@r0
      000492 63 F0 80         [24] 1968 	xrl	b,#0x80
      000495 95 F0            [12] 1969 	subb	a,b
      000497 50 11            [24] 1970 	jnc	00109$
                                   1971 ;	../../../../core/net/rpl/rpl-timers.c:161: instance->dio_intcurrent++;
      000499 E5 81            [12] 1972 	mov	a,sp
      00049B 24 FA            [12] 1973 	add	a,#0xfa
      00049D F8               [12] 1974 	mov	r0,a
      00049E E6               [12] 1975 	mov	a,@r0
      00049F 04               [12] 1976 	inc	a
      0004A0 FC               [12] 1977 	mov	r4,a
      0004A1 8D 82            [24] 1978 	mov	dpl,r5
      0004A3 8E 83            [24] 1979 	mov	dph,r6
      0004A5 8F F0            [24] 1980 	mov	b,r7
      0004A7 12r00r00         [24] 1981 	lcall	__gptrput
      0004AA                       1982 00109$:
                                   1983 ;	../../../../core/net/rpl/rpl-timers.c:164: new_dio_interval(instance);
      0004AA A8 81            [24] 1984 	mov	r0,sp
      0004AC 18               [12] 1985 	dec	r0
      0004AD 18               [12] 1986 	dec	r0
      0004AE 86 82            [24] 1987 	mov	dpl,@r0
      0004B0 08               [12] 1988 	inc	r0
      0004B1 86 83            [24] 1989 	mov	dph,@r0
      0004B3 08               [12] 1990 	inc	r0
      0004B4 86 F0            [24] 1991 	mov	b,@r0
      0004B6 78r6B            [12] 1992 	mov	r0,#_new_dio_interval
      0004B8 79s00            [12] 1993 	mov	r1,#(_new_dio_interval >> 8)
      0004BA 7As00            [12] 1994 	mov	r2,#(_new_dio_interval >> 16)
      0004BC 12r00r00         [24] 1995 	lcall	__sdcc_banked_call
      0004BF                       1996 00113$:
      0004BF E5 81            [12] 1997 	mov	a,sp
      0004C1 24 F9            [12] 1998 	add	a,#0xF9
      0004C3 F5 81            [12] 1999 	mov	sp,a
      0004C5 02r00r00         [24] 2000 	ljmp	__sdcc_banked_ret
                                   2001 ;------------------------------------------------------------
                                   2002 ;Allocation info for local variables in function 'rpl_reset_periodic_timer'
                                   2003 ;------------------------------------------------------------
                                   2004 ;	../../../../core/net/rpl/rpl-timers.c:169: rpl_reset_periodic_timer(void)
                                   2005 ;	-----------------------------------------
                                   2006 ;	 function rpl_reset_periodic_timer
                                   2007 ;	-----------------------------------------
      0004C8                       2008 _rpl_reset_periodic_timer:
                                   2009 ;	../../../../core/net/rpl/rpl-timers.c:172: ((uint32_t)RPL_DIS_INTERVAL * (uint32_t)random_rand()) / RANDOM_RAND_MAX -
      0004C8 78r00            [12] 2010 	mov	r0,#_random_rand
      0004CA 79s00            [12] 2011 	mov	r1,#(_random_rand >> 8)
      0004CC 7As00            [12] 2012 	mov	r2,#(_random_rand >> 16)
      0004CE 12r00r00         [24] 2013 	lcall	__sdcc_banked_call
      0004D1 AE 82            [24] 2014 	mov	r6,dpl
      0004D3 AF 83            [24] 2015 	mov	r7,dph
      0004D5 7D 00            [12] 2016 	mov	r5,#0x00
      0004D7 7C 00            [12] 2017 	mov	r4,#0x00
      0004D9 C0 06            [24] 2018 	push	ar6
      0004DB C0 07            [24] 2019 	push	ar7
      0004DD C0 05            [24] 2020 	push	ar5
      0004DF C0 04            [24] 2021 	push	ar4
      0004E1 90 00 3C         [24] 2022 	mov	dptr,#(0x3C&0x00ff)
      0004E4 E4               [12] 2023 	clr	a
      0004E5 F5 F0            [12] 2024 	mov	b,a
      0004E7 12r00r00         [24] 2025 	lcall	__mullong
      0004EA AC 82            [24] 2026 	mov	r4,dpl
      0004EC AD 83            [24] 2027 	mov	r5,dph
      0004EE AE F0            [24] 2028 	mov	r6,b
      0004F0 FF               [12] 2029 	mov	r7,a
      0004F1 E5 81            [12] 2030 	mov	a,sp
      0004F3 24 FC            [12] 2031 	add	a,#0xfc
      0004F5 F5 81            [12] 2032 	mov	sp,a
      0004F7 74 FF            [12] 2033 	mov	a,#0xFF
      0004F9 C0 E0            [24] 2034 	push	acc
      0004FB C0 E0            [24] 2035 	push	acc
      0004FD E4               [12] 2036 	clr	a
      0004FE C0 E0            [24] 2037 	push	acc
      000500 C0 E0            [24] 2038 	push	acc
      000502 8C 82            [24] 2039 	mov	dpl,r4
      000504 8D 83            [24] 2040 	mov	dph,r5
      000506 8E F0            [24] 2041 	mov	b,r6
      000508 EF               [12] 2042 	mov	a,r7
      000509 12r00r00         [24] 2043 	lcall	__divulong
      00050C AC 82            [24] 2044 	mov	r4,dpl
      00050E AD 83            [24] 2045 	mov	r5,dph
      000510 AE F0            [24] 2046 	mov	r6,b
      000512 FF               [12] 2047 	mov	r7,a
      000513 E5 81            [12] 2048 	mov	a,sp
      000515 24 FC            [12] 2049 	add	a,#0xfc
      000517 F5 81            [12] 2050 	mov	sp,a
      000519 74 19            [12] 2051 	mov	a,#0x19
      00051B 2C               [12] 2052 	add	a,r4
      00051C FC               [12] 2053 	mov	r4,a
      00051D E4               [12] 2054 	clr	a
      00051E 3D               [12] 2055 	addc	a,r5
      00051F FD               [12] 2056 	mov	r5,a
      000520 E4               [12] 2057 	clr	a
      000521 3E               [12] 2058 	addc	a,r6
      000522 E4               [12] 2059 	clr	a
      000523 3F               [12] 2060 	addc	a,r7
      000524 90r00r16         [24] 2061 	mov	dptr,#_next_dis
      000527 EC               [12] 2062 	mov	a,r4
      000528 F0               [24] 2063 	movx	@dptr,a
      000529 ED               [12] 2064 	mov	a,r5
      00052A A3               [24] 2065 	inc	dptr
      00052B F0               [24] 2066 	movx	@dptr,a
                                   2067 ;	../../../../core/net/rpl/rpl-timers.c:174: ctimer_set(&periodic_timer, CLOCK_SECOND, handle_periodic_timer, NULL);
      00052C E4               [12] 2068 	clr	a
      00052D C0 E0            [24] 2069 	push	acc
      00052F C0 E0            [24] 2070 	push	acc
      000531 C0 E0            [24] 2071 	push	acc
      000533 74r00            [12] 2072 	mov	a,#_handle_periodic_timer
      000535 C0 E0            [24] 2073 	push	acc
      000537 74s00            [12] 2074 	mov	a,#(_handle_periodic_timer >> 8)
      000539 C0 E0            [24] 2075 	push	acc
      00053B 74s00            [12] 2076 	mov	a,#(_handle_periodic_timer >> 16)
      00053D C0 E0            [24] 2077 	push	acc
      00053F 74 80            [12] 2078 	mov	a,#0x80
      000541 C0 E0            [24] 2079 	push	acc
      000543 E4               [12] 2080 	clr	a
      000544 C0 E0            [24] 2081 	push	acc
      000546 90r00r00         [24] 2082 	mov	dptr,#_periodic_timer
      000549 75 F0 00         [24] 2083 	mov	b,#0x00
      00054C 78r00            [12] 2084 	mov	r0,#_ctimer_set
      00054E 79s00            [12] 2085 	mov	r1,#(_ctimer_set >> 8)
      000550 7As00            [12] 2086 	mov	r2,#(_ctimer_set >> 16)
      000552 12r00r00         [24] 2087 	lcall	__sdcc_banked_call
      000555 E5 81            [12] 2088 	mov	a,sp
      000557 24 F8            [12] 2089 	add	a,#0xf8
      000559 F5 81            [12] 2090 	mov	sp,a
      00055B 02r00r00         [24] 2091 	ljmp	__sdcc_banked_ret
                                   2092 ;------------------------------------------------------------
                                   2093 ;Allocation info for local variables in function 'rpl_reset_dio_timer'
                                   2094 ;------------------------------------------------------------
                                   2095 ;instance                  Allocated to stack - sp -5
                                   2096 ;sloc0                     Allocated to stack - sp -2
                                   2097 ;sloc1                     Allocated to stack - sp +1
                                   2098 ;------------------------------------------------------------
                                   2099 ;	../../../../core/net/rpl/rpl-timers.c:179: rpl_reset_dio_timer(rpl_instance_t *instance)
                                   2100 ;	-----------------------------------------
                                   2101 ;	 function rpl_reset_dio_timer
                                   2102 ;	-----------------------------------------
      00055E                       2103 _rpl_reset_dio_timer:
      00055E C0 82            [24] 2104 	push	dpl
      000560 C0 83            [24] 2105 	push	dph
      000562 C0 F0            [24] 2106 	push	b
      000564 05 81            [12] 2107 	inc	sp
      000566 05 81            [12] 2108 	inc	sp
      000568 05 81            [12] 2109 	inc	sp
                                   2110 ;	../../../../core/net/rpl/rpl-timers.c:184: if(instance->dio_intcurrent > instance->dio_intmin) {
      00056A E5 81            [12] 2111 	mov	a,sp
      00056C 24 FB            [12] 2112 	add	a,#0xfb
      00056E F8               [12] 2113 	mov	r0,a
      00056F 74 8E            [12] 2114 	mov	a,#0x8E
      000571 26               [12] 2115 	add	a,@r0
      000572 FA               [12] 2116 	mov	r2,a
      000573 E4               [12] 2117 	clr	a
      000574 08               [12] 2118 	inc	r0
      000575 36               [12] 2119 	addc	a,@r0
      000576 FB               [12] 2120 	mov	r3,a
      000577 08               [12] 2121 	inc	r0
      000578 86 04            [24] 2122 	mov	ar4,@r0
      00057A 8A 82            [24] 2123 	mov	dpl,r2
      00057C 8B 83            [24] 2124 	mov	dph,r3
      00057E 8C F0            [24] 2125 	mov	b,r4
      000580 12r00r00         [24] 2126 	lcall	__gptrget
      000583 FE               [12] 2127 	mov	r6,a
      000584 E5 81            [12] 2128 	mov	a,sp
      000586 24 FB            [12] 2129 	add	a,#0xfb
      000588 F8               [12] 2130 	mov	r0,a
      000589 A9 81            [24] 2131 	mov	r1,sp
      00058B 19               [12] 2132 	dec	r1
      00058C 19               [12] 2133 	dec	r1
      00058D 74 8B            [12] 2134 	mov	a,#0x8B
      00058F 26               [12] 2135 	add	a,@r0
      000590 F7               [12] 2136 	mov	@r1,a
      000591 E4               [12] 2137 	clr	a
      000592 08               [12] 2138 	inc	r0
      000593 36               [12] 2139 	addc	a,@r0
      000594 09               [12] 2140 	inc	r1
      000595 F7               [12] 2141 	mov	@r1,a
      000596 08               [12] 2142 	inc	r0
      000597 09               [12] 2143 	inc	r1
      000598 E6               [12] 2144 	mov	a,@r0
      000599 F7               [12] 2145 	mov	@r1,a
      00059A A8 81            [24] 2146 	mov	r0,sp
      00059C 18               [12] 2147 	dec	r0
      00059D 18               [12] 2148 	dec	r0
      00059E 86 82            [24] 2149 	mov	dpl,@r0
      0005A0 08               [12] 2150 	inc	r0
      0005A1 86 83            [24] 2151 	mov	dph,@r0
      0005A3 08               [12] 2152 	inc	r0
      0005A4 86 F0            [24] 2153 	mov	b,@r0
      0005A6 12r00r00         [24] 2154 	lcall	__gptrget
      0005A9 FF               [12] 2155 	mov	r7,a
      0005AA C3               [12] 2156 	clr	c
      0005AB 9E               [12] 2157 	subb	a,r6
      0005AC 50 48            [24] 2158 	jnc	00103$
                                   2159 ;	../../../../core/net/rpl/rpl-timers.c:185: instance->dio_counter = 0;
      0005AE E5 81            [12] 2160 	mov	a,sp
      0005B0 24 FB            [12] 2161 	add	a,#0xfb
      0005B2 F8               [12] 2162 	mov	r0,a
      0005B3 74 90            [12] 2163 	mov	a,#0x90
      0005B5 26               [12] 2164 	add	a,@r0
      0005B6 FD               [12] 2165 	mov	r5,a
      0005B7 E4               [12] 2166 	clr	a
      0005B8 08               [12] 2167 	inc	r0
      0005B9 36               [12] 2168 	addc	a,@r0
      0005BA FE               [12] 2169 	mov	r6,a
      0005BB 08               [12] 2170 	inc	r0
      0005BC 86 07            [24] 2171 	mov	ar7,@r0
      0005BE 8D 82            [24] 2172 	mov	dpl,r5
      0005C0 8E 83            [24] 2173 	mov	dph,r6
      0005C2 8F F0            [24] 2174 	mov	b,r7
      0005C4 E4               [12] 2175 	clr	a
      0005C5 12r00r00         [24] 2176 	lcall	__gptrput
                                   2177 ;	../../../../core/net/rpl/rpl-timers.c:186: instance->dio_intcurrent = instance->dio_intmin;
      0005C8 A8 81            [24] 2178 	mov	r0,sp
      0005CA 18               [12] 2179 	dec	r0
      0005CB 18               [12] 2180 	dec	r0
      0005CC 86 82            [24] 2181 	mov	dpl,@r0
      0005CE 08               [12] 2182 	inc	r0
      0005CF 86 83            [24] 2183 	mov	dph,@r0
      0005D1 08               [12] 2184 	inc	r0
      0005D2 86 F0            [24] 2185 	mov	b,@r0
      0005D4 12r00r00         [24] 2186 	lcall	__gptrget
      0005D7 8A 82            [24] 2187 	mov	dpl,r2
      0005D9 8B 83            [24] 2188 	mov	dph,r3
      0005DB 8C F0            [24] 2189 	mov	b,r4
      0005DD 12r00r00         [24] 2190 	lcall	__gptrput
                                   2191 ;	../../../../core/net/rpl/rpl-timers.c:187: new_dio_interval(instance);
      0005E0 E5 81            [12] 2192 	mov	a,sp
      0005E2 24 FB            [12] 2193 	add	a,#0xfb
      0005E4 F8               [12] 2194 	mov	r0,a
      0005E5 86 82            [24] 2195 	mov	dpl,@r0
      0005E7 08               [12] 2196 	inc	r0
      0005E8 86 83            [24] 2197 	mov	dph,@r0
      0005EA 08               [12] 2198 	inc	r0
      0005EB 86 F0            [24] 2199 	mov	b,@r0
      0005ED 78r6B            [12] 2200 	mov	r0,#_new_dio_interval
      0005EF 79s00            [12] 2201 	mov	r1,#(_new_dio_interval >> 8)
      0005F1 7As00            [12] 2202 	mov	r2,#(_new_dio_interval >> 16)
      0005F3 12r00r00         [24] 2203 	lcall	__sdcc_banked_call
      0005F6                       2204 00103$:
      0005F6 E5 81            [12] 2205 	mov	a,sp
      0005F8 24 FA            [12] 2206 	add	a,#0xFA
      0005FA F5 81            [12] 2207 	mov	sp,a
      0005FC 02r00r00         [24] 2208 	ljmp	__sdcc_banked_ret
                                   2209 ;------------------------------------------------------------
                                   2210 ;Allocation info for local variables in function 'handle_dao_timer'
                                   2211 ;------------------------------------------------------------
                                   2212 ;ptr                       Allocated to registers r5 r6 r7 
                                   2213 ;instance                  Allocated to stack - sp -2
                                   2214 ;------------------------------------------------------------
                                   2215 ;	../../../../core/net/rpl/rpl-timers.c:196: handle_dao_timer(void *ptr)
                                   2216 ;	-----------------------------------------
                                   2217 ;	 function handle_dao_timer
                                   2218 ;	-----------------------------------------
      0005FF                       2219 _handle_dao_timer:
      0005FF 05 81            [12] 2220 	inc	sp
      000601 05 81            [12] 2221 	inc	sp
      000603 05 81            [12] 2222 	inc	sp
      000605 AD 82            [24] 2223 	mov	r5,dpl
      000607 AE 83            [24] 2224 	mov	r6,dph
      000609 AF F0            [24] 2225 	mov	r7,b
                                   2226 ;	../../../../core/net/rpl/rpl-timers.c:200: instance = (rpl_instance_t *)ptr;
      00060B A8 81            [24] 2227 	mov	r0,sp
      00060D 18               [12] 2228 	dec	r0
      00060E 18               [12] 2229 	dec	r0
      00060F A6 05            [24] 2230 	mov	@r0,ar5
      000611 08               [12] 2231 	inc	r0
      000612 A6 06            [24] 2232 	mov	@r0,ar6
      000614 08               [12] 2233 	inc	r0
      000615 A6 07            [24] 2234 	mov	@r0,ar7
                                   2235 ;	../../../../core/net/rpl/rpl-timers.c:202: if(!dio_send_ok && uip_ds6_get_link_local(ADDR_PREFERRED) == NULL) {
      000617 90r00r18         [24] 2236 	mov	dptr,#_dio_send_ok
      00061A E0               [24] 2237 	movx	a,@dptr
      00061B FC               [12] 2238 	mov	r4,a
      00061C 70 62            [24] 2239 	jnz	00102$
      00061E 75 82 01         [24] 2240 	mov	dpl,#0x01
      000621 78r00            [12] 2241 	mov	r0,#_uip_ds6_get_link_local
      000623 79s00            [12] 2242 	mov	r1,#(_uip_ds6_get_link_local >> 8)
      000625 7As00            [12] 2243 	mov	r2,#(_uip_ds6_get_link_local >> 16)
      000627 12r00r00         [24] 2244 	lcall	__sdcc_banked_call
      00062A AA 82            [24] 2245 	mov	r2,dpl
      00062C AB 83            [24] 2246 	mov	r3,dph
      00062E AC F0            [24] 2247 	mov	r4,b
      000630 EA               [12] 2248 	mov	a,r2
      000631 4B               [12] 2249 	orl	a,r3
      000632 70 4C            [24] 2250 	jnz	00102$
                                   2251 ;	../../../../core/net/rpl/rpl-timers.c:204: ctimer_set(&instance->dao_timer, CLOCK_SECOND, handle_dao_timer, instance);
      000634 A8 81            [24] 2252 	mov	r0,sp
      000636 18               [12] 2253 	dec	r0
      000637 18               [12] 2254 	dec	r0
      000638 86 02            [24] 2255 	mov	ar2,@r0
      00063A 08               [12] 2256 	inc	r0
      00063B 86 03            [24] 2257 	mov	ar3,@r0
      00063D 08               [12] 2258 	inc	r0
      00063E 86 04            [24] 2259 	mov	ar4,@r0
      000640 A8 81            [24] 2260 	mov	r0,sp
      000642 18               [12] 2261 	dec	r0
      000643 18               [12] 2262 	dec	r0
      000644 74 AF            [12] 2263 	mov	a,#0xAF
      000646 26               [12] 2264 	add	a,@r0
      000647 FD               [12] 2265 	mov	r5,a
      000648 E4               [12] 2266 	clr	a
      000649 08               [12] 2267 	inc	r0
      00064A 36               [12] 2268 	addc	a,@r0
      00064B FE               [12] 2269 	mov	r6,a
      00064C 08               [12] 2270 	inc	r0
      00064D 86 07            [24] 2271 	mov	ar7,@r0
      00064F C0 02            [24] 2272 	push	ar2
      000651 C0 03            [24] 2273 	push	ar3
      000653 C0 04            [24] 2274 	push	ar4
      000655 74rFF            [12] 2275 	mov	a,#_handle_dao_timer
      000657 C0 E0            [24] 2276 	push	acc
      000659 74s05            [12] 2277 	mov	a,#(_handle_dao_timer >> 8)
      00065B C0 E0            [24] 2278 	push	acc
      00065D 74s00            [12] 2279 	mov	a,#(_handle_dao_timer >> 16)
      00065F C0 E0            [24] 2280 	push	acc
      000661 74 80            [12] 2281 	mov	a,#0x80
      000663 C0 E0            [24] 2282 	push	acc
      000665 E4               [12] 2283 	clr	a
      000666 C0 E0            [24] 2284 	push	acc
      000668 8D 82            [24] 2285 	mov	dpl,r5
      00066A 8E 83            [24] 2286 	mov	dph,r6
      00066C 8F F0            [24] 2287 	mov	b,r7
      00066E 78r00            [12] 2288 	mov	r0,#_ctimer_set
      000670 79s00            [12] 2289 	mov	r1,#(_ctimer_set >> 8)
      000672 7As00            [12] 2290 	mov	r2,#(_ctimer_set >> 16)
      000674 12r00r00         [24] 2291 	lcall	__sdcc_banked_call
      000677 E5 81            [12] 2292 	mov	a,sp
      000679 24 F8            [12] 2293 	add	a,#0xf8
      00067B F5 81            [12] 2294 	mov	sp,a
                                   2295 ;	../../../../core/net/rpl/rpl-timers.c:205: return;
      00067D 02r07r0C         [24] 2296 	ljmp	00106$
      000680                       2297 00102$:
                                   2298 ;	../../../../core/net/rpl/rpl-timers.c:209: if(instance->current_dag->preferred_parent != NULL) {
      000680 A8 81            [24] 2299 	mov	r0,sp
      000682 18               [12] 2300 	dec	r0
      000683 18               [12] 2301 	dec	r0
      000684 74 0A            [12] 2302 	mov	a,#0x0A
      000686 26               [12] 2303 	add	a,@r0
      000687 FD               [12] 2304 	mov	r5,a
      000688 E4               [12] 2305 	clr	a
      000689 08               [12] 2306 	inc	r0
      00068A 36               [12] 2307 	addc	a,@r0
      00068B FE               [12] 2308 	mov	r6,a
      00068C 08               [12] 2309 	inc	r0
      00068D 86 07            [24] 2310 	mov	ar7,@r0
      00068F 8D 82            [24] 2311 	mov	dpl,r5
      000691 8E 83            [24] 2312 	mov	dph,r6
      000693 8F F0            [24] 2313 	mov	b,r7
      000695 12r00r00         [24] 2314 	lcall	__gptrget
      000698 FD               [12] 2315 	mov	r5,a
      000699 A3               [24] 2316 	inc	dptr
      00069A 12r00r00         [24] 2317 	lcall	__gptrget
      00069D FE               [12] 2318 	mov	r6,a
      00069E A3               [24] 2319 	inc	dptr
      00069F 12r00r00         [24] 2320 	lcall	__gptrget
      0006A2 FF               [12] 2321 	mov	r7,a
      0006A3 74 17            [12] 2322 	mov	a,#0x17
      0006A5 2D               [12] 2323 	add	a,r5
      0006A6 FD               [12] 2324 	mov	r5,a
      0006A7 E4               [12] 2325 	clr	a
      0006A8 3E               [12] 2326 	addc	a,r6
      0006A9 FE               [12] 2327 	mov	r6,a
      0006AA 8D 82            [24] 2328 	mov	dpl,r5
      0006AC 8E 83            [24] 2329 	mov	dph,r6
      0006AE 8F F0            [24] 2330 	mov	b,r7
      0006B0 12r00r00         [24] 2331 	lcall	__gptrget
      0006B3 FD               [12] 2332 	mov	r5,a
      0006B4 A3               [24] 2333 	inc	dptr
      0006B5 12r00r00         [24] 2334 	lcall	__gptrget
      0006B8 FE               [12] 2335 	mov	r6,a
      0006B9 A3               [24] 2336 	inc	dptr
      0006BA 12r00r00         [24] 2337 	lcall	__gptrget
      0006BD FF               [12] 2338 	mov	r7,a
      0006BE ED               [12] 2339 	mov	a,r5
      0006BF 4E               [12] 2340 	orl	a,r6
      0006C0 60 2C            [24] 2341 	jz	00105$
                                   2342 ;	../../../../core/net/rpl/rpl-timers.c:212: dao_output(instance->current_dag->preferred_parent, instance->default_lifetime);
      0006C2 A8 81            [24] 2343 	mov	r0,sp
      0006C4 18               [12] 2344 	dec	r0
      0006C5 18               [12] 2345 	dec	r0
      0006C6 74 8D            [12] 2346 	mov	a,#0x8D
      0006C8 26               [12] 2347 	add	a,@r0
      0006C9 FA               [12] 2348 	mov	r2,a
      0006CA E4               [12] 2349 	clr	a
      0006CB 08               [12] 2350 	inc	r0
      0006CC 36               [12] 2351 	addc	a,@r0
      0006CD FB               [12] 2352 	mov	r3,a
      0006CE 08               [12] 2353 	inc	r0
      0006CF 86 04            [24] 2354 	mov	ar4,@r0
      0006D1 8A 82            [24] 2355 	mov	dpl,r2
      0006D3 8B 83            [24] 2356 	mov	dph,r3
      0006D5 8C F0            [24] 2357 	mov	b,r4
      0006D7 12r00r00         [24] 2358 	lcall	__gptrget
      0006DA FA               [12] 2359 	mov	r2,a
      0006DB C0 02            [24] 2360 	push	ar2
      0006DD 8D 82            [24] 2361 	mov	dpl,r5
      0006DF 8E 83            [24] 2362 	mov	dph,r6
      0006E1 8F F0            [24] 2363 	mov	b,r7
      0006E3 78r00            [12] 2364 	mov	r0,#_dao_output
      0006E5 79s00            [12] 2365 	mov	r1,#(_dao_output >> 8)
      0006E7 7As00            [12] 2366 	mov	r2,#(_dao_output >> 16)
      0006E9 12r00r00         [24] 2367 	lcall	__sdcc_banked_call
      0006EC 15 81            [12] 2368 	dec	sp
      0006EE                       2369 00105$:
                                   2370 ;	../../../../core/net/rpl/rpl-timers.c:216: ctimer_stop(&instance->dao_timer);
      0006EE A8 81            [24] 2371 	mov	r0,sp
      0006F0 18               [12] 2372 	dec	r0
      0006F1 18               [12] 2373 	dec	r0
      0006F2 74 AF            [12] 2374 	mov	a,#0xAF
      0006F4 26               [12] 2375 	add	a,@r0
      0006F5 FD               [12] 2376 	mov	r5,a
      0006F6 E4               [12] 2377 	clr	a
      0006F7 08               [12] 2378 	inc	r0
      0006F8 36               [12] 2379 	addc	a,@r0
      0006F9 FE               [12] 2380 	mov	r6,a
      0006FA 08               [12] 2381 	inc	r0
      0006FB 86 07            [24] 2382 	mov	ar7,@r0
      0006FD 8D 82            [24] 2383 	mov	dpl,r5
      0006FF 8E 83            [24] 2384 	mov	dph,r6
      000701 8F F0            [24] 2385 	mov	b,r7
      000703 78r00            [12] 2386 	mov	r0,#_ctimer_stop
      000705 79s00            [12] 2387 	mov	r1,#(_ctimer_stop >> 8)
      000707 7As00            [12] 2388 	mov	r2,#(_ctimer_stop >> 16)
      000709 12r00r00         [24] 2389 	lcall	__sdcc_banked_call
      00070C                       2390 00106$:
      00070C 15 81            [12] 2391 	dec	sp
      00070E 15 81            [12] 2392 	dec	sp
      000710 15 81            [12] 2393 	dec	sp
      000712 02r00r00         [24] 2394 	ljmp	__sdcc_banked_ret
                                   2395 ;------------------------------------------------------------
                                   2396 ;Allocation info for local variables in function 'rpl_schedule_dao'
                                   2397 ;------------------------------------------------------------
                                   2398 ;instance                  Allocated to stack - sp -4
                                   2399 ;expiration_time           Allocated to stack - sp -1
                                   2400 ;------------------------------------------------------------
                                   2401 ;	../../../../core/net/rpl/rpl-timers.c:220: rpl_schedule_dao(rpl_instance_t *instance)
                                   2402 ;	-----------------------------------------
                                   2403 ;	 function rpl_schedule_dao
                                   2404 ;	-----------------------------------------
      000715                       2405 _rpl_schedule_dao:
      000715 C0 82            [24] 2406 	push	dpl
      000717 C0 83            [24] 2407 	push	dph
      000719 C0 F0            [24] 2408 	push	b
      00071B 05 81            [12] 2409 	inc	sp
      00071D 05 81            [12] 2410 	inc	sp
                                   2411 ;	../../../../core/net/rpl/rpl-timers.c:224: expiration_time = etimer_expiration_time(&instance->dao_timer.etimer);
      00071F E5 81            [12] 2412 	mov	a,sp
      000721 24 FC            [12] 2413 	add	a,#0xfc
      000723 F8               [12] 2414 	mov	r0,a
      000724 74 AF            [12] 2415 	mov	a,#0xAF
      000726 26               [12] 2416 	add	a,@r0
      000727 FA               [12] 2417 	mov	r2,a
      000728 E4               [12] 2418 	clr	a
      000729 08               [12] 2419 	inc	r0
      00072A 36               [12] 2420 	addc	a,@r0
      00072B FB               [12] 2421 	mov	r3,a
      00072C 08               [12] 2422 	inc	r0
      00072D 86 04            [24] 2423 	mov	ar4,@r0
      00072F 74 03            [12] 2424 	mov	a,#0x03
      000731 2A               [12] 2425 	add	a,r2
      000732 FD               [12] 2426 	mov	r5,a
      000733 E4               [12] 2427 	clr	a
      000734 3B               [12] 2428 	addc	a,r3
      000735 FE               [12] 2429 	mov	r6,a
      000736 8C 07            [24] 2430 	mov	ar7,r4
      000738 8D 82            [24] 2431 	mov	dpl,r5
      00073A 8E 83            [24] 2432 	mov	dph,r6
      00073C 8F F0            [24] 2433 	mov	b,r7
      00073E C0 04            [24] 2434 	push	ar4
      000740 C0 03            [24] 2435 	push	ar3
      000742 C0 02            [24] 2436 	push	ar2
      000744 78r00            [12] 2437 	mov	r0,#_etimer_expiration_time
      000746 79s00            [12] 2438 	mov	r1,#(_etimer_expiration_time >> 8)
      000748 7As00            [12] 2439 	mov	r2,#(_etimer_expiration_time >> 16)
      00074A 12r00r00         [24] 2440 	lcall	__sdcc_banked_call
      00074D D0 02            [24] 2441 	pop	ar2
      00074F D0 03            [24] 2442 	pop	ar3
      000751 D0 04            [24] 2443 	pop	ar4
                                   2444 ;	../../../../core/net/rpl/rpl-timers.c:226: if(!etimer_expired(&instance->dao_timer.etimer)) {
      000753 74 03            [12] 2445 	mov	a,#0x03
      000755 2A               [12] 2446 	add	a,r2
      000756 FD               [12] 2447 	mov	r5,a
      000757 E4               [12] 2448 	clr	a
      000758 3B               [12] 2449 	addc	a,r3
      000759 FE               [12] 2450 	mov	r6,a
      00075A 8C 07            [24] 2451 	mov	ar7,r4
      00075C 8D 82            [24] 2452 	mov	dpl,r5
      00075E 8E 83            [24] 2453 	mov	dph,r6
      000760 8F F0            [24] 2454 	mov	b,r7
      000762 C0 04            [24] 2455 	push	ar4
      000764 C0 03            [24] 2456 	push	ar3
      000766 C0 02            [24] 2457 	push	ar2
      000768 78r00            [12] 2458 	mov	r0,#_etimer_expired
      00076A 79s00            [12] 2459 	mov	r1,#(_etimer_expired >> 8)
      00076C 7As00            [12] 2460 	mov	r2,#(_etimer_expired >> 16)
      00076E 12r00r00         [24] 2461 	lcall	__sdcc_banked_call
      000771 E5 82            [12] 2462 	mov	a,dpl
      000773 85 83 F0         [24] 2463 	mov	b,dph
      000776 D0 02            [24] 2464 	pop	ar2
      000778 D0 03            [24] 2465 	pop	ar3
      00077A D0 04            [24] 2466 	pop	ar4
      00077C 45 F0            [12] 2467 	orl	a,b
      00077E 60 6A            [24] 2468 	jz	00104$
                                   2469 ;	../../../../core/net/rpl/rpl-timers.c:230: (random_rand() % (RPL_DAO_LATENCY));
      000780 C0 04            [24] 2470 	push	ar4
      000782 C0 03            [24] 2471 	push	ar3
      000784 C0 02            [24] 2472 	push	ar2
      000786 78r00            [12] 2473 	mov	r0,#_random_rand
      000788 79s00            [12] 2474 	mov	r1,#(_random_rand >> 8)
      00078A 7As00            [12] 2475 	mov	r2,#(_random_rand >> 16)
      00078C 12r00r00         [24] 2476 	lcall	__sdcc_banked_call
      00078F E5 82            [12] 2477 	mov	a,dpl
      000791 85 83 F0         [24] 2478 	mov	b,dph
      000794 D0 02            [24] 2479 	pop	ar2
      000796 D0 03            [24] 2480 	pop	ar3
      000798 D0 04            [24] 2481 	pop	ar4
      00079A FE               [12] 2482 	mov	r6,a
      00079B 53 F0 01         [24] 2483 	anl	b,#0x01
      00079E AF F0            [24] 2484 	mov	r7,b
      0007A0 A8 81            [24] 2485 	mov	r0,sp
      0007A2 18               [12] 2486 	dec	r0
      0007A3 A6 06            [24] 2487 	mov	@r0,ar6
      0007A5 74 01            [12] 2488 	mov	a,#0x01
      0007A7 2F               [12] 2489 	add	a,r7
      0007A8 08               [12] 2490 	inc	r0
      0007A9 F6               [12] 2491 	mov	@r0,a
                                   2492 ;	../../../../core/net/rpl/rpl-timers.c:234: handle_dao_timer, instance);
      0007AA E5 81            [12] 2493 	mov	a,sp
      0007AC 24 FC            [12] 2494 	add	a,#0xfc
      0007AE F8               [12] 2495 	mov	r0,a
      0007AF 86 05            [24] 2496 	mov	ar5,@r0
      0007B1 08               [12] 2497 	inc	r0
      0007B2 86 06            [24] 2498 	mov	ar6,@r0
      0007B4 08               [12] 2499 	inc	r0
      0007B5 86 07            [24] 2500 	mov	ar7,@r0
                                   2501 ;	../../../../core/net/rpl/rpl-timers.c:233: ctimer_set(&instance->dao_timer, expiration_time,
      0007B7 C0 05            [24] 2502 	push	ar5
      0007B9 C0 06            [24] 2503 	push	ar6
      0007BB C0 07            [24] 2504 	push	ar7
      0007BD 74rFF            [12] 2505 	mov	a,#_handle_dao_timer
      0007BF C0 E0            [24] 2506 	push	acc
      0007C1 74s05            [12] 2507 	mov	a,#(_handle_dao_timer >> 8)
      0007C3 C0 E0            [24] 2508 	push	acc
      0007C5 74s00            [12] 2509 	mov	a,#(_handle_dao_timer >> 16)
      0007C7 C0 E0            [24] 2510 	push	acc
      0007C9 E5 81            [12] 2511 	mov	a,sp
      0007CB 24 F9            [12] 2512 	add	a,#0xf9
      0007CD F8               [12] 2513 	mov	r0,a
      0007CE E6               [12] 2514 	mov	a,@r0
      0007CF C0 E0            [24] 2515 	push	acc
      0007D1 08               [12] 2516 	inc	r0
      0007D2 E6               [12] 2517 	mov	a,@r0
      0007D3 C0 E0            [24] 2518 	push	acc
      0007D5 8A 82            [24] 2519 	mov	dpl,r2
      0007D7 8B 83            [24] 2520 	mov	dph,r3
      0007D9 8C F0            [24] 2521 	mov	b,r4
      0007DB 78r00            [12] 2522 	mov	r0,#_ctimer_set
      0007DD 79s00            [12] 2523 	mov	r1,#(_ctimer_set >> 8)
      0007DF 7As00            [12] 2524 	mov	r2,#(_ctimer_set >> 16)
      0007E1 12r00r00         [24] 2525 	lcall	__sdcc_banked_call
      0007E4 E5 81            [12] 2526 	mov	a,sp
      0007E6 24 F8            [12] 2527 	add	a,#0xf8
      0007E8 F5 81            [12] 2528 	mov	sp,a
      0007EA                       2529 00104$:
      0007EA E5 81            [12] 2530 	mov	a,sp
      0007EC 24 FB            [12] 2531 	add	a,#0xFB
      0007EE F5 81            [12] 2532 	mov	sp,a
      0007F0 02r00r00         [24] 2533 	ljmp	__sdcc_banked_ret
                                   2534 	.area CSEG    (CODE)
                                   2535 	.area CONST   (CODE)
                                   2536 	.area XINIT   (CODE)
                                   2537 	.area CABS    (ABS,CODE)
