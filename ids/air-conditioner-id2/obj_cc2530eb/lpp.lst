                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8804 (Aug  6 2013) (Linux)
                                      4 ; This file was generated Mon Aug 25 04:16:20 2014
                                      5 ;--------------------------------------------------------
                                      6 	.module lpp
                                      7 	.optsdcc -mmcs51 --model-huge
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _lpp_driver
                                     13 	.globl _printf
                                     14 	.globl _compower_attrconv
                                     15 	.globl _compower_clear
                                     16 	.globl _compower_accumulate
                                     17 	.globl _queuebuf_addr
                                     18 	.globl _queuebuf_datalen
                                     19 	.globl _queuebuf_dataptr
                                     20 	.globl _queuebuf_free
                                     21 	.globl _queuebuf_to_packetbuf
                                     22 	.globl _queuebuf_new_from_packetbuf
                                     23 	.globl _packetbuf_addr
                                     24 	.globl _packetbuf_set_addr
                                     25 	.globl _packetbuf_attr
                                     26 	.globl _packetbuf_set_attr
                                     27 	.globl _packetbuf_hdrreduce
                                     28 	.globl _packetbuf_hdralloc
                                     29 	.globl _packetbuf_compact
                                     30 	.globl _packetbuf_set_datalen
                                     31 	.globl _packetbuf_totlen
                                     32 	.globl _packetbuf_datalen
                                     33 	.globl _packetbuf_hdrptr
                                     34 	.globl _packetbuf_dataptr
                                     35 	.globl _packetbuf_clear
                                     36 	.globl _ctimer_stop
                                     37 	.globl _ctimer_set
                                     38 	.globl _clock_time
                                     39 	.globl _announcement_register_listen_callback
                                     40 	.globl _announcement_list
                                     41 	.globl _rimeaddr_cmp
                                     42 	.globl _rimeaddr_copy
                                     43 	.globl _random_rand
                                     44 	.globl _memb_free
                                     45 	.globl _memb_alloc
                                     46 	.globl _memb_init
                                     47 	.globl _memcpy
                                     48 	.globl _list_item_next
                                     49 	.globl _list_length
                                     50 	.globl _list_remove
                                     51 	.globl _list_add
                                     52 	.globl _list_head
                                     53 	.globl _list_init
                                     54 	.globl _leds_toggle
                                     55 	.globl _leds_off
                                     56 	.globl _leds_on
                                     57 	.globl _ACTIVE
                                     58 	.globl _TX_BYTE
                                     59 	.globl _RX_BYTE
                                     60 	.globl _ERR
                                     61 	.globl _FE
                                     62 	.globl _SLAVE
                                     63 	.globl _RE
                                     64 	.globl _MODE
                                     65 	.globl _T3OVFIF
                                     66 	.globl _T3CH0IF
                                     67 	.globl _T3CH1IF
                                     68 	.globl _T4OVFIF
                                     69 	.globl _T4CH0IF
                                     70 	.globl _T4CH1IF
                                     71 	.globl _OVFIM
                                     72 	.globl _B_0
                                     73 	.globl _B_1
                                     74 	.globl _B_2
                                     75 	.globl _B_3
                                     76 	.globl _B_4
                                     77 	.globl _B_5
                                     78 	.globl _B_6
                                     79 	.globl _B_7
                                     80 	.globl _P2IF
                                     81 	.globl _UTX0IF
                                     82 	.globl _UTX1IF
                                     83 	.globl _P1IF
                                     84 	.globl _WDTIF
                                     85 	.globl _ACC_0
                                     86 	.globl _ACC_1
                                     87 	.globl _ACC_2
                                     88 	.globl _ACC_3
                                     89 	.globl _ACC_4
                                     90 	.globl _ACC_5
                                     91 	.globl _ACC_6
                                     92 	.globl _ACC_7
                                     93 	.globl _P
                                     94 	.globl _F1
                                     95 	.globl _OV
                                     96 	.globl _RS0
                                     97 	.globl _RS1
                                     98 	.globl _F0
                                     99 	.globl _AC
                                    100 	.globl _CY
                                    101 	.globl _DMAIF
                                    102 	.globl _T1IF
                                    103 	.globl _T2IF
                                    104 	.globl _T3IF
                                    105 	.globl _T4IF
                                    106 	.globl _P0IF
                                    107 	.globl _STIF
                                    108 	.globl _DMAIE
                                    109 	.globl _T1IE
                                    110 	.globl _T2IE
                                    111 	.globl _T3IE
                                    112 	.globl _T4IE
                                    113 	.globl _P0IE
                                    114 	.globl _RFERRIE
                                    115 	.globl _ADCIE
                                    116 	.globl _URX0IE
                                    117 	.globl _URX1IE
                                    118 	.globl _ENCIE
                                    119 	.globl _STIE
                                    120 	.globl _EA
                                    121 	.globl _P2_0
                                    122 	.globl _P2_1
                                    123 	.globl _P2_2
                                    124 	.globl _P2_3
                                    125 	.globl _P2_4
                                    126 	.globl _P2_5
                                    127 	.globl _P2_6
                                    128 	.globl _P2_7
                                    129 	.globl _ENCIF_0
                                    130 	.globl _ENCIF_1
                                    131 	.globl _P1_0
                                    132 	.globl _P1_1
                                    133 	.globl _P1_2
                                    134 	.globl _P1_3
                                    135 	.globl _P1_4
                                    136 	.globl _P1_5
                                    137 	.globl _P1_6
                                    138 	.globl _P1_7
                                    139 	.globl _IT0
                                    140 	.globl _RFERRIF
                                    141 	.globl _IT1
                                    142 	.globl _URX0IF
                                    143 	.globl _ADCIF
                                    144 	.globl _URX1IF
                                    145 	.globl _P0_0
                                    146 	.globl _P0_1
                                    147 	.globl _P0_2
                                    148 	.globl _P0_3
                                    149 	.globl _P0_4
                                    150 	.globl _P0_5
                                    151 	.globl _P0_6
                                    152 	.globl _P0_7
                                    153 	.globl _WDCTL
                                    154 	.globl _U1GCR
                                    155 	.globl _U1UCR
                                    156 	.globl _U1BAUD
                                    157 	.globl _U1DBUF
                                    158 	.globl _U1CSR
                                    159 	.globl _U0GCR
                                    160 	.globl _U0UCR
                                    161 	.globl _U0BAUD
                                    162 	.globl _U0DBUF
                                    163 	.globl _U0CSR
                                    164 	.globl _TIMIF
                                    165 	.globl _T4CC1
                                    166 	.globl _T4CCTL1
                                    167 	.globl _T4CC0
                                    168 	.globl _T4CCTL0
                                    169 	.globl _T4CTL
                                    170 	.globl _T4CNT
                                    171 	.globl _T3CC1
                                    172 	.globl _T3CCTL1
                                    173 	.globl _T3CC0
                                    174 	.globl _T3CCTL0
                                    175 	.globl _T3CTL
                                    176 	.globl _T3CNT
                                    177 	.globl _T2MSEL
                                    178 	.globl _T2IRQM
                                    179 	.globl _T2MOVF2
                                    180 	.globl _T2MOVF1
                                    181 	.globl _T2MOVF0
                                    182 	.globl _T2M1
                                    183 	.globl _T2M0
                                    184 	.globl _T2IRQF
                                    185 	.globl _T2EVTCFG
                                    186 	.globl _T2CTRL
                                    187 	.globl _T1STAT
                                    188 	.globl _T1CCTL2
                                    189 	.globl _T1CCTL1
                                    190 	.globl _T1CCTL0
                                    191 	.globl _T1CTL
                                    192 	.globl _T1CNTH
                                    193 	.globl _T1CNTL
                                    194 	.globl _T1CC2H
                                    195 	.globl _T1CC2L
                                    196 	.globl _T1CC1H
                                    197 	.globl _T1CC1L
                                    198 	.globl _T1CC0H
                                    199 	.globl _T1CC0L
                                    200 	.globl _CLKCONSTA
                                    201 	.globl _CLKCONCMD
                                    202 	.globl _SLEEPSTA
                                    203 	.globl _SLEEPCMD
                                    204 	.globl _STLOAD
                                    205 	.globl _ST2
                                    206 	.globl _ST1
                                    207 	.globl _ST0
                                    208 	.globl _RFERRF
                                    209 	.globl _RFIRQF0
                                    210 	.globl _RFST
                                    211 	.globl _RFD
                                    212 	.globl _RFIRQF1
                                    213 	.globl _PSBANK
                                    214 	.globl _FMAP
                                    215 	.globl _MEMCTR
                                    216 	.globl __XPAGE
                                    217 	.globl _MPAGE
                                    218 	.globl _PMUX
                                    219 	.globl _P2DIR
                                    220 	.globl _P1DIR
                                    221 	.globl _P0DIR
                                    222 	.globl _P2INP
                                    223 	.globl _P1INP
                                    224 	.globl _P2SEL
                                    225 	.globl _P1SEL
                                    226 	.globl _P0SEL
                                    227 	.globl _APCFG
                                    228 	.globl _PERCFG
                                    229 	.globl _P0INP
                                    230 	.globl _P2IEN
                                    231 	.globl _P1IEN
                                    232 	.globl _P0IEN
                                    233 	.globl _PICTL
                                    234 	.globl _P2IFG
                                    235 	.globl _P1IFG
                                    236 	.globl _P0IFG
                                    237 	.globl _DMAREQ
                                    238 	.globl _DMAARM
                                    239 	.globl _DMA0CFGH
                                    240 	.globl _DMA0CFGL
                                    241 	.globl _DMA1CFGH
                                    242 	.globl _DMA1CFGL
                                    243 	.globl _DMAIRQ
                                    244 	.globl _ENCCS
                                    245 	.globl _ENCDO
                                    246 	.globl _ENCDI
                                    247 	.globl _RNDH
                                    248 	.globl _RNDL
                                    249 	.globl _ADCH
                                    250 	.globl _ADCL
                                    251 	.globl _ADCCON3
                                    252 	.globl _ADCCON2
                                    253 	.globl _ADCCON1
                                    254 	.globl _B
                                    255 	.globl _IRCON2
                                    256 	.globl _ACC
                                    257 	.globl _PSW
                                    258 	.globl _IRCON
                                    259 	.globl _IP1
                                    260 	.globl _IEN1
                                    261 	.globl _IP0
                                    262 	.globl _IEN0
                                    263 	.globl _P2
                                    264 	.globl _S1CON
                                    265 	.globl _IEN2
                                    266 	.globl _S0CON
                                    267 	.globl _DPS
                                    268 	.globl _P1
                                    269 	.globl _TCON
                                    270 	.globl _PCON
                                    271 	.globl _DPH1
                                    272 	.globl _DPL1
                                    273 	.globl _DPH0
                                    274 	.globl _DPL0
                                    275 	.globl _SP
                                    276 	.globl _P0
                                    277 	.globl _X_IEEE_ADDR
                                    278 	.globl _X_INFOPAGE
                                    279 	.globl _X_P2DIR
                                    280 	.globl _X_P1DIR
                                    281 	.globl _X_P0DIR
                                    282 	.globl _X_U1GCR
                                    283 	.globl _X_U1UCR
                                    284 	.globl _X_U1BAUD
                                    285 	.globl _X_U1DBUF
                                    286 	.globl _X_U1CSR
                                    287 	.globl _X_P2INP
                                    288 	.globl _X_P1INP
                                    289 	.globl _X_P2SEL
                                    290 	.globl _X_P1SEL
                                    291 	.globl _X_P0SEL
                                    292 	.globl _X_APCFG
                                    293 	.globl _X_PERCFG
                                    294 	.globl _X_T4CC1
                                    295 	.globl _X_T4CCTL1
                                    296 	.globl _X_T4CC0
                                    297 	.globl _X_T4CCTL0
                                    298 	.globl _X_T4CTL
                                    299 	.globl _X_T4CNT
                                    300 	.globl _X_RFIRQF0
                                    301 	.globl _X_T1CCTL2
                                    302 	.globl _X_T1CCTL1
                                    303 	.globl _X_T1CCTL0
                                    304 	.globl _X_T1CTL
                                    305 	.globl _X_T1CNTH
                                    306 	.globl _X_T1CNTL
                                    307 	.globl _X_RFST
                                    308 	.globl _X_T1CC2H
                                    309 	.globl _X_T1CC2L
                                    310 	.globl _X_T1CC1H
                                    311 	.globl _X_T1CC1L
                                    312 	.globl _X_T1CC0H
                                    313 	.globl _X_T1CC0L
                                    314 	.globl _X_RFD
                                    315 	.globl _X_TIMIF
                                    316 	.globl _X_DMAREQ
                                    317 	.globl _X_DMAARM
                                    318 	.globl _X_DMA0CFGH
                                    319 	.globl _X_DMA0CFGL
                                    320 	.globl _X_DMA1CFGH
                                    321 	.globl _X_DMA1CFGL
                                    322 	.globl _X_DMAIRQ
                                    323 	.globl _X_T3CC1
                                    324 	.globl _X_T3CCTL1
                                    325 	.globl _X_T3CC0
                                    326 	.globl _X_T3CCTL0
                                    327 	.globl _X_T3CTL
                                    328 	.globl _X_T3CNT
                                    329 	.globl _X_WDCTL
                                    330 	.globl _X_MEMCTR
                                    331 	.globl _X_CLKCONCMD
                                    332 	.globl _X_U0GCR
                                    333 	.globl _X_U0UCR
                                    334 	.globl _X_T2MSEL
                                    335 	.globl _X_U0BAUD
                                    336 	.globl _X_U0DBUF
                                    337 	.globl _X_RFERRF
                                    338 	.globl _X_SLEEPCMD
                                    339 	.globl _X_RNDH
                                    340 	.globl _X_RNDL
                                    341 	.globl _X_ADCH
                                    342 	.globl _X_ADCL
                                    343 	.globl _X_ADCCON3
                                    344 	.globl _X_ADCCON2
                                    345 	.globl _X_ADCCON1
                                    346 	.globl _X_ENCCS
                                    347 	.globl _X_ENCDO
                                    348 	.globl _X_ENCDI
                                    349 	.globl _X_T1STAT
                                    350 	.globl _X_PMUX
                                    351 	.globl _X_STLOAD
                                    352 	.globl _X_P2IEN
                                    353 	.globl _X_P0IEN
                                    354 	.globl _X_T2IRQM
                                    355 	.globl _X_T2MOVF2
                                    356 	.globl _X_T2MOVF1
                                    357 	.globl _X_T2MOVF0
                                    358 	.globl _X_T2M1
                                    359 	.globl _X_T2M0
                                    360 	.globl _X_T2IRQF
                                    361 	.globl _X_P2
                                    362 	.globl _X_PSBANK
                                    363 	.globl _X_FMAP
                                    364 	.globl _X_CLKCONSTA
                                    365 	.globl _X_SLEEPSTA
                                    366 	.globl _X_T2EVTCFG
                                    367 	.globl _X_ST2
                                    368 	.globl _X_ST1
                                    369 	.globl _X_ST0
                                    370 	.globl _X_T2CTRL
                                    371 	.globl _X__XPAGE
                                    372 	.globl _X_MPAGE
                                    373 	.globl _X_RFIRQF1
                                    374 	.globl _X_P1
                                    375 	.globl _X_P0INP
                                    376 	.globl _X_P1IEN
                                    377 	.globl _X_PICTL
                                    378 	.globl _X_P2IFG
                                    379 	.globl _X_P1IFG
                                    380 	.globl _X_P0IFG
                                    381 	.globl _X_U0CSR
                                    382 	.globl _X_P0
                                    383 	.globl _USBF5
                                    384 	.globl _USBF4
                                    385 	.globl _USBF3
                                    386 	.globl _USBF2
                                    387 	.globl _USBF1
                                    388 	.globl _USBF0
                                    389 	.globl _USBCNTH
                                    390 	.globl _USBCNTL
                                    391 	.globl _USBCNT0
                                    392 	.globl _USBCSOH
                                    393 	.globl _USBCSOL
                                    394 	.globl _USBMAXO
                                    395 	.globl _USBCSIH
                                    396 	.globl _USBCSIL
                                    397 	.globl _USBCS0
                                    398 	.globl _USBMAXI
                                    399 	.globl _USBCTRL
                                    400 	.globl _USBINDEX
                                    401 	.globl _USBFRMH
                                    402 	.globl _USBFRML
                                    403 	.globl _USBCIE
                                    404 	.globl _USBOIE
                                    405 	.globl _USBIIE
                                    406 	.globl _USBCIF
                                    407 	.globl _USBOIF
                                    408 	.globl _USBIIF
                                    409 	.globl _USBPOW
                                    410 	.globl _USBADDR
                                    411 	.globl _CSPT
                                    412 	.globl _CSPZ
                                    413 	.globl _CSPY
                                    414 	.globl _CSPX
                                    415 	.globl _CSPSTAT
                                    416 	.globl _CSPCTRL
                                    417 	.globl _CSPPROG23
                                    418 	.globl _CSPPROG22
                                    419 	.globl _CSPPROG21
                                    420 	.globl _CSPPROG20
                                    421 	.globl _CSPPROG19
                                    422 	.globl _CSPPROG18
                                    423 	.globl _CSPPROG17
                                    424 	.globl _CSPPROG16
                                    425 	.globl _CSPPROG15
                                    426 	.globl _CSPPROG14
                                    427 	.globl _CSPPROG13
                                    428 	.globl _CSPPROG12
                                    429 	.globl _CSPPROG11
                                    430 	.globl _CSPPROG10
                                    431 	.globl _CSPPROG9
                                    432 	.globl _CSPPROG8
                                    433 	.globl _CSPPROG7
                                    434 	.globl _CSPPROG6
                                    435 	.globl _CSPPROG5
                                    436 	.globl _CSPPROG4
                                    437 	.globl _CSPPROG3
                                    438 	.globl _CSPPROG2
                                    439 	.globl _CSPPROG1
                                    440 	.globl _CSPPROG0
                                    441 	.globl _RFC_OBS_CTRL2
                                    442 	.globl _RFC_OBS_CTRL1
                                    443 	.globl _RFC_OBS_CTRL0
                                    444 	.globl _TXFILTCFG
                                    445 	.globl _PTEST1
                                    446 	.globl _PTEST0
                                    447 	.globl _ATEST
                                    448 	.globl _DACTEST2
                                    449 	.globl _DACTEST1
                                    450 	.globl _DACTEST0
                                    451 	.globl _MDMTEST1
                                    452 	.globl _MDMTEST0
                                    453 	.globl _ADCTEST2
                                    454 	.globl _ADCTEST1
                                    455 	.globl _ADCTEST0
                                    456 	.globl _AGCCTRL3
                                    457 	.globl _AGCCTRL2
                                    458 	.globl _AGCCTRL1
                                    459 	.globl _AGCCTRL0
                                    460 	.globl _FSCAL3
                                    461 	.globl _FSCAL2
                                    462 	.globl _FSCAL1
                                    463 	.globl _FSCAL0
                                    464 	.globl _FSCTRL
                                    465 	.globl _RXCTRL
                                    466 	.globl _FREQEST
                                    467 	.globl _MDMCTRL1
                                    468 	.globl _MDMCTRL0
                                    469 	.globl _RFRND
                                    470 	.globl _RFERRM
                                    471 	.globl _RFIRQM1
                                    472 	.globl _RFIRQM0
                                    473 	.globl _TXLAST_PTR
                                    474 	.globl _TXFIRST_PTR
                                    475 	.globl _RXP1_PTR
                                    476 	.globl _RXLAST_PTR
                                    477 	.globl _RXFIRST_PTR
                                    478 	.globl _TXFIFOCNT
                                    479 	.globl _RXFIFOCNT
                                    480 	.globl _RXFIRST
                                    481 	.globl _RSSISTAT
                                    482 	.globl _RSSI
                                    483 	.globl _CCACTRL1
                                    484 	.globl _CCACTRL0
                                    485 	.globl _FSMCTRL
                                    486 	.globl _FIFOPCTRL
                                    487 	.globl _FSMSTAT1
                                    488 	.globl _FSMSTAT0
                                    489 	.globl _TXCTRL
                                    490 	.globl _TXPOWER
                                    491 	.globl _FREQCTRL
                                    492 	.globl _FREQTUNE
                                    493 	.globl _RXMASKCLR
                                    494 	.globl _RXMASKSET
                                    495 	.globl _RXENABLE
                                    496 	.globl _FRMCTRL1
                                    497 	.globl _FRMCTRL0
                                    498 	.globl _SRCEXTEN2
                                    499 	.globl _SRCEXTEN1
                                    500 	.globl _SRCEXTEN0
                                    501 	.globl _SRCSHORTEN2
                                    502 	.globl _SRCSHORTEN1
                                    503 	.globl _SRCSHORTEN0
                                    504 	.globl _SRCMATCH
                                    505 	.globl _FRMFILT1
                                    506 	.globl _FRMFILT0
                                    507 	.globl _SHORT_ADDR1
                                    508 	.globl _SHORT_ADDR0
                                    509 	.globl _PAN_ID1
                                    510 	.globl _PAN_ID0
                                    511 	.globl _EXT_ADDR7
                                    512 	.globl _EXT_ADDR6
                                    513 	.globl _EXT_ADDR5
                                    514 	.globl _EXT_ADDR4
                                    515 	.globl _EXT_ADDR3
                                    516 	.globl _EXT_ADDR2
                                    517 	.globl _EXT_ADDR1
                                    518 	.globl _EXT_ADDR0
                                    519 	.globl _SRCSHORTPENDEN2
                                    520 	.globl _SRCSHORTPENDEN1
                                    521 	.globl _SRCSHORTPENDEN0
                                    522 	.globl _SRCEXTPENDEN2
                                    523 	.globl _SRCEXTPENDEN1
                                    524 	.globl _SRCEXTPENDEN0
                                    525 	.globl _SRCRESINDEX
                                    526 	.globl _SRCRESMASK2
                                    527 	.globl _SRCRESMASK1
                                    528 	.globl _SRCRESMASK0
                                    529 	.globl _SRC_ADDR_TABLE
                                    530 	.globl _TXFIFO
                                    531 	.globl _RXFIFO
                                    532 	.globl _RFCORE_RAM
                                    533 	.globl _CMPCTL
                                    534 	.globl _OPAMPS
                                    535 	.globl _OPAMPC
                                    536 	.globl _STCV2
                                    537 	.globl _STCV1
                                    538 	.globl _STCV0
                                    539 	.globl _STCS
                                    540 	.globl _STCC
                                    541 	.globl _T1CC4H
                                    542 	.globl _T1CC4L
                                    543 	.globl _T1CC3H
                                    544 	.globl _T1CC3L
                                    545 	.globl _XX_T1CC2H
                                    546 	.globl _XX_T1CC2L
                                    547 	.globl _XX_T1CC1H
                                    548 	.globl _XX_T1CC1L
                                    549 	.globl _XX_T1CC0H
                                    550 	.globl _XX_T1CC0L
                                    551 	.globl _T1CCTL4
                                    552 	.globl _T1CCTL3
                                    553 	.globl _XX_T1CCTL2
                                    554 	.globl _XX_T1CCTL1
                                    555 	.globl _XX_T1CCTL0
                                    556 	.globl _CLD
                                    557 	.globl _IRCTL
                                    558 	.globl _CHIPINFO1
                                    559 	.globl _CHIPINFO0
                                    560 	.globl _FWDATA
                                    561 	.globl _FADDRH
                                    562 	.globl _FADDRL
                                    563 	.globl _FCTL
                                    564 	.globl _IVCTRL
                                    565 	.globl _BATTMON
                                    566 	.globl _SRCRC
                                    567 	.globl _DBGDATA
                                    568 	.globl _TESTREG0
                                    569 	.globl _CHIPID
                                    570 	.globl _CHVER
                                    571 	.globl _OBSSEL5
                                    572 	.globl _OBSSEL4
                                    573 	.globl _OBSSEL3
                                    574 	.globl _OBSSEL2
                                    575 	.globl _OBSSEL1
                                    576 	.globl _OBSSEL0
                                    577 	.globl _I2CIO
                                    578 	.globl _I2CWC
                                    579 	.globl _I2CADDR
                                    580 	.globl _I2CDATA
                                    581 	.globl _I2CSTAT
                                    582 	.globl _I2CCFG
                                    583 	.globl _OPAMPMC
                                    584 	.globl _MONMUX
                                    585 ;--------------------------------------------------------
                                    586 ; special function registers
                                    587 ;--------------------------------------------------------
                                    588 	.area RSEG    (ABS,DATA)
      000000                        589 	.org 0x0000
                           000080   590 _P0	=	0x0080
                           000081   591 _SP	=	0x0081
                           000082   592 _DPL0	=	0x0082
                           000083   593 _DPH0	=	0x0083
                           000084   594 _DPL1	=	0x0084
                           000085   595 _DPH1	=	0x0085
                           000087   596 _PCON	=	0x0087
                           000088   597 _TCON	=	0x0088
                           000090   598 _P1	=	0x0090
                           000092   599 _DPS	=	0x0092
                           000098   600 _S0CON	=	0x0098
                           00009A   601 _IEN2	=	0x009a
                           00009B   602 _S1CON	=	0x009b
                           0000A0   603 _P2	=	0x00a0
                           0000A8   604 _IEN0	=	0x00a8
                           0000A9   605 _IP0	=	0x00a9
                           0000B8   606 _IEN1	=	0x00b8
                           0000B9   607 _IP1	=	0x00b9
                           0000C0   608 _IRCON	=	0x00c0
                           0000D0   609 _PSW	=	0x00d0
                           0000E0   610 _ACC	=	0x00e0
                           0000E8   611 _IRCON2	=	0x00e8
                           0000F0   612 _B	=	0x00f0
                           0000B4   613 _ADCCON1	=	0x00b4
                           0000B5   614 _ADCCON2	=	0x00b5
                           0000B6   615 _ADCCON3	=	0x00b6
                           0000BA   616 _ADCL	=	0x00ba
                           0000BB   617 _ADCH	=	0x00bb
                           0000BC   618 _RNDL	=	0x00bc
                           0000BD   619 _RNDH	=	0x00bd
                           0000B1   620 _ENCDI	=	0x00b1
                           0000B2   621 _ENCDO	=	0x00b2
                           0000B3   622 _ENCCS	=	0x00b3
                           0000D1   623 _DMAIRQ	=	0x00d1
                           0000D2   624 _DMA1CFGL	=	0x00d2
                           0000D3   625 _DMA1CFGH	=	0x00d3
                           0000D4   626 _DMA0CFGL	=	0x00d4
                           0000D5   627 _DMA0CFGH	=	0x00d5
                           0000D6   628 _DMAARM	=	0x00d6
                           0000D7   629 _DMAREQ	=	0x00d7
                           000089   630 _P0IFG	=	0x0089
                           00008A   631 _P1IFG	=	0x008a
                           00008B   632 _P2IFG	=	0x008b
                           00008C   633 _PICTL	=	0x008c
                           0000AB   634 _P0IEN	=	0x00ab
                           00008D   635 _P1IEN	=	0x008d
                           0000AC   636 _P2IEN	=	0x00ac
                           00008F   637 _P0INP	=	0x008f
                           0000F1   638 _PERCFG	=	0x00f1
                           0000F2   639 _APCFG	=	0x00f2
                           0000F3   640 _P0SEL	=	0x00f3
                           0000F4   641 _P1SEL	=	0x00f4
                           0000F5   642 _P2SEL	=	0x00f5
                           0000F6   643 _P1INP	=	0x00f6
                           0000F7   644 _P2INP	=	0x00f7
                           0000FD   645 _P0DIR	=	0x00fd
                           0000FE   646 _P1DIR	=	0x00fe
                           0000FF   647 _P2DIR	=	0x00ff
                           0000AE   648 _PMUX	=	0x00ae
                           000093   649 _MPAGE	=	0x0093
                           000093   650 __XPAGE	=	0x0093
                           0000C7   651 _MEMCTR	=	0x00c7
                           00009F   652 _FMAP	=	0x009f
                           00009F   653 _PSBANK	=	0x009f
                           000091   654 _RFIRQF1	=	0x0091
                           0000D9   655 _RFD	=	0x00d9
                           0000E1   656 _RFST	=	0x00e1
                           0000E9   657 _RFIRQF0	=	0x00e9
                           0000BF   658 _RFERRF	=	0x00bf
                           000095   659 _ST0	=	0x0095
                           000096   660 _ST1	=	0x0096
                           000097   661 _ST2	=	0x0097
                           0000AD   662 _STLOAD	=	0x00ad
                           0000BE   663 _SLEEPCMD	=	0x00be
                           00009D   664 _SLEEPSTA	=	0x009d
                           0000C6   665 _CLKCONCMD	=	0x00c6
                           00009E   666 _CLKCONSTA	=	0x009e
                           0000DA   667 _T1CC0L	=	0x00da
                           0000DB   668 _T1CC0H	=	0x00db
                           0000DC   669 _T1CC1L	=	0x00dc
                           0000DD   670 _T1CC1H	=	0x00dd
                           0000DE   671 _T1CC2L	=	0x00de
                           0000DF   672 _T1CC2H	=	0x00df
                           0000E2   673 _T1CNTL	=	0x00e2
                           0000E3   674 _T1CNTH	=	0x00e3
                           0000E4   675 _T1CTL	=	0x00e4
                           0000E5   676 _T1CCTL0	=	0x00e5
                           0000E6   677 _T1CCTL1	=	0x00e6
                           0000E7   678 _T1CCTL2	=	0x00e7
                           0000AF   679 _T1STAT	=	0x00af
                           000094   680 _T2CTRL	=	0x0094
                           00009C   681 _T2EVTCFG	=	0x009c
                           0000A1   682 _T2IRQF	=	0x00a1
                           0000A2   683 _T2M0	=	0x00a2
                           0000A3   684 _T2M1	=	0x00a3
                           0000A4   685 _T2MOVF0	=	0x00a4
                           0000A5   686 _T2MOVF1	=	0x00a5
                           0000A6   687 _T2MOVF2	=	0x00a6
                           0000A7   688 _T2IRQM	=	0x00a7
                           0000C3   689 _T2MSEL	=	0x00c3
                           0000CA   690 _T3CNT	=	0x00ca
                           0000CB   691 _T3CTL	=	0x00cb
                           0000CC   692 _T3CCTL0	=	0x00cc
                           0000CD   693 _T3CC0	=	0x00cd
                           0000CE   694 _T3CCTL1	=	0x00ce
                           0000CF   695 _T3CC1	=	0x00cf
                           0000EA   696 _T4CNT	=	0x00ea
                           0000EB   697 _T4CTL	=	0x00eb
                           0000EC   698 _T4CCTL0	=	0x00ec
                           0000ED   699 _T4CC0	=	0x00ed
                           0000EE   700 _T4CCTL1	=	0x00ee
                           0000EF   701 _T4CC1	=	0x00ef
                           0000D8   702 _TIMIF	=	0x00d8
                           000086   703 _U0CSR	=	0x0086
                           0000C1   704 _U0DBUF	=	0x00c1
                           0000C2   705 _U0BAUD	=	0x00c2
                           0000C4   706 _U0UCR	=	0x00c4
                           0000C5   707 _U0GCR	=	0x00c5
                           0000F8   708 _U1CSR	=	0x00f8
                           0000F9   709 _U1DBUF	=	0x00f9
                           0000FA   710 _U1BAUD	=	0x00fa
                           0000FB   711 _U1UCR	=	0x00fb
                           0000FC   712 _U1GCR	=	0x00fc
                           0000C9   713 _WDCTL	=	0x00c9
                                    714 ;--------------------------------------------------------
                                    715 ; special function bits
                                    716 ;--------------------------------------------------------
                                    717 	.area RSEG    (ABS,DATA)
      000000                        718 	.org 0x0000
                           000087   719 _P0_7	=	0x0087
                           000086   720 _P0_6	=	0x0086
                           000085   721 _P0_5	=	0x0085
                           000084   722 _P0_4	=	0x0084
                           000083   723 _P0_3	=	0x0083
                           000082   724 _P0_2	=	0x0082
                           000081   725 _P0_1	=	0x0081
                           000080   726 _P0_0	=	0x0080
                           00008F   727 _URX1IF	=	0x008f
                           00008D   728 _ADCIF	=	0x008d
                           00008B   729 _URX0IF	=	0x008b
                           00008A   730 _IT1	=	0x008a
                           000089   731 _RFERRIF	=	0x0089
                           000088   732 _IT0	=	0x0088
                           000097   733 _P1_7	=	0x0097
                           000096   734 _P1_6	=	0x0096
                           000095   735 _P1_5	=	0x0095
                           000094   736 _P1_4	=	0x0094
                           000093   737 _P1_3	=	0x0093
                           000092   738 _P1_2	=	0x0092
                           000091   739 _P1_1	=	0x0091
                           000090   740 _P1_0	=	0x0090
                           000099   741 _ENCIF_1	=	0x0099
                           000098   742 _ENCIF_0	=	0x0098
                           0000A7   743 _P2_7	=	0x00a7
                           0000A6   744 _P2_6	=	0x00a6
                           0000A5   745 _P2_5	=	0x00a5
                           0000A4   746 _P2_4	=	0x00a4
                           0000A3   747 _P2_3	=	0x00a3
                           0000A2   748 _P2_2	=	0x00a2
                           0000A1   749 _P2_1	=	0x00a1
                           0000A0   750 _P2_0	=	0x00a0
                           0000AF   751 _EA	=	0x00af
                           0000AD   752 _STIE	=	0x00ad
                           0000AC   753 _ENCIE	=	0x00ac
                           0000AB   754 _URX1IE	=	0x00ab
                           0000AA   755 _URX0IE	=	0x00aa
                           0000A9   756 _ADCIE	=	0x00a9
                           0000A8   757 _RFERRIE	=	0x00a8
                           0000BD   758 _P0IE	=	0x00bd
                           0000BC   759 _T4IE	=	0x00bc
                           0000BB   760 _T3IE	=	0x00bb
                           0000BA   761 _T2IE	=	0x00ba
                           0000B9   762 _T1IE	=	0x00b9
                           0000B8   763 _DMAIE	=	0x00b8
                           0000C7   764 _STIF	=	0x00c7
                           0000C5   765 _P0IF	=	0x00c5
                           0000C4   766 _T4IF	=	0x00c4
                           0000C3   767 _T3IF	=	0x00c3
                           0000C2   768 _T2IF	=	0x00c2
                           0000C1   769 _T1IF	=	0x00c1
                           0000C0   770 _DMAIF	=	0x00c0
                           0000D7   771 _CY	=	0x00d7
                           0000D6   772 _AC	=	0x00d6
                           0000D5   773 _F0	=	0x00d5
                           0000D4   774 _RS1	=	0x00d4
                           0000D3   775 _RS0	=	0x00d3
                           0000D2   776 _OV	=	0x00d2
                           0000D1   777 _F1	=	0x00d1
                           0000D0   778 _P	=	0x00d0
                           0000E7   779 _ACC_7	=	0x00e7
                           0000E6   780 _ACC_6	=	0x00e6
                           0000E5   781 _ACC_5	=	0x00e5
                           0000E4   782 _ACC_4	=	0x00e4
                           0000E3   783 _ACC_3	=	0x00e3
                           0000E2   784 _ACC_2	=	0x00e2
                           0000E1   785 _ACC_1	=	0x00e1
                           0000E0   786 _ACC_0	=	0x00e0
                           0000EC   787 _WDTIF	=	0x00ec
                           0000EB   788 _P1IF	=	0x00eb
                           0000EA   789 _UTX1IF	=	0x00ea
                           0000E9   790 _UTX0IF	=	0x00e9
                           0000E8   791 _P2IF	=	0x00e8
                           0000F7   792 _B_7	=	0x00f7
                           0000F6   793 _B_6	=	0x00f6
                           0000F5   794 _B_5	=	0x00f5
                           0000F4   795 _B_4	=	0x00f4
                           0000F3   796 _B_3	=	0x00f3
                           0000F2   797 _B_2	=	0x00f2
                           0000F1   798 _B_1	=	0x00f1
                           0000F0   799 _B_0	=	0x00f0
                           0000DE   800 _OVFIM	=	0x00de
                           0000DD   801 _T4CH1IF	=	0x00dd
                           0000DC   802 _T4CH0IF	=	0x00dc
                           0000DB   803 _T4OVFIF	=	0x00db
                           0000DA   804 _T3CH1IF	=	0x00da
                           0000D9   805 _T3CH0IF	=	0x00d9
                           0000D8   806 _T3OVFIF	=	0x00d8
                           0000FF   807 _MODE	=	0x00ff
                           0000FE   808 _RE	=	0x00fe
                           0000FD   809 _SLAVE	=	0x00fd
                           0000FC   810 _FE	=	0x00fc
                           0000FB   811 _ERR	=	0x00fb
                           0000FA   812 _RX_BYTE	=	0x00fa
                           0000F9   813 _TX_BYTE	=	0x00f9
                           0000F8   814 _ACTIVE	=	0x00f8
                                    815 ;--------------------------------------------------------
                                    816 ; overlayable register banks
                                    817 ;--------------------------------------------------------
                                    818 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        819 	.ds 8
                                    820 ;--------------------------------------------------------
                                    821 ; internal ram data
                                    822 ;--------------------------------------------------------
                                    823 	.area DSEG    (DATA)
                                    824 ;--------------------------------------------------------
                                    825 ; overlayable items in internal ram 
                                    826 ;--------------------------------------------------------
                                    827 ;--------------------------------------------------------
                                    828 ; indirectly addressable internal ram data
                                    829 ;--------------------------------------------------------
                                    830 	.area ISEG    (DATA)
                                    831 ;--------------------------------------------------------
                                    832 ; absolute internal ram data
                                    833 ;--------------------------------------------------------
                                    834 	.area IABS    (ABS,DATA)
                                    835 	.area IABS    (ABS,DATA)
                                    836 ;--------------------------------------------------------
                                    837 ; bit data
                                    838 ;--------------------------------------------------------
                                    839 	.area BSEG    (BIT)
                                    840 ;--------------------------------------------------------
                                    841 ; paged external ram data
                                    842 ;--------------------------------------------------------
                                    843 	.area PSEG    (PAG,XDATA)
                                    844 ;--------------------------------------------------------
                                    845 ; external ram data
                                    846 ;--------------------------------------------------------
                                    847 	.area XSEG    (XDATA)
                           0061A6   848 _MONMUX	=	0x61a6
                           0061A6   849 _OPAMPMC	=	0x61a6
                           006230   850 _I2CCFG	=	0x6230
                           006231   851 _I2CSTAT	=	0x6231
                           006232   852 _I2CDATA	=	0x6232
                           006233   853 _I2CADDR	=	0x6233
                           006234   854 _I2CWC	=	0x6234
                           006235   855 _I2CIO	=	0x6235
                           006243   856 _OBSSEL0	=	0x6243
                           006244   857 _OBSSEL1	=	0x6244
                           006245   858 _OBSSEL2	=	0x6245
                           006246   859 _OBSSEL3	=	0x6246
                           006247   860 _OBSSEL4	=	0x6247
                           006248   861 _OBSSEL5	=	0x6248
                           006249   862 _CHVER	=	0x6249
                           00624A   863 _CHIPID	=	0x624a
                           00624B   864 _TESTREG0	=	0x624b
                           006260   865 _DBGDATA	=	0x6260
                           006262   866 _SRCRC	=	0x6262
                           006264   867 _BATTMON	=	0x6264
                           006265   868 _IVCTRL	=	0x6265
                           006270   869 _FCTL	=	0x6270
                           006271   870 _FADDRL	=	0x6271
                           006272   871 _FADDRH	=	0x6272
                           006273   872 _FWDATA	=	0x6273
                           006276   873 _CHIPINFO0	=	0x6276
                           006277   874 _CHIPINFO1	=	0x6277
                           006281   875 _IRCTL	=	0x6281
                           006290   876 _CLD	=	0x6290
                           0062A0   877 _XX_T1CCTL0	=	0x62a0
                           0062A1   878 _XX_T1CCTL1	=	0x62a1
                           0062A2   879 _XX_T1CCTL2	=	0x62a2
                           0062A3   880 _T1CCTL3	=	0x62a3
                           0062A4   881 _T1CCTL4	=	0x62a4
                           0062A6   882 _XX_T1CC0L	=	0x62a6
                           0062A7   883 _XX_T1CC0H	=	0x62a7
                           0062A8   884 _XX_T1CC1L	=	0x62a8
                           0062A9   885 _XX_T1CC1H	=	0x62a9
                           0062AA   886 _XX_T1CC2L	=	0x62aa
                           0062AB   887 _XX_T1CC2H	=	0x62ab
                           0062AC   888 _T1CC3L	=	0x62ac
                           0062AD   889 _T1CC3H	=	0x62ad
                           0062AE   890 _T1CC4L	=	0x62ae
                           0062AF   891 _T1CC4H	=	0x62af
                           0062B0   892 _STCC	=	0x62b0
                           0062B1   893 _STCS	=	0x62b1
                           0062B2   894 _STCV0	=	0x62b2
                           0062B3   895 _STCV1	=	0x62b3
                           0062B4   896 _STCV2	=	0x62b4
                           0062C0   897 _OPAMPC	=	0x62c0
                           0062C1   898 _OPAMPS	=	0x62c1
                           0062D0   899 _CMPCTL	=	0x62d0
                           006000   900 _RFCORE_RAM	=	0x6000
                           006000   901 _RXFIFO	=	0x6000
                           006080   902 _TXFIFO	=	0x6080
                           006100   903 _SRC_ADDR_TABLE	=	0x6100
                           006160   904 _SRCRESMASK0	=	0x6160
                           006161   905 _SRCRESMASK1	=	0x6161
                           006162   906 _SRCRESMASK2	=	0x6162
                           006163   907 _SRCRESINDEX	=	0x6163
                           006164   908 _SRCEXTPENDEN0	=	0x6164
                           006165   909 _SRCEXTPENDEN1	=	0x6165
                           006166   910 _SRCEXTPENDEN2	=	0x6166
                           006167   911 _SRCSHORTPENDEN0	=	0x6167
                           006168   912 _SRCSHORTPENDEN1	=	0x6168
                           006169   913 _SRCSHORTPENDEN2	=	0x6169
                           00616A   914 _EXT_ADDR0	=	0x616a
                           00616B   915 _EXT_ADDR1	=	0x616b
                           00616C   916 _EXT_ADDR2	=	0x616c
                           00616D   917 _EXT_ADDR3	=	0x616d
                           00616E   918 _EXT_ADDR4	=	0x616e
                           00616F   919 _EXT_ADDR5	=	0x616f
                           006170   920 _EXT_ADDR6	=	0x6170
                           006171   921 _EXT_ADDR7	=	0x6171
                           006172   922 _PAN_ID0	=	0x6172
                           006173   923 _PAN_ID1	=	0x6173
                           006174   924 _SHORT_ADDR0	=	0x6174
                           006175   925 _SHORT_ADDR1	=	0x6175
                           006180   926 _FRMFILT0	=	0x6180
                           006181   927 _FRMFILT1	=	0x6181
                           006182   928 _SRCMATCH	=	0x6182
                           006183   929 _SRCSHORTEN0	=	0x6183
                           006184   930 _SRCSHORTEN1	=	0x6184
                           006185   931 _SRCSHORTEN2	=	0x6185
                           006186   932 _SRCEXTEN0	=	0x6186
                           006187   933 _SRCEXTEN1	=	0x6187
                           006188   934 _SRCEXTEN2	=	0x6188
                           006189   935 _FRMCTRL0	=	0x6189
                           00618A   936 _FRMCTRL1	=	0x618a
                           00618B   937 _RXENABLE	=	0x618b
                           00618C   938 _RXMASKSET	=	0x618c
                           00618D   939 _RXMASKCLR	=	0x618d
                           00618E   940 _FREQTUNE	=	0x618e
                           00618F   941 _FREQCTRL	=	0x618f
                           006190   942 _TXPOWER	=	0x6190
                           006191   943 _TXCTRL	=	0x6191
                           006192   944 _FSMSTAT0	=	0x6192
                           006193   945 _FSMSTAT1	=	0x6193
                           006194   946 _FIFOPCTRL	=	0x6194
                           006195   947 _FSMCTRL	=	0x6195
                           006196   948 _CCACTRL0	=	0x6196
                           006197   949 _CCACTRL1	=	0x6197
                           006198   950 _RSSI	=	0x6198
                           006199   951 _RSSISTAT	=	0x6199
                           00619A   952 _RXFIRST	=	0x619a
                           00619B   953 _RXFIFOCNT	=	0x619b
                           00619C   954 _TXFIFOCNT	=	0x619c
                           00619D   955 _RXFIRST_PTR	=	0x619d
                           00619E   956 _RXLAST_PTR	=	0x619e
                           00619F   957 _RXP1_PTR	=	0x619f
                           0061A1   958 _TXFIRST_PTR	=	0x61a1
                           0061A2   959 _TXLAST_PTR	=	0x61a2
                           0061A3   960 _RFIRQM0	=	0x61a3
                           0061A4   961 _RFIRQM1	=	0x61a4
                           0061A5   962 _RFERRM	=	0x61a5
                           0061A7   963 _RFRND	=	0x61a7
                           0061A8   964 _MDMCTRL0	=	0x61a8
                           0061A9   965 _MDMCTRL1	=	0x61a9
                           0061AA   966 _FREQEST	=	0x61aa
                           0061AB   967 _RXCTRL	=	0x61ab
                           0061AC   968 _FSCTRL	=	0x61ac
                           0061AD   969 _FSCAL0	=	0x61ad
                           0061AE   970 _FSCAL1	=	0x61ae
                           0061AF   971 _FSCAL2	=	0x61af
                           0061B0   972 _FSCAL3	=	0x61b0
                           0061B1   973 _AGCCTRL0	=	0x61b1
                           0061B2   974 _AGCCTRL1	=	0x61b2
                           0061B3   975 _AGCCTRL2	=	0x61b3
                           0061B4   976 _AGCCTRL3	=	0x61b4
                           0061B5   977 _ADCTEST0	=	0x61b5
                           0061B6   978 _ADCTEST1	=	0x61b6
                           0061B7   979 _ADCTEST2	=	0x61b7
                           0061B8   980 _MDMTEST0	=	0x61b8
                           0061B9   981 _MDMTEST1	=	0x61b9
                           0061BA   982 _DACTEST0	=	0x61ba
                           0061BB   983 _DACTEST1	=	0x61bb
                           0061BC   984 _DACTEST2	=	0x61bc
                           0061BD   985 _ATEST	=	0x61bd
                           0061BE   986 _PTEST0	=	0x61be
                           0061BF   987 _PTEST1	=	0x61bf
                           0061FA   988 _TXFILTCFG	=	0x61fa
                           0061EB   989 _RFC_OBS_CTRL0	=	0x61eb
                           0061EC   990 _RFC_OBS_CTRL1	=	0x61ec
                           0061ED   991 _RFC_OBS_CTRL2	=	0x61ed
                           0061C0   992 _CSPPROG0	=	0x61c0
                           0061C1   993 _CSPPROG1	=	0x61c1
                           0061C2   994 _CSPPROG2	=	0x61c2
                           0061C3   995 _CSPPROG3	=	0x61c3
                           0061C4   996 _CSPPROG4	=	0x61c4
                           0061C5   997 _CSPPROG5	=	0x61c5
                           0061C6   998 _CSPPROG6	=	0x61c6
                           0061C7   999 _CSPPROG7	=	0x61c7
                           0061C8  1000 _CSPPROG8	=	0x61c8
                           0061C9  1001 _CSPPROG9	=	0x61c9
                           0061CA  1002 _CSPPROG10	=	0x61ca
                           0061CB  1003 _CSPPROG11	=	0x61cb
                           0061CC  1004 _CSPPROG12	=	0x61cc
                           0061CD  1005 _CSPPROG13	=	0x61cd
                           0061CE  1006 _CSPPROG14	=	0x61ce
                           0061CF  1007 _CSPPROG15	=	0x61cf
                           0061D0  1008 _CSPPROG16	=	0x61d0
                           0061D1  1009 _CSPPROG17	=	0x61d1
                           0061D2  1010 _CSPPROG18	=	0x61d2
                           0061D3  1011 _CSPPROG19	=	0x61d3
                           0061D4  1012 _CSPPROG20	=	0x61d4
                           0061D5  1013 _CSPPROG21	=	0x61d5
                           0061D6  1014 _CSPPROG22	=	0x61d6
                           0061D7  1015 _CSPPROG23	=	0x61d7
                           0061E0  1016 _CSPCTRL	=	0x61e0
                           0061E1  1017 _CSPSTAT	=	0x61e1
                           0061E2  1018 _CSPX	=	0x61e2
                           0061E3  1019 _CSPY	=	0x61e3
                           0061E4  1020 _CSPZ	=	0x61e4
                           0061E5  1021 _CSPT	=	0x61e5
                           006200  1022 _USBADDR	=	0x6200
                           006201  1023 _USBPOW	=	0x6201
                           006202  1024 _USBIIF	=	0x6202
                           006204  1025 _USBOIF	=	0x6204
                           006206  1026 _USBCIF	=	0x6206
                           006207  1027 _USBIIE	=	0x6207
                           006209  1028 _USBOIE	=	0x6209
                           00620B  1029 _USBCIE	=	0x620b
                           00620C  1030 _USBFRML	=	0x620c
                           00620D  1031 _USBFRMH	=	0x620d
                           00620E  1032 _USBINDEX	=	0x620e
                           00620F  1033 _USBCTRL	=	0x620f
                           006210  1034 _USBMAXI	=	0x6210
                           006211  1035 _USBCS0	=	0x6211
                           006211  1036 _USBCSIL	=	0x6211
                           006212  1037 _USBCSIH	=	0x6212
                           006213  1038 _USBMAXO	=	0x6213
                           006214  1039 _USBCSOL	=	0x6214
                           006215  1040 _USBCSOH	=	0x6215
                           006216  1041 _USBCNT0	=	0x6216
                           006216  1042 _USBCNTL	=	0x6216
                           006217  1043 _USBCNTH	=	0x6217
                           006220  1044 _USBF0	=	0x6220
                           006222  1045 _USBF1	=	0x6222
                           006224  1046 _USBF2	=	0x6224
                           006226  1047 _USBF3	=	0x6226
                           006228  1048 _USBF4	=	0x6228
                           00622A  1049 _USBF5	=	0x622a
                           007080  1050 _X_P0	=	0x7080
                           007086  1051 _X_U0CSR	=	0x7086
                           007089  1052 _X_P0IFG	=	0x7089
                           00708A  1053 _X_P1IFG	=	0x708a
                           00708B  1054 _X_P2IFG	=	0x708b
                           00708C  1055 _X_PICTL	=	0x708c
                           00708D  1056 _X_P1IEN	=	0x708d
                           00708F  1057 _X_P0INP	=	0x708f
                           007090  1058 _X_P1	=	0x7090
                           007091  1059 _X_RFIRQF1	=	0x7091
                           007093  1060 _X_MPAGE	=	0x7093
                           007093  1061 _X__XPAGE	=	0x7093
                           007094  1062 _X_T2CTRL	=	0x7094
                           007095  1063 _X_ST0	=	0x7095
                           007096  1064 _X_ST1	=	0x7096
                           007097  1065 _X_ST2	=	0x7097
                           00709C  1066 _X_T2EVTCFG	=	0x709c
                           00709D  1067 _X_SLEEPSTA	=	0x709d
                           00709E  1068 _X_CLKCONSTA	=	0x709e
                           00709F  1069 _X_FMAP	=	0x709f
                           00709F  1070 _X_PSBANK	=	0x709f
                           0070A0  1071 _X_P2	=	0x70a0
                           0070A1  1072 _X_T2IRQF	=	0x70a1
                           0070A2  1073 _X_T2M0	=	0x70a2
                           0070A3  1074 _X_T2M1	=	0x70a3
                           0070A4  1075 _X_T2MOVF0	=	0x70a4
                           0070A5  1076 _X_T2MOVF1	=	0x70a5
                           0070A6  1077 _X_T2MOVF2	=	0x70a6
                           0070A7  1078 _X_T2IRQM	=	0x70a7
                           0070AB  1079 _X_P0IEN	=	0x70ab
                           0070AC  1080 _X_P2IEN	=	0x70ac
                           0070AD  1081 _X_STLOAD	=	0x70ad
                           0070AE  1082 _X_PMUX	=	0x70ae
                           0070AF  1083 _X_T1STAT	=	0x70af
                           0070B1  1084 _X_ENCDI	=	0x70b1
                           0070B2  1085 _X_ENCDO	=	0x70b2
                           0070B3  1086 _X_ENCCS	=	0x70b3
                           0070B4  1087 _X_ADCCON1	=	0x70b4
                           0070B5  1088 _X_ADCCON2	=	0x70b5
                           0070B6  1089 _X_ADCCON3	=	0x70b6
                           0070BA  1090 _X_ADCL	=	0x70ba
                           0070BB  1091 _X_ADCH	=	0x70bb
                           0070BC  1092 _X_RNDL	=	0x70bc
                           0070BD  1093 _X_RNDH	=	0x70bd
                           0070BE  1094 _X_SLEEPCMD	=	0x70be
                           0070BF  1095 _X_RFERRF	=	0x70bf
                           0070C1  1096 _X_U0DBUF	=	0x70c1
                           0070C2  1097 _X_U0BAUD	=	0x70c2
                           0070C3  1098 _X_T2MSEL	=	0x70c3
                           0070C4  1099 _X_U0UCR	=	0x70c4
                           0070C5  1100 _X_U0GCR	=	0x70c5
                           0070C6  1101 _X_CLKCONCMD	=	0x70c6
                           0070C7  1102 _X_MEMCTR	=	0x70c7
                           0070C9  1103 _X_WDCTL	=	0x70c9
                           0070CA  1104 _X_T3CNT	=	0x70ca
                           0070CB  1105 _X_T3CTL	=	0x70cb
                           0070CC  1106 _X_T3CCTL0	=	0x70cc
                           0070CD  1107 _X_T3CC0	=	0x70cd
                           0070CE  1108 _X_T3CCTL1	=	0x70ce
                           0070CF  1109 _X_T3CC1	=	0x70cf
                           0070D1  1110 _X_DMAIRQ	=	0x70d1
                           0070D2  1111 _X_DMA1CFGL	=	0x70d2
                           0070D3  1112 _X_DMA1CFGH	=	0x70d3
                           0070D4  1113 _X_DMA0CFGL	=	0x70d4
                           0070D5  1114 _X_DMA0CFGH	=	0x70d5
                           0070D6  1115 _X_DMAARM	=	0x70d6
                           0070D7  1116 _X_DMAREQ	=	0x70d7
                           0070D8  1117 _X_TIMIF	=	0x70d8
                           0070D9  1118 _X_RFD	=	0x70d9
                           0070DA  1119 _X_T1CC0L	=	0x70da
                           0070DB  1120 _X_T1CC0H	=	0x70db
                           0070DC  1121 _X_T1CC1L	=	0x70dc
                           0070DD  1122 _X_T1CC1H	=	0x70dd
                           0070DE  1123 _X_T1CC2L	=	0x70de
                           0070DF  1124 _X_T1CC2H	=	0x70df
                           0070E1  1125 _X_RFST	=	0x70e1
                           0070E2  1126 _X_T1CNTL	=	0x70e2
                           0070E3  1127 _X_T1CNTH	=	0x70e3
                           0070E4  1128 _X_T1CTL	=	0x70e4
                           0070E5  1129 _X_T1CCTL0	=	0x70e5
                           0070E6  1130 _X_T1CCTL1	=	0x70e6
                           0070E7  1131 _X_T1CCTL2	=	0x70e7
                           0070E9  1132 _X_RFIRQF0	=	0x70e9
                           0070EA  1133 _X_T4CNT	=	0x70ea
                           0070EB  1134 _X_T4CTL	=	0x70eb
                           0070EC  1135 _X_T4CCTL0	=	0x70ec
                           0070ED  1136 _X_T4CC0	=	0x70ed
                           0070EE  1137 _X_T4CCTL1	=	0x70ee
                           0070EF  1138 _X_T4CC1	=	0x70ef
                           0070F1  1139 _X_PERCFG	=	0x70f1
                           0070F2  1140 _X_APCFG	=	0x70f2
                           0070F3  1141 _X_P0SEL	=	0x70f3
                           0070F4  1142 _X_P1SEL	=	0x70f4
                           0070F5  1143 _X_P2SEL	=	0x70f5
                           0070F6  1144 _X_P1INP	=	0x70f6
                           0070F7  1145 _X_P2INP	=	0x70f7
                           0070F8  1146 _X_U1CSR	=	0x70f8
                           0070F9  1147 _X_U1DBUF	=	0x70f9
                           0070FA  1148 _X_U1BAUD	=	0x70fa
                           0070FB  1149 _X_U1UCR	=	0x70fb
                           0070FC  1150 _X_U1GCR	=	0x70fc
                           0070FD  1151 _X_P0DIR	=	0x70fd
                           0070FE  1152 _X_P1DIR	=	0x70fe
                           0070FF  1153 _X_P2DIR	=	0x70ff
                           007800  1154 _X_INFOPAGE	=	0x7800
                           00780C  1155 _X_IEEE_ADDR	=	0x780c
      000000                       1156 _lpp_is_on:
      000000                       1157 	.ds 1
      000001                       1158 _current_packet:
      000001                       1159 	.ds 8
      000009                       1160 _dutycycle_pt:
      000009                       1161 	.ds 2
      00000B                       1162 _timer:
      00000B                       1163 	.ds 22
      000021                       1164 _queued_packets_memb_memb_count:
      000021                       1165 	.ds 3
      000024                       1166 _queued_packets_memb_memb_mem:
      000024                       1167 	.ds 129
      0000A5                       1168 _encounter_memb_memb_count:
      0000A5                       1169 	.ds 4
      0000A9                       1170 _encounter_memb_memb_mem:
      0000A9                       1171 	.ds 228
      00018D                       1172 _stream_probe_timer:
      00018D                       1173 	.ds 22
      0001A3                       1174 _stream_off_timer:
      0001A3                       1175 	.ds 22
                                   1176 ;--------------------------------------------------------
                                   1177 ; absolute external ram data
                                   1178 ;--------------------------------------------------------
                                   1179 	.area XABS    (ABS,XDATA)
                                   1180 ;--------------------------------------------------------
                                   1181 ; external initialized ram data
                                   1182 ;--------------------------------------------------------
                                   1183 	.area XISEG   (XDATA)
      000000                       1184 _is_listening:
      000000                       1185 	.ds 1
      000001                       1186 _off_time_adjustment:
      000001                       1187 	.ds 2
      000003                       1188 _off_time:
      000003                       1189 	.ds 2
      000005                       1190 _pending_packets_list_list:
      000005                       1191 	.ds 3
      000008                       1192 _pending_packets_list:
      000008                       1193 	.ds 3
      00000B                       1194 _queued_packets_list_list:
      00000B                       1195 	.ds 3
      00000E                       1196 _queued_packets_list:
      00000E                       1197 	.ds 3
      000011                       1198 _queued_packets_memb:
      000011                       1199 	.ds 10
      00001B                       1200 _encounter_list_list:
      00001B                       1201 	.ds 3
      00001E                       1202 _encounter_list:
      00001E                       1203 	.ds 3
      000021                       1204 _encounter_memb:
      000021                       1205 	.ds 10
      00002B                       1206 _is_streaming:
      00002B                       1207 	.ds 1
                                   1208 	.area HOME    (CODE)
                                   1209 	.area GSINIT0 (CODE)
                                   1210 	.area GSINIT1 (CODE)
                                   1211 	.area GSINIT2 (CODE)
                                   1212 	.area GSINIT3 (CODE)
                                   1213 	.area GSINIT4 (CODE)
                                   1214 	.area GSINIT5 (CODE)
                                   1215 	.area GSINIT  (CODE)
                                   1216 	.area GSFINAL (CODE)
                                   1217 	.area CSEG    (CODE)
                                   1218 ;--------------------------------------------------------
                                   1219 ; global & static initialisations
                                   1220 ;--------------------------------------------------------
                                   1221 	.area HOME    (CODE)
                                   1222 	.area GSINIT  (CODE)
                                   1223 	.area GSFINAL (CODE)
                                   1224 	.area GSINIT  (CODE)
                                   1225 ;--------------------------------------------------------
                                   1226 ; Home
                                   1227 ;--------------------------------------------------------
                                   1228 	.area HOME    (CODE)
                                   1229 	.area HOME    (CODE)
                                   1230 ;--------------------------------------------------------
                                   1231 ; code
                                   1232 ;--------------------------------------------------------
                                   1233 	.area BANK1   (CODE)
                                   1234 ;------------------------------------------------------------
                                   1235 ;Allocation info for local variables in function 'turn_radio_on'
                                   1236 ;------------------------------------------------------------
                                   1237 ;	../../../../core/net/mac/lpp.c:191: turn_radio_on(void)
                                   1238 ;	-----------------------------------------
                                   1239 ;	 function turn_radio_on
                                   1240 ;	-----------------------------------------
      000000                       1241 _turn_radio_on:
                           000007  1242 	ar7 = 0x07
                           000006  1243 	ar6 = 0x06
                           000005  1244 	ar5 = 0x05
                           000004  1245 	ar4 = 0x04
                           000003  1246 	ar3 = 0x03
                           000002  1247 	ar2 = 0x02
                           000001  1248 	ar1 = 0x01
                           000000  1249 	ar0 = 0x00
                                   1250 ;	../../../../core/net/mac/lpp.c:193: NETSTACK_RADIO.on();
      000000 90r00r18         [24] 1251 	mov	dptr,#(_cc2530_rf_driver + 0x0018)
      000003 E4               [12] 1252 	clr	a
      000004 93               [24] 1253 	movc	a,@a+dptr
      000005 FD               [12] 1254 	mov	r5,a
      000006 A3               [24] 1255 	inc	dptr
      000007 E4               [12] 1256 	clr	a
      000008 93               [24] 1257 	movc	a,@a+dptr
      000009 FE               [12] 1258 	mov	r6,a
      00000A A3               [24] 1259 	inc	dptr
      00000B E4               [12] 1260 	clr	a
      00000C 93               [24] 1261 	movc	a,@a+dptr
      00000D FF               [12] 1262 	mov	r7,a
      00000E C0 07            [24] 1263 	push	ar7
      000010 C0 06            [24] 1264 	push	ar6
      000012 C0 05            [24] 1265 	push	ar5
      000014 C0 05            [24] 1266 	push	ar5
      000016 C0 06            [24] 1267 	push	ar6
      000018 C0 07            [24] 1268 	push	ar7
      00001A D0 02            [24] 1269 	pop	ar2
      00001C D0 01            [24] 1270 	pop	ar1
      00001E D0 00            [24] 1271 	pop	ar0
      000020 12r00r00         [24] 1272 	lcall	__sdcc_banked_call
      000023 D0 05            [24] 1273 	pop	ar5
      000025 D0 06            [24] 1274 	pop	ar6
      000027 D0 07            [24] 1275 	pop	ar7
      000029 02r00r00         [24] 1276 	ljmp	__sdcc_banked_ret
                                   1277 ;------------------------------------------------------------
                                   1278 ;Allocation info for local variables in function 'turn_radio_off'
                                   1279 ;------------------------------------------------------------
                                   1280 ;	../../../../core/net/mac/lpp.c:198: turn_radio_off(void)
                                   1281 ;	-----------------------------------------
                                   1282 ;	 function turn_radio_off
                                   1283 ;	-----------------------------------------
      00002C                       1284 _turn_radio_off:
                                   1285 ;	../../../../core/net/mac/lpp.c:200: if(lpp_is_on && is_streaming == 0) {
      00002C 90r00r00         [24] 1286 	mov	dptr,#_lpp_is_on
      00002F E0               [24] 1287 	movx	a,@dptr
      000030 FF               [12] 1288 	mov	r7,a
      000031 60 30            [24] 1289 	jz	00104$
      000033 90r00r2B         [24] 1290 	mov	dptr,#_is_streaming
      000036 E0               [24] 1291 	movx	a,@dptr
      000037 FF               [12] 1292 	mov	r7,a
      000038 70 29            [24] 1293 	jnz	00104$
                                   1294 ;	../../../../core/net/mac/lpp.c:201: NETSTACK_RADIO.off();
      00003A 90r00r1B         [24] 1295 	mov	dptr,#(_cc2530_rf_driver + 0x001b)
      00003D E4               [12] 1296 	clr	a
      00003E 93               [24] 1297 	movc	a,@a+dptr
      00003F FD               [12] 1298 	mov	r5,a
      000040 A3               [24] 1299 	inc	dptr
      000041 E4               [12] 1300 	clr	a
      000042 93               [24] 1301 	movc	a,@a+dptr
      000043 FE               [12] 1302 	mov	r6,a
      000044 A3               [24] 1303 	inc	dptr
      000045 E4               [12] 1304 	clr	a
      000046 93               [24] 1305 	movc	a,@a+dptr
      000047 FF               [12] 1306 	mov	r7,a
      000048 C0 07            [24] 1307 	push	ar7
      00004A C0 06            [24] 1308 	push	ar6
      00004C C0 05            [24] 1309 	push	ar5
      00004E C0 05            [24] 1310 	push	ar5
      000050 C0 06            [24] 1311 	push	ar6
      000052 C0 07            [24] 1312 	push	ar7
      000054 D0 02            [24] 1313 	pop	ar2
      000056 D0 01            [24] 1314 	pop	ar1
      000058 D0 00            [24] 1315 	pop	ar0
      00005A 12r00r00         [24] 1316 	lcall	__sdcc_banked_call
      00005D D0 05            [24] 1317 	pop	ar5
      00005F D0 06            [24] 1318 	pop	ar6
      000061 D0 07            [24] 1319 	pop	ar7
      000063                       1320 00104$:
      000063 02r00r00         [24] 1321 	ljmp	__sdcc_banked_ret
                                   1322 ;------------------------------------------------------------
                                   1323 ;Allocation info for local variables in function 'remove_encounter'
                                   1324 ;------------------------------------------------------------
                                   1325 ;encounter                 Allocated to registers r5 r6 r7 
                                   1326 ;e                         Allocated to stack - sp -2
                                   1327 ;------------------------------------------------------------
                                   1328 ;	../../../../core/net/mac/lpp.c:207: remove_encounter(void *encounter)
                                   1329 ;	-----------------------------------------
                                   1330 ;	 function remove_encounter
                                   1331 ;	-----------------------------------------
      000066                       1332 _remove_encounter:
      000066 05 81            [12] 1333 	inc	sp
      000068 05 81            [12] 1334 	inc	sp
      00006A 05 81            [12] 1335 	inc	sp
      00006C AD 82            [24] 1336 	mov	r5,dpl
      00006E AE 83            [24] 1337 	mov	r6,dph
      000070 AF F0            [24] 1338 	mov	r7,b
                                   1339 ;	../../../../core/net/mac/lpp.c:209: struct encounter *e = encounter;
      000072 A8 81            [24] 1340 	mov	r0,sp
      000074 18               [12] 1341 	dec	r0
      000075 18               [12] 1342 	dec	r0
      000076 A6 05            [24] 1343 	mov	@r0,ar5
      000078 08               [12] 1344 	inc	r0
      000079 A6 06            [24] 1345 	mov	@r0,ar6
      00007B 08               [12] 1346 	inc	r0
      00007C A6 07            [24] 1347 	mov	@r0,ar7
                                   1348 ;	../../../../core/net/mac/lpp.c:211: ctimer_stop(&e->remove_timer);
      00007E A8 81            [24] 1349 	mov	r0,sp
      000080 18               [12] 1350 	dec	r0
      000081 18               [12] 1351 	dec	r0
      000082 74 0D            [12] 1352 	mov	a,#0x0D
      000084 26               [12] 1353 	add	a,@r0
      000085 FA               [12] 1354 	mov	r2,a
      000086 E4               [12] 1355 	clr	a
      000087 08               [12] 1356 	inc	r0
      000088 36               [12] 1357 	addc	a,@r0
      000089 FB               [12] 1358 	mov	r3,a
      00008A 08               [12] 1359 	inc	r0
      00008B 86 04            [24] 1360 	mov	ar4,@r0
      00008D 8A 82            [24] 1361 	mov	dpl,r2
      00008F 8B 83            [24] 1362 	mov	dph,r3
      000091 8C F0            [24] 1363 	mov	b,r4
      000093 78r00            [12] 1364 	mov	r0,#_ctimer_stop
      000095 79s00            [12] 1365 	mov	r1,#(_ctimer_stop >> 8)
      000097 7As00            [12] 1366 	mov	r2,#(_ctimer_stop >> 16)
      000099 12r00r00         [24] 1367 	lcall	__sdcc_banked_call
                                   1368 ;	../../../../core/net/mac/lpp.c:212: ctimer_stop(&e->turn_on_radio_timer);
      00009C A8 81            [24] 1369 	mov	r0,sp
      00009E 18               [12] 1370 	dec	r0
      00009F 18               [12] 1371 	dec	r0
      0000A0 74 23            [12] 1372 	mov	a,#0x23
      0000A2 26               [12] 1373 	add	a,@r0
      0000A3 FA               [12] 1374 	mov	r2,a
      0000A4 E4               [12] 1375 	clr	a
      0000A5 08               [12] 1376 	inc	r0
      0000A6 36               [12] 1377 	addc	a,@r0
      0000A7 FB               [12] 1378 	mov	r3,a
      0000A8 08               [12] 1379 	inc	r0
      0000A9 86 04            [24] 1380 	mov	ar4,@r0
      0000AB 8A 82            [24] 1381 	mov	dpl,r2
      0000AD 8B 83            [24] 1382 	mov	dph,r3
      0000AF 8C F0            [24] 1383 	mov	b,r4
      0000B1 78r00            [12] 1384 	mov	r0,#_ctimer_stop
      0000B3 79s00            [12] 1385 	mov	r1,#(_ctimer_stop >> 8)
      0000B5 7As00            [12] 1386 	mov	r2,#(_ctimer_stop >> 16)
      0000B7 12r00r00         [24] 1387 	lcall	__sdcc_banked_call
                                   1388 ;	../../../../core/net/mac/lpp.c:213: list_remove(encounter_list, e);
      0000BA A8 81            [24] 1389 	mov	r0,sp
      0000BC 18               [12] 1390 	dec	r0
      0000BD 18               [12] 1391 	dec	r0
      0000BE 86 02            [24] 1392 	mov	ar2,@r0
      0000C0 08               [12] 1393 	inc	r0
      0000C1 86 03            [24] 1394 	mov	ar3,@r0
      0000C3 08               [12] 1395 	inc	r0
      0000C4 86 04            [24] 1396 	mov	ar4,@r0
      0000C6 90r00r1E         [24] 1397 	mov	dptr,#_encounter_list
      0000C9 E0               [24] 1398 	movx	a,@dptr
      0000CA FD               [12] 1399 	mov	r5,a
      0000CB A3               [24] 1400 	inc	dptr
      0000CC E0               [24] 1401 	movx	a,@dptr
      0000CD FE               [12] 1402 	mov	r6,a
      0000CE A3               [24] 1403 	inc	dptr
      0000CF E0               [24] 1404 	movx	a,@dptr
      0000D0 FF               [12] 1405 	mov	r7,a
      0000D1 C0 02            [24] 1406 	push	ar2
      0000D3 C0 03            [24] 1407 	push	ar3
      0000D5 C0 04            [24] 1408 	push	ar4
      0000D7 8D 82            [24] 1409 	mov	dpl,r5
      0000D9 8E 83            [24] 1410 	mov	dph,r6
      0000DB 8F F0            [24] 1411 	mov	b,r7
      0000DD 78r00            [12] 1412 	mov	r0,#_list_remove
      0000DF 79s00            [12] 1413 	mov	r1,#(_list_remove >> 8)
      0000E1 7As00            [12] 1414 	mov	r2,#(_list_remove >> 16)
      0000E3 12r00r00         [24] 1415 	lcall	__sdcc_banked_call
      0000E6 15 81            [12] 1416 	dec	sp
      0000E8 15 81            [12] 1417 	dec	sp
      0000EA 15 81            [12] 1418 	dec	sp
                                   1419 ;	../../../../core/net/mac/lpp.c:214: memb_free(&encounter_memb, e);
      0000EC A8 81            [24] 1420 	mov	r0,sp
      0000EE 18               [12] 1421 	dec	r0
      0000EF 18               [12] 1422 	dec	r0
      0000F0 86 05            [24] 1423 	mov	ar5,@r0
      0000F2 08               [12] 1424 	inc	r0
      0000F3 86 06            [24] 1425 	mov	ar6,@r0
      0000F5 08               [12] 1426 	inc	r0
      0000F6 86 07            [24] 1427 	mov	ar7,@r0
      0000F8 C0 05            [24] 1428 	push	ar5
      0000FA C0 06            [24] 1429 	push	ar6
      0000FC C0 07            [24] 1430 	push	ar7
      0000FE 90r00r21         [24] 1431 	mov	dptr,#_encounter_memb
      000101 75 F0 00         [24] 1432 	mov	b,#0x00
      000104 78r00            [12] 1433 	mov	r0,#_memb_free
      000106 79s00            [12] 1434 	mov	r1,#(_memb_free >> 8)
      000108 7As00            [12] 1435 	mov	r2,#(_memb_free >> 16)
      00010A 12r00r00         [24] 1436 	lcall	__sdcc_banked_call
      00010D 15 81            [12] 1437 	dec	sp
      00010F 15 81            [12] 1438 	dec	sp
      000111 15 81            [12] 1439 	dec	sp
      000113 15 81            [12] 1440 	dec	sp
      000115 15 81            [12] 1441 	dec	sp
      000117 15 81            [12] 1442 	dec	sp
      000119 02r00r00         [24] 1443 	ljmp	__sdcc_banked_ret
                                   1444 ;------------------------------------------------------------
                                   1445 ;Allocation info for local variables in function 'register_encounter'
                                   1446 ;------------------------------------------------------------
                                   1447 ;time                      Allocated to stack - sp -10
                                   1448 ;neighbor                  Allocated to stack - sp -5
                                   1449 ;e                         Allocated to stack - sp -2
                                   1450 ;------------------------------------------------------------
                                   1451 ;	../../../../core/net/mac/lpp.c:218: register_encounter(rimeaddr_t *neighbor, clock_time_t time)
                                   1452 ;	-----------------------------------------
                                   1453 ;	 function register_encounter
                                   1454 ;	-----------------------------------------
      00011C                       1455 _register_encounter:
      00011C C0 82            [24] 1456 	push	dpl
      00011E C0 83            [24] 1457 	push	dph
      000120 C0 F0            [24] 1458 	push	b
      000122 05 81            [12] 1459 	inc	sp
      000124 05 81            [12] 1460 	inc	sp
      000126 05 81            [12] 1461 	inc	sp
                                   1462 ;	../../../../core/net/mac/lpp.c:223: for(e = list_head(encounter_list); e != NULL; e = list_item_next(e)) {
      000128 90r00r1E         [24] 1463 	mov	dptr,#_encounter_list
      00012B E0               [24] 1464 	movx	a,@dptr
      00012C FA               [12] 1465 	mov	r2,a
      00012D A3               [24] 1466 	inc	dptr
      00012E E0               [24] 1467 	movx	a,@dptr
      00012F FB               [12] 1468 	mov	r3,a
      000130 A3               [24] 1469 	inc	dptr
      000131 E0               [24] 1470 	movx	a,@dptr
      000132 FC               [12] 1471 	mov	r4,a
      000133 8A 82            [24] 1472 	mov	dpl,r2
      000135 8B 83            [24] 1473 	mov	dph,r3
      000137 8C F0            [24] 1474 	mov	b,r4
      000139 78r00            [12] 1475 	mov	r0,#_list_head
      00013B 79s00            [12] 1476 	mov	r1,#(_list_head >> 8)
      00013D 7As00            [12] 1477 	mov	r2,#(_list_head >> 16)
      00013F 12r00r00         [24] 1478 	lcall	__sdcc_banked_call
      000142 AA 82            [24] 1479 	mov	r2,dpl
      000144 AB 83            [24] 1480 	mov	r3,dph
      000146 AC F0            [24] 1481 	mov	r4,b
      000148 A8 81            [24] 1482 	mov	r0,sp
      00014A 18               [12] 1483 	dec	r0
      00014B 18               [12] 1484 	dec	r0
      00014C A6 02            [24] 1485 	mov	@r0,ar2
      00014E 08               [12] 1486 	inc	r0
      00014F A6 03            [24] 1487 	mov	@r0,ar3
      000151 08               [12] 1488 	inc	r0
      000152 A6 04            [24] 1489 	mov	@r0,ar4
      000154                       1490 00109$:
      000154 A8 81            [24] 1491 	mov	r0,sp
      000156 18               [12] 1492 	dec	r0
      000157 18               [12] 1493 	dec	r0
      000158 E4               [12] 1494 	clr	a
      000159 C0 E0            [24] 1495 	push	acc
      00015B E4               [12] 1496 	clr	a
      00015C C0 E0            [24] 1497 	push	acc
      00015E E4               [12] 1498 	clr	a
      00015F C0 E0            [24] 1499 	push	acc
      000161 86 82            [24] 1500 	mov	dpl,@r0
      000163 08               [12] 1501 	inc	r0
      000164 86 83            [24] 1502 	mov	dph,@r0
      000166 08               [12] 1503 	inc	r0
      000167 86 F0            [24] 1504 	mov	b,@r0
      000169 12r00r00         [24] 1505 	lcall	___gptr_cmp
      00016C 15 81            [12] 1506 	dec	sp
      00016E 15 81            [12] 1507 	dec	sp
      000170 15 81            [12] 1508 	dec	sp
      000172 70 03            [24] 1509 	jnz	00128$
      000174 02r02r4F         [24] 1510 	ljmp	00103$
      000177                       1511 00128$:
                                   1512 ;	../../../../core/net/mac/lpp.c:224: if(rimeaddr_cmp(neighbor, &e->neighbor)) {
      000177 A8 81            [24] 1513 	mov	r0,sp
      000179 18               [12] 1514 	dec	r0
      00017A 18               [12] 1515 	dec	r0
      00017B 74 03            [12] 1516 	mov	a,#0x03
      00017D 26               [12] 1517 	add	a,@r0
      00017E FD               [12] 1518 	mov	r5,a
      00017F E4               [12] 1519 	clr	a
      000180 08               [12] 1520 	inc	r0
      000181 36               [12] 1521 	addc	a,@r0
      000182 FE               [12] 1522 	mov	r6,a
      000183 08               [12] 1523 	inc	r0
      000184 86 07            [24] 1524 	mov	ar7,@r0
      000186 C0 05            [24] 1525 	push	ar5
      000188 C0 06            [24] 1526 	push	ar6
      00018A C0 07            [24] 1527 	push	ar7
      00018C E5 81            [12] 1528 	mov	a,sp
      00018E 24 F8            [12] 1529 	add	a,#0xf8
      000190 F8               [12] 1530 	mov	r0,a
      000191 86 82            [24] 1531 	mov	dpl,@r0
      000193 08               [12] 1532 	inc	r0
      000194 86 83            [24] 1533 	mov	dph,@r0
      000196 08               [12] 1534 	inc	r0
      000197 86 F0            [24] 1535 	mov	b,@r0
      000199 78r00            [12] 1536 	mov	r0,#_rimeaddr_cmp
      00019B 79s00            [12] 1537 	mov	r1,#(_rimeaddr_cmp >> 8)
      00019D 7As00            [12] 1538 	mov	r2,#(_rimeaddr_cmp >> 16)
      00019F 12r00r00         [24] 1539 	lcall	__sdcc_banked_call
      0001A2 AE 82            [24] 1540 	mov	r6,dpl
      0001A4 AF 83            [24] 1541 	mov	r7,dph
      0001A6 15 81            [12] 1542 	dec	sp
      0001A8 15 81            [12] 1543 	dec	sp
      0001AA 15 81            [12] 1544 	dec	sp
      0001AC EE               [12] 1545 	mov	a,r6
      0001AD 4F               [12] 1546 	orl	a,r7
      0001AE 60 6F            [24] 1547 	jz	00110$
                                   1548 ;	../../../../core/net/mac/lpp.c:225: e->time = time;
      0001B0 A8 81            [24] 1549 	mov	r0,sp
      0001B2 18               [12] 1550 	dec	r0
      0001B3 18               [12] 1551 	dec	r0
      0001B4 74 0B            [12] 1552 	mov	a,#0x0B
      0001B6 26               [12] 1553 	add	a,@r0
      0001B7 FD               [12] 1554 	mov	r5,a
      0001B8 E4               [12] 1555 	clr	a
      0001B9 08               [12] 1556 	inc	r0
      0001BA 36               [12] 1557 	addc	a,@r0
      0001BB FE               [12] 1558 	mov	r6,a
      0001BC 08               [12] 1559 	inc	r0
      0001BD 86 07            [24] 1560 	mov	ar7,@r0
      0001BF 8D 82            [24] 1561 	mov	dpl,r5
      0001C1 8E 83            [24] 1562 	mov	dph,r6
      0001C3 8F F0            [24] 1563 	mov	b,r7
      0001C5 E5 81            [12] 1564 	mov	a,sp
      0001C7 24 F6            [12] 1565 	add	a,#0xf6
      0001C9 F8               [12] 1566 	mov	r0,a
      0001CA E6               [12] 1567 	mov	a,@r0
      0001CB 12r00r00         [24] 1568 	lcall	__gptrput
      0001CE A3               [24] 1569 	inc	dptr
      0001CF 08               [12] 1570 	inc	r0
      0001D0 E6               [12] 1571 	mov	a,@r0
      0001D1 12r00r00         [24] 1572 	lcall	__gptrput
                                   1573 ;	../../../../core/net/mac/lpp.c:226: ctimer_set(&e->remove_timer, ENCOUNTER_LIFETIME, remove_encounter, e);
      0001D4 A8 81            [24] 1574 	mov	r0,sp
      0001D6 18               [12] 1575 	dec	r0
      0001D7 18               [12] 1576 	dec	r0
      0001D8 86 05            [24] 1577 	mov	ar5,@r0
      0001DA 08               [12] 1578 	inc	r0
      0001DB 86 06            [24] 1579 	mov	ar6,@r0
      0001DD 08               [12] 1580 	inc	r0
      0001DE 86 07            [24] 1581 	mov	ar7,@r0
      0001E0 A8 81            [24] 1582 	mov	r0,sp
      0001E2 18               [12] 1583 	dec	r0
      0001E3 18               [12] 1584 	dec	r0
      0001E4 74 0D            [12] 1585 	mov	a,#0x0D
      0001E6 26               [12] 1586 	add	a,@r0
      0001E7 FA               [12] 1587 	mov	r2,a
      0001E8 E4               [12] 1588 	clr	a
      0001E9 08               [12] 1589 	inc	r0
      0001EA 36               [12] 1590 	addc	a,@r0
      0001EB FB               [12] 1591 	mov	r3,a
      0001EC 08               [12] 1592 	inc	r0
      0001ED 86 04            [24] 1593 	mov	ar4,@r0
      0001EF C0 05            [24] 1594 	push	ar5
      0001F1 C0 06            [24] 1595 	push	ar6
      0001F3 C0 07            [24] 1596 	push	ar7
      0001F5 74r66            [12] 1597 	mov	a,#_remove_encounter
      0001F7 C0 E0            [24] 1598 	push	acc
      0001F9 74s00            [12] 1599 	mov	a,#(_remove_encounter >> 8)
      0001FB C0 E0            [24] 1600 	push	acc
      0001FD 74s00            [12] 1601 	mov	a,#(_remove_encounter >> 16)
      0001FF C0 E0            [24] 1602 	push	acc
      000201 74 F0            [12] 1603 	mov	a,#0xF0
      000203 C0 E0            [24] 1604 	push	acc
      000205 E4               [12] 1605 	clr	a
      000206 C0 E0            [24] 1606 	push	acc
      000208 8A 82            [24] 1607 	mov	dpl,r2
      00020A 8B 83            [24] 1608 	mov	dph,r3
      00020C 8C F0            [24] 1609 	mov	b,r4
      00020E 78r00            [12] 1610 	mov	r0,#_ctimer_set
      000210 79s00            [12] 1611 	mov	r1,#(_ctimer_set >> 8)
      000212 7As00            [12] 1612 	mov	r2,#(_ctimer_set >> 16)
      000214 12r00r00         [24] 1613 	lcall	__sdcc_banked_call
      000217 E5 81            [12] 1614 	mov	a,sp
      000219 24 F8            [12] 1615 	add	a,#0xf8
      00021B F5 81            [12] 1616 	mov	sp,a
                                   1617 ;	../../../../core/net/mac/lpp.c:227: break;
      00021D 80 30            [24] 1618 	sjmp	00103$
      00021F                       1619 00110$:
                                   1620 ;	../../../../core/net/mac/lpp.c:223: for(e = list_head(encounter_list); e != NULL; e = list_item_next(e)) {
      00021F A8 81            [24] 1621 	mov	r0,sp
      000221 18               [12] 1622 	dec	r0
      000222 18               [12] 1623 	dec	r0
      000223 86 02            [24] 1624 	mov	ar2,@r0
      000225 08               [12] 1625 	inc	r0
      000226 86 03            [24] 1626 	mov	ar3,@r0
      000228 08               [12] 1627 	inc	r0
      000229 86 04            [24] 1628 	mov	ar4,@r0
      00022B 8A 82            [24] 1629 	mov	dpl,r2
      00022D 8B 83            [24] 1630 	mov	dph,r3
      00022F 8C F0            [24] 1631 	mov	b,r4
      000231 78r00            [12] 1632 	mov	r0,#_list_item_next
      000233 79s00            [12] 1633 	mov	r1,#(_list_item_next >> 8)
      000235 7As00            [12] 1634 	mov	r2,#(_list_item_next >> 16)
      000237 12r00r00         [24] 1635 	lcall	__sdcc_banked_call
      00023A AD 82            [24] 1636 	mov	r5,dpl
      00023C AE 83            [24] 1637 	mov	r6,dph
      00023E AF F0            [24] 1638 	mov	r7,b
      000240 A8 81            [24] 1639 	mov	r0,sp
      000242 18               [12] 1640 	dec	r0
      000243 18               [12] 1641 	dec	r0
      000244 A6 05            [24] 1642 	mov	@r0,ar5
      000246 08               [12] 1643 	inc	r0
      000247 A6 06            [24] 1644 	mov	@r0,ar6
      000249 08               [12] 1645 	inc	r0
      00024A A6 07            [24] 1646 	mov	@r0,ar7
      00024C 02r01r54         [24] 1647 	ljmp	00109$
      00024F                       1648 00103$:
                                   1649 ;	../../../../core/net/mac/lpp.c:231: if(e == NULL) {
      00024F A8 81            [24] 1650 	mov	r0,sp
      000251 18               [12] 1651 	dec	r0
      000252 18               [12] 1652 	dec	r0
      000253 E6               [12] 1653 	mov	a,@r0
      000254 08               [12] 1654 	inc	r0
      000255 46               [12] 1655 	orl	a,@r0
      000256 60 03            [24] 1656 	jz	00130$
      000258 02r03r5B         [24] 1657 	ljmp	00111$
      00025B                       1658 00130$:
                                   1659 ;	../../../../core/net/mac/lpp.c:232: e = memb_alloc(&encounter_memb);
      00025B 90r00r21         [24] 1660 	mov	dptr,#_encounter_memb
      00025E 75 F0 00         [24] 1661 	mov	b,#0x00
      000261 78r00            [12] 1662 	mov	r0,#_memb_alloc
      000263 79s00            [12] 1663 	mov	r1,#(_memb_alloc >> 8)
      000265 7As00            [12] 1664 	mov	r2,#(_memb_alloc >> 16)
      000267 12r00r00         [24] 1665 	lcall	__sdcc_banked_call
      00026A AD 82            [24] 1666 	mov	r5,dpl
      00026C AE 83            [24] 1667 	mov	r6,dph
      00026E AF F0            [24] 1668 	mov	r7,b
      000270 A8 81            [24] 1669 	mov	r0,sp
      000272 18               [12] 1670 	dec	r0
      000273 18               [12] 1671 	dec	r0
      000274 A6 05            [24] 1672 	mov	@r0,ar5
      000276 08               [12] 1673 	inc	r0
      000277 A6 06            [24] 1674 	mov	@r0,ar6
      000279 08               [12] 1675 	inc	r0
      00027A A6 07            [24] 1676 	mov	@r0,ar7
                                   1677 ;	../../../../core/net/mac/lpp.c:233: if(e == NULL) {
      00027C A8 81            [24] 1678 	mov	r0,sp
      00027E 18               [12] 1679 	dec	r0
      00027F 18               [12] 1680 	dec	r0
      000280 E6               [12] 1681 	mov	a,@r0
      000281 08               [12] 1682 	inc	r0
      000282 46               [12] 1683 	orl	a,@r0
      000283 70 03            [24] 1684 	jnz	00105$
                                   1685 ;	../../../../core/net/mac/lpp.c:235: return;
      000285 02r03r5B         [24] 1686 	ljmp	00111$
      000288                       1687 00105$:
                                   1688 ;	../../../../core/net/mac/lpp.c:237: rimeaddr_copy(&e->neighbor, neighbor);
      000288 A8 81            [24] 1689 	mov	r0,sp
      00028A 18               [12] 1690 	dec	r0
      00028B 18               [12] 1691 	dec	r0
      00028C 74 03            [12] 1692 	mov	a,#0x03
      00028E 26               [12] 1693 	add	a,@r0
      00028F FD               [12] 1694 	mov	r5,a
      000290 E4               [12] 1695 	clr	a
      000291 08               [12] 1696 	inc	r0
      000292 36               [12] 1697 	addc	a,@r0
      000293 FE               [12] 1698 	mov	r6,a
      000294 08               [12] 1699 	inc	r0
      000295 86 07            [24] 1700 	mov	ar7,@r0
      000297 E5 81            [12] 1701 	mov	a,sp
      000299 24 FB            [12] 1702 	add	a,#0xfb
      00029B F8               [12] 1703 	mov	r0,a
      00029C E6               [12] 1704 	mov	a,@r0
      00029D C0 E0            [24] 1705 	push	acc
      00029F 08               [12] 1706 	inc	r0
      0002A0 E6               [12] 1707 	mov	a,@r0
      0002A1 C0 E0            [24] 1708 	push	acc
      0002A3 08               [12] 1709 	inc	r0
      0002A4 E6               [12] 1710 	mov	a,@r0
      0002A5 C0 E0            [24] 1711 	push	acc
      0002A7 8D 82            [24] 1712 	mov	dpl,r5
      0002A9 8E 83            [24] 1713 	mov	dph,r6
      0002AB 8F F0            [24] 1714 	mov	b,r7
      0002AD 78r00            [12] 1715 	mov	r0,#_rimeaddr_copy
      0002AF 79s00            [12] 1716 	mov	r1,#(_rimeaddr_copy >> 8)
      0002B1 7As00            [12] 1717 	mov	r2,#(_rimeaddr_copy >> 16)
      0002B3 12r00r00         [24] 1718 	lcall	__sdcc_banked_call
      0002B6 15 81            [12] 1719 	dec	sp
      0002B8 15 81            [12] 1720 	dec	sp
      0002BA 15 81            [12] 1721 	dec	sp
                                   1722 ;	../../../../core/net/mac/lpp.c:238: e->time = time;
      0002BC A8 81            [24] 1723 	mov	r0,sp
      0002BE 18               [12] 1724 	dec	r0
      0002BF 18               [12] 1725 	dec	r0
      0002C0 74 0B            [12] 1726 	mov	a,#0x0B
      0002C2 26               [12] 1727 	add	a,@r0
      0002C3 FD               [12] 1728 	mov	r5,a
      0002C4 E4               [12] 1729 	clr	a
      0002C5 08               [12] 1730 	inc	r0
      0002C6 36               [12] 1731 	addc	a,@r0
      0002C7 FE               [12] 1732 	mov	r6,a
      0002C8 08               [12] 1733 	inc	r0
      0002C9 86 07            [24] 1734 	mov	ar7,@r0
      0002CB 8D 82            [24] 1735 	mov	dpl,r5
      0002CD 8E 83            [24] 1736 	mov	dph,r6
      0002CF 8F F0            [24] 1737 	mov	b,r7
      0002D1 E5 81            [12] 1738 	mov	a,sp
      0002D3 24 F6            [12] 1739 	add	a,#0xf6
      0002D5 F8               [12] 1740 	mov	r0,a
      0002D6 E6               [12] 1741 	mov	a,@r0
      0002D7 12r00r00         [24] 1742 	lcall	__gptrput
      0002DA A3               [24] 1743 	inc	dptr
      0002DB 08               [12] 1744 	inc	r0
      0002DC E6               [12] 1745 	mov	a,@r0
      0002DD 12r00r00         [24] 1746 	lcall	__gptrput
                                   1747 ;	../../../../core/net/mac/lpp.c:239: ctimer_set(&e->remove_timer, ENCOUNTER_LIFETIME, remove_encounter, e);
      0002E0 A8 81            [24] 1748 	mov	r0,sp
      0002E2 18               [12] 1749 	dec	r0
      0002E3 18               [12] 1750 	dec	r0
      0002E4 86 02            [24] 1751 	mov	ar2,@r0
      0002E6 08               [12] 1752 	inc	r0
      0002E7 86 03            [24] 1753 	mov	ar3,@r0
      0002E9 08               [12] 1754 	inc	r0
      0002EA 86 04            [24] 1755 	mov	ar4,@r0
      0002EC A8 81            [24] 1756 	mov	r0,sp
      0002EE 18               [12] 1757 	dec	r0
      0002EF 18               [12] 1758 	dec	r0
      0002F0 74 0D            [12] 1759 	mov	a,#0x0D
      0002F2 26               [12] 1760 	add	a,@r0
      0002F3 FD               [12] 1761 	mov	r5,a
      0002F4 E4               [12] 1762 	clr	a
      0002F5 08               [12] 1763 	inc	r0
      0002F6 36               [12] 1764 	addc	a,@r0
      0002F7 FE               [12] 1765 	mov	r6,a
      0002F8 08               [12] 1766 	inc	r0
      0002F9 86 07            [24] 1767 	mov	ar7,@r0
      0002FB C0 02            [24] 1768 	push	ar2
      0002FD C0 03            [24] 1769 	push	ar3
      0002FF C0 04            [24] 1770 	push	ar4
      000301 74r66            [12] 1771 	mov	a,#_remove_encounter
      000303 C0 E0            [24] 1772 	push	acc
      000305 74s00            [12] 1773 	mov	a,#(_remove_encounter >> 8)
      000307 C0 E0            [24] 1774 	push	acc
      000309 74s00            [12] 1775 	mov	a,#(_remove_encounter >> 16)
      00030B C0 E0            [24] 1776 	push	acc
      00030D 74 F0            [12] 1777 	mov	a,#0xF0
      00030F C0 E0            [24] 1778 	push	acc
      000311 E4               [12] 1779 	clr	a
      000312 C0 E0            [24] 1780 	push	acc
      000314 8D 82            [24] 1781 	mov	dpl,r5
      000316 8E 83            [24] 1782 	mov	dph,r6
      000318 8F F0            [24] 1783 	mov	b,r7
      00031A 78r00            [12] 1784 	mov	r0,#_ctimer_set
      00031C 79s00            [12] 1785 	mov	r1,#(_ctimer_set >> 8)
      00031E 7As00            [12] 1786 	mov	r2,#(_ctimer_set >> 16)
      000320 12r00r00         [24] 1787 	lcall	__sdcc_banked_call
      000323 E5 81            [12] 1788 	mov	a,sp
      000325 24 F8            [12] 1789 	add	a,#0xf8
      000327 F5 81            [12] 1790 	mov	sp,a
                                   1791 ;	../../../../core/net/mac/lpp.c:240: list_add(encounter_list, e);
      000329 A8 81            [24] 1792 	mov	r0,sp
      00032B 18               [12] 1793 	dec	r0
      00032C 18               [12] 1794 	dec	r0
      00032D 86 02            [24] 1795 	mov	ar2,@r0
      00032F 08               [12] 1796 	inc	r0
      000330 86 03            [24] 1797 	mov	ar3,@r0
      000332 08               [12] 1798 	inc	r0
      000333 86 04            [24] 1799 	mov	ar4,@r0
      000335 90r00r1E         [24] 1800 	mov	dptr,#_encounter_list
      000338 E0               [24] 1801 	movx	a,@dptr
      000339 FD               [12] 1802 	mov	r5,a
      00033A A3               [24] 1803 	inc	dptr
      00033B E0               [24] 1804 	movx	a,@dptr
      00033C FE               [12] 1805 	mov	r6,a
      00033D A3               [24] 1806 	inc	dptr
      00033E E0               [24] 1807 	movx	a,@dptr
      00033F FF               [12] 1808 	mov	r7,a
      000340 C0 02            [24] 1809 	push	ar2
      000342 C0 03            [24] 1810 	push	ar3
      000344 C0 04            [24] 1811 	push	ar4
      000346 8D 82            [24] 1812 	mov	dpl,r5
      000348 8E 83            [24] 1813 	mov	dph,r6
      00034A 8F F0            [24] 1814 	mov	b,r7
      00034C 78r00            [12] 1815 	mov	r0,#_list_add
      00034E 79s00            [12] 1816 	mov	r1,#(_list_add >> 8)
      000350 7As00            [12] 1817 	mov	r2,#(_list_add >> 16)
      000352 12r00r00         [24] 1818 	lcall	__sdcc_banked_call
      000355 15 81            [12] 1819 	dec	sp
      000357 15 81            [12] 1820 	dec	sp
      000359 15 81            [12] 1821 	dec	sp
      00035B                       1822 00111$:
      00035B E5 81            [12] 1823 	mov	a,sp
      00035D 24 FA            [12] 1824 	add	a,#0xFA
      00035F F5 81            [12] 1825 	mov	sp,a
      000361 02r00r00         [24] 1826 	ljmp	__sdcc_banked_ret
                                   1827 ;------------------------------------------------------------
                                   1828 ;Allocation info for local variables in function 'stream_off'
                                   1829 ;------------------------------------------------------------
                                   1830 ;dummy                     Allocated to registers 
                                   1831 ;------------------------------------------------------------
                                   1832 ;	../../../../core/net/mac/lpp.c:261: stream_off(void *dummy)
                                   1833 ;	-----------------------------------------
                                   1834 ;	 function stream_off
                                   1835 ;	-----------------------------------------
      000364                       1836 _stream_off:
                                   1837 ;	../../../../core/net/mac/lpp.c:263: is_streaming = 0;
      000364 90r00r2B         [24] 1838 	mov	dptr,#_is_streaming
      000367 E4               [12] 1839 	clr	a
      000368 F0               [24] 1840 	movx	@dptr,a
      000369 02r00r00         [24] 1841 	ljmp	__sdcc_banked_ret
                                   1842 ;------------------------------------------------------------
                                   1843 ;Allocation info for local variables in function 'turn_radio_on_for_neighbor'
                                   1844 ;------------------------------------------------------------
                                   1845 ;i                         Allocated to stack - sp -5
                                   1846 ;neighbor                  Allocated to registers r5 r6 r7 
                                   1847 ;sloc0                     Allocated to stack - sp +4
                                   1848 ;------------------------------------------------------------
                                   1849 ;	../../../../core/net/mac/lpp.c:276: turn_radio_on_for_neighbor(rimeaddr_t *neighbor, struct queue_list_item *i)
                                   1850 ;	-----------------------------------------
                                   1851 ;	 function turn_radio_on_for_neighbor
                                   1852 ;	-----------------------------------------
      00036C                       1853 _turn_radio_on_for_neighbor:
      00036C AD 82            [24] 1854 	mov	r5,dpl
      00036E AE 83            [24] 1855 	mov	r6,dph
      000370 AF F0            [24] 1856 	mov	r7,b
                                   1857 ;	../../../../core/net/mac/lpp.c:280: if(packetbuf_attr(PACKETBUF_ATTR_PACKET_TYPE) ==
      000372 75 82 0E         [24] 1858 	mov	dpl,#0x0E
      000375 C0 07            [24] 1859 	push	ar7
      000377 C0 06            [24] 1860 	push	ar6
      000379 C0 05            [24] 1861 	push	ar5
      00037B 78r00            [12] 1862 	mov	r0,#_packetbuf_attr
      00037D 79s00            [12] 1863 	mov	r1,#(_packetbuf_attr >> 8)
      00037F 7As00            [12] 1864 	mov	r2,#(_packetbuf_attr >> 16)
      000381 12r00r00         [24] 1865 	lcall	__sdcc_banked_call
      000384 AB 82            [24] 1866 	mov	r3,dpl
      000386 AC 83            [24] 1867 	mov	r4,dph
      000388 D0 05            [24] 1868 	pop	ar5
      00038A D0 06            [24] 1869 	pop	ar6
      00038C D0 07            [24] 1870 	pop	ar7
      00038E BB 02 77         [24] 1871 	cjne	r3,#0x02,00102$
      000391 BC 00 74         [24] 1872 	cjne	r4,#0x00,00102$
                                   1873 ;	../../../../core/net/mac/lpp.c:282: is_streaming = 1;
      000394 90r00r2B         [24] 1874 	mov	dptr,#_is_streaming
      000397 74 01            [12] 1875 	mov	a,#0x01
      000399 F0               [24] 1876 	movx	@dptr,a
                                   1877 ;	../../../../core/net/mac/lpp.c:283: turn_radio_on();
      00039A 78r00            [12] 1878 	mov	r0,#_turn_radio_on
      00039C 79s00            [12] 1879 	mov	r1,#(_turn_radio_on >> 8)
      00039E 7As00            [12] 1880 	mov	r2,#(_turn_radio_on >> 16)
      0003A0 12r00r00         [24] 1881 	lcall	__sdcc_banked_call
                                   1882 ;	../../../../core/net/mac/lpp.c:284: list_add(queued_packets_list, i);
      0003A3 E5 81            [12] 1883 	mov	a,sp
      0003A5 24 FB            [12] 1884 	add	a,#0xfb
      0003A7 F8               [12] 1885 	mov	r0,a
      0003A8 86 07            [24] 1886 	mov	ar7,@r0
      0003AA 08               [12] 1887 	inc	r0
      0003AB 86 06            [24] 1888 	mov	ar6,@r0
      0003AD 08               [12] 1889 	inc	r0
      0003AE 86 05            [24] 1890 	mov	ar5,@r0
      0003B0 90r00r0E         [24] 1891 	mov	dptr,#_queued_packets_list
      0003B3 E0               [24] 1892 	movx	a,@dptr
      0003B4 FA               [12] 1893 	mov	r2,a
      0003B5 A3               [24] 1894 	inc	dptr
      0003B6 E0               [24] 1895 	movx	a,@dptr
      0003B7 FB               [12] 1896 	mov	r3,a
      0003B8 A3               [24] 1897 	inc	dptr
      0003B9 E0               [24] 1898 	movx	a,@dptr
      0003BA FC               [12] 1899 	mov	r4,a
      0003BB C0 07            [24] 1900 	push	ar7
      0003BD C0 06            [24] 1901 	push	ar6
      0003BF C0 05            [24] 1902 	push	ar5
      0003C1 8A 82            [24] 1903 	mov	dpl,r2
      0003C3 8B 83            [24] 1904 	mov	dph,r3
      0003C5 8C F0            [24] 1905 	mov	b,r4
      0003C7 78r00            [12] 1906 	mov	r0,#_list_add
      0003C9 79s00            [12] 1907 	mov	r1,#(_list_add >> 8)
      0003CB 7As00            [12] 1908 	mov	r2,#(_list_add >> 16)
      0003CD 12r00r00         [24] 1909 	lcall	__sdcc_banked_call
      0003D0 15 81            [12] 1910 	dec	sp
      0003D2 15 81            [12] 1911 	dec	sp
      0003D4 15 81            [12] 1912 	dec	sp
                                   1913 ;	../../../../core/net/mac/lpp.c:285: ctimer_set(&stream_off_timer, STREAM_OFF_TIME,
      0003D6 E4               [12] 1914 	clr	a
      0003D7 C0 E0            [24] 1915 	push	acc
      0003D9 C0 E0            [24] 1916 	push	acc
      0003DB C0 E0            [24] 1917 	push	acc
      0003DD 74r64            [12] 1918 	mov	a,#_stream_off
      0003DF C0 E0            [24] 1919 	push	acc
      0003E1 74s03            [12] 1920 	mov	a,#(_stream_off >> 8)
      0003E3 C0 E0            [24] 1921 	push	acc
      0003E5 74s00            [12] 1922 	mov	a,#(_stream_off >> 16)
      0003E7 C0 E0            [24] 1923 	push	acc
      0003E9 74 40            [12] 1924 	mov	a,#0x40
      0003EB C0 E0            [24] 1925 	push	acc
      0003ED E4               [12] 1926 	clr	a
      0003EE C0 E0            [24] 1927 	push	acc
      0003F0 90r01rA3         [24] 1928 	mov	dptr,#_stream_off_timer
      0003F3 75 F0 00         [24] 1929 	mov	b,#0x00
      0003F6 78r00            [12] 1930 	mov	r0,#_ctimer_set
      0003F8 79s00            [12] 1931 	mov	r1,#(_ctimer_set >> 8)
      0003FA 7As00            [12] 1932 	mov	r2,#(_ctimer_set >> 16)
      0003FC 12r00r00         [24] 1933 	lcall	__sdcc_banked_call
      0003FF E5 81            [12] 1934 	mov	a,sp
      000401 24 F8            [12] 1935 	add	a,#0xf8
      000403 F5 81            [12] 1936 	mov	sp,a
                                   1937 ;	../../../../core/net/mac/lpp.c:287: return;
      000405 02r04rAB         [24] 1938 	ljmp	00105$
      000408                       1939 00102$:
                                   1940 ;	../../../../core/net/mac/lpp.c:291: if(rimeaddr_cmp(neighbor, &rimeaddr_null)) {
      000408 74r00            [12] 1941 	mov	a,#_rimeaddr_null
      00040A C0 E0            [24] 1942 	push	acc
      00040C 74s00            [12] 1943 	mov	a,#(_rimeaddr_null >> 8)
      00040E C0 E0            [24] 1944 	push	acc
      000410 74 80            [12] 1945 	mov	a,#0x80
      000412 C0 E0            [24] 1946 	push	acc
      000414 8D 82            [24] 1947 	mov	dpl,r5
      000416 8E 83            [24] 1948 	mov	dph,r6
      000418 8F F0            [24] 1949 	mov	b,r7
      00041A 78r00            [12] 1950 	mov	r0,#_rimeaddr_cmp
      00041C 79s00            [12] 1951 	mov	r1,#(_rimeaddr_cmp >> 8)
      00041E 7As00            [12] 1952 	mov	r2,#(_rimeaddr_cmp >> 16)
      000420 12r00r00         [24] 1953 	lcall	__sdcc_banked_call
      000423 AE 82            [24] 1954 	mov	r6,dpl
      000425 AF 83            [24] 1955 	mov	r7,dph
      000427 15 81            [12] 1956 	dec	sp
      000429 15 81            [12] 1957 	dec	sp
      00042B 15 81            [12] 1958 	dec	sp
      00042D EE               [12] 1959 	mov	a,r6
      00042E 4F               [12] 1960 	orl	a,r7
      00042F 60 3E            [24] 1961 	jz	00104$
                                   1962 ;	../../../../core/net/mac/lpp.c:295: turn_radio_on();
      000431 78r00            [12] 1963 	mov	r0,#_turn_radio_on
      000433 79s00            [12] 1964 	mov	r1,#(_turn_radio_on >> 8)
      000435 7As00            [12] 1965 	mov	r2,#(_turn_radio_on >> 16)
      000437 12r00r00         [24] 1966 	lcall	__sdcc_banked_call
                                   1967 ;	../../../../core/net/mac/lpp.c:297: list_add(queued_packets_list, i);
      00043A E5 81            [12] 1968 	mov	a,sp
      00043C 24 FB            [12] 1969 	add	a,#0xfb
      00043E F8               [12] 1970 	mov	r0,a
      00043F 86 05            [24] 1971 	mov	ar5,@r0
      000441 08               [12] 1972 	inc	r0
      000442 86 06            [24] 1973 	mov	ar6,@r0
      000444 08               [12] 1974 	inc	r0
      000445 86 07            [24] 1975 	mov	ar7,@r0
      000447 90r00r0E         [24] 1976 	mov	dptr,#_queued_packets_list
      00044A E0               [24] 1977 	movx	a,@dptr
      00044B FA               [12] 1978 	mov	r2,a
      00044C A3               [24] 1979 	inc	dptr
      00044D E0               [24] 1980 	movx	a,@dptr
      00044E FB               [12] 1981 	mov	r3,a
      00044F A3               [24] 1982 	inc	dptr
      000450 E0               [24] 1983 	movx	a,@dptr
      000451 FC               [12] 1984 	mov	r4,a
      000452 C0 05            [24] 1985 	push	ar5
      000454 C0 06            [24] 1986 	push	ar6
      000456 C0 07            [24] 1987 	push	ar7
      000458 8A 82            [24] 1988 	mov	dpl,r2
      00045A 8B 83            [24] 1989 	mov	dph,r3
      00045C 8C F0            [24] 1990 	mov	b,r4
      00045E 78r00            [12] 1991 	mov	r0,#_list_add
      000460 79s00            [12] 1992 	mov	r1,#(_list_add >> 8)
      000462 7As00            [12] 1993 	mov	r2,#(_list_add >> 16)
      000464 12r00r00         [24] 1994 	lcall	__sdcc_banked_call
      000467 15 81            [12] 1995 	dec	sp
      000469 15 81            [12] 1996 	dec	sp
      00046B 15 81            [12] 1997 	dec	sp
                                   1998 ;	../../../../core/net/mac/lpp.c:298: return;
      00046D 80 3C            [24] 1999 	sjmp	00105$
      00046F                       2000 00104$:
                                   2001 ;	../../../../core/net/mac/lpp.c:346: turn_radio_on();
      00046F 78r00            [12] 2002 	mov	r0,#_turn_radio_on
      000471 79s00            [12] 2003 	mov	r1,#(_turn_radio_on >> 8)
      000473 7As00            [12] 2004 	mov	r2,#(_turn_radio_on >> 16)
      000475 12r00r00         [24] 2005 	lcall	__sdcc_banked_call
                                   2006 ;	../../../../core/net/mac/lpp.c:347: list_add(queued_packets_list, i);
      000478 E5 81            [12] 2007 	mov	a,sp
      00047A 24 FB            [12] 2008 	add	a,#0xfb
      00047C F8               [12] 2009 	mov	r0,a
      00047D 86 05            [24] 2010 	mov	ar5,@r0
      00047F 08               [12] 2011 	inc	r0
      000480 86 06            [24] 2012 	mov	ar6,@r0
      000482 08               [12] 2013 	inc	r0
      000483 86 07            [24] 2014 	mov	ar7,@r0
      000485 90r00r0E         [24] 2015 	mov	dptr,#_queued_packets_list
      000488 E0               [24] 2016 	movx	a,@dptr
      000489 FA               [12] 2017 	mov	r2,a
      00048A A3               [24] 2018 	inc	dptr
      00048B E0               [24] 2019 	movx	a,@dptr
      00048C FB               [12] 2020 	mov	r3,a
      00048D A3               [24] 2021 	inc	dptr
      00048E E0               [24] 2022 	movx	a,@dptr
      00048F FC               [12] 2023 	mov	r4,a
      000490 C0 05            [24] 2024 	push	ar5
      000492 C0 06            [24] 2025 	push	ar6
      000494 C0 07            [24] 2026 	push	ar7
      000496 8A 82            [24] 2027 	mov	dpl,r2
      000498 8B 83            [24] 2028 	mov	dph,r3
      00049A 8C F0            [24] 2029 	mov	b,r4
      00049C 78r00            [12] 2030 	mov	r0,#_list_add
      00049E 79s00            [12] 2031 	mov	r1,#(_list_add >> 8)
      0004A0 7As00            [12] 2032 	mov	r2,#(_list_add >> 16)
      0004A2 12r00r00         [24] 2033 	lcall	__sdcc_banked_call
      0004A5 15 81            [12] 2034 	dec	sp
      0004A7 15 81            [12] 2035 	dec	sp
      0004A9 15 81            [12] 2036 	dec	sp
                                   2037 ;	../../../../core/net/mac/lpp.c:348: return;
      0004AB                       2038 00105$:
      0004AB 02r00r00         [24] 2039 	ljmp	__sdcc_banked_ret
                                   2040 ;------------------------------------------------------------
                                   2041 ;Allocation info for local variables in function 'remove_queued_packet'
                                   2042 ;------------------------------------------------------------
                                   2043 ;tx_ok                     Allocated to stack - sp -11
                                   2044 ;i                         Allocated to stack - sp -7
                                   2045 ;sent                      Allocated to registers r5 r6 r7 
                                   2046 ;ptr                       Allocated to stack - sp -2
                                   2047 ;num_transmissions         Allocated to stack - sp -4
                                   2048 ;status                    Allocated to registers r3 r4 
                                   2049 ;------------------------------------------------------------
                                   2050 ;	../../../../core/net/mac/lpp.c:352: remove_queued_packet(struct queue_list_item *i, uint8_t tx_ok)
                                   2051 ;	-----------------------------------------
                                   2052 ;	 function remove_queued_packet
                                   2053 ;	-----------------------------------------
      0004AE                       2054 _remove_queued_packet:
      0004AE C0 82            [24] 2055 	push	dpl
      0004B0 C0 83            [24] 2056 	push	dph
      0004B2 C0 F0            [24] 2057 	push	b
      0004B4 E5 81            [12] 2058 	mov	a,sp
      0004B6 24 05            [12] 2059 	add	a,#0x05
                                   2060 ;	../../../../core/net/mac/lpp.c:363: queuebuf_to_packetbuf(i->packet);
      0004B8 F5 81            [12] 2061 	mov	sp,a
      0004BA 24 F9            [12] 2062 	add	a,#0xf9
      0004BC F8               [12] 2063 	mov	r0,a
      0004BD 74 03            [12] 2064 	mov	a,#0x03
      0004BF 26               [12] 2065 	add	a,@r0
      0004C0 FA               [12] 2066 	mov	r2,a
      0004C1 E4               [12] 2067 	clr	a
      0004C2 08               [12] 2068 	inc	r0
      0004C3 36               [12] 2069 	addc	a,@r0
      0004C4 FB               [12] 2070 	mov	r3,a
      0004C5 08               [12] 2071 	inc	r0
      0004C6 86 04            [24] 2072 	mov	ar4,@r0
      0004C8 8A 82            [24] 2073 	mov	dpl,r2
      0004CA 8B 83            [24] 2074 	mov	dph,r3
      0004CC 8C F0            [24] 2075 	mov	b,r4
      0004CE 12r00r00         [24] 2076 	lcall	__gptrget
      0004D1 FD               [12] 2077 	mov	r5,a
      0004D2 A3               [24] 2078 	inc	dptr
      0004D3 12r00r00         [24] 2079 	lcall	__gptrget
      0004D6 FE               [12] 2080 	mov	r6,a
      0004D7 A3               [24] 2081 	inc	dptr
      0004D8 12r00r00         [24] 2082 	lcall	__gptrget
      0004DB FF               [12] 2083 	mov	r7,a
      0004DC 8D 82            [24] 2084 	mov	dpl,r5
      0004DE 8E 83            [24] 2085 	mov	dph,r6
      0004E0 8F F0            [24] 2086 	mov	b,r7
      0004E2 C0 04            [24] 2087 	push	ar4
      0004E4 C0 03            [24] 2088 	push	ar3
      0004E6 C0 02            [24] 2089 	push	ar2
      0004E8 78r00            [12] 2090 	mov	r0,#_queuebuf_to_packetbuf
      0004EA 79s00            [12] 2091 	mov	r1,#(_queuebuf_to_packetbuf >> 8)
      0004EC 7As00            [12] 2092 	mov	r2,#(_queuebuf_to_packetbuf >> 16)
      0004EE 12r00r00         [24] 2093 	lcall	__sdcc_banked_call
      0004F1 D0 02            [24] 2094 	pop	ar2
      0004F3 D0 03            [24] 2095 	pop	ar3
      0004F5 D0 04            [24] 2096 	pop	ar4
                                   2097 ;	../../../../core/net/mac/lpp.c:365: ctimer_stop(&i->removal_timer);
      0004F7 E5 81            [12] 2098 	mov	a,sp
      0004F9 24 F9            [12] 2099 	add	a,#0xf9
      0004FB F8               [12] 2100 	mov	r0,a
      0004FC 74 06            [12] 2101 	mov	a,#0x06
      0004FE 26               [12] 2102 	add	a,@r0
      0004FF FD               [12] 2103 	mov	r5,a
      000500 E4               [12] 2104 	clr	a
      000501 08               [12] 2105 	inc	r0
      000502 36               [12] 2106 	addc	a,@r0
      000503 FE               [12] 2107 	mov	r6,a
      000504 08               [12] 2108 	inc	r0
      000505 86 07            [24] 2109 	mov	ar7,@r0
      000507 8D 82            [24] 2110 	mov	dpl,r5
      000509 8E 83            [24] 2111 	mov	dph,r6
      00050B 8F F0            [24] 2112 	mov	b,r7
      00050D C0 04            [24] 2113 	push	ar4
      00050F C0 03            [24] 2114 	push	ar3
      000511 C0 02            [24] 2115 	push	ar2
      000513 78r00            [12] 2116 	mov	r0,#_ctimer_stop
      000515 79s00            [12] 2117 	mov	r1,#(_ctimer_stop >> 8)
      000517 7As00            [12] 2118 	mov	r2,#(_ctimer_stop >> 16)
      000519 12r00r00         [24] 2119 	lcall	__sdcc_banked_call
      00051C D0 02            [24] 2120 	pop	ar2
      00051E D0 03            [24] 2121 	pop	ar3
      000520 D0 04            [24] 2122 	pop	ar4
                                   2123 ;	../../../../core/net/mac/lpp.c:366: queuebuf_free(i->packet);
      000522 8A 82            [24] 2124 	mov	dpl,r2
      000524 8B 83            [24] 2125 	mov	dph,r3
      000526 8C F0            [24] 2126 	mov	b,r4
      000528 12r00r00         [24] 2127 	lcall	__gptrget
      00052B FA               [12] 2128 	mov	r2,a
      00052C A3               [24] 2129 	inc	dptr
      00052D 12r00r00         [24] 2130 	lcall	__gptrget
      000530 FB               [12] 2131 	mov	r3,a
      000531 A3               [24] 2132 	inc	dptr
      000532 12r00r00         [24] 2133 	lcall	__gptrget
      000535 FC               [12] 2134 	mov	r4,a
      000536 8A 82            [24] 2135 	mov	dpl,r2
      000538 8B 83            [24] 2136 	mov	dph,r3
      00053A 8C F0            [24] 2137 	mov	b,r4
      00053C 78r00            [12] 2138 	mov	r0,#_queuebuf_free
      00053E 79s00            [12] 2139 	mov	r1,#(_queuebuf_free >> 8)
      000540 7As00            [12] 2140 	mov	r2,#(_queuebuf_free >> 16)
      000542 12r00r00         [24] 2141 	lcall	__sdcc_banked_call
                                   2142 ;	../../../../core/net/mac/lpp.c:367: list_remove(pending_packets_list, i);
      000545 E5 81            [12] 2143 	mov	a,sp
      000547 24 F9            [12] 2144 	add	a,#0xf9
      000549 F8               [12] 2145 	mov	r0,a
      00054A 86 05            [24] 2146 	mov	ar5,@r0
      00054C 08               [12] 2147 	inc	r0
      00054D 86 06            [24] 2148 	mov	ar6,@r0
      00054F 08               [12] 2149 	inc	r0
      000550 86 07            [24] 2150 	mov	ar7,@r0
      000552 90r00r08         [24] 2151 	mov	dptr,#_pending_packets_list
      000555 E0               [24] 2152 	movx	a,@dptr
      000556 FA               [12] 2153 	mov	r2,a
      000557 A3               [24] 2154 	inc	dptr
      000558 E0               [24] 2155 	movx	a,@dptr
      000559 FB               [12] 2156 	mov	r3,a
      00055A A3               [24] 2157 	inc	dptr
      00055B E0               [24] 2158 	movx	a,@dptr
      00055C FC               [12] 2159 	mov	r4,a
      00055D C0 05            [24] 2160 	push	ar5
      00055F C0 06            [24] 2161 	push	ar6
      000561 C0 07            [24] 2162 	push	ar7
      000563 8A 82            [24] 2163 	mov	dpl,r2
      000565 8B 83            [24] 2164 	mov	dph,r3
      000567 8C F0            [24] 2165 	mov	b,r4
      000569 78r00            [12] 2166 	mov	r0,#_list_remove
      00056B 79s00            [12] 2167 	mov	r1,#(_list_remove >> 8)
      00056D 7As00            [12] 2168 	mov	r2,#(_list_remove >> 16)
      00056F 12r00r00         [24] 2169 	lcall	__sdcc_banked_call
      000572 15 81            [12] 2170 	dec	sp
      000574 15 81            [12] 2171 	dec	sp
      000576 15 81            [12] 2172 	dec	sp
                                   2173 ;	../../../../core/net/mac/lpp.c:368: list_remove(queued_packets_list, i);
      000578 E5 81            [12] 2174 	mov	a,sp
      00057A 24 F9            [12] 2175 	add	a,#0xf9
      00057C F8               [12] 2176 	mov	r0,a
      00057D 86 05            [24] 2177 	mov	ar5,@r0
      00057F 08               [12] 2178 	inc	r0
      000580 86 06            [24] 2179 	mov	ar6,@r0
      000582 08               [12] 2180 	inc	r0
      000583 86 07            [24] 2181 	mov	ar7,@r0
      000585 90r00r0E         [24] 2182 	mov	dptr,#_queued_packets_list
      000588 E0               [24] 2183 	movx	a,@dptr
      000589 FA               [12] 2184 	mov	r2,a
      00058A A3               [24] 2185 	inc	dptr
      00058B E0               [24] 2186 	movx	a,@dptr
      00058C FB               [12] 2187 	mov	r3,a
      00058D A3               [24] 2188 	inc	dptr
      00058E E0               [24] 2189 	movx	a,@dptr
      00058F FC               [12] 2190 	mov	r4,a
      000590 C0 05            [24] 2191 	push	ar5
      000592 C0 06            [24] 2192 	push	ar6
      000594 C0 07            [24] 2193 	push	ar7
      000596 8A 82            [24] 2194 	mov	dpl,r2
      000598 8B 83            [24] 2195 	mov	dph,r3
      00059A 8C F0            [24] 2196 	mov	b,r4
      00059C 78r00            [12] 2197 	mov	r0,#_list_remove
      00059E 79s00            [12] 2198 	mov	r1,#(_list_remove >> 8)
      0005A0 7As00            [12] 2199 	mov	r2,#(_list_remove >> 16)
      0005A2 12r00r00         [24] 2200 	lcall	__sdcc_banked_call
      0005A5 15 81            [12] 2201 	dec	sp
      0005A7 15 81            [12] 2202 	dec	sp
      0005A9 15 81            [12] 2203 	dec	sp
                                   2204 ;	../../../../core/net/mac/lpp.c:371: if(list_length(queued_packets_list) == 0 && is_listening == 0) {
      0005AB 90r00r0E         [24] 2205 	mov	dptr,#_queued_packets_list
      0005AE E0               [24] 2206 	movx	a,@dptr
      0005AF FD               [12] 2207 	mov	r5,a
      0005B0 A3               [24] 2208 	inc	dptr
      0005B1 E0               [24] 2209 	movx	a,@dptr
      0005B2 FE               [12] 2210 	mov	r6,a
      0005B3 A3               [24] 2211 	inc	dptr
      0005B4 E0               [24] 2212 	movx	a,@dptr
      0005B5 FF               [12] 2213 	mov	r7,a
      0005B6 8D 82            [24] 2214 	mov	dpl,r5
      0005B8 8E 83            [24] 2215 	mov	dph,r6
      0005BA 8F F0            [24] 2216 	mov	b,r7
      0005BC 78r00            [12] 2217 	mov	r0,#_list_length
      0005BE 79s00            [12] 2218 	mov	r1,#(_list_length >> 8)
      0005C0 7As00            [12] 2219 	mov	r2,#(_list_length >> 16)
      0005C2 12r00r00         [24] 2220 	lcall	__sdcc_banked_call
      0005C5 E5 82            [12] 2221 	mov	a,dpl
      0005C7 85 83 F0         [24] 2222 	mov	b,dph
      0005CA 45 F0            [12] 2223 	orl	a,b
      0005CC 70 2F            [24] 2224 	jnz	00102$
      0005CE 90r00r00         [24] 2225 	mov	dptr,#_is_listening
      0005D1 E0               [24] 2226 	movx	a,@dptr
      0005D2 FF               [12] 2227 	mov	r7,a
      0005D3 70 28            [24] 2228 	jnz	00102$
                                   2229 ;	../../../../core/net/mac/lpp.c:372: turn_radio_off();
      0005D5 78r2C            [12] 2230 	mov	r0,#_turn_radio_off
      0005D7 79s00            [12] 2231 	mov	r1,#(_turn_radio_off >> 8)
      0005D9 7As00            [12] 2232 	mov	r2,#(_turn_radio_off >> 16)
      0005DB 12r00r00         [24] 2233 	lcall	__sdcc_banked_call
                                   2234 ;	../../../../core/net/mac/lpp.c:373: compower_accumulate(&i->compower);
      0005DE E5 81            [12] 2235 	mov	a,sp
      0005E0 24 F9            [12] 2236 	add	a,#0xf9
      0005E2 F8               [12] 2237 	mov	r0,a
      0005E3 74 1C            [12] 2238 	mov	a,#0x1C
      0005E5 26               [12] 2239 	add	a,@r0
      0005E6 FD               [12] 2240 	mov	r5,a
      0005E7 E4               [12] 2241 	clr	a
      0005E8 08               [12] 2242 	inc	r0
      0005E9 36               [12] 2243 	addc	a,@r0
      0005EA FE               [12] 2244 	mov	r6,a
      0005EB 08               [12] 2245 	inc	r0
      0005EC 86 07            [24] 2246 	mov	ar7,@r0
      0005EE 8D 82            [24] 2247 	mov	dpl,r5
      0005F0 8E 83            [24] 2248 	mov	dph,r6
      0005F2 8F F0            [24] 2249 	mov	b,r7
      0005F4 78r00            [12] 2250 	mov	r0,#_compower_accumulate
      0005F6 79s00            [12] 2251 	mov	r1,#(_compower_accumulate >> 8)
      0005F8 7As00            [12] 2252 	mov	r2,#(_compower_accumulate >> 16)
      0005FA 12r00r00         [24] 2253 	lcall	__sdcc_banked_call
      0005FD                       2254 00102$:
                                   2255 ;	../../../../core/net/mac/lpp.c:376: sent = i->sent_callback;
      0005FD E5 81            [12] 2256 	mov	a,sp
      0005FF 24 F9            [12] 2257 	add	a,#0xf9
      000601 F8               [12] 2258 	mov	r0,a
      000602 74 24            [12] 2259 	mov	a,#0x24
      000604 26               [12] 2260 	add	a,@r0
      000605 FD               [12] 2261 	mov	r5,a
      000606 E4               [12] 2262 	clr	a
      000607 08               [12] 2263 	inc	r0
      000608 36               [12] 2264 	addc	a,@r0
      000609 FE               [12] 2265 	mov	r6,a
      00060A 08               [12] 2266 	inc	r0
      00060B 86 07            [24] 2267 	mov	ar7,@r0
      00060D 8D 82            [24] 2268 	mov	dpl,r5
      00060F 8E 83            [24] 2269 	mov	dph,r6
      000611 8F F0            [24] 2270 	mov	b,r7
      000613 12r00r00         [24] 2271 	lcall	__gptrget
      000616 FD               [12] 2272 	mov	r5,a
      000617 A3               [24] 2273 	inc	dptr
      000618 12r00r00         [24] 2274 	lcall	__gptrget
      00061B FE               [12] 2275 	mov	r6,a
      00061C A3               [24] 2276 	inc	dptr
      00061D 12r00r00         [24] 2277 	lcall	__gptrget
      000620 FF               [12] 2278 	mov	r7,a
                                   2279 ;	../../../../core/net/mac/lpp.c:377: ptr = i->sent_callback_ptr;
      000621 E5 81            [12] 2280 	mov	a,sp
      000623 24 F9            [12] 2281 	add	a,#0xf9
      000625 F8               [12] 2282 	mov	r0,a
      000626 74 27            [12] 2283 	mov	a,#0x27
      000628 26               [12] 2284 	add	a,@r0
      000629 FA               [12] 2285 	mov	r2,a
      00062A E4               [12] 2286 	clr	a
      00062B 08               [12] 2287 	inc	r0
      00062C 36               [12] 2288 	addc	a,@r0
      00062D FB               [12] 2289 	mov	r3,a
      00062E 08               [12] 2290 	inc	r0
      00062F 86 04            [24] 2291 	mov	ar4,@r0
      000631 8A 82            [24] 2292 	mov	dpl,r2
      000633 8B 83            [24] 2293 	mov	dph,r3
      000635 8C F0            [24] 2294 	mov	b,r4
      000637 A8 81            [24] 2295 	mov	r0,sp
      000639 18               [12] 2296 	dec	r0
      00063A 18               [12] 2297 	dec	r0
      00063B 12r00r00         [24] 2298 	lcall	__gptrget
      00063E F6               [12] 2299 	mov	@r0,a
      00063F A3               [24] 2300 	inc	dptr
      000640 12r00r00         [24] 2301 	lcall	__gptrget
      000643 08               [12] 2302 	inc	r0
      000644 F6               [12] 2303 	mov	@r0,a
      000645 A3               [24] 2304 	inc	dptr
      000646 12r00r00         [24] 2305 	lcall	__gptrget
      000649 08               [12] 2306 	inc	r0
      00064A F6               [12] 2307 	mov	@r0,a
                                   2308 ;	../../../../core/net/mac/lpp.c:378: num_transmissions = i->num_transmissions;
      00064B E5 81            [12] 2309 	mov	a,sp
      00064D 24 F9            [12] 2310 	add	a,#0xf9
      00064F F8               [12] 2311 	mov	r0,a
      000650 74 2A            [12] 2312 	mov	a,#0x2A
      000652 26               [12] 2313 	add	a,@r0
      000653 FA               [12] 2314 	mov	r2,a
      000654 E4               [12] 2315 	clr	a
      000655 08               [12] 2316 	inc	r0
      000656 36               [12] 2317 	addc	a,@r0
      000657 FB               [12] 2318 	mov	r3,a
      000658 08               [12] 2319 	inc	r0
      000659 86 04            [24] 2320 	mov	ar4,@r0
      00065B 8A 82            [24] 2321 	mov	dpl,r2
      00065D 8B 83            [24] 2322 	mov	dph,r3
      00065F 8C F0            [24] 2323 	mov	b,r4
      000661 12r00r00         [24] 2324 	lcall	__gptrget
      000664 FA               [12] 2325 	mov	r2,a
      000665 E5 81            [12] 2326 	mov	a,sp
      000667 24 FC            [12] 2327 	add	a,#0xfc
      000669 F8               [12] 2328 	mov	r0,a
      00066A A6 02            [24] 2329 	mov	@r0,ar2
      00066C 08               [12] 2330 	inc	r0
      00066D 76 00            [12] 2331 	mov	@r0,#0x00
                                   2332 ;	../../../../core/net/mac/lpp.c:379: memb_free(&queued_packets_memb, i);
      00066F E5 81            [12] 2333 	mov	a,sp
      000671 24 F9            [12] 2334 	add	a,#0xf9
      000673 F8               [12] 2335 	mov	r0,a
      000674 86 02            [24] 2336 	mov	ar2,@r0
      000676 08               [12] 2337 	inc	r0
      000677 86 03            [24] 2338 	mov	ar3,@r0
      000679 08               [12] 2339 	inc	r0
      00067A 86 04            [24] 2340 	mov	ar4,@r0
      00067C C0 07            [24] 2341 	push	ar7
      00067E C0 06            [24] 2342 	push	ar6
      000680 C0 05            [24] 2343 	push	ar5
      000682 C0 02            [24] 2344 	push	ar2
      000684 C0 03            [24] 2345 	push	ar3
      000686 C0 04            [24] 2346 	push	ar4
      000688 90r00r11         [24] 2347 	mov	dptr,#_queued_packets_memb
      00068B 75 F0 00         [24] 2348 	mov	b,#0x00
      00068E 78r00            [12] 2349 	mov	r0,#_memb_free
      000690 79s00            [12] 2350 	mov	r1,#(_memb_free >> 8)
      000692 7As00            [12] 2351 	mov	r2,#(_memb_free >> 16)
      000694 12r00r00         [24] 2352 	lcall	__sdcc_banked_call
      000697 15 81            [12] 2353 	dec	sp
      000699 15 81            [12] 2354 	dec	sp
      00069B 15 81            [12] 2355 	dec	sp
      00069D D0 05            [24] 2356 	pop	ar5
      00069F D0 06            [24] 2357 	pop	ar6
      0006A1 D0 07            [24] 2358 	pop	ar7
                                   2359 ;	../../../../core/net/mac/lpp.c:380: if(num_transmissions == 0 || tx_ok == 0) {
      0006A3 E5 81            [12] 2360 	mov	a,sp
      0006A5 24 FC            [12] 2361 	add	a,#0xfc
      0006A7 F8               [12] 2362 	mov	r0,a
      0006A8 E6               [12] 2363 	mov	a,@r0
      0006A9 08               [12] 2364 	inc	r0
      0006AA 46               [12] 2365 	orl	a,@r0
      0006AB 60 08            [24] 2366 	jz	00104$
      0006AD E5 81            [12] 2367 	mov	a,sp
      0006AF 24 F5            [12] 2368 	add	a,#0xf5
      0006B1 F8               [12] 2369 	mov	r0,a
      0006B2 E6               [12] 2370 	mov	a,@r0
      0006B3 70 06            [24] 2371 	jnz	00105$
      0006B5                       2372 00104$:
                                   2373 ;	../../../../core/net/mac/lpp.c:381: status = MAC_TX_NOACK;
      0006B5 7B 02            [12] 2374 	mov	r3,#0x02
      0006B7 7C 00            [12] 2375 	mov	r4,#0x00
      0006B9 80 04            [24] 2376 	sjmp	00110$
      0006BB                       2377 00105$:
                                   2378 ;	../../../../core/net/mac/lpp.c:383: status = MAC_TX_OK;
      0006BB 7B 00            [12] 2379 	mov	r3,#0x00
      0006BD 7C 00            [12] 2380 	mov	r4,#0x00
                                   2381 ;	../../../../core/net/mac/lpp.c:385: mac_call_sent_callback(sent, ptr, status, num_transmissions);
      0006BF                       2382 00110$:
      0006BF ED               [12] 2383 	mov	a,r5
      0006C0 4E               [12] 2384 	orl	a,r6
      0006C1 60 3E            [24] 2385 	jz	00113$
      0006C3 C0 07            [24] 2386 	push	ar7
      0006C5 C0 06            [24] 2387 	push	ar6
      0006C7 C0 05            [24] 2388 	push	ar5
      0006C9 E5 81            [12] 2389 	mov	a,sp
      0006CB 24 F9            [12] 2390 	add	a,#0xf9
      0006CD F8               [12] 2391 	mov	r0,a
      0006CE E6               [12] 2392 	mov	a,@r0
      0006CF C0 E0            [24] 2393 	push	acc
      0006D1 08               [12] 2394 	inc	r0
      0006D2 E6               [12] 2395 	mov	a,@r0
      0006D3 C0 E0            [24] 2396 	push	acc
      0006D5 C0 03            [24] 2397 	push	ar3
      0006D7 C0 04            [24] 2398 	push	ar4
      0006D9 C0 05            [24] 2399 	push	ar5
      0006DB C0 06            [24] 2400 	push	ar6
      0006DD C0 07            [24] 2401 	push	ar7
      0006DF E5 81            [12] 2402 	mov	a,sp
      0006E1 24 F4            [12] 2403 	add	a,#0xf4
      0006E3 F8               [12] 2404 	mov	r0,a
      0006E4 86 82            [24] 2405 	mov	dpl,@r0
      0006E6 08               [12] 2406 	inc	r0
      0006E7 86 83            [24] 2407 	mov	dph,@r0
      0006E9 08               [12] 2408 	inc	r0
      0006EA 86 F0            [24] 2409 	mov	b,@r0
      0006EC D0 02            [24] 2410 	pop	ar2
      0006EE D0 01            [24] 2411 	pop	ar1
      0006F0 D0 00            [24] 2412 	pop	ar0
      0006F2 12r00r00         [24] 2413 	lcall	__sdcc_banked_call
      0006F5 E5 81            [12] 2414 	mov	a,sp
      0006F7 24 FC            [12] 2415 	add	a,#0xfc
      0006F9 F5 81            [12] 2416 	mov	sp,a
      0006FB D0 05            [24] 2417 	pop	ar5
      0006FD D0 06            [24] 2418 	pop	ar6
      0006FF D0 07            [24] 2419 	pop	ar7
      000701                       2420 00113$:
      000701 E5 81            [12] 2421 	mov	a,sp
      000703 24 F8            [12] 2422 	add	a,#0xF8
      000705 F5 81            [12] 2423 	mov	sp,a
      000707 02r00r00         [24] 2424 	ljmp	__sdcc_banked_ret
                                   2425 ;------------------------------------------------------------
                                   2426 ;Allocation info for local variables in function 'remove_queued_old_packet_callback'
                                   2427 ;------------------------------------------------------------
                                   2428 ;item                      Allocated to registers r5 r6 r7 
                                   2429 ;------------------------------------------------------------
                                   2430 ;	../../../../core/net/mac/lpp.c:389: remove_queued_old_packet_callback(void *item)
                                   2431 ;	-----------------------------------------
                                   2432 ;	 function remove_queued_old_packet_callback
                                   2433 ;	-----------------------------------------
      00070A                       2434 _remove_queued_old_packet_callback:
      00070A AD 82            [24] 2435 	mov	r5,dpl
      00070C AE 83            [24] 2436 	mov	r6,dph
      00070E AF F0            [24] 2437 	mov	r7,b
                                   2438 ;	../../../../core/net/mac/lpp.c:391: remove_queued_packet(item, 0);
      000710 E4               [12] 2439 	clr	a
      000711 C0 E0            [24] 2440 	push	acc
      000713 8D 82            [24] 2441 	mov	dpl,r5
      000715 8E 83            [24] 2442 	mov	dph,r6
      000717 8F F0            [24] 2443 	mov	b,r7
      000719 78rAE            [12] 2444 	mov	r0,#_remove_queued_packet
      00071B 79s04            [12] 2445 	mov	r1,#(_remove_queued_packet >> 8)
      00071D 7As00            [12] 2446 	mov	r2,#(_remove_queued_packet >> 16)
      00071F 12r00r00         [24] 2447 	lcall	__sdcc_banked_call
      000722 15 81            [12] 2448 	dec	sp
      000724 02r00r00         [24] 2449 	ljmp	__sdcc_banked_ret
                                   2450 ;------------------------------------------------------------
                                   2451 ;Allocation info for local variables in function 'listen_callback'
                                   2452 ;------------------------------------------------------------
                                   2453 ;periods                   Allocated to registers r6 r7 
                                   2454 ;------------------------------------------------------------
                                   2455 ;	../../../../core/net/mac/lpp.c:412: listen_callback(int periods)
                                   2456 ;	-----------------------------------------
                                   2457 ;	 function listen_callback
                                   2458 ;	-----------------------------------------
      000727                       2459 _listen_callback:
      000727 AE 82            [24] 2460 	mov	r6,dpl
                                   2461 ;	../../../../core/net/mac/lpp.c:414: is_listening = periods;
      000729 90r00r00         [24] 2462 	mov	dptr,#_is_listening
      00072C EE               [12] 2463 	mov	a,r6
      00072D F0               [24] 2464 	movx	@dptr,a
                                   2465 ;	../../../../core/net/mac/lpp.c:415: turn_radio_on();
      00072E 78r00            [12] 2466 	mov	r0,#_turn_radio_on
      000730 79s00            [12] 2467 	mov	r1,#(_turn_radio_on >> 8)
      000732 7As00            [12] 2468 	mov	r2,#(_turn_radio_on >> 16)
      000734 12r00r00         [24] 2469 	lcall	__sdcc_banked_call
      000737 02r00r00         [24] 2470 	ljmp	__sdcc_banked_ret
                                   2471 ;------------------------------------------------------------
                                   2472 ;Allocation info for local variables in function 'send_probe'
                                   2473 ;------------------------------------------------------------
                                   2474 ;hdr                       Allocated to registers r5 r6 r7 
                                   2475 ;adata                     Allocated to stack - sp -5
                                   2476 ;a                         Allocated to stack - sp -2
                                   2477 ;hdrlen                    Allocated to registers r2 r3 
                                   2478 ;sloc0                     Allocated to stack - sp -8
                                   2479 ;------------------------------------------------------------
                                   2480 ;	../../../../core/net/mac/lpp.c:422: send_probe(void)
                                   2481 ;	-----------------------------------------
                                   2482 ;	 function send_probe
                                   2483 ;	-----------------------------------------
      00073A                       2484 _send_probe:
      00073A E5 81            [12] 2485 	mov	a,sp
      00073C 24 09            [12] 2486 	add	a,#0x09
      00073E F5 81            [12] 2487 	mov	sp,a
                                   2488 ;	../../../../core/net/mac/lpp.c:429: packetbuf_clear();
      000740 78r00            [12] 2489 	mov	r0,#_packetbuf_clear
      000742 79s00            [12] 2490 	mov	r1,#(_packetbuf_clear >> 8)
      000744 7As00            [12] 2491 	mov	r2,#(_packetbuf_clear >> 16)
      000746 12r00r00         [24] 2492 	lcall	__sdcc_banked_call
                                   2493 ;	../../../../core/net/mac/lpp.c:430: packetbuf_set_datalen(sizeof(struct lpp_hdr));
      000749 90 00 12         [24] 2494 	mov	dptr,#0x0012
      00074C 78r00            [12] 2495 	mov	r0,#_packetbuf_set_datalen
      00074E 79s00            [12] 2496 	mov	r1,#(_packetbuf_set_datalen >> 8)
      000750 7As00            [12] 2497 	mov	r2,#(_packetbuf_set_datalen >> 16)
      000752 12r00r00         [24] 2498 	lcall	__sdcc_banked_call
                                   2499 ;	../../../../core/net/mac/lpp.c:431: hdr = packetbuf_dataptr();
      000755 78r00            [12] 2500 	mov	r0,#_packetbuf_dataptr
      000757 79s00            [12] 2501 	mov	r1,#(_packetbuf_dataptr >> 8)
      000759 7As00            [12] 2502 	mov	r2,#(_packetbuf_dataptr >> 16)
      00075B 12r00r00         [24] 2503 	lcall	__sdcc_banked_call
                                   2504 ;	../../../../core/net/mac/lpp.c:432: hdr->type = TYPE_PROBE;
      00075E AD 82            [24] 2505 	mov	r5,dpl
      000760 AE 83            [24] 2506 	mov	r6,dph
      000762 AF F0            [24] 2507 	mov	r7,b
      000764 74 01            [12] 2508 	mov	a,#0x01
      000766 12r00r00         [24] 2509 	lcall	__gptrput
      000769 A3               [24] 2510 	inc	dptr
      00076A E4               [12] 2511 	clr	a
      00076B 12r00r00         [24] 2512 	lcall	__gptrput
                                   2513 ;	../../../../core/net/mac/lpp.c:433: rimeaddr_copy(&hdr->sender, &rimeaddr_node_addr);
      00076E 74 02            [12] 2514 	mov	a,#0x02
      000770 2D               [12] 2515 	add	a,r5
      000771 FA               [12] 2516 	mov	r2,a
      000772 E4               [12] 2517 	clr	a
      000773 3E               [12] 2518 	addc	a,r6
      000774 FB               [12] 2519 	mov	r3,a
      000775 8F 04            [24] 2520 	mov	ar4,r7
      000777 C0 07            [24] 2521 	push	ar7
      000779 C0 06            [24] 2522 	push	ar6
      00077B C0 05            [24] 2523 	push	ar5
      00077D 74r00            [12] 2524 	mov	a,#_rimeaddr_node_addr
      00077F C0 E0            [24] 2525 	push	acc
      000781 74s00            [12] 2526 	mov	a,#(_rimeaddr_node_addr >> 8)
      000783 C0 E0            [24] 2527 	push	acc
      000785 E4               [12] 2528 	clr	a
      000786 C0 E0            [24] 2529 	push	acc
      000788 8A 82            [24] 2530 	mov	dpl,r2
      00078A 8B 83            [24] 2531 	mov	dph,r3
      00078C 8C F0            [24] 2532 	mov	b,r4
      00078E 78r00            [12] 2533 	mov	r0,#_rimeaddr_copy
      000790 79s00            [12] 2534 	mov	r1,#(_rimeaddr_copy >> 8)
      000792 7As00            [12] 2535 	mov	r2,#(_rimeaddr_copy >> 16)
      000794 12r00r00         [24] 2536 	lcall	__sdcc_banked_call
      000797 15 81            [12] 2537 	dec	sp
      000799 15 81            [12] 2538 	dec	sp
      00079B 15 81            [12] 2539 	dec	sp
      00079D D0 05            [24] 2540 	pop	ar5
      00079F D0 06            [24] 2541 	pop	ar6
      0007A1 D0 07            [24] 2542 	pop	ar7
                                   2543 ;	../../../../core/net/mac/lpp.c:435: rimeaddr_copy(&hdr->receiver, &rimeaddr_null);
      0007A3 74 0A            [12] 2544 	mov	a,#0x0A
      0007A5 2D               [12] 2545 	add	a,r5
      0007A6 FA               [12] 2546 	mov	r2,a
      0007A7 E4               [12] 2547 	clr	a
      0007A8 3E               [12] 2548 	addc	a,r6
      0007A9 FB               [12] 2549 	mov	r3,a
      0007AA 8F 04            [24] 2550 	mov	ar4,r7
      0007AC C0 07            [24] 2551 	push	ar7
      0007AE C0 06            [24] 2552 	push	ar6
      0007B0 C0 05            [24] 2553 	push	ar5
      0007B2 74r00            [12] 2554 	mov	a,#_rimeaddr_null
      0007B4 C0 E0            [24] 2555 	push	acc
      0007B6 74s00            [12] 2556 	mov	a,#(_rimeaddr_null >> 8)
      0007B8 C0 E0            [24] 2557 	push	acc
      0007BA 74 80            [12] 2558 	mov	a,#0x80
      0007BC C0 E0            [24] 2559 	push	acc
      0007BE 8A 82            [24] 2560 	mov	dpl,r2
      0007C0 8B 83            [24] 2561 	mov	dph,r3
      0007C2 8C F0            [24] 2562 	mov	b,r4
      0007C4 78r00            [12] 2563 	mov	r0,#_rimeaddr_copy
      0007C6 79s00            [12] 2564 	mov	r1,#(_rimeaddr_copy >> 8)
      0007C8 7As00            [12] 2565 	mov	r2,#(_rimeaddr_copy >> 16)
      0007CA 12r00r00         [24] 2566 	lcall	__sdcc_banked_call
      0007CD 15 81            [12] 2567 	dec	sp
      0007CF 15 81            [12] 2568 	dec	sp
      0007D1 15 81            [12] 2569 	dec	sp
                                   2570 ;	../../../../core/net/mac/lpp.c:437: packetbuf_set_addr(PACKETBUF_ADDR_RECEIVER, &rimeaddr_null);
      0007D3 74r00            [12] 2571 	mov	a,#_rimeaddr_null
      0007D5 C0 E0            [24] 2572 	push	acc
      0007D7 74s00            [12] 2573 	mov	a,#(_rimeaddr_null >> 8)
      0007D9 C0 E0            [24] 2574 	push	acc
      0007DB 74 80            [12] 2575 	mov	a,#0x80
      0007DD C0 E0            [24] 2576 	push	acc
      0007DF 75 82 19         [24] 2577 	mov	dpl,#0x19
      0007E2 78r00            [12] 2578 	mov	r0,#_packetbuf_set_addr
      0007E4 79s00            [12] 2579 	mov	r1,#(_packetbuf_set_addr >> 8)
      0007E6 7As00            [12] 2580 	mov	r2,#(_packetbuf_set_addr >> 16)
      0007E8 12r00r00         [24] 2581 	lcall	__sdcc_banked_call
      0007EB 15 81            [12] 2582 	dec	sp
      0007ED 15 81            [12] 2583 	dec	sp
      0007EF 15 81            [12] 2584 	dec	sp
                                   2585 ;	../../../../core/net/mac/lpp.c:439: int hdrlen = NETSTACK_FRAMER.create();
      0007F1 90r00r00         [24] 2586 	mov	dptr,#_framer_802154
      0007F4 E4               [12] 2587 	clr	a
      0007F5 93               [24] 2588 	movc	a,@a+dptr
      0007F6 FA               [12] 2589 	mov	r2,a
      0007F7 A3               [24] 2590 	inc	dptr
      0007F8 E4               [12] 2591 	clr	a
      0007F9 93               [24] 2592 	movc	a,@a+dptr
      0007FA FB               [12] 2593 	mov	r3,a
      0007FB A3               [24] 2594 	inc	dptr
      0007FC E4               [12] 2595 	clr	a
      0007FD 93               [24] 2596 	movc	a,@a+dptr
      0007FE FC               [12] 2597 	mov	r4,a
      0007FF C0 04            [24] 2598 	push	ar4
      000801 C0 02            [24] 2599 	push	ar2
      000803 C0 03            [24] 2600 	push	ar3
      000805 C0 04            [24] 2601 	push	ar4
      000807 D0 02            [24] 2602 	pop	ar2
      000809 D0 01            [24] 2603 	pop	ar1
      00080B D0 00            [24] 2604 	pop	ar0
      00080D 12r00r00         [24] 2605 	lcall	__sdcc_banked_call
      000810 AA 82            [24] 2606 	mov	r2,dpl
      000812 AB 83            [24] 2607 	mov	r3,dph
      000814 D0 04            [24] 2608 	pop	ar4
      000816 D0 05            [24] 2609 	pop	ar5
      000818 D0 06            [24] 2610 	pop	ar6
      00081A D0 07            [24] 2611 	pop	ar7
                                   2612 ;	../../../../core/net/mac/lpp.c:440: if(hdrlen < 0) {
      00081C EB               [12] 2613 	mov	a,r3
      00081D 30 E7 03         [24] 2614 	jnb	acc.7,00102$
                                   2615 ;	../../../../core/net/mac/lpp.c:442: return;
      000820 02r0ArDD         [24] 2616 	ljmp	00110$
      000823                       2617 00102$:
                                   2618 ;	../../../../core/net/mac/lpp.c:447: adata = (struct announcement_msg *)((char *)hdr + sizeof(struct lpp_hdr));
      000823 74 12            [12] 2619 	mov	a,#0x12
      000825 2D               [12] 2620 	add	a,r5
      000826 FD               [12] 2621 	mov	r5,a
      000827 E4               [12] 2622 	clr	a
      000828 3E               [12] 2623 	addc	a,r6
      000829 FE               [12] 2624 	mov	r6,a
      00082A E5 81            [12] 2625 	mov	a,sp
      00082C 24 FB            [12] 2626 	add	a,#0xfb
      00082E F8               [12] 2627 	mov	r0,a
      00082F A6 05            [24] 2628 	mov	@r0,ar5
      000831 08               [12] 2629 	inc	r0
      000832 A6 06            [24] 2630 	mov	@r0,ar6
      000834 08               [12] 2631 	inc	r0
      000835 A6 07            [24] 2632 	mov	@r0,ar7
                                   2633 ;	../../../../core/net/mac/lpp.c:449: adata->num = 0;
      000837 E5 81            [12] 2634 	mov	a,sp
      000839 24 FB            [12] 2635 	add	a,#0xfb
      00083B F8               [12] 2636 	mov	r0,a
      00083C 86 82            [24] 2637 	mov	dpl,@r0
      00083E 08               [12] 2638 	inc	r0
      00083F 86 83            [24] 2639 	mov	dph,@r0
      000841 08               [12] 2640 	inc	r0
      000842 86 F0            [24] 2641 	mov	b,@r0
      000844 E4               [12] 2642 	clr	a
      000845 12r00r00         [24] 2643 	lcall	__gptrput
      000848 A3               [24] 2644 	inc	dptr
      000849 E4               [12] 2645 	clr	a
      00084A 12r00r00         [24] 2646 	lcall	__gptrput
                                   2647 ;	../../../../core/net/mac/lpp.c:450: for(a = announcement_list(); a != NULL; a = list_item_next(a)) {
      00084D 78r00            [12] 2648 	mov	r0,#_announcement_list
      00084F 79s00            [12] 2649 	mov	r1,#(_announcement_list >> 8)
      000851 7As00            [12] 2650 	mov	r2,#(_announcement_list >> 16)
      000853 12r00r00         [24] 2651 	lcall	__sdcc_banked_call
      000856 AA 82            [24] 2652 	mov	r2,dpl
      000858 AB 83            [24] 2653 	mov	r3,dph
      00085A AC F0            [24] 2654 	mov	r4,b
      00085C A8 81            [24] 2655 	mov	r0,sp
      00085E 18               [12] 2656 	dec	r0
      00085F 18               [12] 2657 	dec	r0
      000860 A6 02            [24] 2658 	mov	@r0,ar2
      000862 08               [12] 2659 	inc	r0
      000863 A6 03            [24] 2660 	mov	@r0,ar3
      000865 08               [12] 2661 	inc	r0
      000866 A6 04            [24] 2662 	mov	@r0,ar4
      000868 E5 81            [12] 2663 	mov	a,sp
      00086A 24 FB            [12] 2664 	add	a,#0xfb
      00086C F8               [12] 2665 	mov	r0,a
      00086D 74 02            [12] 2666 	mov	a,#0x02
      00086F 26               [12] 2667 	add	a,@r0
      000870 FA               [12] 2668 	mov	r2,a
      000871 E4               [12] 2669 	clr	a
      000872 08               [12] 2670 	inc	r0
      000873 36               [12] 2671 	addc	a,@r0
      000874 FB               [12] 2672 	mov	r3,a
      000875 08               [12] 2673 	inc	r0
      000876 86 04            [24] 2674 	mov	ar4,@r0
      000878                       2675 00108$:
      000878 A8 81            [24] 2676 	mov	r0,sp
      00087A 18               [12] 2677 	dec	r0
      00087B 18               [12] 2678 	dec	r0
      00087C E4               [12] 2679 	clr	a
      00087D C0 E0            [24] 2680 	push	acc
      00087F E4               [12] 2681 	clr	a
      000880 C0 E0            [24] 2682 	push	acc
      000882 E4               [12] 2683 	clr	a
      000883 C0 E0            [24] 2684 	push	acc
      000885 86 82            [24] 2685 	mov	dpl,@r0
      000887 08               [12] 2686 	inc	r0
      000888 86 83            [24] 2687 	mov	dph,@r0
      00088A 08               [12] 2688 	inc	r0
      00088B 86 F0            [24] 2689 	mov	b,@r0
      00088D 12r00r00         [24] 2690 	lcall	___gptr_cmp
      000890 15 81            [12] 2691 	dec	sp
      000892 15 81            [12] 2692 	dec	sp
      000894 15 81            [12] 2693 	dec	sp
      000896 70 03            [24] 2694 	jnz	00125$
      000898 02r09rD6         [24] 2695 	ljmp	00103$
      00089B                       2696 00125$:
                                   2697 ;	../../../../core/net/mac/lpp.c:451: adata->data[adata->num].id = a->id;
      00089B E5 81            [12] 2698 	mov	a,sp
      00089D 24 FB            [12] 2699 	add	a,#0xfb
      00089F F8               [12] 2700 	mov	r0,a
      0008A0 86 82            [24] 2701 	mov	dpl,@r0
      0008A2 08               [12] 2702 	inc	r0
      0008A3 86 83            [24] 2703 	mov	dph,@r0
      0008A5 08               [12] 2704 	inc	r0
      0008A6 86 F0            [24] 2705 	mov	b,@r0
      0008A8 12r00r00         [24] 2706 	lcall	__gptrget
      0008AB FE               [12] 2707 	mov	r6,a
      0008AC A3               [24] 2708 	inc	dptr
      0008AD 12r00r00         [24] 2709 	lcall	__gptrget
      0008B0 CE               [12] 2710 	xch	a,r6
      0008B1 25 E0            [12] 2711 	add	a,acc
      0008B3 CE               [12] 2712 	xch	a,r6
      0008B4 33               [12] 2713 	rlc	a
      0008B5 CE               [12] 2714 	xch	a,r6
      0008B6 25 E0            [12] 2715 	add	a,acc
      0008B8 CE               [12] 2716 	xch	a,r6
      0008B9 33               [12] 2717 	rlc	a
      0008BA FF               [12] 2718 	mov	r7,a
      0008BB E5 81            [12] 2719 	mov	a,sp
      0008BD 24 F8            [12] 2720 	add	a,#0xf8
      0008BF F8               [12] 2721 	mov	r0,a
      0008C0 EE               [12] 2722 	mov	a,r6
      0008C1 2A               [12] 2723 	add	a,r2
      0008C2 F6               [12] 2724 	mov	@r0,a
      0008C3 EF               [12] 2725 	mov	a,r7
      0008C4 3B               [12] 2726 	addc	a,r3
      0008C5 08               [12] 2727 	inc	r0
      0008C6 F6               [12] 2728 	mov	@r0,a
      0008C7 08               [12] 2729 	inc	r0
      0008C8 A6 04            [24] 2730 	mov	@r0,ar4
      0008CA A8 81            [24] 2731 	mov	r0,sp
      0008CC 18               [12] 2732 	dec	r0
      0008CD 18               [12] 2733 	dec	r0
      0008CE 74 03            [12] 2734 	mov	a,#0x03
      0008D0 26               [12] 2735 	add	a,@r0
      0008D1 FD               [12] 2736 	mov	r5,a
      0008D2 E4               [12] 2737 	clr	a
      0008D3 08               [12] 2738 	inc	r0
      0008D4 36               [12] 2739 	addc	a,@r0
      0008D5 FE               [12] 2740 	mov	r6,a
      0008D6 08               [12] 2741 	inc	r0
      0008D7 86 07            [24] 2742 	mov	ar7,@r0
      0008D9 8D 82            [24] 2743 	mov	dpl,r5
      0008DB 8E 83            [24] 2744 	mov	dph,r6
      0008DD 8F F0            [24] 2745 	mov	b,r7
      0008DF 12r00r00         [24] 2746 	lcall	__gptrget
      0008E2 FD               [12] 2747 	mov	r5,a
      0008E3 A3               [24] 2748 	inc	dptr
      0008E4 12r00r00         [24] 2749 	lcall	__gptrget
      0008E7 FE               [12] 2750 	mov	r6,a
      0008E8 E5 81            [12] 2751 	mov	a,sp
      0008EA 24 F8            [12] 2752 	add	a,#0xf8
      0008EC F8               [12] 2753 	mov	r0,a
      0008ED 86 82            [24] 2754 	mov	dpl,@r0
      0008EF 08               [12] 2755 	inc	r0
      0008F0 86 83            [24] 2756 	mov	dph,@r0
      0008F2 08               [12] 2757 	inc	r0
      0008F3 86 F0            [24] 2758 	mov	b,@r0
      0008F5 ED               [12] 2759 	mov	a,r5
      0008F6 12r00r00         [24] 2760 	lcall	__gptrput
      0008F9 A3               [24] 2761 	inc	dptr
      0008FA EE               [12] 2762 	mov	a,r6
      0008FB 12r00r00         [24] 2763 	lcall	__gptrput
                                   2764 ;	../../../../core/net/mac/lpp.c:452: adata->data[adata->num].value = a->value;
      0008FE E5 81            [12] 2765 	mov	a,sp
      000900 24 FB            [12] 2766 	add	a,#0xfb
      000902 F8               [12] 2767 	mov	r0,a
      000903 86 82            [24] 2768 	mov	dpl,@r0
      000905 08               [12] 2769 	inc	r0
      000906 86 83            [24] 2770 	mov	dph,@r0
      000908 08               [12] 2771 	inc	r0
      000909 86 F0            [24] 2772 	mov	b,@r0
      00090B 12r00r00         [24] 2773 	lcall	__gptrget
      00090E FE               [12] 2774 	mov	r6,a
      00090F A3               [24] 2775 	inc	dptr
      000910 12r00r00         [24] 2776 	lcall	__gptrget
      000913 CE               [12] 2777 	xch	a,r6
      000914 25 E0            [12] 2778 	add	a,acc
      000916 CE               [12] 2779 	xch	a,r6
      000917 33               [12] 2780 	rlc	a
      000918 CE               [12] 2781 	xch	a,r6
      000919 25 E0            [12] 2782 	add	a,acc
      00091B CE               [12] 2783 	xch	a,r6
      00091C 33               [12] 2784 	rlc	a
      00091D FF               [12] 2785 	mov	r7,a
      00091E EE               [12] 2786 	mov	a,r6
      00091F 2A               [12] 2787 	add	a,r2
      000920 FE               [12] 2788 	mov	r6,a
      000921 EF               [12] 2789 	mov	a,r7
      000922 3B               [12] 2790 	addc	a,r3
      000923 FF               [12] 2791 	mov	r7,a
      000924 8C 05            [24] 2792 	mov	ar5,r4
      000926 74 02            [12] 2793 	mov	a,#0x02
      000928 2E               [12] 2794 	add	a,r6
      000929 FE               [12] 2795 	mov	r6,a
      00092A E4               [12] 2796 	clr	a
      00092B 3F               [12] 2797 	addc	a,r7
      00092C FF               [12] 2798 	mov	r7,a
      00092D C0 02            [24] 2799 	push	ar2
      00092F C0 03            [24] 2800 	push	ar3
      000931 C0 04            [24] 2801 	push	ar4
      000933 E5 81            [12] 2802 	mov	a,sp
      000935 24 FB            [12] 2803 	add	a,#0xfb
      000937 F8               [12] 2804 	mov	r0,a
      000938 74 05            [12] 2805 	mov	a,#0x05
      00093A 26               [12] 2806 	add	a,@r0
      00093B FA               [12] 2807 	mov	r2,a
      00093C E4               [12] 2808 	clr	a
      00093D 08               [12] 2809 	inc	r0
      00093E 36               [12] 2810 	addc	a,@r0
      00093F FB               [12] 2811 	mov	r3,a
      000940 08               [12] 2812 	inc	r0
      000941 86 04            [24] 2813 	mov	ar4,@r0
      000943 8A 82            [24] 2814 	mov	dpl,r2
      000945 8B 83            [24] 2815 	mov	dph,r3
      000947 8C F0            [24] 2816 	mov	b,r4
      000949 12r00r00         [24] 2817 	lcall	__gptrget
      00094C FA               [12] 2818 	mov	r2,a
      00094D A3               [24] 2819 	inc	dptr
      00094E 12r00r00         [24] 2820 	lcall	__gptrget
      000951 FB               [12] 2821 	mov	r3,a
      000952 8E 82            [24] 2822 	mov	dpl,r6
      000954 8F 83            [24] 2823 	mov	dph,r7
      000956 8D F0            [24] 2824 	mov	b,r5
      000958 EA               [12] 2825 	mov	a,r2
      000959 12r00r00         [24] 2826 	lcall	__gptrput
      00095C A3               [24] 2827 	inc	dptr
      00095D EB               [12] 2828 	mov	a,r3
      00095E 12r00r00         [24] 2829 	lcall	__gptrput
                                   2830 ;	../../../../core/net/mac/lpp.c:453: adata->num++;
      000961 E5 81            [12] 2831 	mov	a,sp
      000963 24 F8            [12] 2832 	add	a,#0xf8
      000965 F8               [12] 2833 	mov	r0,a
      000966 86 82            [24] 2834 	mov	dpl,@r0
      000968 08               [12] 2835 	inc	r0
      000969 86 83            [24] 2836 	mov	dph,@r0
      00096B 08               [12] 2837 	inc	r0
      00096C 86 F0            [24] 2838 	mov	b,@r0
      00096E 12r00r00         [24] 2839 	lcall	__gptrget
      000971 FE               [12] 2840 	mov	r6,a
      000972 A3               [24] 2841 	inc	dptr
      000973 12r00r00         [24] 2842 	lcall	__gptrget
      000976 FF               [12] 2843 	mov	r7,a
      000977 0E               [12] 2844 	inc	r6
      000978 BE 00 01         [24] 2845 	cjne	r6,#0x00,00126$
      00097B 0F               [12] 2846 	inc	r7
      00097C                       2847 00126$:
      00097C E5 81            [12] 2848 	mov	a,sp
      00097E 24 F8            [12] 2849 	add	a,#0xf8
      000980 F8               [12] 2850 	mov	r0,a
      000981 86 82            [24] 2851 	mov	dpl,@r0
      000983 08               [12] 2852 	inc	r0
      000984 86 83            [24] 2853 	mov	dph,@r0
      000986 08               [12] 2854 	inc	r0
      000987 86 F0            [24] 2855 	mov	b,@r0
      000989 EE               [12] 2856 	mov	a,r6
      00098A 12r00r00         [24] 2857 	lcall	__gptrput
      00098D A3               [24] 2858 	inc	dptr
      00098E EF               [12] 2859 	mov	a,r7
      00098F 12r00r00         [24] 2860 	lcall	__gptrput
                                   2861 ;	../../../../core/net/mac/lpp.c:450: for(a = announcement_list(); a != NULL; a = list_item_next(a)) {
      000992 E5 81            [12] 2862 	mov	a,sp
      000994 24 FB            [12] 2863 	add	a,#0xfb
      000996 F8               [12] 2864 	mov	r0,a
      000997 86 02            [24] 2865 	mov	ar2,@r0
      000999 08               [12] 2866 	inc	r0
      00099A 86 03            [24] 2867 	mov	ar3,@r0
      00099C 08               [12] 2868 	inc	r0
      00099D 86 04            [24] 2869 	mov	ar4,@r0
      00099F 8A 82            [24] 2870 	mov	dpl,r2
      0009A1 8B 83            [24] 2871 	mov	dph,r3
      0009A3 8C F0            [24] 2872 	mov	b,r4
      0009A5 C0 04            [24] 2873 	push	ar4
      0009A7 C0 03            [24] 2874 	push	ar3
      0009A9 C0 02            [24] 2875 	push	ar2
      0009AB 78r00            [12] 2876 	mov	r0,#_list_item_next
      0009AD 79s00            [12] 2877 	mov	r1,#(_list_item_next >> 8)
      0009AF 7As00            [12] 2878 	mov	r2,#(_list_item_next >> 16)
      0009B1 12r00r00         [24] 2879 	lcall	__sdcc_banked_call
      0009B4 AD 82            [24] 2880 	mov	r5,dpl
      0009B6 AE 83            [24] 2881 	mov	r6,dph
      0009B8 AF F0            [24] 2882 	mov	r7,b
      0009BA D0 02            [24] 2883 	pop	ar2
      0009BC D0 03            [24] 2884 	pop	ar3
      0009BE D0 04            [24] 2885 	pop	ar4
      0009C0 E5 81            [12] 2886 	mov	a,sp
      0009C2 24 FB            [12] 2887 	add	a,#0xfb
      0009C4 F8               [12] 2888 	mov	r0,a
      0009C5 A6 05            [24] 2889 	mov	@r0,ar5
      0009C7 08               [12] 2890 	inc	r0
      0009C8 A6 06            [24] 2891 	mov	@r0,ar6
      0009CA 08               [12] 2892 	inc	r0
      0009CB A6 07            [24] 2893 	mov	@r0,ar7
      0009CD D0 04            [24] 2894 	pop	ar4
      0009CF D0 03            [24] 2895 	pop	ar3
      0009D1 D0 02            [24] 2896 	pop	ar2
      0009D3 02r08r78         [24] 2897 	ljmp	00108$
      0009D6                       2898 00103$:
                                   2899 ;	../../../../core/net/mac/lpp.c:458: sizeof(struct announcement_data) * adata->num);
      0009D6 E5 81            [12] 2900 	mov	a,sp
      0009D8 24 FB            [12] 2901 	add	a,#0xfb
      0009DA F8               [12] 2902 	mov	r0,a
      0009DB 86 82            [24] 2903 	mov	dpl,@r0
      0009DD 08               [12] 2904 	inc	r0
      0009DE 86 83            [24] 2905 	mov	dph,@r0
      0009E0 08               [12] 2906 	inc	r0
      0009E1 86 F0            [24] 2907 	mov	b,@r0
      0009E3 12r00r00         [24] 2908 	lcall	__gptrget
      0009E6 FE               [12] 2909 	mov	r6,a
      0009E7 A3               [24] 2910 	inc	dptr
      0009E8 12r00r00         [24] 2911 	lcall	__gptrget
      0009EB CE               [12] 2912 	xch	a,r6
      0009EC 25 E0            [12] 2913 	add	a,acc
      0009EE CE               [12] 2914 	xch	a,r6
      0009EF 33               [12] 2915 	rlc	a
      0009F0 CE               [12] 2916 	xch	a,r6
      0009F1 25 E0            [12] 2917 	add	a,acc
      0009F3 CE               [12] 2918 	xch	a,r6
      0009F4 33               [12] 2919 	rlc	a
      0009F5 FF               [12] 2920 	mov	r7,a
      0009F6 74 14            [12] 2921 	mov	a,#0x14
      0009F8 2E               [12] 2922 	add	a,r6
      0009F9 FE               [12] 2923 	mov	r6,a
      0009FA E4               [12] 2924 	clr	a
      0009FB 3F               [12] 2925 	addc	a,r7
      0009FC FF               [12] 2926 	mov	r7,a
      0009FD 8E 82            [24] 2927 	mov	dpl,r6
      0009FF 8F 83            [24] 2928 	mov	dph,r7
      000A01 78r00            [12] 2929 	mov	r0,#_packetbuf_set_datalen
      000A03 79s00            [12] 2930 	mov	r1,#(_packetbuf_set_datalen >> 8)
      000A05 7As00            [12] 2931 	mov	r2,#(_packetbuf_set_datalen >> 16)
      000A07 12r00r00         [24] 2932 	lcall	__sdcc_banked_call
                                   2933 ;	../../../../core/net/mac/lpp.c:464: if(NETSTACK_RADIO.channel_clear()) {
      000A0A 90r00r0F         [24] 2934 	mov	dptr,#(_cc2530_rf_driver + 0x000f)
      000A0D E4               [12] 2935 	clr	a
      000A0E 93               [24] 2936 	movc	a,@a+dptr
      000A0F FD               [12] 2937 	mov	r5,a
      000A10 A3               [24] 2938 	inc	dptr
      000A11 E4               [12] 2939 	clr	a
      000A12 93               [24] 2940 	movc	a,@a+dptr
      000A13 FE               [12] 2941 	mov	r6,a
      000A14 A3               [24] 2942 	inc	dptr
      000A15 E4               [12] 2943 	clr	a
      000A16 93               [24] 2944 	movc	a,@a+dptr
      000A17 FF               [12] 2945 	mov	r7,a
      000A18 C0 07            [24] 2946 	push	ar7
      000A1A C0 05            [24] 2947 	push	ar5
      000A1C C0 06            [24] 2948 	push	ar6
      000A1E C0 07            [24] 2949 	push	ar7
      000A20 D0 02            [24] 2950 	pop	ar2
      000A22 D0 01            [24] 2951 	pop	ar1
      000A24 D0 00            [24] 2952 	pop	ar0
      000A26 12r00r00         [24] 2953 	lcall	__sdcc_banked_call
      000A29 AD 82            [24] 2954 	mov	r5,dpl
      000A2B AE 83            [24] 2955 	mov	r6,dph
      000A2D D0 07            [24] 2956 	pop	ar7
      000A2F ED               [12] 2957 	mov	a,r5
      000A30 4E               [12] 2958 	orl	a,r6
      000A31 60 70            [24] 2959 	jz	00105$
                                   2960 ;	../../../../core/net/mac/lpp.c:465: NETSTACK_RADIO.send(packetbuf_hdrptr(), packetbuf_totlen());
      000A33 90r00r09         [24] 2961 	mov	dptr,#(_cc2530_rf_driver + 0x0009)
      000A36 E4               [12] 2962 	clr	a
      000A37 93               [24] 2963 	movc	a,@a+dptr
      000A38 FD               [12] 2964 	mov	r5,a
      000A39 A3               [24] 2965 	inc	dptr
      000A3A E4               [12] 2966 	clr	a
      000A3B 93               [24] 2967 	movc	a,@a+dptr
      000A3C FE               [12] 2968 	mov	r6,a
      000A3D A3               [24] 2969 	inc	dptr
      000A3E E4               [12] 2970 	clr	a
      000A3F 93               [24] 2971 	movc	a,@a+dptr
      000A40 FF               [12] 2972 	mov	r7,a
      000A41 C0 07            [24] 2973 	push	ar7
      000A43 C0 06            [24] 2974 	push	ar6
      000A45 C0 05            [24] 2975 	push	ar5
      000A47 78r00            [12] 2976 	mov	r0,#_packetbuf_totlen
      000A49 79s00            [12] 2977 	mov	r1,#(_packetbuf_totlen >> 8)
      000A4B 7As00            [12] 2978 	mov	r2,#(_packetbuf_totlen >> 16)
      000A4D 12r00r00         [24] 2979 	lcall	__sdcc_banked_call
      000A50 C8               [12] 2980 	xch	a,r0
      000A51 E5 81            [12] 2981 	mov	a,sp
      000A53 24 F5            [12] 2982 	add	a,#0xf5
      000A55 C8               [12] 2983 	xch	a,r0
      000A56 A6 82            [24] 2984 	mov	@r0,dpl
      000A58 08               [12] 2985 	inc	r0
      000A59 A6 83            [24] 2986 	mov	@r0,dph
      000A5B 78r00            [12] 2987 	mov	r0,#_packetbuf_hdrptr
      000A5D 79s00            [12] 2988 	mov	r1,#(_packetbuf_hdrptr >> 8)
      000A5F 7As00            [12] 2989 	mov	r2,#(_packetbuf_hdrptr >> 16)
      000A61 12r00r00         [24] 2990 	lcall	__sdcc_banked_call
      000A64 AA 82            [24] 2991 	mov	r2,dpl
      000A66 AB 83            [24] 2992 	mov	r3,dph
      000A68 AC F0            [24] 2993 	mov	r4,b
      000A6A D0 05            [24] 2994 	pop	ar5
      000A6C D0 06            [24] 2995 	pop	ar6
      000A6E D0 07            [24] 2996 	pop	ar7
      000A70 C0 07            [24] 2997 	push	ar7
      000A72 C0 06            [24] 2998 	push	ar6
      000A74 C0 05            [24] 2999 	push	ar5
      000A76 E5 81            [12] 3000 	mov	a,sp
      000A78 24 F5            [12] 3001 	add	a,#0xf5
      000A7A F8               [12] 3002 	mov	r0,a
      000A7B E6               [12] 3003 	mov	a,@r0
      000A7C C0 E0            [24] 3004 	push	acc
      000A7E 08               [12] 3005 	inc	r0
      000A7F E6               [12] 3006 	mov	a,@r0
      000A80 C0 E0            [24] 3007 	push	acc
      000A82 C0 05            [24] 3008 	push	ar5
      000A84 C0 06            [24] 3009 	push	ar6
      000A86 C0 07            [24] 3010 	push	ar7
      000A88 8A 82            [24] 3011 	mov	dpl,r2
      000A8A 8B 83            [24] 3012 	mov	dph,r3
      000A8C 8C F0            [24] 3013 	mov	b,r4
      000A8E D0 02            [24] 3014 	pop	ar2
      000A90 D0 01            [24] 3015 	pop	ar1
      000A92 D0 00            [24] 3016 	pop	ar0
      000A94 12r00r00         [24] 3017 	lcall	__sdcc_banked_call
      000A97 15 81            [12] 3018 	dec	sp
      000A99 15 81            [12] 3019 	dec	sp
      000A9B D0 05            [24] 3020 	pop	ar5
      000A9D D0 06            [24] 3021 	pop	ar6
      000A9F D0 07            [24] 3022 	pop	ar7
      000AA1 80 2B            [24] 3023 	sjmp	00106$
      000AA3                       3024 00105$:
                                   3025 ;	../../../../core/net/mac/lpp.c:467: off_time_adjustment = random_rand() % (OFF_TIME / 2);
      000AA3 78r00            [12] 3026 	mov	r0,#_random_rand
      000AA5 79s00            [12] 3027 	mov	r1,#(_random_rand >> 8)
      000AA7 7As00            [12] 3028 	mov	r2,#(_random_rand >> 16)
      000AA9 12r00r00         [24] 3029 	lcall	__sdcc_banked_call
      000AAC AE 82            [24] 3030 	mov	r6,dpl
      000AAE AF 83            [24] 3031 	mov	r7,dph
      000AB0 74 07            [12] 3032 	mov	a,#0x07
      000AB2 C0 E0            [24] 3033 	push	acc
      000AB4 E4               [12] 3034 	clr	a
      000AB5 C0 E0            [24] 3035 	push	acc
      000AB7 8E 82            [24] 3036 	mov	dpl,r6
      000AB9 8F 83            [24] 3037 	mov	dph,r7
      000ABB 12r00r00         [24] 3038 	lcall	__moduint
      000ABE AE 82            [24] 3039 	mov	r6,dpl
      000AC0 AF 83            [24] 3040 	mov	r7,dph
      000AC2 15 81            [12] 3041 	dec	sp
      000AC4 15 81            [12] 3042 	dec	sp
      000AC6 90r00r01         [24] 3043 	mov	dptr,#_off_time_adjustment
      000AC9 EE               [12] 3044 	mov	a,r6
      000ACA F0               [24] 3045 	movx	@dptr,a
      000ACB EF               [12] 3046 	mov	a,r7
      000ACC A3               [24] 3047 	inc	dptr
      000ACD F0               [24] 3048 	movx	@dptr,a
      000ACE                       3049 00106$:
                                   3050 ;	../../../../core/net/mac/lpp.c:470: compower_accumulate(&compower_idle_activity);
      000ACE 90r00r00         [24] 3051 	mov	dptr,#_compower_idle_activity
      000AD1 75 F0 00         [24] 3052 	mov	b,#0x00
      000AD4 78r00            [12] 3053 	mov	r0,#_compower_accumulate
      000AD6 79s00            [12] 3054 	mov	r1,#(_compower_accumulate >> 8)
      000AD8 7As00            [12] 3055 	mov	r2,#(_compower_accumulate >> 16)
      000ADA 12r00r00         [24] 3056 	lcall	__sdcc_banked_call
      000ADD                       3057 00110$:
      000ADD E5 81            [12] 3058 	mov	a,sp
      000ADF 24 F7            [12] 3059 	add	a,#0xF7
      000AE1 F5 81            [12] 3060 	mov	sp,a
      000AE3 02r00r00         [24] 3061 	ljmp	__sdcc_banked_ret
                                   3062 ;------------------------------------------------------------
                                   3063 ;Allocation info for local variables in function 'send_stream_probe'
                                   3064 ;------------------------------------------------------------
                                   3065 ;dummy                     Allocated to registers 
                                   3066 ;------------------------------------------------------------
                                   3067 ;	../../../../core/net/mac/lpp.c:474: send_stream_probe(void *dummy)
                                   3068 ;	-----------------------------------------
                                   3069 ;	 function send_stream_probe
                                   3070 ;	-----------------------------------------
      000AE6                       3071 _send_stream_probe:
                                   3072 ;	../../../../core/net/mac/lpp.c:478: turn_radio_on();
      000AE6 78r00            [12] 3073 	mov	r0,#_turn_radio_on
      000AE8 79s00            [12] 3074 	mov	r1,#(_turn_radio_on >> 8)
      000AEA 7As00            [12] 3075 	mov	r2,#(_turn_radio_on >> 16)
      000AEC 12r00r00         [24] 3076 	lcall	__sdcc_banked_call
                                   3077 ;	../../../../core/net/mac/lpp.c:481: send_probe();
      000AEF 78r3A            [12] 3078 	mov	r0,#_send_probe
      000AF1 79s07            [12] 3079 	mov	r1,#(_send_probe >> 8)
      000AF3 7As00            [12] 3080 	mov	r2,#(_send_probe >> 16)
      000AF5 12r00r00         [24] 3081 	lcall	__sdcc_banked_call
                                   3082 ;	../../../../core/net/mac/lpp.c:484: is_streaming = 1;
      000AF8 90r00r2B         [24] 3083 	mov	dptr,#_is_streaming
      000AFB 74 01            [12] 3084 	mov	a,#0x01
      000AFD F0               [24] 3085 	movx	@dptr,a
      000AFE 02r00r00         [24] 3086 	ljmp	__sdcc_banked_ret
                                   3087 ;------------------------------------------------------------
                                   3088 ;Allocation info for local variables in function 'num_packets_to_send'
                                   3089 ;------------------------------------------------------------
                                   3090 ;	../../../../core/net/mac/lpp.c:489: num_packets_to_send(void)
                                   3091 ;	-----------------------------------------
                                   3092 ;	 function num_packets_to_send
                                   3093 ;	-----------------------------------------
      000B01                       3094 _num_packets_to_send:
                                   3095 ;	../../../../core/net/mac/lpp.c:503: return list_length(queued_packets_list);
      000B01 90r00r0E         [24] 3096 	mov	dptr,#_queued_packets_list
      000B04 E0               [24] 3097 	movx	a,@dptr
      000B05 FD               [12] 3098 	mov	r5,a
      000B06 A3               [24] 3099 	inc	dptr
      000B07 E0               [24] 3100 	movx	a,@dptr
      000B08 FE               [12] 3101 	mov	r6,a
      000B09 A3               [24] 3102 	inc	dptr
      000B0A E0               [24] 3103 	movx	a,@dptr
      000B0B FF               [12] 3104 	mov	r7,a
      000B0C 8D 82            [24] 3105 	mov	dpl,r5
      000B0E 8E 83            [24] 3106 	mov	dph,r6
      000B10 8F F0            [24] 3107 	mov	b,r7
      000B12 78r00            [12] 3108 	mov	r0,#_list_length
      000B14 79s00            [12] 3109 	mov	r1,#(_list_length >> 8)
      000B16 7As00            [12] 3110 	mov	r2,#(_list_length >> 16)
      000B18 12r00r00         [24] 3111 	lcall	__sdcc_banked_call
      000B1B AE 82            [24] 3112 	mov	r6,dpl
      000B1D AF 83            [24] 3113 	mov  r7,dph
      000B1F 02r00r00         [24] 3114 	ljmp	__sdcc_banked_ret
                                   3115 ;------------------------------------------------------------
                                   3116 ;Allocation info for local variables in function 'dutycycle'
                                   3117 ;------------------------------------------------------------
                                   3118 ;ptr                       Allocated to registers r5 r6 r7 
                                   3119 ;t                         Allocated to stack - sp -2
                                   3120 ;PT_YIELD_FLAG             Allocated to registers r4 
                                   3121 ;current_off_time          Allocated to registers r7 r4 
                                   3122 ;sloc0                     Allocated to stack - sp -5
                                   3123 ;------------------------------------------------------------
                                   3124 ;	../../../../core/net/mac/lpp.c:513: dutycycle(void *ptr)
                                   3125 ;	-----------------------------------------
                                   3126 ;	 function dutycycle
                                   3127 ;	-----------------------------------------
      000B22                       3128 _dutycycle:
      000B22 E5 81            [12] 3129 	mov	a,sp
      000B24 24 06            [12] 3130 	add	a,#0x06
      000B26 F5 81            [12] 3131 	mov	sp,a
      000B28 AD 82            [24] 3132 	mov	r5,dpl
      000B2A AE 83            [24] 3133 	mov	r6,dph
      000B2C AF F0            [24] 3134 	mov	r7,b
                                   3135 ;	../../../../core/net/mac/lpp.c:515: struct ctimer *t = ptr;
      000B2E A8 81            [24] 3136 	mov	r0,sp
      000B30 18               [12] 3137 	dec	r0
      000B31 18               [12] 3138 	dec	r0
      000B32 A6 05            [24] 3139 	mov	@r0,ar5
      000B34 08               [12] 3140 	inc	r0
      000B35 A6 06            [24] 3141 	mov	@r0,ar6
      000B37 08               [12] 3142 	inc	r0
      000B38 A6 07            [24] 3143 	mov	@r0,ar7
                                   3144 ;	../../../../core/net/mac/lpp.c:517: PT_BEGIN(&dutycycle_pt);
      000B3A 7C 01            [12] 3145 	mov	r4,#0x01
      000B3C 90r00r09         [24] 3146 	mov	dptr,#_dutycycle_pt
      000B3F E0               [24] 3147 	movx	a,@dptr
      000B40 FA               [12] 3148 	mov	r2,a
      000B41 A3               [24] 3149 	inc	dptr
      000B42 E0               [24] 3150 	movx	a,@dptr
      000B43 FB               [12] 3151 	mov	r3,a
      000B44 BA 00 05         [24] 3152 	cjne	r2,#0x00,00184$
      000B47 BB 00 02         [24] 3153 	cjne	r3,#0x00,00184$
      000B4A 80 27            [24] 3154 	sjmp	00137$
      000B4C                       3155 00184$:
      000B4C BA 21 06         [24] 3156 	cjne	r2,#0x21,00185$
      000B4F BB 02 03         [24] 3157 	cjne	r3,#0x02,00185$
      000B52 02r0BrD2         [24] 3158 	ljmp	00102$
      000B55                       3159 00185$:
      000B55 BA 48 06         [24] 3160 	cjne	r2,#0x48,00186$
      000B58 BB 02 03         [24] 3161 	cjne	r3,#0x02,00186$
      000B5B 02r0CrC8         [24] 3162 	ljmp	00112$
      000B5E                       3163 00186$:
      000B5E BA 56 06         [24] 3164 	cjne	r2,#0x56,00187$
      000B61 BB 02 03         [24] 3165 	cjne	r3,#0x02,00187$
      000B64 02r0Dr27         [24] 3166 	ljmp	00118$
      000B67                       3167 00187$:
      000B67 BA 5C 06         [24] 3168 	cjne	r2,#0x5C,00188$
      000B6A BB 02 03         [24] 3169 	cjne	r3,#0x02,00188$
      000B6D 02r0Dr82         [24] 3170 	ljmp	00127$
      000B70                       3171 00188$:
      000B70 02r0Dr8D         [24] 3172 	ljmp	00139$
                                   3173 ;	../../../../core/net/mac/lpp.c:519: while(1) {
      000B73                       3174 00137$:
                                   3175 ;	../../../../core/net/mac/lpp.c:538: turn_radio_on();
      000B73 78r00            [12] 3176 	mov	r0,#_turn_radio_on
      000B75 79s00            [12] 3177 	mov	r1,#(_turn_radio_on >> 8)
      000B77 7As00            [12] 3178 	mov	r2,#(_turn_radio_on >> 16)
      000B79 12r00r00         [24] 3179 	lcall	__sdcc_banked_call
                                   3180 ;	../../../../core/net/mac/lpp.c:541: send_probe();
      000B7C 78r3A            [12] 3181 	mov	r0,#_send_probe
      000B7E 79s07            [12] 3182 	mov	r1,#(_send_probe >> 8)
      000B80 7As00            [12] 3183 	mov	r2,#(_send_probe >> 16)
      000B82 12r00r00         [24] 3184 	lcall	__sdcc_banked_call
                                   3185 ;	../../../../core/net/mac/lpp.c:544: ctimer_set(t, LISTEN_TIME, (void (*)(void *))dutycycle, t);
      000B85 A8 81            [24] 3186 	mov	r0,sp
      000B87 18               [12] 3187 	dec	r0
      000B88 18               [12] 3188 	dec	r0
      000B89 86 04            [24] 3189 	mov	ar4,@r0
      000B8B 08               [12] 3190 	inc	r0
      000B8C 86 03            [24] 3191 	mov	ar3,@r0
      000B8E 08               [12] 3192 	inc	r0
      000B8F 86 02            [24] 3193 	mov	ar2,@r0
      000B91 7Dr22            [12] 3194 	mov	r5,#_dutycycle
      000B93 7Es0B            [12] 3195 	mov	r6,#(_dutycycle >> 8)
      000B95 7Fs00            [12] 3196 	mov	r7,#(_dutycycle >> 16)
      000B97 C0 04            [24] 3197 	push	ar4
      000B99 C0 03            [24] 3198 	push	ar3
      000B9B C0 02            [24] 3199 	push	ar2
      000B9D C0 05            [24] 3200 	push	ar5
      000B9F C0 06            [24] 3201 	push	ar6
      000BA1 C0 07            [24] 3202 	push	ar7
      000BA3 74 01            [12] 3203 	mov	a,#0x01
      000BA5 C0 E0            [24] 3204 	push	acc
      000BA7 E4               [12] 3205 	clr	a
      000BA8 C0 E0            [24] 3206 	push	acc
      000BAA E5 81            [12] 3207 	mov	a,sp
      000BAC 24 F6            [12] 3208 	add	a,#0xf6
      000BAE F8               [12] 3209 	mov	r0,a
      000BAF 86 82            [24] 3210 	mov	dpl,@r0
      000BB1 08               [12] 3211 	inc	r0
      000BB2 86 83            [24] 3212 	mov	dph,@r0
      000BB4 08               [12] 3213 	inc	r0
      000BB5 86 F0            [24] 3214 	mov	b,@r0
      000BB7 78r00            [12] 3215 	mov	r0,#_ctimer_set
      000BB9 79s00            [12] 3216 	mov	r1,#(_ctimer_set >> 8)
      000BBB 7As00            [12] 3217 	mov	r2,#(_ctimer_set >> 16)
      000BBD 12r00r00         [24] 3218 	lcall	__sdcc_banked_call
      000BC0 E5 81            [12] 3219 	mov	a,sp
      000BC2 24 F8            [12] 3220 	add	a,#0xf8
      000BC4 F5 81            [12] 3221 	mov	sp,a
                                   3222 ;	../../../../core/net/mac/lpp.c:545: PT_YIELD(&dutycycle_pt);
      000BC6 7C 00            [12] 3223 	mov	r4,#0x00
      000BC8 90r00r09         [24] 3224 	mov	dptr,#_dutycycle_pt
      000BCB 74 21            [12] 3225 	mov	a,#0x21
      000BCD F0               [24] 3226 	movx	@dptr,a
      000BCE 74 02            [12] 3227 	mov	a,#0x02
      000BD0 A3               [24] 3228 	inc	dptr
      000BD1 F0               [24] 3229 	movx	@dptr,a
      000BD2                       3230 00102$:
      000BD2 EC               [12] 3231 	mov	a,r4
      000BD3 70 06            [24] 3232 	jnz	00106$
      000BD5 90 00 01         [24] 3233 	mov	dptr,#0x0001
      000BD8 02r0Dr98         [24] 3234 	ljmp	00140$
      000BDB                       3235 00106$:
                                   3236 ;	../../../../core/net/mac/lpp.c:568: if(num_packets_to_send() == 0) {
      000BDB 78r01            [12] 3237 	mov	r0,#_num_packets_to_send
      000BDD 79s0B            [12] 3238 	mov	r1,#(_num_packets_to_send >> 8)
      000BDF 7As00            [12] 3239 	mov	r2,#(_num_packets_to_send >> 16)
      000BE1 12r00r00         [24] 3240 	lcall	__sdcc_banked_call
      000BE4 E5 82            [12] 3241 	mov	a,dpl
      000BE6 85 83 F0         [24] 3242 	mov	b,dph
      000BE9 45 F0            [12] 3243 	orl	a,b
      000BEB 60 03            [24] 3244 	jz	00190$
      000BED 02r0Dr32         [24] 3245 	ljmp	00134$
      000BF0                       3246 00190$:
                                   3247 ;	../../../../core/net/mac/lpp.c:572: if(is_listening == 0) {
      000BF0 90r00r00         [24] 3248 	mov	dptr,#_is_listening
      000BF3 E0               [24] 3249 	movx	a,@dptr
      000BF4 FF               [12] 3250 	mov	r7,a
      000BF5 60 03            [24] 3251 	jz	00191$
      000BF7 02r0CrD4         [24] 3252 	ljmp	00125$
      000BFA                       3253 00191$:
                                   3254 ;	../../../../core/net/mac/lpp.c:574: if(!NETSTACK_RADIO.receiving_packet()) {
      000BFA 90r00r12         [24] 3255 	mov	dptr,#(_cc2530_rf_driver + 0x0012)
      000BFD E4               [12] 3256 	clr	a
      000BFE 93               [24] 3257 	movc	a,@a+dptr
      000BFF FB               [12] 3258 	mov	r3,a
      000C00 A3               [24] 3259 	inc	dptr
      000C01 E4               [12] 3260 	clr	a
      000C02 93               [24] 3261 	movc	a,@a+dptr
      000C03 FD               [12] 3262 	mov	r5,a
      000C04 A3               [24] 3263 	inc	dptr
      000C05 E4               [12] 3264 	clr	a
      000C06 93               [24] 3265 	movc	a,@a+dptr
      000C07 FE               [12] 3266 	mov	r6,a
      000C08 C0 06            [24] 3267 	push	ar6
      000C0A C0 03            [24] 3268 	push	ar3
      000C0C C0 05            [24] 3269 	push	ar5
      000C0E C0 06            [24] 3270 	push	ar6
      000C10 D0 02            [24] 3271 	pop	ar2
      000C12 D0 01            [24] 3272 	pop	ar1
      000C14 D0 00            [24] 3273 	pop	ar0
      000C16 12r00r00         [24] 3274 	lcall	__sdcc_banked_call
      000C19 AB 82            [24] 3275 	mov	r3,dpl
      000C1B AD 83            [24] 3276 	mov	r5,dph
      000C1D D0 06            [24] 3277 	pop	ar6
      000C1F EB               [12] 3278 	mov	a,r3
      000C20 4D               [12] 3279 	orl	a,r5
      000C21 70 18            [24] 3280 	jnz	00109$
                                   3281 ;	../../../../core/net/mac/lpp.c:575: turn_radio_off();
      000C23 78r2C            [12] 3282 	mov	r0,#_turn_radio_off
      000C25 79s00            [12] 3283 	mov	r1,#(_turn_radio_off >> 8)
      000C27 7As00            [12] 3284 	mov	r2,#(_turn_radio_off >> 16)
      000C29 12r00r00         [24] 3285 	lcall	__sdcc_banked_call
                                   3286 ;	../../../../core/net/mac/lpp.c:576: compower_accumulate(&compower_idle_activity);
      000C2C 90r00r00         [24] 3287 	mov	dptr,#_compower_idle_activity
      000C2F 75 F0 00         [24] 3288 	mov	b,#0x00
      000C32 78r00            [12] 3289 	mov	r0,#_compower_accumulate
      000C34 79s00            [12] 3290 	mov	r1,#(_compower_accumulate >> 8)
      000C36 7As00            [12] 3291 	mov	r2,#(_compower_accumulate >> 16)
      000C38 12r00r00         [24] 3292 	lcall	__sdcc_banked_call
      000C3B                       3293 00109$:
                                   3294 ;	../../../../core/net/mac/lpp.c:578: current_off_time = off_time - off_time_adjustment;
      000C3B 90r00r01         [24] 3295 	mov	dptr,#_off_time_adjustment
      000C3E E0               [24] 3296 	movx	a,@dptr
      000C3F FD               [12] 3297 	mov	r5,a
      000C40 A3               [24] 3298 	inc	dptr
      000C41 E0               [24] 3299 	movx	a,@dptr
      000C42 FE               [12] 3300 	mov	r6,a
      000C43 90r00r03         [24] 3301 	mov	dptr,#_off_time
      000C46 E0               [24] 3302 	movx	a,@dptr
      000C47 FA               [12] 3303 	mov	r2,a
      000C48 A3               [24] 3304 	inc	dptr
      000C49 E0               [24] 3305 	movx	a,@dptr
      000C4A FB               [12] 3306 	mov	r3,a
      000C4B EA               [12] 3307 	mov	a,r2
      000C4C C3               [12] 3308 	clr	c
      000C4D 9D               [12] 3309 	subb	a,r5
      000C4E FD               [12] 3310 	mov	r5,a
      000C4F EB               [12] 3311 	mov	a,r3
      000C50 9E               [12] 3312 	subb	a,r6
      000C51 FE               [12] 3313 	mov	r6,a
      000C52 8D 07            [24] 3314 	mov	ar7,r5
      000C54 8E 04            [24] 3315 	mov	ar4,r6
                                   3316 ;	../../../../core/net/mac/lpp.c:579: if(current_off_time < LISTEN_TIME * 2) {
      000C56 C3               [12] 3317 	clr	c
      000C57 EF               [12] 3318 	mov	a,r7
      000C58 94 02            [12] 3319 	subb	a,#0x02
      000C5A EC               [12] 3320 	mov	a,r4
      000C5B 64 80            [12] 3321 	xrl	a,#0x80
      000C5D 94 80            [12] 3322 	subb	a,#0x80
      000C5F 50 04            [24] 3323 	jnc	00111$
                                   3324 ;	../../../../core/net/mac/lpp.c:580: current_off_time = LISTEN_TIME * 2;
      000C61 7F 02            [12] 3325 	mov	r7,#0x02
      000C63 7C 00            [12] 3326 	mov	r4,#0x00
      000C65                       3327 00111$:
                                   3328 ;	../../../../core/net/mac/lpp.c:582: off_time_adjustment = 0;
      000C65 90r00r01         [24] 3329 	mov	dptr,#_off_time_adjustment
      000C68 E4               [12] 3330 	clr	a
      000C69 F0               [24] 3331 	movx	@dptr,a
      000C6A E4               [12] 3332 	clr	a
      000C6B A3               [24] 3333 	inc	dptr
      000C6C F0               [24] 3334 	movx	@dptr,a
                                   3335 ;	../../../../core/net/mac/lpp.c:583: ctimer_set(t, current_off_time, (void (*)(void *))dutycycle, t);
      000C6D A8 81            [24] 3336 	mov	r0,sp
      000C6F 18               [12] 3337 	dec	r0
      000C70 18               [12] 3338 	dec	r0
      000C71 E5 81            [12] 3339 	mov	a,sp
      000C73 24 FB            [12] 3340 	add	a,#0xfb
      000C75 F9               [12] 3341 	mov	r1,a
      000C76 E6               [12] 3342 	mov	a,@r0
      000C77 F7               [12] 3343 	mov	@r1,a
      000C78 08               [12] 3344 	inc	r0
      000C79 09               [12] 3345 	inc	r1
      000C7A E6               [12] 3346 	mov	a,@r0
      000C7B F7               [12] 3347 	mov	@r1,a
      000C7C 08               [12] 3348 	inc	r0
      000C7D 09               [12] 3349 	inc	r1
      000C7E E6               [12] 3350 	mov	a,@r0
      000C7F F7               [12] 3351 	mov	@r1,a
      000C80 7Br22            [12] 3352 	mov	r3,#_dutycycle
      000C82 7Ds0B            [12] 3353 	mov	r5,#(_dutycycle >> 8)
      000C84 7Es00            [12] 3354 	mov	r6,#(_dutycycle >> 16)
      000C86 E5 81            [12] 3355 	mov	a,sp
      000C88 24 FB            [12] 3356 	add	a,#0xfb
      000C8A F8               [12] 3357 	mov	r0,a
      000C8B E6               [12] 3358 	mov	a,@r0
      000C8C C0 E0            [24] 3359 	push	acc
      000C8E 08               [12] 3360 	inc	r0
      000C8F E6               [12] 3361 	mov	a,@r0
      000C90 C0 E0            [24] 3362 	push	acc
      000C92 08               [12] 3363 	inc	r0
      000C93 E6               [12] 3364 	mov	a,@r0
      000C94 C0 E0            [24] 3365 	push	acc
      000C96 C0 03            [24] 3366 	push	ar3
      000C98 C0 05            [24] 3367 	push	ar5
      000C9A C0 06            [24] 3368 	push	ar6
      000C9C C0 07            [24] 3369 	push	ar7
      000C9E C0 04            [24] 3370 	push	ar4
      000CA0 E5 81            [12] 3371 	mov	a,sp
      000CA2 24 F6            [12] 3372 	add	a,#0xf6
      000CA4 F8               [12] 3373 	mov	r0,a
      000CA5 86 82            [24] 3374 	mov	dpl,@r0
      000CA7 08               [12] 3375 	inc	r0
      000CA8 86 83            [24] 3376 	mov	dph,@r0
      000CAA 08               [12] 3377 	inc	r0
      000CAB 86 F0            [24] 3378 	mov	b,@r0
      000CAD 78r00            [12] 3379 	mov	r0,#_ctimer_set
      000CAF 79s00            [12] 3380 	mov	r1,#(_ctimer_set >> 8)
      000CB1 7As00            [12] 3381 	mov	r2,#(_ctimer_set >> 16)
      000CB3 12r00r00         [24] 3382 	lcall	__sdcc_banked_call
      000CB6 E5 81            [12] 3383 	mov	a,sp
      000CB8 24 F8            [12] 3384 	add	a,#0xf8
      000CBA F5 81            [12] 3385 	mov	sp,a
                                   3386 ;	../../../../core/net/mac/lpp.c:584: PT_YIELD(&dutycycle_pt);
      000CBC 7C 00            [12] 3387 	mov	r4,#0x00
      000CBE 90r00r09         [24] 3388 	mov	dptr,#_dutycycle_pt
      000CC1 74 48            [12] 3389 	mov	a,#0x48
      000CC3 F0               [24] 3390 	movx	@dptr,a
      000CC4 74 02            [12] 3391 	mov	a,#0x02
      000CC6 A3               [24] 3392 	inc	dptr
      000CC7 F0               [24] 3393 	movx	@dptr,a
      000CC8                       3394 00112$:
      000CC8 EC               [12] 3395 	mov	a,r4
      000CC9 60 03            [24] 3396 	jz	00194$
      000CCB 02r0Br73         [24] 3397 	ljmp	00137$
      000CCE                       3398 00194$:
      000CCE 90 00 01         [24] 3399 	mov	dptr,#0x0001
      000CD1 02r0Dr98         [24] 3400 	ljmp	00140$
      000CD4                       3401 00125$:
                                   3402 ;	../../../../core/net/mac/lpp.c:596: is_listening--;
      000CD4 EF               [12] 3403 	mov	a,r7
      000CD5 14               [12] 3404 	dec	a
      000CD6 90r00r00         [24] 3405 	mov	dptr,#_is_listening
      000CD9 F0               [24] 3406 	movx	@dptr,a
                                   3407 ;	../../../../core/net/mac/lpp.c:597: ctimer_set(t, OFF_TIME, (void (*)(void *))dutycycle, t);
      000CDA A8 81            [24] 3408 	mov	r0,sp
      000CDC 18               [12] 3409 	dec	r0
      000CDD 18               [12] 3410 	dec	r0
      000CDE 86 05            [24] 3411 	mov	ar5,@r0
      000CE0 08               [12] 3412 	inc	r0
      000CE1 86 06            [24] 3413 	mov	ar6,@r0
      000CE3 08               [12] 3414 	inc	r0
      000CE4 86 04            [24] 3415 	mov	ar4,@r0
      000CE6 7Ar22            [12] 3416 	mov	r2,#_dutycycle
      000CE8 7Bs0B            [12] 3417 	mov	r3,#(_dutycycle >> 8)
      000CEA 7Fs00            [12] 3418 	mov	r7,#(_dutycycle >> 16)
      000CEC C0 05            [24] 3419 	push	ar5
      000CEE C0 06            [24] 3420 	push	ar6
      000CF0 C0 04            [24] 3421 	push	ar4
      000CF2 C0 02            [24] 3422 	push	ar2
      000CF4 C0 03            [24] 3423 	push	ar3
      000CF6 C0 07            [24] 3424 	push	ar7
      000CF8 74 0F            [12] 3425 	mov	a,#0x0F
      000CFA C0 E0            [24] 3426 	push	acc
      000CFC E4               [12] 3427 	clr	a
      000CFD C0 E0            [24] 3428 	push	acc
      000CFF E5 81            [12] 3429 	mov	a,sp
      000D01 24 F6            [12] 3430 	add	a,#0xf6
      000D03 F8               [12] 3431 	mov	r0,a
      000D04 86 82            [24] 3432 	mov	dpl,@r0
      000D06 08               [12] 3433 	inc	r0
      000D07 86 83            [24] 3434 	mov	dph,@r0
      000D09 08               [12] 3435 	inc	r0
      000D0A 86 F0            [24] 3436 	mov	b,@r0
      000D0C 78r00            [12] 3437 	mov	r0,#_ctimer_set
      000D0E 79s00            [12] 3438 	mov	r1,#(_ctimer_set >> 8)
      000D10 7As00            [12] 3439 	mov	r2,#(_ctimer_set >> 16)
      000D12 12r00r00         [24] 3440 	lcall	__sdcc_banked_call
      000D15 E5 81            [12] 3441 	mov	a,sp
      000D17 24 F8            [12] 3442 	add	a,#0xf8
      000D19 F5 81            [12] 3443 	mov	sp,a
                                   3444 ;	../../../../core/net/mac/lpp.c:598: PT_YIELD(&dutycycle_pt);
      000D1B 7C 00            [12] 3445 	mov	r4,#0x00
      000D1D 90r00r09         [24] 3446 	mov	dptr,#_dutycycle_pt
      000D20 74 56            [12] 3447 	mov	a,#0x56
      000D22 F0               [24] 3448 	movx	@dptr,a
      000D23 74 02            [12] 3449 	mov	a,#0x02
      000D25 A3               [24] 3450 	inc	dptr
      000D26 F0               [24] 3451 	movx	@dptr,a
      000D27                       3452 00118$:
      000D27 EC               [12] 3453 	mov	a,r4
      000D28 60 03            [24] 3454 	jz	00195$
      000D2A 02r0Br73         [24] 3455 	ljmp	00137$
      000D2D                       3456 00195$:
      000D2D 90 00 01         [24] 3457 	mov	dptr,#0x0001
      000D30 80 66            [24] 3458 	sjmp	00140$
      000D32                       3459 00134$:
                                   3460 ;	../../../../core/net/mac/lpp.c:603: ctimer_set(t, off_time, (void (*)(void *))dutycycle, t);
      000D32 A8 81            [24] 3461 	mov	r0,sp
      000D34 18               [12] 3462 	dec	r0
      000D35 18               [12] 3463 	dec	r0
      000D36 86 05            [24] 3464 	mov	ar5,@r0
      000D38 08               [12] 3465 	inc	r0
      000D39 86 06            [24] 3466 	mov	ar6,@r0
      000D3B 08               [12] 3467 	inc	r0
      000D3C 86 04            [24] 3468 	mov	ar4,@r0
      000D3E 7Ar22            [12] 3469 	mov	r2,#_dutycycle
      000D40 7Bs0B            [12] 3470 	mov	r3,#(_dutycycle >> 8)
      000D42 7Fs00            [12] 3471 	mov	r7,#(_dutycycle >> 16)
      000D44 C0 05            [24] 3472 	push	ar5
      000D46 C0 06            [24] 3473 	push	ar6
      000D48 C0 04            [24] 3474 	push	ar4
      000D4A C0 02            [24] 3475 	push	ar2
      000D4C C0 03            [24] 3476 	push	ar3
      000D4E C0 07            [24] 3477 	push	ar7
      000D50 90r00r03         [24] 3478 	mov	dptr,#_off_time
      000D53 E0               [24] 3479 	movx	a,@dptr
      000D54 C0 E0            [24] 3480 	push	acc
      000D56 A3               [24] 3481 	inc	dptr
      000D57 E0               [24] 3482 	movx	a,@dptr
      000D58 C0 E0            [24] 3483 	push	acc
      000D5A E5 81            [12] 3484 	mov	a,sp
      000D5C 24 F6            [12] 3485 	add	a,#0xf6
      000D5E F8               [12] 3486 	mov	r0,a
      000D5F 86 82            [24] 3487 	mov	dpl,@r0
      000D61 08               [12] 3488 	inc	r0
      000D62 86 83            [24] 3489 	mov	dph,@r0
      000D64 08               [12] 3490 	inc	r0
      000D65 86 F0            [24] 3491 	mov	b,@r0
      000D67 78r00            [12] 3492 	mov	r0,#_ctimer_set
      000D69 79s00            [12] 3493 	mov	r1,#(_ctimer_set >> 8)
      000D6B 7As00            [12] 3494 	mov	r2,#(_ctimer_set >> 16)
      000D6D 12r00r00         [24] 3495 	lcall	__sdcc_banked_call
      000D70 E5 81            [12] 3496 	mov	a,sp
      000D72 24 F8            [12] 3497 	add	a,#0xf8
      000D74 F5 81            [12] 3498 	mov	sp,a
                                   3499 ;	../../../../core/net/mac/lpp.c:604: PT_YIELD(&dutycycle_pt);
      000D76 7C 00            [12] 3500 	mov	r4,#0x00
      000D78 90r00r09         [24] 3501 	mov	dptr,#_dutycycle_pt
      000D7B 74 5C            [12] 3502 	mov	a,#0x5C
      000D7D F0               [24] 3503 	movx	@dptr,a
      000D7E 74 02            [12] 3504 	mov	a,#0x02
      000D80 A3               [24] 3505 	inc	dptr
      000D81 F0               [24] 3506 	movx	@dptr,a
      000D82                       3507 00127$:
      000D82 EC               [12] 3508 	mov	a,r4
      000D83 60 03            [24] 3509 	jz	00196$
      000D85 02r0Br73         [24] 3510 	ljmp	00137$
      000D88                       3511 00196$:
      000D88 90 00 01         [24] 3512 	mov	dptr,#0x0001
                                   3513 ;	../../../../core/net/mac/lpp.c:608: PT_END(&dutycycle_pt);
      000D8B 80 0B            [24] 3514 	sjmp	00140$
      000D8D                       3515 00139$:
      000D8D 90r00r09         [24] 3516 	mov	dptr,#_dutycycle_pt
      000D90 E4               [12] 3517 	clr	a
      000D91 F0               [24] 3518 	movx	@dptr,a
      000D92 E4               [12] 3519 	clr	a
      000D93 A3               [24] 3520 	inc	dptr
      000D94 F0               [24] 3521 	movx	@dptr,a
      000D95 90 00 03         [24] 3522 	mov	dptr,#0x0003
      000D98                       3523 00140$:
      000D98 E5 81            [12] 3524 	mov	a,sp
      000D9A 24 FA            [12] 3525 	add	a,#0xFA
      000D9C F5 81            [12] 3526 	mov	sp,a
      000D9E 02r00r00         [24] 3527 	ljmp	__sdcc_banked_ret
                                   3528 ;------------------------------------------------------------
                                   3529 ;Allocation info for local variables in function 'restart_dutycycle'
                                   3530 ;------------------------------------------------------------
                                   3531 ;initial_wait              Allocated to registers r6 r7 
                                   3532 ;------------------------------------------------------------
                                   3533 ;	../../../../core/net/mac/lpp.c:612: restart_dutycycle(clock_time_t initial_wait)
                                   3534 ;	-----------------------------------------
                                   3535 ;	 function restart_dutycycle
                                   3536 ;	-----------------------------------------
      000DA1                       3537 _restart_dutycycle:
      000DA1 AE 82            [24] 3538 	mov	r6,dpl
      000DA3 AF 83            [24] 3539 	mov	r7,dph
                                   3540 ;	../../../../core/net/mac/lpp.c:614: PT_INIT(&dutycycle_pt);
      000DA5 90r00r09         [24] 3541 	mov	dptr,#_dutycycle_pt
      000DA8 E4               [12] 3542 	clr	a
      000DA9 F0               [24] 3543 	movx	@dptr,a
      000DAA E4               [12] 3544 	clr	a
      000DAB A3               [24] 3545 	inc	dptr
      000DAC F0               [24] 3546 	movx	@dptr,a
                                   3547 ;	../../../../core/net/mac/lpp.c:615: ctimer_set(&timer, initial_wait, (void (*)(void *))dutycycle, &timer);  
      000DAD 7Br22            [12] 3548 	mov	r3,#_dutycycle
      000DAF 7Cs0B            [12] 3549 	mov	r4,#(_dutycycle >> 8)
      000DB1 7Ds00            [12] 3550 	mov	r5,#(_dutycycle >> 16)
      000DB3 74r0B            [12] 3551 	mov	a,#_timer
      000DB5 C0 E0            [24] 3552 	push	acc
      000DB7 74s00            [12] 3553 	mov	a,#(_timer >> 8)
      000DB9 C0 E0            [24] 3554 	push	acc
      000DBB E4               [12] 3555 	clr	a
      000DBC C0 E0            [24] 3556 	push	acc
      000DBE C0 03            [24] 3557 	push	ar3
      000DC0 C0 04            [24] 3558 	push	ar4
      000DC2 C0 05            [24] 3559 	push	ar5
      000DC4 C0 06            [24] 3560 	push	ar6
      000DC6 C0 07            [24] 3561 	push	ar7
      000DC8 90r00r0B         [24] 3562 	mov	dptr,#_timer
      000DCB 75 F0 00         [24] 3563 	mov	b,#0x00
      000DCE 78r00            [12] 3564 	mov	r0,#_ctimer_set
      000DD0 79s00            [12] 3565 	mov	r1,#(_ctimer_set >> 8)
      000DD2 7As00            [12] 3566 	mov	r2,#(_ctimer_set >> 16)
      000DD4 12r00r00         [24] 3567 	lcall	__sdcc_banked_call
      000DD7 E5 81            [12] 3568 	mov	a,sp
      000DD9 24 F8            [12] 3569 	add	a,#0xf8
      000DDB F5 81            [12] 3570 	mov	sp,a
      000DDD 02r00r00         [24] 3571 	ljmp	__sdcc_banked_ret
                                   3572 ;------------------------------------------------------------
                                   3573 ;Allocation info for local variables in function 'send_packet'
                                   3574 ;------------------------------------------------------------
                                   3575 ;ptr                       Allocated to stack - sp -33
                                   3576 ;sent                      Allocated to stack - sp -27
                                   3577 ;hdr                       Allocated to stack - sp -23
                                   3578 ;timeout                   Allocated to stack - sp -5
                                   3579 ;is_broadcast              Allocated to stack - sp -3
                                   3580 ;hdrlen                    Allocated to registers r5 r6 
                                   3581 ;i                         Allocated to stack - sp -2
                                   3582 ;sloc0                     Allocated to stack - sp -24
                                   3583 ;------------------------------------------------------------
                                   3584 ;	../../../../core/net/mac/lpp.c:633: send_packet(mac_callback_t sent, void *ptr)
                                   3585 ;	-----------------------------------------
                                   3586 ;	 function send_packet
                                   3587 ;	-----------------------------------------
      000DE0                       3588 _send_packet:
      000DE0 C0 82            [24] 3589 	push	dpl
      000DE2 C0 83            [24] 3590 	push	dph
      000DE4 C0 F0            [24] 3591 	push	b
      000DE6 E5 81            [12] 3592 	mov	a,sp
      000DE8 24 19            [12] 3593 	add	a,#0x19
                                   3594 ;	../../../../core/net/mac/lpp.c:637: uint8_t is_broadcast = 0;
      000DEA F5 81            [12] 3595 	mov	sp,a
      000DEC 24 FD            [12] 3596 	add	a,#0xfd
      000DEE F8               [12] 3597 	mov	r0,a
      000DEF 76 00            [12] 3598 	mov	@r0,#0x00
                                   3599 ;	../../../../core/net/mac/lpp.c:639: rimeaddr_copy(&hdr.sender, &rimeaddr_node_addr);
      000DF1 E5 81            [12] 3600 	mov	a,sp
      000DF3 24 E9            [12] 3601 	add	a,#0xE9
      000DF5 F9               [12] 3602 	mov	r1,a
      000DF6 24 02            [12] 3603 	add	a,#0x02
      000DF8 FA               [12] 3604 	mov	r2,a
      000DF9 7B 00            [12] 3605 	mov	r3,#0x00
      000DFB 7C 40            [12] 3606 	mov	r4,#0x40
      000DFD C0 01            [24] 3607 	push	ar1
      000DFF 74r00            [12] 3608 	mov	a,#_rimeaddr_node_addr
      000E01 C0 E0            [24] 3609 	push	acc
      000E03 74s00            [12] 3610 	mov	a,#(_rimeaddr_node_addr >> 8)
      000E05 C0 E0            [24] 3611 	push	acc
      000E07 E4               [12] 3612 	clr	a
      000E08 C0 E0            [24] 3613 	push	acc
      000E0A 8A 82            [24] 3614 	mov	dpl,r2
      000E0C 8B 83            [24] 3615 	mov	dph,r3
      000E0E 8C F0            [24] 3616 	mov	b,r4
      000E10 78r00            [12] 3617 	mov	r0,#_rimeaddr_copy
      000E12 79s00            [12] 3618 	mov	r1,#(_rimeaddr_copy >> 8)
      000E14 7As00            [12] 3619 	mov	r2,#(_rimeaddr_copy >> 16)
      000E16 12r00r00         [24] 3620 	lcall	__sdcc_banked_call
      000E19 15 81            [12] 3621 	dec	sp
      000E1B 15 81            [12] 3622 	dec	sp
      000E1D 15 81            [12] 3623 	dec	sp
                                   3624 ;	../../../../core/net/mac/lpp.c:640: rimeaddr_copy(&hdr.receiver, packetbuf_addr(PACKETBUF_ADDR_RECEIVER));
      000E1F 75 82 19         [24] 3625 	mov	dpl,#0x19
      000E22 78r00            [12] 3626 	mov	r0,#_packetbuf_addr
      000E24 79s00            [12] 3627 	mov	r1,#(_packetbuf_addr >> 8)
      000E26 7As00            [12] 3628 	mov	r2,#(_packetbuf_addr >> 16)
      000E28 12r00r00         [24] 3629 	lcall	__sdcc_banked_call
      000E2B AA 82            [24] 3630 	mov	r2,dpl
      000E2D AB 83            [24] 3631 	mov	r3,dph
      000E2F AC F0            [24] 3632 	mov	r4,b
      000E31 D0 01            [24] 3633 	pop	ar1
      000E33 E5 81            [12] 3634 	mov	a,sp
      000E35 24 E8            [12] 3635 	add	a,#0xe8
      000E37 F8               [12] 3636 	mov	r0,a
      000E38 74 0A            [12] 3637 	mov	a,#0x0A
      000E3A 29               [12] 3638 	add	a,r1
      000E3B F6               [12] 3639 	mov	@r0,a
      000E3C E5 81            [12] 3640 	mov	a,sp
      000E3E 24 E8            [12] 3641 	add	a,#0xe8
      000E40 F8               [12] 3642 	mov	r0,a
      000E41 86 05            [24] 3643 	mov	ar5,@r0
      000E43 7E 00            [12] 3644 	mov	r6,#0x00
      000E45 7F 40            [12] 3645 	mov	r7,#0x40
      000E47 C0 01            [24] 3646 	push	ar1
      000E49 C0 02            [24] 3647 	push	ar2
      000E4B C0 03            [24] 3648 	push	ar3
      000E4D C0 04            [24] 3649 	push	ar4
      000E4F 8D 82            [24] 3650 	mov	dpl,r5
      000E51 8E 83            [24] 3651 	mov	dph,r6
      000E53 8F F0            [24] 3652 	mov	b,r7
      000E55 78r00            [12] 3653 	mov	r0,#_rimeaddr_copy
      000E57 79s00            [12] 3654 	mov	r1,#(_rimeaddr_copy >> 8)
      000E59 7As00            [12] 3655 	mov	r2,#(_rimeaddr_copy >> 16)
      000E5B 12r00r00         [24] 3656 	lcall	__sdcc_banked_call
      000E5E 15 81            [12] 3657 	dec	sp
      000E60 15 81            [12] 3658 	dec	sp
      000E62 15 81            [12] 3659 	dec	sp
      000E64 D0 01            [24] 3660 	pop	ar1
                                   3661 ;	../../../../core/net/mac/lpp.c:641: if(rimeaddr_cmp(&hdr.receiver, &rimeaddr_null)) {
      000E66 E5 81            [12] 3662 	mov	a,sp
      000E68 24 E8            [12] 3663 	add	a,#0xe8
      000E6A F8               [12] 3664 	mov	r0,a
      000E6B 86 07            [24] 3665 	mov	ar7,@r0
      000E6D 7E 00            [12] 3666 	mov	r6,#0x00
      000E6F 7D 40            [12] 3667 	mov	r5,#0x40
      000E71 C0 01            [24] 3668 	push	ar1
      000E73 74r00            [12] 3669 	mov	a,#_rimeaddr_null
      000E75 C0 E0            [24] 3670 	push	acc
      000E77 74s00            [12] 3671 	mov	a,#(_rimeaddr_null >> 8)
      000E79 C0 E0            [24] 3672 	push	acc
      000E7B 74 80            [12] 3673 	mov	a,#0x80
      000E7D C0 E0            [24] 3674 	push	acc
      000E7F 8F 82            [24] 3675 	mov	dpl,r7
      000E81 8E 83            [24] 3676 	mov	dph,r6
      000E83 8D F0            [24] 3677 	mov	b,r5
      000E85 78r00            [12] 3678 	mov	r0,#_rimeaddr_cmp
      000E87 79s00            [12] 3679 	mov	r1,#(_rimeaddr_cmp >> 8)
      000E89 7As00            [12] 3680 	mov	r2,#(_rimeaddr_cmp >> 16)
      000E8B 12r00r00         [24] 3681 	lcall	__sdcc_banked_call
      000E8E AE 82            [24] 3682 	mov	r6,dpl
      000E90 AF 83            [24] 3683 	mov	r7,dph
      000E92 15 81            [12] 3684 	dec	sp
      000E94 15 81            [12] 3685 	dec	sp
      000E96 15 81            [12] 3686 	dec	sp
      000E98 D0 01            [24] 3687 	pop	ar1
      000E9A EE               [12] 3688 	mov	a,r6
      000E9B 4F               [12] 3689 	orl	a,r7
      000E9C 60 07            [24] 3690 	jz	00102$
                                   3691 ;	../../../../core/net/mac/lpp.c:642: is_broadcast = 1;
      000E9E E5 81            [12] 3692 	mov	a,sp
      000EA0 24 FD            [12] 3693 	add	a,#0xfd
      000EA2 F8               [12] 3694 	mov	r0,a
      000EA3 76 01            [12] 3695 	mov	@r0,#0x01
      000EA5                       3696 00102$:
                                   3697 ;	../../../../core/net/mac/lpp.c:644: hdr.type = TYPE_DATA;
      000EA5 77 02            [12] 3698 	mov	@r1,#0x02
      000EA7 09               [12] 3699 	inc	r1
      000EA8 77 00            [12] 3700 	mov	@r1,#0x00
      000EAA 19               [12] 3701 	dec	r1
                                   3702 ;	../../../../core/net/mac/lpp.c:646: packetbuf_hdralloc(sizeof(struct lpp_hdr));
      000EAB 90 00 12         [24] 3703 	mov	dptr,#0x0012
      000EAE C0 01            [24] 3704 	push	ar1
      000EB0 78r00            [12] 3705 	mov	r0,#_packetbuf_hdralloc
      000EB2 79s00            [12] 3706 	mov	r1,#(_packetbuf_hdralloc >> 8)
      000EB4 7As00            [12] 3707 	mov	r2,#(_packetbuf_hdralloc >> 16)
      000EB6 12r00r00         [24] 3708 	lcall	__sdcc_banked_call
      000EB9 D0 01            [24] 3709 	pop	ar1
                                   3710 ;	../../../../core/net/mac/lpp.c:647: memcpy(packetbuf_hdrptr(), &hdr, sizeof(struct lpp_hdr));
      000EBB 89 07            [24] 3711 	mov	ar7,r1
      000EBD 7E 00            [12] 3712 	mov	r6,#0x00
      000EBF 7D 40            [12] 3713 	mov	r5,#0x40
      000EC1 C0 07            [24] 3714 	push	ar7
      000EC3 C0 06            [24] 3715 	push	ar6
      000EC5 C0 05            [24] 3716 	push	ar5
      000EC7 78r00            [12] 3717 	mov	r0,#_packetbuf_hdrptr
      000EC9 79s00            [12] 3718 	mov	r1,#(_packetbuf_hdrptr >> 8)
      000ECB 7As00            [12] 3719 	mov	r2,#(_packetbuf_hdrptr >> 16)
      000ECD 12r00r00         [24] 3720 	lcall	__sdcc_banked_call
      000ED0 AA 82            [24] 3721 	mov	r2,dpl
      000ED2 AB 83            [24] 3722 	mov	r3,dph
      000ED4 AC F0            [24] 3723 	mov	r4,b
      000ED6 D0 05            [24] 3724 	pop	ar5
      000ED8 D0 06            [24] 3725 	pop	ar6
      000EDA D0 07            [24] 3726 	pop	ar7
      000EDC 74 12            [12] 3727 	mov	a,#0x12
      000EDE C0 E0            [24] 3728 	push	acc
      000EE0 E4               [12] 3729 	clr	a
      000EE1 C0 E0            [24] 3730 	push	acc
      000EE3 C0 07            [24] 3731 	push	ar7
      000EE5 C0 06            [24] 3732 	push	ar6
      000EE7 C0 05            [24] 3733 	push	ar5
      000EE9 8A 82            [24] 3734 	mov	dpl,r2
      000EEB 8B 83            [24] 3735 	mov	dph,r3
      000EED 8C F0            [24] 3736 	mov	b,r4
      000EEF 78r00            [12] 3737 	mov	r0,#_memcpy
      000EF1 79s00            [12] 3738 	mov	r1,#(_memcpy >> 8)
      000EF3 7As00            [12] 3739 	mov	r2,#(_memcpy >> 16)
      000EF5 12r00r00         [24] 3740 	lcall	__sdcc_banked_call
      000EF8 E5 81            [12] 3741 	mov	a,sp
      000EFA 24 FB            [12] 3742 	add	a,#0xfb
      000EFC F5 81            [12] 3743 	mov	sp,a
                                   3744 ;	../../../../core/net/mac/lpp.c:648: packetbuf_compact();
      000EFE 78r00            [12] 3745 	mov	r0,#_packetbuf_compact
      000F00 79s00            [12] 3746 	mov	r1,#(_packetbuf_compact >> 8)
      000F02 7As00            [12] 3747 	mov	r2,#(_packetbuf_compact >> 16)
      000F04 12r00r00         [24] 3748 	lcall	__sdcc_banked_call
                                   3749 ;	../../../../core/net/mac/lpp.c:650: packetbuf_set_attr(PACKETBUF_ATTR_MAC_ACK, 1);
      000F07 74 01            [12] 3750 	mov	a,#0x01
      000F09 C0 E0            [24] 3751 	push	acc
      000F0B E4               [12] 3752 	clr	a
      000F0C C0 E0            [24] 3753 	push	acc
      000F0E 75 82 0B         [24] 3754 	mov	dpl,#0x0B
      000F11 78r00            [12] 3755 	mov	r0,#_packetbuf_set_attr
      000F13 79s00            [12] 3756 	mov	r1,#(_packetbuf_set_attr >> 8)
      000F15 7As00            [12] 3757 	mov	r2,#(_packetbuf_set_attr >> 16)
      000F17 12r00r00         [24] 3758 	lcall	__sdcc_banked_call
      000F1A 15 81            [12] 3759 	dec	sp
      000F1C 15 81            [12] 3760 	dec	sp
                                   3761 ;	../../../../core/net/mac/lpp.c:653: int hdrlen = NETSTACK_FRAMER.create();
      000F1E 90r00r00         [24] 3762 	mov	dptr,#_framer_802154
      000F21 E4               [12] 3763 	clr	a
      000F22 93               [24] 3764 	movc	a,@a+dptr
      000F23 FD               [12] 3765 	mov	r5,a
      000F24 A3               [24] 3766 	inc	dptr
      000F25 E4               [12] 3767 	clr	a
      000F26 93               [24] 3768 	movc	a,@a+dptr
      000F27 FE               [12] 3769 	mov	r6,a
      000F28 A3               [24] 3770 	inc	dptr
      000F29 E4               [12] 3771 	clr	a
      000F2A 93               [24] 3772 	movc	a,@a+dptr
      000F2B FF               [12] 3773 	mov	r7,a
      000F2C C0 07            [24] 3774 	push	ar7
      000F2E C0 05            [24] 3775 	push	ar5
      000F30 C0 06            [24] 3776 	push	ar6
      000F32 C0 07            [24] 3777 	push	ar7
      000F34 D0 02            [24] 3778 	pop	ar2
      000F36 D0 01            [24] 3779 	pop	ar1
      000F38 D0 00            [24] 3780 	pop	ar0
      000F3A 12r00r00         [24] 3781 	lcall	__sdcc_banked_call
      000F3D AD 82            [24] 3782 	mov	r5,dpl
      000F3F AE 83            [24] 3783 	mov	r6,dph
      000F41 D0 07            [24] 3784 	pop	ar7
                                   3785 ;	../../../../core/net/mac/lpp.c:654: if(hdrlen < 0) {
      000F43 EE               [12] 3786 	mov	a,r6
      000F44 30 E7 45         [24] 3787 	jnb	acc.7,00109$
                                   3788 ;	../../../../core/net/mac/lpp.c:656: mac_call_sent_callback(sent, ptr, MAC_TX_ERR_FATAL, 0);
      000F47 E5 81            [12] 3789 	mov	a,sp
      000F49 24 E5            [12] 3790 	add	a,#0xe5
      000F4B F8               [12] 3791 	mov	r0,a
      000F4C E6               [12] 3792 	mov	a,@r0
      000F4D 08               [12] 3793 	inc	r0
      000F4E 46               [12] 3794 	orl	a,@r0
      000F4F 60 38            [24] 3795 	jz	00106$
      000F51 E4               [12] 3796 	clr	a
      000F52 C0 E0            [24] 3797 	push	acc
      000F54 C0 E0            [24] 3798 	push	acc
      000F56 74 05            [12] 3799 	mov	a,#0x05
      000F58 C0 E0            [24] 3800 	push	acc
      000F5A E4               [12] 3801 	clr	a
      000F5B C0 E0            [24] 3802 	push	acc
      000F5D E5 81            [12] 3803 	mov	a,sp
      000F5F 24 E1            [12] 3804 	add	a,#0xe1
      000F61 F8               [12] 3805 	mov	r0,a
      000F62 E6               [12] 3806 	mov	a,@r0
      000F63 C0 E0            [24] 3807 	push	acc
      000F65 08               [12] 3808 	inc	r0
      000F66 E6               [12] 3809 	mov	a,@r0
      000F67 C0 E0            [24] 3810 	push	acc
      000F69 08               [12] 3811 	inc	r0
      000F6A E6               [12] 3812 	mov	a,@r0
      000F6B C0 E0            [24] 3813 	push	acc
      000F6D E5 81            [12] 3814 	mov	a,sp
      000F6F 24 D8            [12] 3815 	add	a,#0xd8
      000F71 F8               [12] 3816 	mov	r0,a
      000F72 86 82            [24] 3817 	mov	dpl,@r0
      000F74 08               [12] 3818 	inc	r0
      000F75 86 83            [24] 3819 	mov	dph,@r0
      000F77 08               [12] 3820 	inc	r0
      000F78 86 F0            [24] 3821 	mov	b,@r0
      000F7A D0 02            [24] 3822 	pop	ar2
      000F7C D0 01            [24] 3823 	pop	ar1
      000F7E D0 00            [24] 3824 	pop	ar0
      000F80 12r00r00         [24] 3825 	lcall	__sdcc_banked_call
      000F83 E5 81            [12] 3826 	mov	a,sp
      000F85 24 FC            [12] 3827 	add	a,#0xfc
      000F87 F5 81            [12] 3828 	mov	sp,a
      000F89                       3829 00106$:
                                   3830 ;	../../../../core/net/mac/lpp.c:657: return;
      000F89 02r11rEA         [24] 3831 	ljmp	00129$
      000F8C                       3832 00109$:
                                   3833 ;	../../../../core/net/mac/lpp.c:681: i = memb_alloc(&queued_packets_memb);
      000F8C 90r00r11         [24] 3834 	mov	dptr,#_queued_packets_memb
      000F8F 75 F0 00         [24] 3835 	mov	b,#0x00
      000F92 78r00            [12] 3836 	mov	r0,#_memb_alloc
      000F94 79s00            [12] 3837 	mov	r1,#(_memb_alloc >> 8)
      000F96 7As00            [12] 3838 	mov	r2,#(_memb_alloc >> 16)
      000F98 12r00r00         [24] 3839 	lcall	__sdcc_banked_call
      000F9B AD 82            [24] 3840 	mov	r5,dpl
      000F9D AE 83            [24] 3841 	mov	r6,dph
      000F9F AF F0            [24] 3842 	mov	r7,b
      000FA1 A8 81            [24] 3843 	mov	r0,sp
      000FA3 18               [12] 3844 	dec	r0
      000FA4 18               [12] 3845 	dec	r0
      000FA5 A6 05            [24] 3846 	mov	@r0,ar5
      000FA7 08               [12] 3847 	inc	r0
      000FA8 A6 06            [24] 3848 	mov	@r0,ar6
      000FAA 08               [12] 3849 	inc	r0
      000FAB A6 07            [24] 3850 	mov	@r0,ar7
                                   3851 ;	../../../../core/net/mac/lpp.c:682: if(i != NULL) {
      000FAD A8 81            [24] 3852 	mov	r0,sp
      000FAF 18               [12] 3853 	dec	r0
      000FB0 18               [12] 3854 	dec	r0
      000FB1 E6               [12] 3855 	mov	a,@r0
      000FB2 08               [12] 3856 	inc	r0
      000FB3 46               [12] 3857 	orl	a,@r0
      000FB4 70 03            [24] 3858 	jnz	00158$
      000FB6 02r11r8D         [24] 3859 	ljmp	00127$
      000FB9                       3860 00158$:
                                   3861 ;	../../../../core/net/mac/lpp.c:683: i->sent_callback = sent;
      000FB9 A8 81            [24] 3862 	mov	r0,sp
      000FBB 18               [12] 3863 	dec	r0
      000FBC 18               [12] 3864 	dec	r0
      000FBD 74 24            [12] 3865 	mov	a,#0x24
      000FBF 26               [12] 3866 	add	a,@r0
      000FC0 FA               [12] 3867 	mov	r2,a
      000FC1 E4               [12] 3868 	clr	a
      000FC2 08               [12] 3869 	inc	r0
      000FC3 36               [12] 3870 	addc	a,@r0
      000FC4 FB               [12] 3871 	mov	r3,a
      000FC5 08               [12] 3872 	inc	r0
      000FC6 86 04            [24] 3873 	mov	ar4,@r0
      000FC8 8A 82            [24] 3874 	mov	dpl,r2
      000FCA 8B 83            [24] 3875 	mov	dph,r3
      000FCC 8C F0            [24] 3876 	mov	b,r4
      000FCE E5 81            [12] 3877 	mov	a,sp
      000FD0 24 E5            [12] 3878 	add	a,#0xe5
      000FD2 F8               [12] 3879 	mov	r0,a
      000FD3 E6               [12] 3880 	mov	a,@r0
      000FD4 12r00r00         [24] 3881 	lcall	__gptrput
      000FD7 A3               [24] 3882 	inc	dptr
      000FD8 08               [12] 3883 	inc	r0
      000FD9 E6               [12] 3884 	mov	a,@r0
      000FDA 12r00r00         [24] 3885 	lcall	__gptrput
      000FDD A3               [24] 3886 	inc	dptr
      000FDE 08               [12] 3887 	inc	r0
      000FDF E6               [12] 3888 	mov	a,@r0
      000FE0 12r00r00         [24] 3889 	lcall	__gptrput
                                   3890 ;	../../../../core/net/mac/lpp.c:684: i->sent_callback_ptr = ptr;
      000FE3 A8 81            [24] 3891 	mov	r0,sp
      000FE5 18               [12] 3892 	dec	r0
      000FE6 18               [12] 3893 	dec	r0
      000FE7 74 27            [12] 3894 	mov	a,#0x27
      000FE9 26               [12] 3895 	add	a,@r0
      000FEA FA               [12] 3896 	mov	r2,a
      000FEB E4               [12] 3897 	clr	a
      000FEC 08               [12] 3898 	inc	r0
      000FED 36               [12] 3899 	addc	a,@r0
      000FEE FB               [12] 3900 	mov	r3,a
      000FEF 08               [12] 3901 	inc	r0
      000FF0 86 04            [24] 3902 	mov	ar4,@r0
      000FF2 8A 82            [24] 3903 	mov	dpl,r2
      000FF4 8B 83            [24] 3904 	mov	dph,r3
      000FF6 8C F0            [24] 3905 	mov	b,r4
      000FF8 E5 81            [12] 3906 	mov	a,sp
      000FFA 24 DF            [12] 3907 	add	a,#0xdf
      000FFC F8               [12] 3908 	mov	r0,a
      000FFD E6               [12] 3909 	mov	a,@r0
      000FFE 12r00r00         [24] 3910 	lcall	__gptrput
      001001 A3               [24] 3911 	inc	dptr
      001002 08               [12] 3912 	inc	r0
      001003 E6               [12] 3913 	mov	a,@r0
      001004 12r00r00         [24] 3914 	lcall	__gptrput
      001007 A3               [24] 3915 	inc	dptr
      001008 08               [12] 3916 	inc	r0
      001009 E6               [12] 3917 	mov	a,@r0
      00100A 12r00r00         [24] 3918 	lcall	__gptrput
                                   3919 ;	../../../../core/net/mac/lpp.c:685: i->num_transmissions = 0;
      00100D A8 81            [24] 3920 	mov	r0,sp
      00100F 18               [12] 3921 	dec	r0
      001010 18               [12] 3922 	dec	r0
      001011 74 2A            [12] 3923 	mov	a,#0x2A
      001013 26               [12] 3924 	add	a,@r0
      001014 FA               [12] 3925 	mov	r2,a
      001015 E4               [12] 3926 	clr	a
      001016 08               [12] 3927 	inc	r0
      001017 36               [12] 3928 	addc	a,@r0
      001018 FB               [12] 3929 	mov	r3,a
      001019 08               [12] 3930 	inc	r0
      00101A 86 04            [24] 3931 	mov	ar4,@r0
      00101C 8A 82            [24] 3932 	mov	dpl,r2
      00101E 8B 83            [24] 3933 	mov	dph,r3
      001020 8C F0            [24] 3934 	mov	b,r4
      001022 E4               [12] 3935 	clr	a
      001023 12r00r00         [24] 3936 	lcall	__gptrput
                                   3937 ;	../../../../core/net/mac/lpp.c:686: i->packet = queuebuf_new_from_packetbuf();
      001026 A8 81            [24] 3938 	mov	r0,sp
      001028 18               [12] 3939 	dec	r0
      001029 18               [12] 3940 	dec	r0
      00102A 74 03            [12] 3941 	mov	a,#0x03
      00102C 26               [12] 3942 	add	a,@r0
      00102D FA               [12] 3943 	mov	r2,a
      00102E E4               [12] 3944 	clr	a
      00102F 08               [12] 3945 	inc	r0
      001030 36               [12] 3946 	addc	a,@r0
      001031 FB               [12] 3947 	mov	r3,a
      001032 08               [12] 3948 	inc	r0
      001033 86 04            [24] 3949 	mov	ar4,@r0
      001035 C0 04            [24] 3950 	push	ar4
      001037 C0 03            [24] 3951 	push	ar3
      001039 C0 02            [24] 3952 	push	ar2
      00103B 78r00            [12] 3953 	mov	r0,#_queuebuf_new_from_packetbuf
      00103D 79s00            [12] 3954 	mov	r1,#(_queuebuf_new_from_packetbuf >> 8)
      00103F 7As00            [12] 3955 	mov	r2,#(_queuebuf_new_from_packetbuf >> 16)
      001041 12r00r00         [24] 3956 	lcall	__sdcc_banked_call
      001044 AD 82            [24] 3957 	mov	r5,dpl
      001046 AE 83            [24] 3958 	mov	r6,dph
      001048 AF F0            [24] 3959 	mov	r7,b
      00104A D0 02            [24] 3960 	pop	ar2
      00104C D0 03            [24] 3961 	pop	ar3
      00104E D0 04            [24] 3962 	pop	ar4
      001050 8A 82            [24] 3963 	mov	dpl,r2
      001052 8B 83            [24] 3964 	mov	dph,r3
      001054 8C F0            [24] 3965 	mov	b,r4
      001056 ED               [12] 3966 	mov	a,r5
      001057 12r00r00         [24] 3967 	lcall	__gptrput
      00105A A3               [24] 3968 	inc	dptr
      00105B EE               [12] 3969 	mov	a,r6
      00105C 12r00r00         [24] 3970 	lcall	__gptrput
      00105F A3               [24] 3971 	inc	dptr
      001060 EF               [12] 3972 	mov	a,r7
      001061 12r00r00         [24] 3973 	lcall	__gptrput
                                   3974 ;	../../../../core/net/mac/lpp.c:687: if(i->packet == NULL) {
      001064 ED               [12] 3975 	mov	a,r5
      001065 4E               [12] 3976 	orl	a,r6
      001066 60 03            [24] 3977 	jz	00159$
      001068 02r10rF2         [24] 3978 	ljmp	00119$
      00106B                       3979 00159$:
                                   3980 ;	../../../../core/net/mac/lpp.c:688: memb_free(&queued_packets_memb, i);
      00106B A8 81            [24] 3981 	mov	r0,sp
      00106D 18               [12] 3982 	dec	r0
      00106E 18               [12] 3983 	dec	r0
      00106F 86 05            [24] 3984 	mov	ar5,@r0
      001071 08               [12] 3985 	inc	r0
      001072 86 06            [24] 3986 	mov	ar6,@r0
      001074 08               [12] 3987 	inc	r0
      001075 86 07            [24] 3988 	mov	ar7,@r0
      001077 C0 05            [24] 3989 	push	ar5
      001079 C0 06            [24] 3990 	push	ar6
      00107B C0 07            [24] 3991 	push	ar7
      00107D 90r00r11         [24] 3992 	mov	dptr,#_queued_packets_memb
      001080 75 F0 00         [24] 3993 	mov	b,#0x00
      001083 78r00            [12] 3994 	mov	r0,#_memb_free
      001085 79s00            [12] 3995 	mov	r1,#(_memb_free >> 8)
      001087 7As00            [12] 3996 	mov	r2,#(_memb_free >> 16)
      001089 12r00r00         [24] 3997 	lcall	__sdcc_banked_call
      00108C 15 81            [12] 3998 	dec	sp
      00108E 15 81            [12] 3999 	dec	sp
      001090 15 81            [12] 4000 	dec	sp
                                   4001 ;	../../../../core/net/mac/lpp.c:689: printf("null packet\n");
      001092 74r00            [12] 4002 	mov	a,#__str_0
      001094 C0 E0            [24] 4003 	push	acc
      001096 74s00            [12] 4004 	mov	a,#(__str_0 >> 8)
      001098 C0 E0            [24] 4005 	push	acc
      00109A 74 80            [12] 4006 	mov	a,#0x80
      00109C C0 E0            [24] 4007 	push	acc
      00109E 78r00            [12] 4008 	mov	r0,#_printf
      0010A0 79s00            [12] 4009 	mov	r1,#(_printf >> 8)
      0010A2 7As00            [12] 4010 	mov	r2,#(_printf >> 16)
      0010A4 12r00r00         [24] 4011 	lcall	__sdcc_banked_call
      0010A7 15 81            [12] 4012 	dec	sp
      0010A9 15 81            [12] 4013 	dec	sp
      0010AB 15 81            [12] 4014 	dec	sp
                                   4015 ;	../../../../core/net/mac/lpp.c:690: mac_call_sent_callback(sent, ptr, MAC_TX_ERR, 0);
      0010AD E5 81            [12] 4016 	mov	a,sp
      0010AF 24 E5            [12] 4017 	add	a,#0xe5
      0010B1 F8               [12] 4018 	mov	r0,a
      0010B2 E6               [12] 4019 	mov	a,@r0
      0010B3 08               [12] 4020 	inc	r0
      0010B4 46               [12] 4021 	orl	a,@r0
      0010B5 60 38            [24] 4022 	jz	00113$
      0010B7 E4               [12] 4023 	clr	a
      0010B8 C0 E0            [24] 4024 	push	acc
      0010BA C0 E0            [24] 4025 	push	acc
      0010BC 74 04            [12] 4026 	mov	a,#0x04
      0010BE C0 E0            [24] 4027 	push	acc
      0010C0 E4               [12] 4028 	clr	a
      0010C1 C0 E0            [24] 4029 	push	acc
      0010C3 E5 81            [12] 4030 	mov	a,sp
      0010C5 24 E1            [12] 4031 	add	a,#0xe1
      0010C7 F8               [12] 4032 	mov	r0,a
      0010C8 E6               [12] 4033 	mov	a,@r0
      0010C9 C0 E0            [24] 4034 	push	acc
      0010CB 08               [12] 4035 	inc	r0
      0010CC E6               [12] 4036 	mov	a,@r0
      0010CD C0 E0            [24] 4037 	push	acc
      0010CF 08               [12] 4038 	inc	r0
      0010D0 E6               [12] 4039 	mov	a,@r0
      0010D1 C0 E0            [24] 4040 	push	acc
      0010D3 E5 81            [12] 4041 	mov	a,sp
      0010D5 24 D8            [12] 4042 	add	a,#0xd8
      0010D7 F8               [12] 4043 	mov	r0,a
      0010D8 86 82            [24] 4044 	mov	dpl,@r0
      0010DA 08               [12] 4045 	inc	r0
      0010DB 86 83            [24] 4046 	mov	dph,@r0
      0010DD 08               [12] 4047 	inc	r0
      0010DE 86 F0            [24] 4048 	mov	b,@r0
      0010E0 D0 02            [24] 4049 	pop	ar2
      0010E2 D0 01            [24] 4050 	pop	ar1
      0010E4 D0 00            [24] 4051 	pop	ar0
      0010E6 12r00r00         [24] 4052 	lcall	__sdcc_banked_call
      0010E9 E5 81            [12] 4053 	mov	a,sp
      0010EB 24 FC            [12] 4054 	add	a,#0xfc
      0010ED F5 81            [12] 4055 	mov	sp,a
      0010EF                       4056 00113$:
                                   4057 ;	../../../../core/net/mac/lpp.c:691: return;
      0010EF 02r11rEA         [24] 4058 	ljmp	00129$
      0010F2                       4059 00119$:
                                   4060 ;	../../../../core/net/mac/lpp.c:693: if(is_broadcast) {
      0010F2 E5 81            [12] 4061 	mov	a,sp
      0010F4 24 FD            [12] 4062 	add	a,#0xfd
      0010F6 F8               [12] 4063 	mov	r0,a
      0010F7 E6               [12] 4064 	mov	a,@r0
      0010F8 60 0C            [24] 4065 	jz	00116$
                                   4066 ;	../../../../core/net/mac/lpp.c:694: timeout = PACKET_LIFETIME;
      0010FA E5 81            [12] 4067 	mov	a,sp
      0010FC 24 FB            [12] 4068 	add	a,#0xfb
      0010FE F8               [12] 4069 	mov	r0,a
      0010FF 76 10            [12] 4070 	mov	@r0,#0x10
      001101 08               [12] 4071 	inc	r0
      001102 76 00            [12] 4072 	mov	@r0,#0x00
      001104 80 0A            [24] 4073 	sjmp	00117$
      001106                       4074 00116$:
                                   4075 ;	../../../../core/net/mac/lpp.c:708: timeout = UNICAST_TIMEOUT;
      001106 E5 81            [12] 4076 	mov	a,sp
      001108 24 FB            [12] 4077 	add	a,#0xfb
      00110A F8               [12] 4078 	mov	r0,a
      00110B 76 18            [12] 4079 	mov	@r0,#0x18
      00110D 08               [12] 4080 	inc	r0
      00110E 76 00            [12] 4081 	mov	@r0,#0x00
      001110                       4082 00117$:
                                   4083 ;	../../../../core/net/mac/lpp.c:714: remove_queued_old_packet_callback, i);
      001110 A8 81            [24] 4084 	mov	r0,sp
      001112 18               [12] 4085 	dec	r0
      001113 18               [12] 4086 	dec	r0
      001114 86 03            [24] 4087 	mov	ar3,@r0
      001116 08               [12] 4088 	inc	r0
      001117 86 04            [24] 4089 	mov	ar4,@r0
      001119 08               [12] 4090 	inc	r0
      00111A 86 05            [24] 4091 	mov	ar5,@r0
                                   4092 ;	../../../../core/net/mac/lpp.c:713: ctimer_set(&i->removal_timer, timeout,
      00111C A8 81            [24] 4093 	mov	r0,sp
      00111E 18               [12] 4094 	dec	r0
      00111F 18               [12] 4095 	dec	r0
      001120 74 06            [12] 4096 	mov	a,#0x06
      001122 26               [12] 4097 	add	a,@r0
      001123 FA               [12] 4098 	mov	r2,a
      001124 E4               [12] 4099 	clr	a
      001125 08               [12] 4100 	inc	r0
      001126 36               [12] 4101 	addc	a,@r0
      001127 FE               [12] 4102 	mov	r6,a
      001128 08               [12] 4103 	inc	r0
      001129 86 07            [24] 4104 	mov	ar7,@r0
      00112B C0 03            [24] 4105 	push	ar3
      00112D C0 04            [24] 4106 	push	ar4
      00112F C0 05            [24] 4107 	push	ar5
      001131 74r0A            [12] 4108 	mov	a,#_remove_queued_old_packet_callback
      001133 C0 E0            [24] 4109 	push	acc
      001135 74s07            [12] 4110 	mov	a,#(_remove_queued_old_packet_callback >> 8)
      001137 C0 E0            [24] 4111 	push	acc
      001139 74s00            [12] 4112 	mov	a,#(_remove_queued_old_packet_callback >> 16)
      00113B C0 E0            [24] 4113 	push	acc
      00113D E5 81            [12] 4114 	mov	a,sp
      00113F 24 F5            [12] 4115 	add	a,#0xf5
      001141 F8               [12] 4116 	mov	r0,a
      001142 E6               [12] 4117 	mov	a,@r0
      001143 C0 E0            [24] 4118 	push	acc
      001145 08               [12] 4119 	inc	r0
      001146 E6               [12] 4120 	mov	a,@r0
      001147 C0 E0            [24] 4121 	push	acc
      001149 8A 82            [24] 4122 	mov	dpl,r2
      00114B 8E 83            [24] 4123 	mov	dph,r6
      00114D 8F F0            [24] 4124 	mov	b,r7
      00114F 78r00            [12] 4125 	mov	r0,#_ctimer_set
      001151 79s00            [12] 4126 	mov	r1,#(_ctimer_set >> 8)
      001153 7As00            [12] 4127 	mov	r2,#(_ctimer_set >> 16)
      001155 12r00r00         [24] 4128 	lcall	__sdcc_banked_call
      001158 E5 81            [12] 4129 	mov	a,sp
      00115A 24 F8            [12] 4130 	add	a,#0xf8
                                   4131 ;	../../../../core/net/mac/lpp.c:719: turn_radio_on_for_neighbor(&hdr.receiver, i);
      00115C F5 81            [12] 4132 	mov	sp,a
      00115E 24 E8            [12] 4133 	add	a,#0xe8
      001160 F8               [12] 4134 	mov	r0,a
      001161 86 07            [24] 4135 	mov	ar7,@r0
      001163 7E 00            [12] 4136 	mov	r6,#0x00
      001165 7D 40            [12] 4137 	mov	r5,#0x40
      001167 A8 81            [24] 4138 	mov	r0,sp
      001169 18               [12] 4139 	dec	r0
      00116A 18               [12] 4140 	dec	r0
      00116B E6               [12] 4141 	mov	a,@r0
      00116C C0 E0            [24] 4142 	push	acc
      00116E 08               [12] 4143 	inc	r0
      00116F E6               [12] 4144 	mov	a,@r0
      001170 C0 E0            [24] 4145 	push	acc
      001172 08               [12] 4146 	inc	r0
      001173 E6               [12] 4147 	mov	a,@r0
      001174 C0 E0            [24] 4148 	push	acc
      001176 8F 82            [24] 4149 	mov	dpl,r7
      001178 8E 83            [24] 4150 	mov	dph,r6
      00117A 8D F0            [24] 4151 	mov	b,r5
      00117C 78r6C            [12] 4152 	mov	r0,#_turn_radio_on_for_neighbor
      00117E 79s03            [12] 4153 	mov	r1,#(_turn_radio_on_for_neighbor >> 8)
      001180 7As00            [12] 4154 	mov	r2,#(_turn_radio_on_for_neighbor >> 16)
      001182 12r00r00         [24] 4155 	lcall	__sdcc_banked_call
      001185 15 81            [12] 4156 	dec	sp
      001187 15 81            [12] 4157 	dec	sp
      001189 15 81            [12] 4158 	dec	sp
      00118B 80 5D            [24] 4159 	sjmp	00129$
      00118D                       4160 00127$:
                                   4161 ;	../../../../core/net/mac/lpp.c:723: printf("i == NULL\n");
      00118D 74r0D            [12] 4162 	mov	a,#__str_1
      00118F C0 E0            [24] 4163 	push	acc
      001191 74s00            [12] 4164 	mov	a,#(__str_1 >> 8)
      001193 C0 E0            [24] 4165 	push	acc
      001195 74 80            [12] 4166 	mov	a,#0x80
      001197 C0 E0            [24] 4167 	push	acc
      001199 78r00            [12] 4168 	mov	r0,#_printf
      00119B 79s00            [12] 4169 	mov	r1,#(_printf >> 8)
      00119D 7As00            [12] 4170 	mov	r2,#(_printf >> 16)
      00119F 12r00r00         [24] 4171 	lcall	__sdcc_banked_call
      0011A2 15 81            [12] 4172 	dec	sp
      0011A4 15 81            [12] 4173 	dec	sp
      0011A6 15 81            [12] 4174 	dec	sp
                                   4175 ;	../../../../core/net/mac/lpp.c:724: mac_call_sent_callback(sent, ptr, MAC_TX_ERR, 0);
      0011A8 E5 81            [12] 4176 	mov	a,sp
      0011AA 24 E5            [12] 4177 	add	a,#0xe5
      0011AC F8               [12] 4178 	mov	r0,a
      0011AD E6               [12] 4179 	mov	a,@r0
      0011AE 08               [12] 4180 	inc	r0
      0011AF 46               [12] 4181 	orl	a,@r0
      0011B0 60 38            [24] 4182 	jz	00129$
      0011B2 E4               [12] 4183 	clr	a
      0011B3 C0 E0            [24] 4184 	push	acc
      0011B5 C0 E0            [24] 4185 	push	acc
      0011B7 74 04            [12] 4186 	mov	a,#0x04
      0011B9 C0 E0            [24] 4187 	push	acc
      0011BB E4               [12] 4188 	clr	a
      0011BC C0 E0            [24] 4189 	push	acc
      0011BE E5 81            [12] 4190 	mov	a,sp
      0011C0 24 E1            [12] 4191 	add	a,#0xe1
      0011C2 F8               [12] 4192 	mov	r0,a
      0011C3 E6               [12] 4193 	mov	a,@r0
      0011C4 C0 E0            [24] 4194 	push	acc
      0011C6 08               [12] 4195 	inc	r0
      0011C7 E6               [12] 4196 	mov	a,@r0
      0011C8 C0 E0            [24] 4197 	push	acc
      0011CA 08               [12] 4198 	inc	r0
      0011CB E6               [12] 4199 	mov	a,@r0
      0011CC C0 E0            [24] 4200 	push	acc
      0011CE E5 81            [12] 4201 	mov	a,sp
      0011D0 24 D8            [12] 4202 	add	a,#0xd8
      0011D2 F8               [12] 4203 	mov	r0,a
      0011D3 86 82            [24] 4204 	mov	dpl,@r0
      0011D5 08               [12] 4205 	inc	r0
      0011D6 86 83            [24] 4206 	mov	dph,@r0
      0011D8 08               [12] 4207 	inc	r0
      0011D9 86 F0            [24] 4208 	mov	b,@r0
      0011DB D0 02            [24] 4209 	pop	ar2
      0011DD D0 01            [24] 4210 	pop	ar1
      0011DF D0 00            [24] 4211 	pop	ar0
      0011E1 12r00r00         [24] 4212 	lcall	__sdcc_banked_call
      0011E4 E5 81            [12] 4213 	mov	a,sp
      0011E6 24 FC            [12] 4214 	add	a,#0xfc
      0011E8 F5 81            [12] 4215 	mov	sp,a
      0011EA                       4216 00129$:
      0011EA E5 81            [12] 4217 	mov	a,sp
      0011EC 24 E4            [12] 4218 	add	a,#0xE4
      0011EE F5 81            [12] 4219 	mov	sp,a
      0011F0 02r00r00         [24] 4220 	ljmp	__sdcc_banked_ret
                                   4221 ;------------------------------------------------------------
                                   4222 ;Allocation info for local variables in function 'send_list'
                                   4223 ;------------------------------------------------------------
                                   4224 ;ptr                       Allocated to stack - sp -5
                                   4225 ;buf_list                  Allocated to stack - sp -8
                                   4226 ;sent                      Allocated to registers r5 r6 r7 
                                   4227 ;------------------------------------------------------------
                                   4228 ;	../../../../core/net/mac/lpp.c:730: send_list(mac_callback_t sent, void *ptr, struct rdc_buf_list *buf_list)
                                   4229 ;	-----------------------------------------
                                   4230 ;	 function send_list
                                   4231 ;	-----------------------------------------
      0011F3                       4232 _send_list:
      0011F3 AD 82            [24] 4233 	mov	r5,dpl
      0011F5 AE 83            [24] 4234 	mov	r6,dph
      0011F7 AF F0            [24] 4235 	mov	r7,b
                                   4236 ;	../../../../core/net/mac/lpp.c:732: if(buf_list != NULL) {
      0011F9 E5 81            [12] 4237 	mov	a,sp
      0011FB 24 F8            [12] 4238 	add	a,#0xf8
      0011FD F8               [12] 4239 	mov	r0,a
      0011FE E6               [12] 4240 	mov	a,@r0
      0011FF 08               [12] 4241 	inc	r0
      001200 46               [12] 4242 	orl	a,@r0
      001201 60 68            [24] 4243 	jz	00103$
                                   4244 ;	../../../../core/net/mac/lpp.c:733: queuebuf_to_packetbuf(buf_list->buf);
      001203 E5 81            [12] 4245 	mov	a,sp
      001205 24 F8            [12] 4246 	add	a,#0xf8
      001207 F8               [12] 4247 	mov	r0,a
      001208 86 02            [24] 4248 	mov	ar2,@r0
      00120A 08               [12] 4249 	inc	r0
      00120B 86 03            [24] 4250 	mov	ar3,@r0
      00120D 08               [12] 4251 	inc	r0
      00120E 86 04            [24] 4252 	mov	ar4,@r0
      001210 74 03            [12] 4253 	mov	a,#0x03
      001212 2A               [12] 4254 	add	a,r2
      001213 FA               [12] 4255 	mov	r2,a
      001214 E4               [12] 4256 	clr	a
      001215 3B               [12] 4257 	addc	a,r3
      001216 FB               [12] 4258 	mov	r3,a
      001217 8A 82            [24] 4259 	mov	dpl,r2
      001219 8B 83            [24] 4260 	mov	dph,r3
      00121B 8C F0            [24] 4261 	mov	b,r4
      00121D 12r00r00         [24] 4262 	lcall	__gptrget
      001220 FA               [12] 4263 	mov	r2,a
      001221 A3               [24] 4264 	inc	dptr
      001222 12r00r00         [24] 4265 	lcall	__gptrget
      001225 FB               [12] 4266 	mov	r3,a
      001226 A3               [24] 4267 	inc	dptr
      001227 12r00r00         [24] 4268 	lcall	__gptrget
      00122A FC               [12] 4269 	mov	r4,a
      00122B 8A 82            [24] 4270 	mov	dpl,r2
      00122D 8B 83            [24] 4271 	mov	dph,r3
      00122F 8C F0            [24] 4272 	mov	b,r4
      001231 C0 07            [24] 4273 	push	ar7
      001233 C0 06            [24] 4274 	push	ar6
      001235 C0 05            [24] 4275 	push	ar5
      001237 78r00            [12] 4276 	mov	r0,#_queuebuf_to_packetbuf
      001239 79s00            [12] 4277 	mov	r1,#(_queuebuf_to_packetbuf >> 8)
      00123B 7As00            [12] 4278 	mov	r2,#(_queuebuf_to_packetbuf >> 16)
      00123D 12r00r00         [24] 4279 	lcall	__sdcc_banked_call
      001240 D0 05            [24] 4280 	pop	ar5
      001242 D0 06            [24] 4281 	pop	ar6
      001244 D0 07            [24] 4282 	pop	ar7
                                   4283 ;	../../../../core/net/mac/lpp.c:734: send_packet(sent, ptr);
      001246 E5 81            [12] 4284 	mov	a,sp
      001248 24 FB            [12] 4285 	add	a,#0xfb
      00124A F8               [12] 4286 	mov	r0,a
      00124B E6               [12] 4287 	mov	a,@r0
      00124C C0 E0            [24] 4288 	push	acc
      00124E 08               [12] 4289 	inc	r0
      00124F E6               [12] 4290 	mov	a,@r0
      001250 C0 E0            [24] 4291 	push	acc
      001252 08               [12] 4292 	inc	r0
      001253 E6               [12] 4293 	mov	a,@r0
      001254 C0 E0            [24] 4294 	push	acc
      001256 8D 82            [24] 4295 	mov	dpl,r5
      001258 8E 83            [24] 4296 	mov	dph,r6
      00125A 8F F0            [24] 4297 	mov	b,r7
      00125C 78rE0            [12] 4298 	mov	r0,#_send_packet
      00125E 79s0D            [12] 4299 	mov	r1,#(_send_packet >> 8)
      001260 7As00            [12] 4300 	mov	r2,#(_send_packet >> 16)
      001262 12r00r00         [24] 4301 	lcall	__sdcc_banked_call
      001265 15 81            [12] 4302 	dec	sp
      001267 15 81            [12] 4303 	dec	sp
      001269 15 81            [12] 4304 	dec	sp
      00126B                       4305 00103$:
      00126B 02r00r00         [24] 4306 	ljmp	__sdcc_banked_ret
                                   4307 ;------------------------------------------------------------
                                   4308 ;Allocation info for local variables in function 'detect_ack'
                                   4309 ;------------------------------------------------------------
                                   4310 ;wt                        Allocated to registers r5 r6 
                                   4311 ;ack_received              Allocated to registers r7 
                                   4312 ;len                       Allocated to registers r4 r5 
                                   4313 ;ackbuf                    Allocated to stack - sp -4
                                   4314 ;------------------------------------------------------------
                                   4315 ;	../../../../core/net/mac/lpp.c:739: detect_ack(void)
                                   4316 ;	-----------------------------------------
                                   4317 ;	 function detect_ack
                                   4318 ;	-----------------------------------------
      00126E                       4319 _detect_ack:
      00126E E5 81            [12] 4320 	mov	a,sp
      001270 24 05            [12] 4321 	add	a,#0x05
      001272 F5 81            [12] 4322 	mov	sp,a
                                   4323 ;	../../../../core/net/mac/lpp.c:745: uint8_t ack_received = 0;
      001274 7F 00            [12] 4324 	mov	r7,#0x00
                                   4325 ;	../../../../core/net/mac/lpp.c:747: wt = RTIMER_NOW();
      001276 AD E2            [24] 4326 	mov	r5,_T1CNTL
      001278 7E 00            [12] 4327 	mov	r6,#0x00
      00127A AB E3            [24] 4328 	mov	r3,_T1CNTH
      00127C 8B 04            [24] 4329 	mov	ar4,r3
      00127E E4               [12] 4330 	clr	a
      00127F 2D               [12] 4331 	add	a,r5
      001280 FD               [12] 4332 	mov	r5,a
      001281 EC               [12] 4333 	mov	a,r4
      001282 3E               [12] 4334 	addc	a,r6
      001283 FE               [12] 4335 	mov	r6,a
                                   4336 ;	../../../../core/net/mac/lpp.c:748: leds_on(LEDS_GREEN);
      001284 75 82 01         [24] 4337 	mov	dpl,#0x01
      001287 C0 07            [24] 4338 	push	ar7
      001289 C0 06            [24] 4339 	push	ar6
      00128B C0 05            [24] 4340 	push	ar5
      00128D 78r00            [12] 4341 	mov	r0,#_leds_on
      00128F 79s00            [12] 4342 	mov	r1,#(_leds_on >> 8)
      001291 7As00            [12] 4343 	mov	r2,#(_leds_on >> 16)
      001293 12r00r00         [24] 4344 	lcall	__sdcc_banked_call
      001296 D0 05            [24] 4345 	pop	ar5
      001298 D0 06            [24] 4346 	pop	ar6
      00129A D0 07            [24] 4347 	pop	ar7
                                   4348 ;	../../../../core/net/mac/lpp.c:749: while(RTIMER_CLOCK_LT(RTIMER_NOW(), wt + INTER_PACKET_INTERVAL)) { }
      00129C 74 03            [12] 4349 	mov	a,#0x03
      00129E 2D               [12] 4350 	add	a,r5
      00129F FD               [12] 4351 	mov	r5,a
      0012A0 E4               [12] 4352 	clr	a
      0012A1 3E               [12] 4353 	addc	a,r6
      0012A2 FE               [12] 4354 	mov	r6,a
      0012A3                       4355 00101$:
      0012A3 C0 07            [24] 4356 	push	ar7
      0012A5 AB E2            [24] 4357 	mov	r3,_T1CNTL
      0012A7 7C 00            [12] 4358 	mov	r4,#0x00
      0012A9 AA E3            [24] 4359 	mov	r2,_T1CNTH
      0012AB 8A 07            [24] 4360 	mov	ar7,r2
      0012AD E4               [12] 4361 	clr	a
      0012AE FA               [12] 4362 	mov	r2,a
      0012AF 2B               [12] 4363 	add	a,r3
      0012B0 FB               [12] 4364 	mov	r3,a
      0012B1 EF               [12] 4365 	mov	a,r7
      0012B2 3C               [12] 4366 	addc	a,r4
      0012B3 FC               [12] 4367 	mov	r4,a
      0012B4 EB               [12] 4368 	mov	a,r3
      0012B5 C3               [12] 4369 	clr	c
      0012B6 9D               [12] 4370 	subb	a,r5
      0012B7 FB               [12] 4371 	mov	r3,a
      0012B8 EC               [12] 4372 	mov	a,r4
      0012B9 9E               [12] 4373 	subb	a,r6
      0012BA FC               [12] 4374 	mov	r4,a
      0012BB D0 07            [24] 4375 	pop	ar7
      0012BD 20 E7 E3         [24] 4376 	jb	acc.7,00101$
                                   4377 ;	../../../../core/net/mac/lpp.c:750: leds_off(LEDS_GREEN);
      0012C0 75 82 01         [24] 4378 	mov	dpl,#0x01
      0012C3 C0 07            [24] 4379 	push	ar7
      0012C5 78r00            [12] 4380 	mov	r0,#_leds_off
      0012C7 79s00            [12] 4381 	mov	r1,#(_leds_off >> 8)
      0012C9 7As00            [12] 4382 	mov	r2,#(_leds_off >> 16)
      0012CB 12r00r00         [24] 4383 	lcall	__sdcc_banked_call
                                   4384 ;	../../../../core/net/mac/lpp.c:752: if((NETSTACK_RADIO.receiving_packet() ||
      0012CE 90r00r12         [24] 4385 	mov	dptr,#(_cc2530_rf_driver + 0x0012)
      0012D1 E4               [12] 4386 	clr	a
      0012D2 93               [24] 4387 	movc	a,@a+dptr
      0012D3 FC               [12] 4388 	mov	r4,a
      0012D4 A3               [24] 4389 	inc	dptr
      0012D5 E4               [12] 4390 	clr	a
      0012D6 93               [24] 4391 	movc	a,@a+dptr
      0012D7 FD               [12] 4392 	mov	r5,a
      0012D8 A3               [24] 4393 	inc	dptr
      0012D9 E4               [12] 4394 	clr	a
      0012DA 93               [24] 4395 	movc	a,@a+dptr
      0012DB FE               [12] 4396 	mov	r6,a
      0012DC C0 06            [24] 4397 	push	ar6
      0012DE C0 04            [24] 4398 	push	ar4
      0012E0 C0 05            [24] 4399 	push	ar5
      0012E2 C0 06            [24] 4400 	push	ar6
      0012E4 D0 02            [24] 4401 	pop	ar2
      0012E6 D0 01            [24] 4402 	pop	ar1
      0012E8 D0 00            [24] 4403 	pop	ar0
      0012EA 12r00r00         [24] 4404 	lcall	__sdcc_banked_call
      0012ED AC 82            [24] 4405 	mov	r4,dpl
      0012EF AD 83            [24] 4406 	mov	r5,dph
      0012F1 D0 06            [24] 4407 	pop	ar6
      0012F3 D0 07            [24] 4408 	pop	ar7
      0012F5 EC               [12] 4409 	mov	a,r4
      0012F6 4D               [12] 4410 	orl	a,r5
      0012F7 70 5D            [24] 4411 	jnz	00109$
                                   4412 ;	../../../../core/net/mac/lpp.c:753: NETSTACK_RADIO.pending_packet() ||
      0012F9 90r00r15         [24] 4413 	mov	dptr,#(_cc2530_rf_driver + 0x0015)
      0012FC E4               [12] 4414 	clr	a
      0012FD 93               [24] 4415 	movc	a,@a+dptr
      0012FE FC               [12] 4416 	mov	r4,a
      0012FF A3               [24] 4417 	inc	dptr
      001300 E4               [12] 4418 	clr	a
      001301 93               [24] 4419 	movc	a,@a+dptr
      001302 FD               [12] 4420 	mov	r5,a
      001303 A3               [24] 4421 	inc	dptr
      001304 E4               [12] 4422 	clr	a
      001305 93               [24] 4423 	movc	a,@a+dptr
      001306 FE               [12] 4424 	mov	r6,a
      001307 C0 07            [24] 4425 	push	ar7
      001309 C0 06            [24] 4426 	push	ar6
      00130B C0 04            [24] 4427 	push	ar4
      00130D C0 05            [24] 4428 	push	ar5
      00130F C0 06            [24] 4429 	push	ar6
      001311 D0 02            [24] 4430 	pop	ar2
      001313 D0 01            [24] 4431 	pop	ar1
      001315 D0 00            [24] 4432 	pop	ar0
      001317 12r00r00         [24] 4433 	lcall	__sdcc_banked_call
      00131A AC 82            [24] 4434 	mov	r4,dpl
      00131C AD 83            [24] 4435 	mov	r5,dph
      00131E D0 06            [24] 4436 	pop	ar6
      001320 D0 07            [24] 4437 	pop	ar7
      001322 EC               [12] 4438 	mov	a,r4
      001323 4D               [12] 4439 	orl	a,r5
      001324 70 30            [24] 4440 	jnz	00109$
                                   4441 ;	../../../../core/net/mac/lpp.c:754: NETSTACK_RADIO.channel_clear() == 0)) {
      001326 90r00r0F         [24] 4442 	mov	dptr,#(_cc2530_rf_driver + 0x000f)
      001329 E4               [12] 4443 	clr	a
      00132A 93               [24] 4444 	movc	a,@a+dptr
      00132B FC               [12] 4445 	mov	r4,a
      00132C A3               [24] 4446 	inc	dptr
      00132D E4               [12] 4447 	clr	a
      00132E 93               [24] 4448 	movc	a,@a+dptr
      00132F FD               [12] 4449 	mov	r5,a
      001330 A3               [24] 4450 	inc	dptr
      001331 E4               [12] 4451 	clr	a
      001332 93               [24] 4452 	movc	a,@a+dptr
      001333 FE               [12] 4453 	mov	r6,a
      001334 C0 07            [24] 4454 	push	ar7
      001336 C0 06            [24] 4455 	push	ar6
      001338 C0 04            [24] 4456 	push	ar4
      00133A C0 05            [24] 4457 	push	ar5
      00133C C0 06            [24] 4458 	push	ar6
      00133E D0 02            [24] 4459 	pop	ar2
      001340 D0 01            [24] 4460 	pop	ar1
      001342 D0 00            [24] 4461 	pop	ar0
      001344 12r00r00         [24] 4462 	lcall	__sdcc_banked_call
      001347 AC 82            [24] 4463 	mov	r4,dpl
      001349 AD 83            [24] 4464 	mov	r5,dph
      00134B D0 06            [24] 4465 	pop	ar6
      00134D D0 07            [24] 4466 	pop	ar7
      00134F EC               [12] 4467 	mov	a,r4
      001350 4D               [12] 4468 	orl	a,r5
      001351 60 03            [24] 4469 	jz	00144$
      001353 02r13rDE         [24] 4470 	ljmp	00110$
      001356                       4471 00144$:
      001356                       4472 00109$:
                                   4473 ;	../../../../core/net/mac/lpp.c:758: wt = RTIMER_NOW();
      001356 AD E2            [24] 4474 	mov	r5,_T1CNTL
      001358 7E 00            [12] 4475 	mov	r6,#0x00
      00135A AB E3            [24] 4476 	mov	r3,_T1CNTH
      00135C 8B 04            [24] 4477 	mov	ar4,r3
      00135E E4               [12] 4478 	clr	a
      00135F FB               [12] 4479 	mov	r3,a
      001360 2D               [12] 4480 	add	a,r5
      001361 FD               [12] 4481 	mov	r5,a
      001362 EC               [12] 4482 	mov	a,r4
      001363 3E               [12] 4483 	addc	a,r6
      001364 FE               [12] 4484 	mov	r6,a
                                   4485 ;	../../../../core/net/mac/lpp.c:759: while(RTIMER_CLOCK_LT(RTIMER_NOW(), wt + AFTER_ACK_DETECTECT_WAIT_TIME)) { }
      001365 74 0F            [12] 4486 	mov	a,#0x0F
      001367 2D               [12] 4487 	add	a,r5
      001368 FD               [12] 4488 	mov	r5,a
      001369 E4               [12] 4489 	clr	a
      00136A 3E               [12] 4490 	addc	a,r6
      00136B FE               [12] 4491 	mov	r6,a
      00136C                       4492 00104$:
      00136C C0 07            [24] 4493 	push	ar7
      00136E AB E2            [24] 4494 	mov	r3,_T1CNTL
      001370 7C 00            [12] 4495 	mov	r4,#0x00
      001372 AA E3            [24] 4496 	mov	r2,_T1CNTH
      001374 8A 07            [24] 4497 	mov	ar7,r2
      001376 E4               [12] 4498 	clr	a
      001377 FA               [12] 4499 	mov	r2,a
      001378 2B               [12] 4500 	add	a,r3
      001379 FB               [12] 4501 	mov	r3,a
      00137A EF               [12] 4502 	mov	a,r7
      00137B 3C               [12] 4503 	addc	a,r4
      00137C FC               [12] 4504 	mov	r4,a
      00137D EB               [12] 4505 	mov	a,r3
      00137E C3               [12] 4506 	clr	c
      00137F 9D               [12] 4507 	subb	a,r5
      001380 FB               [12] 4508 	mov	r3,a
      001381 EC               [12] 4509 	mov	a,r4
      001382 9E               [12] 4510 	subb	a,r6
      001383 FC               [12] 4511 	mov	r4,a
      001384 D0 07            [24] 4512 	pop	ar7
      001386 20 E7 E3         [24] 4513 	jb	acc.7,00104$
                                   4514 ;	../../../../core/net/mac/lpp.c:761: len = NETSTACK_RADIO.read(ackbuf, ACK_LEN);
      001389 C0 07            [24] 4515 	push	ar7
      00138B 90r00r0C         [24] 4516 	mov	dptr,#(_cc2530_rf_driver + 0x000c)
      00138E E4               [12] 4517 	clr	a
      00138F 93               [24] 4518 	movc	a,@a+dptr
      001390 FC               [12] 4519 	mov	r4,a
      001391 A3               [24] 4520 	inc	dptr
      001392 E4               [12] 4521 	clr	a
      001393 93               [24] 4522 	movc	a,@a+dptr
      001394 FD               [12] 4523 	mov	r5,a
      001395 A3               [24] 4524 	inc	dptr
      001396 E4               [12] 4525 	clr	a
      001397 93               [24] 4526 	movc	a,@a+dptr
      001398 FE               [12] 4527 	mov	r6,a
      001399 E5 81            [12] 4528 	mov	a,sp
      00139B 24 FB            [12] 4529 	add	a,#0xFB
      00139D FA               [12] 4530 	mov	r2,a
      00139E 7B 00            [12] 4531 	mov	r3,#0x00
      0013A0 7F 40            [12] 4532 	mov	r7,#0x40
      0013A2 C0 07            [24] 4533 	push	ar7
      0013A4 C0 06            [24] 4534 	push	ar6
      0013A6 74 03            [12] 4535 	mov	a,#0x03
      0013A8 C0 E0            [24] 4536 	push	acc
      0013AA E4               [12] 4537 	clr	a
      0013AB C0 E0            [24] 4538 	push	acc
      0013AD C0 04            [24] 4539 	push	ar4
      0013AF C0 05            [24] 4540 	push	ar5
      0013B1 C0 06            [24] 4541 	push	ar6
      0013B3 8A 82            [24] 4542 	mov	dpl,r2
      0013B5 8B 83            [24] 4543 	mov	dph,r3
      0013B7 8F F0            [24] 4544 	mov	b,r7
      0013B9 D0 02            [24] 4545 	pop	ar2
      0013BB D0 01            [24] 4546 	pop	ar1
      0013BD D0 00            [24] 4547 	pop	ar0
      0013BF 12r00r00         [24] 4548 	lcall	__sdcc_banked_call
      0013C2 AC 82            [24] 4549 	mov	r4,dpl
      0013C4 AD 83            [24] 4550 	mov	r5,dph
      0013C6 15 81            [12] 4551 	dec	sp
      0013C8 15 81            [12] 4552 	dec	sp
      0013CA D0 06            [24] 4553 	pop	ar6
      0013CC D0 07            [24] 4554 	pop	ar7
                                   4555 ;	../../../../core/net/mac/lpp.c:762: if(len == ACK_LEN) {
      0013CE BC 03 05         [24] 4556 	cjne	r4,#0x03,00146$
      0013D1 BD 00 02         [24] 4557 	cjne	r5,#0x00,00146$
      0013D4 80 04            [24] 4558 	sjmp	00147$
      0013D6                       4559 00146$:
      0013D6 D0 07            [24] 4560 	pop	ar7
      0013D8 80 04            [24] 4561 	sjmp	00110$
      0013DA                       4562 00147$:
      0013DA D0 07            [24] 4563 	pop	ar7
                                   4564 ;	../../../../core/net/mac/lpp.c:763: ack_received = 1;
      0013DC 7F 01            [12] 4565 	mov	r7,#0x01
      0013DE                       4566 00110$:
                                   4567 ;	../../../../core/net/mac/lpp.c:766: if(ack_received) {
      0013DE EF               [12] 4568 	mov	a,r7
      0013DF 60 10            [24] 4569 	jz	00114$
                                   4570 ;	../../../../core/net/mac/lpp.c:767: leds_toggle(LEDS_RED);
      0013E1 75 82 02         [24] 4571 	mov	dpl,#0x02
      0013E4 C0 07            [24] 4572 	push	ar7
      0013E6 78r00            [12] 4573 	mov	r0,#_leds_toggle
      0013E8 79s00            [12] 4574 	mov	r1,#(_leds_toggle >> 8)
      0013EA 7As00            [12] 4575 	mov	r2,#(_leds_toggle >> 16)
      0013EC 12r00r00         [24] 4576 	lcall	__sdcc_banked_call
      0013EF D0 07            [24] 4577 	pop	ar7
      0013F1                       4578 00114$:
                                   4579 ;	../../../../core/net/mac/lpp.c:769: return ack_received;
      0013F1 7E 00            [12] 4580 	mov	r6,#0x00
      0013F3 8F 82            [24] 4581 	mov	dpl,r7
      0013F5 8E 83            [24] 4582 	mov	dph,r6
      0013F7 E5 81            [12] 4583 	mov	a,sp
      0013F9 24 FB            [12] 4584 	add	a,#0xFB
      0013FB F5 81            [12] 4585 	mov	sp,a
      0013FD 02r00r00         [24] 4586 	ljmp	__sdcc_banked_ret
                                   4587 ;------------------------------------------------------------
                                   4588 ;Allocation info for local variables in function 'input_packet'
                                   4589 ;------------------------------------------------------------
                                   4590 ;hdr                       Allocated to stack - sp -25
                                   4591 ;reception_time            Allocated to registers 
                                   4592 ;ret                       Allocated to registers 
                                   4593 ;adata                     Allocated to stack - sp -7
                                   4594 ;i                         Allocated to stack - sp -5
                                   4595 ;receiver                  Allocated to stack - sp -2
                                   4596 ;sent                      Allocated to registers 
                                   4597 ;sloc0                     Allocated to stack - sp +1
                                   4598 ;sloc1                     Allocated to stack - sp -30
                                   4599 ;sloc2                     Allocated to stack - sp -28
                                   4600 ;------------------------------------------------------------
                                   4601 ;	../../../../core/net/mac/lpp.c:779: input_packet(void)
                                   4602 ;	-----------------------------------------
                                   4603 ;	 function input_packet
                                   4604 ;	-----------------------------------------
      001400                       4605 _input_packet:
      001400 E5 81            [12] 4606 	mov	a,sp
      001402 24 1F            [12] 4607 	add	a,#0x1F
      001404 F5 81            [12] 4608 	mov	sp,a
                                   4609 ;	../../../../core/net/mac/lpp.c:785: reception_time = clock_time();
      001406 78r00            [12] 4610 	mov	r0,#_clock_time
      001408 79s00            [12] 4611 	mov	r1,#(_clock_time >> 8)
      00140A 7As00            [12] 4612 	mov	r2,#(_clock_time >> 16)
      00140C 12r00r00         [24] 4613 	lcall	__sdcc_banked_call
      00140F AE 82            [24] 4614 	mov	r6,dpl
      001411 AF 83            [24] 4615 	mov	r7,dph
                                   4616 ;	../../../../core/net/mac/lpp.c:787: if(NETSTACK_FRAMER.parse() < 0) {
      001413 90r00r03         [24] 4617 	mov	dptr,#(_framer_802154 + 0x0003)
      001416 E4               [12] 4618 	clr	a
      001417 93               [24] 4619 	movc	a,@a+dptr
      001418 FB               [12] 4620 	mov	r3,a
      001419 A3               [24] 4621 	inc	dptr
      00141A E4               [12] 4622 	clr	a
      00141B 93               [24] 4623 	movc	a,@a+dptr
      00141C FC               [12] 4624 	mov	r4,a
      00141D A3               [24] 4625 	inc	dptr
      00141E E4               [12] 4626 	clr	a
      00141F 93               [24] 4627 	movc	a,@a+dptr
      001420 FD               [12] 4628 	mov	r5,a
      001421 C0 07            [24] 4629 	push	ar7
      001423 C0 06            [24] 4630 	push	ar6
      001425 C0 05            [24] 4631 	push	ar5
      001427 C0 03            [24] 4632 	push	ar3
      001429 C0 04            [24] 4633 	push	ar4
      00142B C0 05            [24] 4634 	push	ar5
      00142D D0 02            [24] 4635 	pop	ar2
      00142F D0 01            [24] 4636 	pop	ar1
      001431 D0 00            [24] 4637 	pop	ar0
      001433 12r00r00         [24] 4638 	lcall	__sdcc_banked_call
      001436 AB 82            [24] 4639 	mov	r3,dpl
      001438 AC 83            [24] 4640 	mov	r4,dph
      00143A D0 05            [24] 4641 	pop	ar5
      00143C D0 06            [24] 4642 	pop	ar6
      00143E D0 07            [24] 4643 	pop	ar7
      001440 EC               [12] 4644 	mov	a,r4
      001441 30 E7 23         [24] 4645 	jnb	acc.7,00102$
                                   4646 ;	../../../../core/net/mac/lpp.c:788: printf("lpp input_packet framer error\n");
      001444 C0 07            [24] 4647 	push	ar7
      001446 C0 06            [24] 4648 	push	ar6
      001448 74r18            [12] 4649 	mov	a,#__str_2
      00144A C0 E0            [24] 4650 	push	acc
      00144C 74s00            [12] 4651 	mov	a,#(__str_2 >> 8)
      00144E C0 E0            [24] 4652 	push	acc
      001450 74 80            [12] 4653 	mov	a,#0x80
      001452 C0 E0            [24] 4654 	push	acc
      001454 78r00            [12] 4655 	mov	r0,#_printf
      001456 79s00            [12] 4656 	mov	r1,#(_printf >> 8)
      001458 7As00            [12] 4657 	mov	r2,#(_printf >> 16)
      00145A 12r00r00         [24] 4658 	lcall	__sdcc_banked_call
      00145D 15 81            [12] 4659 	dec	sp
      00145F 15 81            [12] 4660 	dec	sp
      001461 15 81            [12] 4661 	dec	sp
      001463 D0 06            [24] 4662 	pop	ar6
      001465 D0 07            [24] 4663 	pop	ar7
      001467                       4664 00102$:
                                   4665 ;	../../../../core/net/mac/lpp.c:791: memcpy(&hdr, packetbuf_dataptr(), sizeof(struct lpp_hdr));;
      001467 C0 06            [24] 4666 	push	ar6
      001469 C0 07            [24] 4667 	push	ar7
      00146B C0 07            [24] 4668 	push	ar7
      00146D C0 06            [24] 4669 	push	ar6
      00146F 78r00            [12] 4670 	mov	r0,#_packetbuf_dataptr
      001471 79s00            [12] 4671 	mov	r1,#(_packetbuf_dataptr >> 8)
      001473 7As00            [12] 4672 	mov	r2,#(_packetbuf_dataptr >> 16)
      001475 12r00r00         [24] 4673 	lcall	__sdcc_banked_call
      001478 AB 82            [24] 4674 	mov	r3,dpl
      00147A AC 83            [24] 4675 	mov	r4,dph
      00147C AD F0            [24] 4676 	mov	r5,b
      00147E D0 06            [24] 4677 	pop	ar6
      001480 D0 07            [24] 4678 	pop	ar7
      001482 E5 81            [12] 4679 	mov	a,sp
      001484 24 E5            [12] 4680 	add	a,#0xE5
      001486 F9               [12] 4681 	mov	r1,a
      001487 FA               [12] 4682 	mov	r2,a
      001488 7E 00            [12] 4683 	mov	r6,#0x00
      00148A 7F 40            [12] 4684 	mov	r7,#0x40
      00148C C0 07            [24] 4685 	push	ar7
      00148E C0 06            [24] 4686 	push	ar6
      001490 C0 01            [24] 4687 	push	ar1
      001492 74 12            [12] 4688 	mov	a,#0x12
      001494 C0 E0            [24] 4689 	push	acc
      001496 E4               [12] 4690 	clr	a
      001497 C0 E0            [24] 4691 	push	acc
      001499 C0 03            [24] 4692 	push	ar3
      00149B C0 04            [24] 4693 	push	ar4
      00149D C0 05            [24] 4694 	push	ar5
      00149F 8A 82            [24] 4695 	mov	dpl,r2
      0014A1 8E 83            [24] 4696 	mov	dph,r6
      0014A3 8F F0            [24] 4697 	mov	b,r7
      0014A5 78r00            [12] 4698 	mov	r0,#_memcpy
      0014A7 79s00            [12] 4699 	mov	r1,#(_memcpy >> 8)
      0014A9 7As00            [12] 4700 	mov	r2,#(_memcpy >> 16)
      0014AB 12r00r00         [24] 4701 	lcall	__sdcc_banked_call
      0014AE E5 81            [12] 4702 	mov	a,sp
      0014B0 24 FB            [12] 4703 	add	a,#0xfb
      0014B2 F5 81            [12] 4704 	mov	sp,a
                                   4705 ;	../../../../core/net/mac/lpp.c:792: packetbuf_hdrreduce(sizeof(struct lpp_hdr));
      0014B4 90 00 12         [24] 4706 	mov	dptr,#0x0012
      0014B7 78r00            [12] 4707 	mov	r0,#_packetbuf_hdrreduce
      0014B9 79s00            [12] 4708 	mov	r1,#(_packetbuf_hdrreduce >> 8)
      0014BB 7As00            [12] 4709 	mov	r2,#(_packetbuf_hdrreduce >> 16)
      0014BD 12r00r00         [24] 4710 	lcall	__sdcc_banked_call
      0014C0 D0 01            [24] 4711 	pop	ar1
      0014C2 D0 06            [24] 4712 	pop	ar6
      0014C4 D0 07            [24] 4713 	pop	ar7
                                   4714 ;	../../../../core/net/mac/lpp.c:795: if(hdr.type == TYPE_PROBE) {
      0014C6 87 05            [24] 4715 	mov	ar5,@r1
      0014C8 09               [12] 4716 	inc	r1
      0014C9 87 04            [24] 4717 	mov	ar4,@r1
      0014CB 19               [12] 4718 	dec	r1
      0014CC BD 01 05         [24] 4719 	cjne	r5,#0x01,00175$
      0014CF BC 00 02         [24] 4720 	cjne	r4,#0x00,00175$
      0014D2 80 07            [24] 4721 	sjmp	00176$
      0014D4                       4722 00175$:
      0014D4 D0 07            [24] 4723 	pop	ar7
      0014D6 D0 06            [24] 4724 	pop	ar6
      0014D8 02r18rEE         [24] 4725 	ljmp	00125$
      0014DB                       4726 00176$:
      0014DB D0 07            [24] 4727 	pop	ar7
      0014DD D0 06            [24] 4728 	pop	ar6
                                   4729 ;	../../../../core/net/mac/lpp.c:800: register_encounter(&hdr.sender, reception_time);
      0014DF 74 02            [12] 4730 	mov	a,#0x02
      0014E1 29               [12] 4731 	add	a,r1
      0014E2 FD               [12] 4732 	mov	r5,a
      0014E3 FA               [12] 4733 	mov	r2,a
      0014E4 7B 00            [12] 4734 	mov	r3,#0x00
      0014E6 7C 40            [12] 4735 	mov	r4,#0x40
      0014E8 C0 05            [24] 4736 	push	ar5
      0014EA C0 06            [24] 4737 	push	ar6
      0014EC C0 07            [24] 4738 	push	ar7
      0014EE 8A 82            [24] 4739 	mov	dpl,r2
      0014F0 8B 83            [24] 4740 	mov	dph,r3
      0014F2 8C F0            [24] 4741 	mov	b,r4
      0014F4 78r1C            [12] 4742 	mov	r0,#_register_encounter
      0014F6 79s01            [12] 4743 	mov	r1,#(_register_encounter >> 8)
      0014F8 7As00            [12] 4744 	mov	r2,#(_register_encounter >> 16)
      0014FA 12r00r00         [24] 4745 	lcall	__sdcc_banked_call
      0014FD 15 81            [12] 4746 	dec	sp
      0014FF 15 81            [12] 4747 	dec	sp
                                   4748 ;	../../../../core/net/mac/lpp.c:804: MIN(packetbuf_datalen(), sizeof(adata)));
      001501 78r00            [12] 4749 	mov	r0,#_packetbuf_datalen
      001503 79s00            [12] 4750 	mov	r1,#(_packetbuf_datalen >> 8)
      001505 7As00            [12] 4751 	mov	r2,#(_packetbuf_datalen >> 16)
      001507 12r00r00         [24] 4752 	lcall	__sdcc_banked_call
      00150A AE 82            [24] 4753 	mov	r6,dpl
      00150C AF 83            [24] 4754 	mov	r7,dph
      00150E D0 05            [24] 4755 	pop	ar5
      001510 C3               [12] 4756 	clr	c
      001511 EE               [12] 4757 	mov	a,r6
      001512 94 02            [12] 4758 	subb	a,#0x02
      001514 EF               [12] 4759 	mov	a,r7
      001515 94 00            [12] 4760 	subb	a,#0x00
      001517 50 1A            [24] 4761 	jnc	00132$
      001519 C0 05            [24] 4762 	push	ar5
      00151B 78r00            [12] 4763 	mov	r0,#_packetbuf_datalen
      00151D 79s00            [12] 4764 	mov	r1,#(_packetbuf_datalen >> 8)
      00151F 7As00            [12] 4765 	mov	r2,#(_packetbuf_datalen >> 16)
      001521 12r00r00         [24] 4766 	lcall	__sdcc_banked_call
      001524 C8               [12] 4767 	xch	a,r0
      001525 E5 81            [12] 4768 	mov	a,sp
      001527 24 E1            [12] 4769 	add	a,#0xe1
      001529 C8               [12] 4770 	xch	a,r0
      00152A A6 82            [24] 4771 	mov	@r0,dpl
      00152C 08               [12] 4772 	inc	r0
      00152D A6 83            [24] 4773 	mov	@r0,dph
      00152F D0 05            [24] 4774 	pop	ar5
      001531 80 0A            [24] 4775 	sjmp	00133$
      001533                       4776 00132$:
      001533 E5 81            [12] 4777 	mov	a,sp
      001535 24 E2            [12] 4778 	add	a,#0xe2
      001537 F8               [12] 4779 	mov	r0,a
      001538 76 02            [12] 4780 	mov	@r0,#0x02
      00153A 08               [12] 4781 	inc	r0
      00153B 76 00            [12] 4782 	mov	@r0,#0x00
      00153D                       4783 00133$:
                                   4784 ;	../../../../core/net/mac/lpp.c:803: memcpy(&adata, packetbuf_dataptr(),
      00153D C0 05            [24] 4785 	push	ar5
      00153F C0 05            [24] 4786 	push	ar5
      001541 78r00            [12] 4787 	mov	r0,#_packetbuf_dataptr
      001543 79s00            [12] 4788 	mov	r1,#(_packetbuf_dataptr >> 8)
      001545 7As00            [12] 4789 	mov	r2,#(_packetbuf_dataptr >> 16)
      001547 12r00r00         [24] 4790 	lcall	__sdcc_banked_call
      00154A AA 82            [24] 4791 	mov	r2,dpl
      00154C AB 83            [24] 4792 	mov	r3,dph
      00154E AC F0            [24] 4793 	mov	r4,b
      001550 D0 05            [24] 4794 	pop	ar5
      001552 E5 81            [12] 4795 	mov	a,sp
      001554 24 F8            [12] 4796 	add	a,#0xF8
      001556 FD               [12] 4797 	mov	r5,a
      001557 7E 00            [12] 4798 	mov	r6,#0x00
      001559 7F 40            [12] 4799 	mov	r7,#0x40
      00155B C0 05            [24] 4800 	push	ar5
      00155D E5 81            [12] 4801 	mov	a,sp
      00155F 24 E0            [12] 4802 	add	a,#0xe0
      001561 F8               [12] 4803 	mov	r0,a
      001562 E6               [12] 4804 	mov	a,@r0
      001563 C0 E0            [24] 4805 	push	acc
      001565 08               [12] 4806 	inc	r0
      001566 E6               [12] 4807 	mov	a,@r0
      001567 C0 E0            [24] 4808 	push	acc
      001569 C0 02            [24] 4809 	push	ar2
      00156B C0 03            [24] 4810 	push	ar3
      00156D C0 04            [24] 4811 	push	ar4
      00156F 8D 82            [24] 4812 	mov	dpl,r5
      001571 8E 83            [24] 4813 	mov	dph,r6
      001573 8F F0            [24] 4814 	mov	b,r7
      001575 78r00            [12] 4815 	mov	r0,#_memcpy
      001577 79s00            [12] 4816 	mov	r1,#(_memcpy >> 8)
      001579 7As00            [12] 4817 	mov	r2,#(_memcpy >> 16)
      00157B 12r00r00         [24] 4818 	lcall	__sdcc_banked_call
      00157E E5 81            [12] 4819 	mov	a,sp
      001580 24 FB            [12] 4820 	add	a,#0xfb
      001582 F5 81            [12] 4821 	mov	sp,a
      001584 D0 05            [24] 4822 	pop	ar5
                                   4823 ;	../../../../core/net/mac/lpp.c:831: if(list_length(queued_packets_list) > 0) {
      001586 90r00r0E         [24] 4824 	mov	dptr,#_queued_packets_list
      001589 E0               [24] 4825 	movx	a,@dptr
      00158A FD               [12] 4826 	mov	r5,a
      00158B A3               [24] 4827 	inc	dptr
      00158C E0               [24] 4828 	movx	a,@dptr
      00158D FE               [12] 4829 	mov	r6,a
      00158E A3               [24] 4830 	inc	dptr
      00158F E0               [24] 4831 	movx	a,@dptr
      001590 FF               [12] 4832 	mov	r7,a
      001591 8D 82            [24] 4833 	mov	dpl,r5
      001593 8E 83            [24] 4834 	mov	dph,r6
      001595 8F F0            [24] 4835 	mov	b,r7
      001597 C0 05            [24] 4836 	push	ar5
      001599 78r00            [12] 4837 	mov	r0,#_list_length
      00159B 79s00            [12] 4838 	mov	r1,#(_list_length >> 8)
      00159D 7As00            [12] 4839 	mov	r2,#(_list_length >> 16)
      00159F 12r00r00         [24] 4840 	lcall	__sdcc_banked_call
      0015A2 AE 82            [24] 4841 	mov	r6,dpl
      0015A4 AF 83            [24] 4842 	mov	r7,dph
      0015A6 D0 05            [24] 4843 	pop	ar5
      0015A8 C3               [12] 4844 	clr	c
      0015A9 E4               [12] 4845 	clr	a
      0015AA 9E               [12] 4846 	subb	a,r6
      0015AB E4               [12] 4847 	clr	a
      0015AC 64 80            [12] 4848 	xrl	a,#0x80
      0015AE 8F F0            [24] 4849 	mov	b,r7
      0015B0 63 F0 80         [24] 4850 	xrl	b,#0x80
      0015B3 95 F0            [12] 4851 	subb	a,b
      0015B5 D0 05            [24] 4852 	pop	ar5
      0015B7 40 03            [24] 4853 	jc	00178$
      0015B9 02r1Ar0E         [24] 4854 	ljmp	00130$
      0015BC                       4855 00178$:
                                   4856 ;	../../../../core/net/mac/lpp.c:833: for(i = list_head(queued_packets_list); i != NULL; i = list_item_next(i)) {
      0015BC 90r00r0E         [24] 4857 	mov	dptr,#_queued_packets_list
      0015BF E0               [24] 4858 	movx	a,@dptr
      0015C0 FC               [12] 4859 	mov	r4,a
      0015C1 A3               [24] 4860 	inc	dptr
      0015C2 E0               [24] 4861 	movx	a,@dptr
      0015C3 FE               [12] 4862 	mov	r6,a
      0015C4 A3               [24] 4863 	inc	dptr
      0015C5 E0               [24] 4864 	movx	a,@dptr
      0015C6 FF               [12] 4865 	mov	r7,a
      0015C7 8C 82            [24] 4866 	mov	dpl,r4
      0015C9 8E 83            [24] 4867 	mov	dph,r6
      0015CB 8F F0            [24] 4868 	mov	b,r7
      0015CD C0 05            [24] 4869 	push	ar5
      0015CF 78r00            [12] 4870 	mov	r0,#_list_head
      0015D1 79s00            [12] 4871 	mov	r1,#(_list_head >> 8)
      0015D3 7As00            [12] 4872 	mov	r2,#(_list_head >> 16)
      0015D5 12r00r00         [24] 4873 	lcall	__sdcc_banked_call
      0015D8 AC 82            [24] 4874 	mov	r4,dpl
      0015DA AE 83            [24] 4875 	mov	r6,dph
      0015DC AF F0            [24] 4876 	mov	r7,b
      0015DE D0 05            [24] 4877 	pop	ar5
      0015E0 E5 81            [12] 4878 	mov	a,sp
      0015E2 24 FB            [12] 4879 	add	a,#0xfb
      0015E4 F8               [12] 4880 	mov	r0,a
      0015E5 A6 04            [24] 4881 	mov	@r0,ar4
      0015E7 08               [12] 4882 	inc	r0
      0015E8 A6 06            [24] 4883 	mov	@r0,ar6
      0015EA 08               [12] 4884 	inc	r0
      0015EB A6 07            [24] 4885 	mov	@r0,ar7
      0015ED                       4886 00128$:
      0015ED E5 81            [12] 4887 	mov	a,sp
      0015EF 24 FB            [12] 4888 	add	a,#0xfb
      0015F1 F8               [12] 4889 	mov	r0,a
      0015F2 E4               [12] 4890 	clr	a
      0015F3 C0 E0            [24] 4891 	push	acc
      0015F5 E4               [12] 4892 	clr	a
      0015F6 C0 E0            [24] 4893 	push	acc
      0015F8 E4               [12] 4894 	clr	a
      0015F9 C0 E0            [24] 4895 	push	acc
      0015FB 86 82            [24] 4896 	mov	dpl,@r0
      0015FD 08               [12] 4897 	inc	r0
      0015FE 86 83            [24] 4898 	mov	dph,@r0
      001600 08               [12] 4899 	inc	r0
      001601 86 F0            [24] 4900 	mov	b,@r0
      001603 12r00r00         [24] 4901 	lcall	___gptr_cmp
      001606 15 81            [12] 4902 	dec	sp
      001608 15 81            [12] 4903 	dec	sp
      00160A 15 81            [12] 4904 	dec	sp
      00160C 70 03            [24] 4905 	jnz	00179$
      00160E 02r1Ar0E         [24] 4906 	ljmp	00130$
      001611                       4907 00179$:
                                   4908 ;	../../../../core/net/mac/lpp.c:839: receiver = queuebuf_addr(i->packet, PACKETBUF_ADDR_RECEIVER);
      001611 E5 81            [12] 4909 	mov	a,sp
      001613 24 FB            [12] 4910 	add	a,#0xfb
      001615 F8               [12] 4911 	mov	r0,a
      001616 74 03            [12] 4912 	mov	a,#0x03
      001618 26               [12] 4913 	add	a,@r0
      001619 FA               [12] 4914 	mov	r2,a
      00161A E4               [12] 4915 	clr	a
      00161B 08               [12] 4916 	inc	r0
      00161C 36               [12] 4917 	addc	a,@r0
      00161D FB               [12] 4918 	mov	r3,a
      00161E 08               [12] 4919 	inc	r0
      00161F 86 07            [24] 4920 	mov	ar7,@r0
      001621 8A 82            [24] 4921 	mov	dpl,r2
      001623 8B 83            [24] 4922 	mov	dph,r3
      001625 8F F0            [24] 4923 	mov	b,r7
      001627 12r00r00         [24] 4924 	lcall	__gptrget
      00162A FA               [12] 4925 	mov	r2,a
      00162B A3               [24] 4926 	inc	dptr
      00162C 12r00r00         [24] 4927 	lcall	__gptrget
      00162F FB               [12] 4928 	mov	r3,a
      001630 A3               [24] 4929 	inc	dptr
      001631 12r00r00         [24] 4930 	lcall	__gptrget
      001634 FF               [12] 4931 	mov	r7,a
      001635 C0 05            [24] 4932 	push	ar5
      001637 74 19            [12] 4933 	mov	a,#0x19
      001639 C0 E0            [24] 4934 	push	acc
      00163B 8A 82            [24] 4935 	mov	dpl,r2
      00163D 8B 83            [24] 4936 	mov	dph,r3
      00163F 8F F0            [24] 4937 	mov	b,r7
      001641 78r00            [12] 4938 	mov	r0,#_queuebuf_addr
      001643 79s00            [12] 4939 	mov	r1,#(_queuebuf_addr >> 8)
      001645 7As00            [12] 4940 	mov	r2,#(_queuebuf_addr >> 16)
      001647 12r00r00         [24] 4941 	lcall	__sdcc_banked_call
      00164A AC 82            [24] 4942 	mov	r4,dpl
      00164C AE 83            [24] 4943 	mov	r6,dph
      00164E AF F0            [24] 4944 	mov	r7,b
      001650 15 81            [12] 4945 	dec	sp
      001652 D0 05            [24] 4946 	pop	ar5
      001654 A8 81            [24] 4947 	mov	r0,sp
      001656 18               [12] 4948 	dec	r0
      001657 18               [12] 4949 	dec	r0
      001658 A6 04            [24] 4950 	mov	@r0,ar4
      00165A 08               [12] 4951 	inc	r0
      00165B A6 06            [24] 4952 	mov	@r0,ar6
      00165D 08               [12] 4953 	inc	r0
      00165E A6 07            [24] 4954 	mov	@r0,ar7
                                   4955 ;	../../../../core/net/mac/lpp.c:840: if(rimeaddr_cmp(receiver, &hdr.sender) ||
      001660 8D 02            [24] 4956 	mov	ar2,r5
      001662 7B 00            [12] 4957 	mov	r3,#0x00
      001664 7F 40            [12] 4958 	mov	r7,#0x40
      001666 C0 05            [24] 4959 	push	ar5
      001668 C0 02            [24] 4960 	push	ar2
      00166A C0 03            [24] 4961 	push	ar3
      00166C C0 07            [24] 4962 	push	ar7
      00166E E5 81            [12] 4963 	mov	a,sp
      001670 24 FA            [12] 4964 	add	a,#0xfa
      001672 F8               [12] 4965 	mov	r0,a
      001673 86 82            [24] 4966 	mov	dpl,@r0
      001675 08               [12] 4967 	inc	r0
      001676 86 83            [24] 4968 	mov	dph,@r0
      001678 08               [12] 4969 	inc	r0
      001679 86 F0            [24] 4970 	mov	b,@r0
      00167B 78r00            [12] 4971 	mov	r0,#_rimeaddr_cmp
      00167D 79s00            [12] 4972 	mov	r1,#(_rimeaddr_cmp >> 8)
      00167F 7As00            [12] 4973 	mov	r2,#(_rimeaddr_cmp >> 16)
      001681 12r00r00         [24] 4974 	lcall	__sdcc_banked_call
      001684 AE 82            [24] 4975 	mov	r6,dpl
      001686 AF 83            [24] 4976 	mov	r7,dph
      001688 15 81            [12] 4977 	dec	sp
      00168A 15 81            [12] 4978 	dec	sp
      00168C 15 81            [12] 4979 	dec	sp
      00168E D0 05            [24] 4980 	pop	ar5
      001690 EE               [12] 4981 	mov	a,r6
      001691 4F               [12] 4982 	orl	a,r7
      001692 70 37            [24] 4983 	jnz	00112$
                                   4984 ;	../../../../core/net/mac/lpp.c:841: rimeaddr_cmp(receiver, &rimeaddr_null)) {
      001694 C0 05            [24] 4985 	push	ar5
      001696 74r00            [12] 4986 	mov	a,#_rimeaddr_null
      001698 C0 E0            [24] 4987 	push	acc
      00169A 74s00            [12] 4988 	mov	a,#(_rimeaddr_null >> 8)
      00169C C0 E0            [24] 4989 	push	acc
      00169E 74 80            [12] 4990 	mov	a,#0x80
      0016A0 C0 E0            [24] 4991 	push	acc
      0016A2 E5 81            [12] 4992 	mov	a,sp
      0016A4 24 FA            [12] 4993 	add	a,#0xfa
      0016A6 F8               [12] 4994 	mov	r0,a
      0016A7 86 82            [24] 4995 	mov	dpl,@r0
      0016A9 08               [12] 4996 	inc	r0
      0016AA 86 83            [24] 4997 	mov	dph,@r0
      0016AC 08               [12] 4998 	inc	r0
      0016AD 86 F0            [24] 4999 	mov	b,@r0
      0016AF 78r00            [12] 5000 	mov	r0,#_rimeaddr_cmp
      0016B1 79s00            [12] 5001 	mov	r1,#(_rimeaddr_cmp >> 8)
      0016B3 7As00            [12] 5002 	mov	r2,#(_rimeaddr_cmp >> 16)
      0016B5 12r00r00         [24] 5003 	lcall	__sdcc_banked_call
      0016B8 AE 82            [24] 5004 	mov	r6,dpl
      0016BA AF 83            [24] 5005 	mov	r7,dph
      0016BC 15 81            [12] 5006 	dec	sp
      0016BE 15 81            [12] 5007 	dec	sp
      0016C0 15 81            [12] 5008 	dec	sp
      0016C2 D0 05            [24] 5009 	pop	ar5
      0016C4 EE               [12] 5010 	mov	a,r6
      0016C5 4F               [12] 5011 	orl	a,r7
      0016C6 70 03            [24] 5012 	jnz	00181$
      0016C8 02r18rB8         [24] 5013 	ljmp	00129$
      0016CB                       5014 00181$:
      0016CB                       5015 00112$:
                                   5016 ;	../../../../core/net/mac/lpp.c:842: queuebuf_to_packetbuf(i->packet);
      0016CB C0 05            [24] 5017 	push	ar5
      0016CD E5 81            [12] 5018 	mov	a,sp
      0016CF 24 FA            [12] 5019 	add	a,#0xfa
      0016D1 F8               [12] 5020 	mov	r0,a
      0016D2 74 03            [12] 5021 	mov	a,#0x03
      0016D4 26               [12] 5022 	add	a,@r0
      0016D5 FC               [12] 5023 	mov	r4,a
      0016D6 E4               [12] 5024 	clr	a
      0016D7 08               [12] 5025 	inc	r0
      0016D8 36               [12] 5026 	addc	a,@r0
      0016D9 FE               [12] 5027 	mov	r6,a
      0016DA 08               [12] 5028 	inc	r0
      0016DB 86 07            [24] 5029 	mov	ar7,@r0
      0016DD 8C 82            [24] 5030 	mov	dpl,r4
      0016DF 8E 83            [24] 5031 	mov	dph,r6
      0016E1 8F F0            [24] 5032 	mov	b,r7
      0016E3 12r00r00         [24] 5033 	lcall	__gptrget
      0016E6 FA               [12] 5034 	mov	r2,a
      0016E7 A3               [24] 5035 	inc	dptr
      0016E8 12r00r00         [24] 5036 	lcall	__gptrget
      0016EB FB               [12] 5037 	mov	r3,a
      0016EC A3               [24] 5038 	inc	dptr
      0016ED 12r00r00         [24] 5039 	lcall	__gptrget
      0016F0 FD               [12] 5040 	mov	r5,a
      0016F1 8A 82            [24] 5041 	mov	dpl,r2
      0016F3 8B 83            [24] 5042 	mov	dph,r3
      0016F5 8D F0            [24] 5043 	mov	b,r5
      0016F7 C0 07            [24] 5044 	push	ar7
      0016F9 C0 06            [24] 5045 	push	ar6
      0016FB C0 05            [24] 5046 	push	ar5
      0016FD C0 04            [24] 5047 	push	ar4
      0016FF 78r00            [12] 5048 	mov	r0,#_queuebuf_to_packetbuf
      001701 79s00            [12] 5049 	mov	r1,#(_queuebuf_to_packetbuf >> 8)
      001703 7As00            [12] 5050 	mov	r2,#(_queuebuf_to_packetbuf >> 16)
      001705 12r00r00         [24] 5051 	lcall	__sdcc_banked_call
      001708 D0 04            [24] 5052 	pop	ar4
      00170A D0 05            [24] 5053 	pop	ar5
      00170C D0 06            [24] 5054 	pop	ar6
      00170E D0 07            [24] 5055 	pop	ar7
                                   5056 ;	../../../../core/net/mac/lpp.c:862: i->num_transmissions = 1;
      001710 E5 81            [12] 5057 	mov	a,sp
      001712 24 FA            [12] 5058 	add	a,#0xfa
      001714 F8               [12] 5059 	mov	r0,a
      001715 74 2A            [12] 5060 	mov	a,#0x2A
      001717 26               [12] 5061 	add	a,@r0
      001718 FA               [12] 5062 	mov	r2,a
      001719 E4               [12] 5063 	clr	a
      00171A 08               [12] 5064 	inc	r0
      00171B 36               [12] 5065 	addc	a,@r0
      00171C FB               [12] 5066 	mov	r3,a
      00171D 08               [12] 5067 	inc	r0
      00171E 86 05            [24] 5068 	mov	ar5,@r0
      001720 8A 82            [24] 5069 	mov	dpl,r2
      001722 8B 83            [24] 5070 	mov	dph,r3
      001724 8D F0            [24] 5071 	mov	b,r5
      001726 74 01            [12] 5072 	mov	a,#0x01
      001728 12r00r00         [24] 5073 	lcall	__gptrput
                                   5074 ;	../../../../core/net/mac/lpp.c:863: ret = NETSTACK_RADIO.send(queuebuf_dataptr(i->packet),
      00172B 90r00r09         [24] 5075 	mov	dptr,#(_cc2530_rf_driver + 0x0009)
      00172E E5 81            [12] 5076 	mov	a,sp
      001730 24 E3            [12] 5077 	add	a,#0xe3
      001732 F8               [12] 5078 	mov	r0,a
      001733 E4               [12] 5079 	clr	a
      001734 93               [24] 5080 	movc	a,@a+dptr
      001735 F6               [12] 5081 	mov	@r0,a
      001736 A3               [24] 5082 	inc	dptr
      001737 E4               [12] 5083 	clr	a
      001738 93               [24] 5084 	movc	a,@a+dptr
      001739 08               [12] 5085 	inc	r0
      00173A F6               [12] 5086 	mov	@r0,a
      00173B A3               [24] 5087 	inc	dptr
      00173C E4               [12] 5088 	clr	a
      00173D 93               [24] 5089 	movc	a,@a+dptr
      00173E 08               [12] 5090 	inc	r0
      00173F F6               [12] 5091 	mov	@r0,a
                                   5092 ;	../../../../core/net/mac/lpp.c:864: queuebuf_datalen(i->packet));
      001740 8C 82            [24] 5093 	mov	dpl,r4
      001742 8E 83            [24] 5094 	mov	dph,r6
      001744 8F F0            [24] 5095 	mov	b,r7
      001746 12r00r00         [24] 5096 	lcall	__gptrget
      001749 FA               [12] 5097 	mov	r2,a
      00174A A3               [24] 5098 	inc	dptr
      00174B 12r00r00         [24] 5099 	lcall	__gptrget
      00174E FB               [12] 5100 	mov	r3,a
      00174F A3               [24] 5101 	inc	dptr
      001750 12r00r00         [24] 5102 	lcall	__gptrget
      001753 FD               [12] 5103 	mov	r5,a
      001754 8A 82            [24] 5104 	mov	dpl,r2
      001756 8B 83            [24] 5105 	mov	dph,r3
      001758 8D F0            [24] 5106 	mov	b,r5
      00175A C0 07            [24] 5107 	push	ar7
      00175C C0 06            [24] 5108 	push	ar6
      00175E C0 04            [24] 5109 	push	ar4
      001760 78r00            [12] 5110 	mov	r0,#_queuebuf_datalen
      001762 79s00            [12] 5111 	mov	r1,#(_queuebuf_datalen >> 8)
      001764 7As00            [12] 5112 	mov	r2,#(_queuebuf_datalen >> 16)
      001766 12r00r00         [24] 5113 	lcall	__sdcc_banked_call
      001769 AB 82            [24] 5114 	mov	r3,dpl
      00176B AD 83            [24] 5115 	mov	r5,dph
      00176D D0 04            [24] 5116 	pop	ar4
      00176F D0 06            [24] 5117 	pop	ar6
      001771 D0 07            [24] 5118 	pop	ar7
                                   5119 ;	../../../../core/net/mac/lpp.c:863: ret = NETSTACK_RADIO.send(queuebuf_dataptr(i->packet),
      001773 8C 82            [24] 5120 	mov	dpl,r4
      001775 8E 83            [24] 5121 	mov	dph,r6
      001777 8F F0            [24] 5122 	mov	b,r7
      001779 12r00r00         [24] 5123 	lcall	__gptrget
      00177C FC               [12] 5124 	mov	r4,a
      00177D A3               [24] 5125 	inc	dptr
      00177E 12r00r00         [24] 5126 	lcall	__gptrget
      001781 FE               [12] 5127 	mov	r6,a
      001782 A3               [24] 5128 	inc	dptr
      001783 12r00r00         [24] 5129 	lcall	__gptrget
      001786 FF               [12] 5130 	mov	r7,a
      001787 8C 82            [24] 5131 	mov	dpl,r4
      001789 8E 83            [24] 5132 	mov	dph,r6
      00178B 8F F0            [24] 5133 	mov	b,r7
      00178D C0 05            [24] 5134 	push	ar5
      00178F C0 03            [24] 5135 	push	ar3
      001791 78r00            [12] 5136 	mov	r0,#_queuebuf_dataptr
      001793 79s00            [12] 5137 	mov	r1,#(_queuebuf_dataptr >> 8)
      001795 7As00            [12] 5138 	mov	r2,#(_queuebuf_dataptr >> 16)
      001797 12r00r00         [24] 5139 	lcall	__sdcc_banked_call
      00179A AC 82            [24] 5140 	mov	r4,dpl
      00179C AE 83            [24] 5141 	mov	r6,dph
      00179E AF F0            [24] 5142 	mov	r7,b
      0017A0 D0 03            [24] 5143 	pop	ar3
      0017A2 D0 05            [24] 5144 	pop	ar5
      0017A4 C0 05            [24] 5145 	push	ar5
      0017A6 C0 03            [24] 5146 	push	ar3
      0017A8 C0 05            [24] 5147 	push	ar5
      0017AA E5 81            [12] 5148 	mov	a,sp
      0017AC 24 E0            [12] 5149 	add	a,#0xe0
      0017AE F8               [12] 5150 	mov	r0,a
      0017AF E6               [12] 5151 	mov	a,@r0
      0017B0 C0 E0            [24] 5152 	push	acc
      0017B2 08               [12] 5153 	inc	r0
      0017B3 E6               [12] 5154 	mov	a,@r0
      0017B4 C0 E0            [24] 5155 	push	acc
      0017B6 08               [12] 5156 	inc	r0
      0017B7 E6               [12] 5157 	mov	a,@r0
      0017B8 C0 E0            [24] 5158 	push	acc
      0017BA 8C 82            [24] 5159 	mov	dpl,r4
      0017BC 8E 83            [24] 5160 	mov	dph,r6
      0017BE 8F F0            [24] 5161 	mov	b,r7
      0017C0 D0 02            [24] 5162 	pop	ar2
      0017C2 D0 01            [24] 5163 	pop	ar1
      0017C4 D0 00            [24] 5164 	pop	ar0
      0017C6 12r00r00         [24] 5165 	lcall	__sdcc_banked_call
      0017C9 15 81            [12] 5166 	dec	sp
      0017CB 15 81            [12] 5167 	dec	sp
      0017CD D0 05            [24] 5168 	pop	ar5
                                   5169 ;	../../../../core/net/mac/lpp.c:875: compower_accumulate(&i->compower);
      0017CF E5 81            [12] 5170 	mov	a,sp
      0017D1 24 FA            [12] 5171 	add	a,#0xfa
      0017D3 F8               [12] 5172 	mov	r0,a
      0017D4 74 1C            [12] 5173 	mov	a,#0x1C
      0017D6 26               [12] 5174 	add	a,@r0
      0017D7 FD               [12] 5175 	mov	r5,a
      0017D8 E4               [12] 5176 	clr	a
      0017D9 08               [12] 5177 	inc	r0
      0017DA 36               [12] 5178 	addc	a,@r0
      0017DB FE               [12] 5179 	mov	r6,a
      0017DC 08               [12] 5180 	inc	r0
      0017DD 86 07            [24] 5181 	mov	ar7,@r0
      0017DF 8D 82            [24] 5182 	mov	dpl,r5
      0017E1 8E 83            [24] 5183 	mov	dph,r6
      0017E3 8F F0            [24] 5184 	mov	b,r7
      0017E5 C0 05            [24] 5185 	push	ar5
      0017E7 78r00            [12] 5186 	mov	r0,#_compower_accumulate
      0017E9 79s00            [12] 5187 	mov	r1,#(_compower_accumulate >> 8)
      0017EB 7As00            [12] 5188 	mov	r2,#(_compower_accumulate >> 16)
      0017ED 12r00r00         [24] 5189 	lcall	__sdcc_banked_call
                                   5190 ;	../../../../core/net/mac/lpp.c:881: if(!rimeaddr_cmp(receiver, &rimeaddr_null)) {
      0017F0 74r00            [12] 5191 	mov	a,#_rimeaddr_null
      0017F2 C0 E0            [24] 5192 	push	acc
      0017F4 74s00            [12] 5193 	mov	a,#(_rimeaddr_null >> 8)
      0017F6 C0 E0            [24] 5194 	push	acc
      0017F8 74 80            [12] 5195 	mov	a,#0x80
      0017FA C0 E0            [24] 5196 	push	acc
      0017FC E5 81            [12] 5197 	mov	a,sp
      0017FE 24 F9            [12] 5198 	add	a,#0xf9
      001800 F8               [12] 5199 	mov	r0,a
      001801 86 82            [24] 5200 	mov	dpl,@r0
      001803 08               [12] 5201 	inc	r0
      001804 86 83            [24] 5202 	mov	dph,@r0
      001806 08               [12] 5203 	inc	r0
      001807 86 F0            [24] 5204 	mov	b,@r0
      001809 78r00            [12] 5205 	mov	r0,#_rimeaddr_cmp
      00180B 79s00            [12] 5206 	mov	r1,#(_rimeaddr_cmp >> 8)
      00180D 7As00            [12] 5207 	mov	r2,#(_rimeaddr_cmp >> 16)
      00180F 12r00r00         [24] 5208 	lcall	__sdcc_banked_call
      001812 AE 82            [24] 5209 	mov	r6,dpl
      001814 AF 83            [24] 5210 	mov	r7,dph
      001816 15 81            [12] 5211 	dec	sp
      001818 15 81            [12] 5212 	dec	sp
      00181A 15 81            [12] 5213 	dec	sp
      00181C D0 05            [24] 5214 	pop	ar5
      00181E D0 05            [24] 5215 	pop	ar5
      001820 EE               [12] 5216 	mov	a,r6
      001821 4F               [12] 5217 	orl	a,r7
      001822 60 03            [24] 5218 	jz	00182$
      001824 02r18rB8         [24] 5219 	ljmp	00129$
      001827                       5220 00182$:
                                   5221 ;	../../../../core/net/mac/lpp.c:890: if(detect_ack()) {
      001827 C0 05            [24] 5222 	push	ar5
      001829 78r6E            [12] 5223 	mov	r0,#_detect_ack
      00182B 79s12            [12] 5224 	mov	r1,#(_detect_ack >> 8)
      00182D 7As00            [12] 5225 	mov	r2,#(_detect_ack >> 16)
      00182F 12r00r00         [24] 5226 	lcall	__sdcc_banked_call
      001832 E5 82            [12] 5227 	mov	a,dpl
      001834 85 83 F0         [24] 5228 	mov	b,dph
      001837 D0 05            [24] 5229 	pop	ar5
      001839 45 F0            [12] 5230 	orl	a,b
      00183B 60 22            [24] 5231 	jz	00104$
                                   5232 ;	../../../../core/net/mac/lpp.c:891: remove_queued_packet(i, 1);
      00183D C0 05            [24] 5233 	push	ar5
      00183F 74 01            [12] 5234 	mov	a,#0x01
      001841 C0 E0            [24] 5235 	push	acc
      001843 E5 81            [12] 5236 	mov	a,sp
      001845 24 F9            [12] 5237 	add	a,#0xf9
      001847 F8               [12] 5238 	mov	r0,a
      001848 86 82            [24] 5239 	mov	dpl,@r0
      00184A 08               [12] 5240 	inc	r0
      00184B 86 83            [24] 5241 	mov	dph,@r0
      00184D 08               [12] 5242 	inc	r0
      00184E 86 F0            [24] 5243 	mov	b,@r0
      001850 78rAE            [12] 5244 	mov	r0,#_remove_queued_packet
      001852 79s04            [12] 5245 	mov	r1,#(_remove_queued_packet >> 8)
      001854 7As00            [12] 5246 	mov	r2,#(_remove_queued_packet >> 16)
      001856 12r00r00         [24] 5247 	lcall	__sdcc_banked_call
      001859 15 81            [12] 5248 	dec	sp
      00185B D0 05            [24] 5249 	pop	ar5
      00185D 80 1F            [24] 5250 	sjmp	00105$
      00185F                       5251 00104$:
                                   5252 ;	../../../../core/net/mac/lpp.c:893: remove_queued_packet(i, 0);
      00185F C0 05            [24] 5253 	push	ar5
      001861 E4               [12] 5254 	clr	a
      001862 C0 E0            [24] 5255 	push	acc
      001864 E5 81            [12] 5256 	mov	a,sp
      001866 24 F9            [12] 5257 	add	a,#0xf9
      001868 F8               [12] 5258 	mov	r0,a
      001869 86 82            [24] 5259 	mov	dpl,@r0
      00186B 08               [12] 5260 	inc	r0
      00186C 86 83            [24] 5261 	mov	dph,@r0
      00186E 08               [12] 5262 	inc	r0
      00186F 86 F0            [24] 5263 	mov	b,@r0
      001871 78rAE            [12] 5264 	mov	r0,#_remove_queued_packet
      001873 79s04            [12] 5265 	mov	r1,#(_remove_queued_packet >> 8)
      001875 7As00            [12] 5266 	mov	r2,#(_remove_queued_packet >> 16)
      001877 12r00r00         [24] 5267 	lcall	__sdcc_banked_call
      00187A 15 81            [12] 5268 	dec	sp
      00187C D0 05            [24] 5269 	pop	ar5
      00187E                       5270 00105$:
                                   5271 ;	../../../../core/net/mac/lpp.c:905: if(is_streaming) {
      00187E 90r00r2B         [24] 5272 	mov	dptr,#_is_streaming
      001881 E0               [24] 5273 	movx	a,@dptr
      001882 FF               [12] 5274 	mov	r7,a
      001883 60 33            [24] 5275 	jz	00129$
                                   5276 ;	../../../../core/net/mac/lpp.c:906: ctimer_set(&stream_probe_timer, STREAM_PROBE_TIME,
      001885 C0 05            [24] 5277 	push	ar5
      001887 E4               [12] 5278 	clr	a
      001888 C0 E0            [24] 5279 	push	acc
      00188A C0 E0            [24] 5280 	push	acc
      00188C C0 E0            [24] 5281 	push	acc
      00188E 74rE6            [12] 5282 	mov	a,#_send_stream_probe
      001890 C0 E0            [24] 5283 	push	acc
      001892 74s0A            [12] 5284 	mov	a,#(_send_stream_probe >> 8)
      001894 C0 E0            [24] 5285 	push	acc
      001896 74s00            [12] 5286 	mov	a,#(_send_stream_probe >> 16)
      001898 C0 E0            [24] 5287 	push	acc
      00189A 74 01            [12] 5288 	mov	a,#0x01
      00189C C0 E0            [24] 5289 	push	acc
      00189E E4               [12] 5290 	clr	a
      00189F C0 E0            [24] 5291 	push	acc
      0018A1 90r01r8D         [24] 5292 	mov	dptr,#_stream_probe_timer
      0018A4 75 F0 00         [24] 5293 	mov	b,#0x00
      0018A7 78r00            [12] 5294 	mov	r0,#_ctimer_set
      0018A9 79s00            [12] 5295 	mov	r1,#(_ctimer_set >> 8)
      0018AB 7As00            [12] 5296 	mov	r2,#(_ctimer_set >> 16)
      0018AD 12r00r00         [24] 5297 	lcall	__sdcc_banked_call
      0018B0 E5 81            [12] 5298 	mov	a,sp
      0018B2 24 F8            [12] 5299 	add	a,#0xf8
      0018B4 F5 81            [12] 5300 	mov	sp,a
      0018B6 D0 05            [24] 5301 	pop	ar5
                                   5302 ;	../../../../core/net/mac/lpp.c:913: turn_radio_off();
      0018B8                       5303 00129$:
                                   5304 ;	../../../../core/net/mac/lpp.c:833: for(i = list_head(queued_packets_list); i != NULL; i = list_item_next(i)) {
      0018B8 E5 81            [12] 5305 	mov	a,sp
      0018BA 24 FB            [12] 5306 	add	a,#0xfb
      0018BC F8               [12] 5307 	mov	r0,a
      0018BD 86 04            [24] 5308 	mov	ar4,@r0
      0018BF 08               [12] 5309 	inc	r0
      0018C0 86 06            [24] 5310 	mov	ar6,@r0
      0018C2 08               [12] 5311 	inc	r0
      0018C3 86 07            [24] 5312 	mov	ar7,@r0
      0018C5 8C 82            [24] 5313 	mov	dpl,r4
      0018C7 8E 83            [24] 5314 	mov	dph,r6
      0018C9 8F F0            [24] 5315 	mov	b,r7
      0018CB C0 05            [24] 5316 	push	ar5
      0018CD 78r00            [12] 5317 	mov	r0,#_list_item_next
      0018CF 79s00            [12] 5318 	mov	r1,#(_list_item_next >> 8)
      0018D1 7As00            [12] 5319 	mov	r2,#(_list_item_next >> 16)
      0018D3 12r00r00         [24] 5320 	lcall	__sdcc_banked_call
      0018D6 AC 82            [24] 5321 	mov	r4,dpl
      0018D8 AE 83            [24] 5322 	mov	r6,dph
      0018DA AF F0            [24] 5323 	mov	r7,b
      0018DC D0 05            [24] 5324 	pop	ar5
      0018DE E5 81            [12] 5325 	mov	a,sp
      0018E0 24 FB            [12] 5326 	add	a,#0xfb
      0018E2 F8               [12] 5327 	mov	r0,a
      0018E3 A6 04            [24] 5328 	mov	@r0,ar4
      0018E5 08               [12] 5329 	inc	r0
      0018E6 A6 06            [24] 5330 	mov	@r0,ar6
      0018E8 08               [12] 5331 	inc	r0
      0018E9 A6 07            [24] 5332 	mov	@r0,ar7
      0018EB 02r15rED         [24] 5333 	ljmp	00128$
      0018EE                       5334 00125$:
                                   5335 ;	../../../../core/net/mac/lpp.c:929: } else if(hdr.type == TYPE_DATA) {
      0018EE BD 02 05         [24] 5336 	cjne	r5,#0x02,00185$
      0018F1 BC 00 02         [24] 5337 	cjne	r4,#0x00,00185$
      0018F4 80 03            [24] 5338 	sjmp	00186$
      0018F6                       5339 00185$:
      0018F6 02r1Ar0E         [24] 5340 	ljmp	00130$
      0018F9                       5341 00186$:
                                   5342 ;	../../../../core/net/mac/lpp.c:930: turn_radio_off();
      0018F9 C0 01            [24] 5343 	push	ar1
      0018FB 78r2C            [12] 5344 	mov	r0,#_turn_radio_off
      0018FD 79s00            [12] 5345 	mov	r1,#(_turn_radio_off >> 8)
      0018FF 7As00            [12] 5346 	mov	r2,#(_turn_radio_off >> 16)
      001901 12r00r00         [24] 5347 	lcall	__sdcc_banked_call
      001904 D0 01            [24] 5348 	pop	ar1
                                   5349 ;	../../../../core/net/mac/lpp.c:931: if(!rimeaddr_cmp(&hdr.receiver, &rimeaddr_null)) {
      001906 74 0A            [12] 5350 	mov	a,#0x0A
      001908 29               [12] 5351 	add	a,r1
      001909 FF               [12] 5352 	mov	r7,a
      00190A FC               [12] 5353 	mov	r4,a
      00190B 7D 00            [12] 5354 	mov	r5,#0x00
      00190D 7E 40            [12] 5355 	mov	r6,#0x40
      00190F C0 07            [24] 5356 	push	ar7
      001911 C0 01            [24] 5357 	push	ar1
      001913 74r00            [12] 5358 	mov	a,#_rimeaddr_null
      001915 C0 E0            [24] 5359 	push	acc
      001917 74s00            [12] 5360 	mov	a,#(_rimeaddr_null >> 8)
      001919 C0 E0            [24] 5361 	push	acc
      00191B 74 80            [12] 5362 	mov	a,#0x80
      00191D C0 E0            [24] 5363 	push	acc
      00191F 8C 82            [24] 5364 	mov	dpl,r4
      001921 8D 83            [24] 5365 	mov	dph,r5
      001923 8E F0            [24] 5366 	mov	b,r6
      001925 78r00            [12] 5367 	mov	r0,#_rimeaddr_cmp
      001927 79s00            [12] 5368 	mov	r1,#(_rimeaddr_cmp >> 8)
      001929 7As00            [12] 5369 	mov	r2,#(_rimeaddr_cmp >> 16)
      00192B 12r00r00         [24] 5370 	lcall	__sdcc_banked_call
      00192E AD 82            [24] 5371 	mov	r5,dpl
      001930 AE 83            [24] 5372 	mov	r6,dph
      001932 15 81            [12] 5373 	dec	sp
      001934 15 81            [12] 5374 	dec	sp
      001936 15 81            [12] 5375 	dec	sp
      001938 D0 01            [24] 5376 	pop	ar1
      00193A D0 07            [24] 5377 	pop	ar7
      00193C ED               [12] 5378 	mov	a,r5
      00193D 4E               [12] 5379 	orl	a,r6
                                   5380 ;	../../../../core/net/mac/lpp.c:932: if(!rimeaddr_cmp(&hdr.receiver, &rimeaddr_node_addr)) {
      00193E 70 58            [24] 5381 	jnz	00121$
      001940 8F 06            [24] 5382 	mov	ar6,r7
      001942 FD               [12] 5383 	mov	r5,a
      001943 7C 40            [12] 5384 	mov	r4,#0x40
      001945 C0 07            [24] 5385 	push	ar7
      001947 C0 01            [24] 5386 	push	ar1
      001949 74r00            [12] 5387 	mov	a,#_rimeaddr_node_addr
      00194B C0 E0            [24] 5388 	push	acc
      00194D 74s00            [12] 5389 	mov	a,#(_rimeaddr_node_addr >> 8)
      00194F C0 E0            [24] 5390 	push	acc
      001951 E4               [12] 5391 	clr	a
      001952 C0 E0            [24] 5392 	push	acc
      001954 8E 82            [24] 5393 	mov	dpl,r6
      001956 8D 83            [24] 5394 	mov	dph,r5
      001958 8C F0            [24] 5395 	mov	b,r4
      00195A 78r00            [12] 5396 	mov	r0,#_rimeaddr_cmp
      00195C 79s00            [12] 5397 	mov	r1,#(_rimeaddr_cmp >> 8)
      00195E 7As00            [12] 5398 	mov	r2,#(_rimeaddr_cmp >> 16)
      001960 12r00r00         [24] 5399 	lcall	__sdcc_banked_call
      001963 AD 82            [24] 5400 	mov	r5,dpl
      001965 AE 83            [24] 5401 	mov	r6,dph
      001967 15 81            [12] 5402 	dec	sp
      001969 15 81            [12] 5403 	dec	sp
      00196B 15 81            [12] 5404 	dec	sp
      00196D D0 01            [24] 5405 	pop	ar1
      00196F D0 07            [24] 5406 	pop	ar7
      001971 ED               [12] 5407 	mov	a,r5
      001972 4E               [12] 5408 	orl	a,r6
      001973 70 03            [24] 5409 	jnz	00119$
                                   5410 ;	../../../../core/net/mac/lpp.c:937: return;
      001975 02r1Ar0E         [24] 5411 	ljmp	00130$
      001978                       5412 00119$:
                                   5413 ;	../../../../core/net/mac/lpp.c:939: packetbuf_set_addr(PACKETBUF_ADDR_RECEIVER, &hdr.receiver);
      001978 7E 00            [12] 5414 	mov	r6,#0x00
      00197A 7D 40            [12] 5415 	mov	r5,#0x40
      00197C C0 01            [24] 5416 	push	ar1
      00197E C0 07            [24] 5417 	push	ar7
      001980 C0 06            [24] 5418 	push	ar6
      001982 C0 05            [24] 5419 	push	ar5
      001984 75 82 19         [24] 5420 	mov	dpl,#0x19
      001987 78r00            [12] 5421 	mov	r0,#_packetbuf_set_addr
      001989 79s00            [12] 5422 	mov	r1,#(_packetbuf_set_addr >> 8)
      00198B 7As00            [12] 5423 	mov	r2,#(_packetbuf_set_addr >> 16)
      00198D 12r00r00         [24] 5424 	lcall	__sdcc_banked_call
      001990 15 81            [12] 5425 	dec	sp
      001992 15 81            [12] 5426 	dec	sp
      001994 15 81            [12] 5427 	dec	sp
      001996 D0 01            [24] 5428 	pop	ar1
      001998                       5429 00121$:
                                   5430 ;	../../../../core/net/mac/lpp.c:941: packetbuf_set_addr(PACKETBUF_ADDR_SENDER, &hdr.sender);
      001998 74 02            [12] 5431 	mov	a,#0x02
      00199A 29               [12] 5432 	add	a,r1
      00199B FF               [12] 5433 	mov	r7,a
      00199C 7E 00            [12] 5434 	mov	r6,#0x00
      00199E 7D 40            [12] 5435 	mov	r5,#0x40
      0019A0 C0 07            [24] 5436 	push	ar7
      0019A2 C0 06            [24] 5437 	push	ar6
      0019A4 C0 05            [24] 5438 	push	ar5
      0019A6 75 82 18         [24] 5439 	mov	dpl,#0x18
      0019A9 78r00            [12] 5440 	mov	r0,#_packetbuf_set_addr
      0019AB 79s00            [12] 5441 	mov	r1,#(_packetbuf_set_addr >> 8)
      0019AD 7As00            [12] 5442 	mov	r2,#(_packetbuf_set_addr >> 16)
      0019AF 12r00r00         [24] 5443 	lcall	__sdcc_banked_call
      0019B2 15 81            [12] 5444 	dec	sp
      0019B4 15 81            [12] 5445 	dec	sp
      0019B6 15 81            [12] 5446 	dec	sp
                                   5447 ;	../../../../core/net/mac/lpp.c:948: compower_accumulate(&current_packet);
      0019B8 90r00r01         [24] 5448 	mov	dptr,#_current_packet
      0019BB 75 F0 00         [24] 5449 	mov	b,#0x00
      0019BE 78r00            [12] 5450 	mov	r0,#_compower_accumulate
      0019C0 79s00            [12] 5451 	mov	r1,#(_compower_accumulate >> 8)
      0019C2 7As00            [12] 5452 	mov	r2,#(_compower_accumulate >> 16)
      0019C4 12r00r00         [24] 5453 	lcall	__sdcc_banked_call
                                   5454 ;	../../../../core/net/mac/lpp.c:953: compower_attrconv(&current_packet);
      0019C7 90r00r01         [24] 5455 	mov	dptr,#_current_packet
      0019CA 75 F0 00         [24] 5456 	mov	b,#0x00
      0019CD 78r00            [12] 5457 	mov	r0,#_compower_attrconv
      0019CF 79s00            [12] 5458 	mov	r1,#(_compower_attrconv >> 8)
      0019D1 7As00            [12] 5459 	mov	r2,#(_compower_attrconv >> 16)
      0019D3 12r00r00         [24] 5460 	lcall	__sdcc_banked_call
                                   5461 ;	../../../../core/net/mac/lpp.c:957: compower_clear(&current_packet);
      0019D6 90r00r01         [24] 5462 	mov	dptr,#_current_packet
      0019D9 75 F0 00         [24] 5463 	mov	b,#0x00
      0019DC 78r00            [12] 5464 	mov	r0,#_compower_clear
      0019DE 79s00            [12] 5465 	mov	r1,#(_compower_clear >> 8)
      0019E0 7As00            [12] 5466 	mov	r2,#(_compower_clear >> 16)
      0019E2 12r00r00         [24] 5467 	lcall	__sdcc_banked_call
                                   5468 ;	../../../../core/net/mac/lpp.c:1000: NETSTACK_MAC.input();
      0019E5 90r00r09         [24] 5469 	mov	dptr,#(_csma_driver + 0x0009)
      0019E8 E4               [12] 5470 	clr	a
      0019E9 93               [24] 5471 	movc	a,@a+dptr
      0019EA FD               [12] 5472 	mov	r5,a
      0019EB A3               [24] 5473 	inc	dptr
      0019EC E4               [12] 5474 	clr	a
      0019ED 93               [24] 5475 	movc	a,@a+dptr
      0019EE FE               [12] 5476 	mov	r6,a
      0019EF A3               [24] 5477 	inc	dptr
      0019F0 E4               [12] 5478 	clr	a
      0019F1 93               [24] 5479 	movc	a,@a+dptr
      0019F2 FF               [12] 5480 	mov	r7,a
      0019F3 C0 07            [24] 5481 	push	ar7
      0019F5 C0 06            [24] 5482 	push	ar6
      0019F7 C0 05            [24] 5483 	push	ar5
      0019F9 C0 05            [24] 5484 	push	ar5
      0019FB C0 06            [24] 5485 	push	ar6
      0019FD C0 07            [24] 5486 	push	ar7
      0019FF D0 02            [24] 5487 	pop	ar2
      001A01 D0 01            [24] 5488 	pop	ar1
      001A03 D0 00            [24] 5489 	pop	ar0
      001A05 12r00r00         [24] 5490 	lcall	__sdcc_banked_call
      001A08 D0 05            [24] 5491 	pop	ar5
      001A0A D0 06            [24] 5492 	pop	ar6
      001A0C D0 07            [24] 5493 	pop	ar7
      001A0E                       5494 00130$:
      001A0E E5 81            [12] 5495 	mov	a,sp
      001A10 24 E1            [12] 5496 	add	a,#0xE1
      001A12 F5 81            [12] 5497 	mov	sp,a
      001A14 02r00r00         [24] 5498 	ljmp	__sdcc_banked_ret
                                   5499 ;------------------------------------------------------------
                                   5500 ;Allocation info for local variables in function 'on'
                                   5501 ;------------------------------------------------------------
                                   5502 ;	../../../../core/net/mac/lpp.c:1005: on(void)
                                   5503 ;	-----------------------------------------
                                   5504 ;	 function on
                                   5505 ;	-----------------------------------------
      001A17                       5506 _on:
                                   5507 ;	../../../../core/net/mac/lpp.c:1007: lpp_is_on = 1;
      001A17 90r00r00         [24] 5508 	mov	dptr,#_lpp_is_on
      001A1A 74 01            [12] 5509 	mov	a,#0x01
      001A1C F0               [24] 5510 	movx	@dptr,a
                                   5511 ;	../../../../core/net/mac/lpp.c:1008: turn_radio_on();
      001A1D 78r00            [12] 5512 	mov	r0,#_turn_radio_on
      001A1F 79s00            [12] 5513 	mov	r1,#(_turn_radio_on >> 8)
      001A21 7As00            [12] 5514 	mov	r2,#(_turn_radio_on >> 16)
      001A23 12r00r00         [24] 5515 	lcall	__sdcc_banked_call
                                   5516 ;	../../../../core/net/mac/lpp.c:1009: return 1;
      001A26 90 00 01         [24] 5517 	mov	dptr,#0x0001
      001A29 02r00r00         [24] 5518 	ljmp	__sdcc_banked_ret
                                   5519 ;------------------------------------------------------------
                                   5520 ;Allocation info for local variables in function 'off'
                                   5521 ;------------------------------------------------------------
                                   5522 ;keep_radio_on             Allocated to registers r6 r7 
                                   5523 ;------------------------------------------------------------
                                   5524 ;	../../../../core/net/mac/lpp.c:1013: off(int keep_radio_on)
                                   5525 ;	-----------------------------------------
                                   5526 ;	 function off
                                   5527 ;	-----------------------------------------
      001A2C                       5528 _off:
      001A2C AE 82            [24] 5529 	mov	r6,dpl
      001A2E AF 83            [24] 5530 	mov	r7,dph
                                   5531 ;	../../../../core/net/mac/lpp.c:1015: lpp_is_on = 0;
      001A30 90r00r00         [24] 5532 	mov	dptr,#_lpp_is_on
      001A33 E4               [12] 5533 	clr	a
      001A34 F0               [24] 5534 	movx	@dptr,a
                                   5535 ;	../../../../core/net/mac/lpp.c:1016: if(keep_radio_on) {
      001A35 EE               [12] 5536 	mov	a,r6
      001A36 4F               [12] 5537 	orl	a,r7
      001A37 60 0B            [24] 5538 	jz	00102$
                                   5539 ;	../../../../core/net/mac/lpp.c:1017: turn_radio_on();
      001A39 78r00            [12] 5540 	mov	r0,#_turn_radio_on
      001A3B 79s00            [12] 5541 	mov	r1,#(_turn_radio_on >> 8)
      001A3D 7As00            [12] 5542 	mov	r2,#(_turn_radio_on >> 16)
      001A3F 12r00r00         [24] 5543 	lcall	__sdcc_banked_call
      001A42 80 09            [24] 5544 	sjmp	00103$
      001A44                       5545 00102$:
                                   5546 ;	../../../../core/net/mac/lpp.c:1019: turn_radio_off();
      001A44 78r2C            [12] 5547 	mov	r0,#_turn_radio_off
      001A46 79s00            [12] 5548 	mov	r1,#(_turn_radio_off >> 8)
      001A48 7As00            [12] 5549 	mov	r2,#(_turn_radio_off >> 16)
      001A4A 12r00r00         [24] 5550 	lcall	__sdcc_banked_call
      001A4D                       5551 00103$:
                                   5552 ;	../../../../core/net/mac/lpp.c:1021: return 1;
      001A4D 90 00 01         [24] 5553 	mov	dptr,#0x0001
      001A50 02r00r00         [24] 5554 	ljmp	__sdcc_banked_ret
                                   5555 ;------------------------------------------------------------
                                   5556 ;Allocation info for local variables in function 'channel_check_interval'
                                   5557 ;------------------------------------------------------------
                                   5558 ;	../../../../core/net/mac/lpp.c:1025: channel_check_interval(void)
                                   5559 ;	-----------------------------------------
                                   5560 ;	 function channel_check_interval
                                   5561 ;	-----------------------------------------
      001A53                       5562 _channel_check_interval:
                                   5563 ;	../../../../core/net/mac/lpp.c:1027: return OFF_TIME + LISTEN_TIME;
      001A53 90 00 10         [24] 5564 	mov	dptr,#0x0010
      001A56 02r00r00         [24] 5565 	ljmp	__sdcc_banked_ret
                                   5566 ;------------------------------------------------------------
                                   5567 ;Allocation info for local variables in function 'init'
                                   5568 ;------------------------------------------------------------
                                   5569 ;	../../../../core/net/mac/lpp.c:1031: init(void)
                                   5570 ;	-----------------------------------------
                                   5571 ;	 function init
                                   5572 ;	-----------------------------------------
      001A59                       5573 _init:
                                   5574 ;	../../../../core/net/mac/lpp.c:1033: restart_dutycycle(random_rand() % OFF_TIME);
      001A59 78r00            [12] 5575 	mov	r0,#_random_rand
      001A5B 79s00            [12] 5576 	mov	r1,#(_random_rand >> 8)
      001A5D 7As00            [12] 5577 	mov	r2,#(_random_rand >> 16)
      001A5F 12r00r00         [24] 5578 	lcall	__sdcc_banked_call
      001A62 AE 82            [24] 5579 	mov	r6,dpl
      001A64 AF 83            [24] 5580 	mov	r7,dph
      001A66 74 0F            [12] 5581 	mov	a,#0x0F
      001A68 C0 E0            [24] 5582 	push	acc
      001A6A E4               [12] 5583 	clr	a
      001A6B C0 E0            [24] 5584 	push	acc
      001A6D 8E 82            [24] 5585 	mov	dpl,r6
      001A6F 8F 83            [24] 5586 	mov	dph,r7
      001A71 12r00r00         [24] 5587 	lcall	__moduint
      001A74 AE 82            [24] 5588 	mov	r6,dpl
      001A76 AF 83            [24] 5589 	mov	r7,dph
      001A78 15 81            [12] 5590 	dec	sp
      001A7A 15 81            [12] 5591 	dec	sp
      001A7C 8E 82            [24] 5592 	mov	dpl,r6
      001A7E 8F 83            [24] 5593 	mov	dph,r7
      001A80 78rA1            [12] 5594 	mov	r0,#_restart_dutycycle
      001A82 79s0D            [12] 5595 	mov	r1,#(_restart_dutycycle >> 8)
      001A84 7As00            [12] 5596 	mov	r2,#(_restart_dutycycle >> 16)
      001A86 12r00r00         [24] 5597 	lcall	__sdcc_banked_call
                                   5598 ;	../../../../core/net/mac/lpp.c:1035: lpp_is_on = 1;
      001A89 90r00r00         [24] 5599 	mov	dptr,#_lpp_is_on
      001A8C 74 01            [12] 5600 	mov	a,#0x01
      001A8E F0               [24] 5601 	movx	@dptr,a
                                   5602 ;	../../../../core/net/mac/lpp.c:1037: announcement_register_listen_callback(listen_callback);
      001A8F 90r07r27         [24] 5603 	mov	dptr,#_listen_callback
      001A92 75 F0s00         [24] 5604 	mov	b,#(_listen_callback >> 16)
      001A95 78r00            [12] 5605 	mov	r0,#_announcement_register_listen_callback
      001A97 79s00            [12] 5606 	mov	r1,#(_announcement_register_listen_callback >> 8)
      001A99 7As00            [12] 5607 	mov	r2,#(_announcement_register_listen_callback >> 16)
      001A9B 12r00r00         [24] 5608 	lcall	__sdcc_banked_call
                                   5609 ;	../../../../core/net/mac/lpp.c:1039: memb_init(&queued_packets_memb);
      001A9E 90r00r11         [24] 5610 	mov	dptr,#_queued_packets_memb
      001AA1 75 F0 00         [24] 5611 	mov	b,#0x00
      001AA4 78r00            [12] 5612 	mov	r0,#_memb_init
      001AA6 79s00            [12] 5613 	mov	r1,#(_memb_init >> 8)
      001AA8 7As00            [12] 5614 	mov	r2,#(_memb_init >> 16)
      001AAA 12r00r00         [24] 5615 	lcall	__sdcc_banked_call
                                   5616 ;	../../../../core/net/mac/lpp.c:1040: list_init(queued_packets_list);
      001AAD 90r00r0E         [24] 5617 	mov	dptr,#_queued_packets_list
      001AB0 E0               [24] 5618 	movx	a,@dptr
      001AB1 FD               [12] 5619 	mov	r5,a
      001AB2 A3               [24] 5620 	inc	dptr
      001AB3 E0               [24] 5621 	movx	a,@dptr
      001AB4 FE               [12] 5622 	mov	r6,a
      001AB5 A3               [24] 5623 	inc	dptr
      001AB6 E0               [24] 5624 	movx	a,@dptr
      001AB7 FF               [12] 5625 	mov	r7,a
      001AB8 8D 82            [24] 5626 	mov	dpl,r5
      001ABA 8E 83            [24] 5627 	mov	dph,r6
      001ABC 8F F0            [24] 5628 	mov	b,r7
      001ABE 78r00            [12] 5629 	mov	r0,#_list_init
      001AC0 79s00            [12] 5630 	mov	r1,#(_list_init >> 8)
      001AC2 7As00            [12] 5631 	mov	r2,#(_list_init >> 16)
      001AC4 12r00r00         [24] 5632 	lcall	__sdcc_banked_call
                                   5633 ;	../../../../core/net/mac/lpp.c:1041: list_init(pending_packets_list);
      001AC7 90r00r08         [24] 5634 	mov	dptr,#_pending_packets_list
      001ACA E0               [24] 5635 	movx	a,@dptr
      001ACB FD               [12] 5636 	mov	r5,a
      001ACC A3               [24] 5637 	inc	dptr
      001ACD E0               [24] 5638 	movx	a,@dptr
      001ACE FE               [12] 5639 	mov	r6,a
      001ACF A3               [24] 5640 	inc	dptr
      001AD0 E0               [24] 5641 	movx	a,@dptr
      001AD1 FF               [12] 5642 	mov	r7,a
      001AD2 8D 82            [24] 5643 	mov	dpl,r5
      001AD4 8E 83            [24] 5644 	mov	dph,r6
      001AD6 8F F0            [24] 5645 	mov	b,r7
      001AD8 78r00            [12] 5646 	mov	r0,#_list_init
      001ADA 79s00            [12] 5647 	mov	r1,#(_list_init >> 8)
      001ADC 7As00            [12] 5648 	mov	r2,#(_list_init >> 16)
      001ADE 12r00r00         [24] 5649 	lcall	__sdcc_banked_call
      001AE1 02r00r00         [24] 5650 	ljmp	__sdcc_banked_ret
                                   5651 	.area CSEG    (CODE)
                                   5652 	.area CONST   (CODE)
      000000                       5653 __str_0:
      000000 6E 75 6C 6C 20 70 61  5654 	.ascii "null packet"
             63 6B 65 74
      00000B 0A                    5655 	.db 0x0A
      00000C 00                    5656 	.db 0x00
      00000D                       5657 __str_1:
      00000D 69 20 3D 3D 20 4E 55  5658 	.ascii "i == NULL"
             4C 4C
      000016 0A                    5659 	.db 0x0A
      000017 00                    5660 	.db 0x00
      000018                       5661 __str_2:
      000018 6C 70 70 20 69 6E 70  5662 	.ascii "lpp input_packet framer error"
             75 74 5F 70 61 63 6B
             65 74 20 66 72 61 6D
             65 72 20 65 72 72 6F
             72
      000035 0A                    5663 	.db 0x0A
      000036 00                    5664 	.db 0x00
      000037                       5665 _lpp_driver:
      000037r4Fs00 80              5666 	.byte _str_3,(_str_3 >> 8),#0x80
      00003Ar59s1As00              5667 	.byte _init,(_init >> 8),(_init >> 16)
      00003DrE0s0Ds00              5668 	.byte _send_packet,(_send_packet >> 8),(_send_packet >> 16)
      000040rF3s11s00              5669 	.byte _send_list,(_send_list >> 8),(_send_list >> 16)
      000043r00s14s00              5670 	.byte _input_packet,(_input_packet >> 8),(_input_packet >> 16)
      000046r17s1As00              5671 	.byte _on,(_on >> 8),(_on >> 16)
      000049r2Cs1As00              5672 	.byte _off,(_off >> 8),(_off >> 16)
      00004Cr53s1As00              5673 	.byte _channel_check_interval,(_channel_check_interval >> 8),(_channel_check_interval >> 16)
      00004F                       5674 _str_3:
      00004F 4C 50 50              5675 	.ascii "LPP"
      000052 00                    5676 	.db 0x00
                                   5677 	.area XINIT   (CODE)
      000000                       5678 __xinit__is_listening:
      000000 00                    5679 	.db #0x00	; 0
      000001                       5680 __xinit__off_time_adjustment:
      000001 00 00                 5681 	.byte #0x00,#0x00	; 0
      000003                       5682 __xinit__off_time:
      000003 0F 00                 5683 	.byte #0x0F,#0x00	; 15
      000005                       5684 __xinit__pending_packets_list_list:
                                   5685 ; generic printIvalPtr
      000005 00 00 00              5686 	.byte #0x00,#0x00,#0x00
      000008                       5687 __xinit__pending_packets_list:
      000008r05s00 00              5688 	.byte _pending_packets_list_list,(_pending_packets_list_list >> 8),#0x00
      00000B                       5689 __xinit__queued_packets_list_list:
                                   5690 ; generic printIvalPtr
      00000B 00 00 00              5691 	.byte #0x00,#0x00,#0x00
      00000E                       5692 __xinit__queued_packets_list:
      00000Er0Bs00 00              5693 	.byte _queued_packets_list_list,(_queued_packets_list_list >> 8),#0x00
      000011                       5694 __xinit__queued_packets_memb:
      000011 2B 00                 5695 	.byte #0x2B,#0x00	; 43
      000013 03 00                 5696 	.byte #0x03,#0x00	; 3
      000015r21s00 00              5697 	.byte _queued_packets_memb_memb_count,(_queued_packets_memb_memb_count >> 8),#0x00
      000018r24s00 00              5698 	.byte _queued_packets_memb_memb_mem,(_queued_packets_memb_memb_mem >> 8),#0x00
      00001B                       5699 __xinit__encounter_list_list:
                                   5700 ; generic printIvalPtr
      00001B 00 00 00              5701 	.byte #0x00,#0x00,#0x00
      00001E                       5702 __xinit__encounter_list:
      00001Er1Bs00 00              5703 	.byte _encounter_list_list,(_encounter_list_list >> 8),#0x00
      000021                       5704 __xinit__encounter_memb:
      000021 39 00                 5705 	.byte #0x39,#0x00	; 57
      000023 04 00                 5706 	.byte #0x04,#0x00	; 4
      000025rA5s00 00              5707 	.byte _encounter_memb_memb_count,(_encounter_memb_memb_count >> 8),#0x00
      000028rA9s00 00              5708 	.byte _encounter_memb_memb_mem,(_encounter_memb_memb_mem >> 8),#0x00
      00002B                       5709 __xinit__is_streaming:
      00002B 00                    5710 	.db #0x00	; 0
                                   5711 	.area CABS    (ABS,CODE)
