                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8804 (Aug  6 2013) (Linux)
                                      4 ; This file was generated Mon Aug 25 04:16:25 2014
                                      5 ;--------------------------------------------------------
                                      6 	.module rpl_of_etx
                                      7 	.optsdcc -mmcs51 --model-huge
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _ACTIVE
                                     13 	.globl _TX_BYTE
                                     14 	.globl _RX_BYTE
                                     15 	.globl _ERR
                                     16 	.globl _FE
                                     17 	.globl _SLAVE
                                     18 	.globl _RE
                                     19 	.globl _MODE
                                     20 	.globl _T3OVFIF
                                     21 	.globl _T3CH0IF
                                     22 	.globl _T3CH1IF
                                     23 	.globl _T4OVFIF
                                     24 	.globl _T4CH0IF
                                     25 	.globl _T4CH1IF
                                     26 	.globl _OVFIM
                                     27 	.globl _B_0
                                     28 	.globl _B_1
                                     29 	.globl _B_2
                                     30 	.globl _B_3
                                     31 	.globl _B_4
                                     32 	.globl _B_5
                                     33 	.globl _B_6
                                     34 	.globl _B_7
                                     35 	.globl _P2IF
                                     36 	.globl _UTX0IF
                                     37 	.globl _UTX1IF
                                     38 	.globl _P1IF
                                     39 	.globl _WDTIF
                                     40 	.globl _ACC_0
                                     41 	.globl _ACC_1
                                     42 	.globl _ACC_2
                                     43 	.globl _ACC_3
                                     44 	.globl _ACC_4
                                     45 	.globl _ACC_5
                                     46 	.globl _ACC_6
                                     47 	.globl _ACC_7
                                     48 	.globl _P
                                     49 	.globl _F1
                                     50 	.globl _OV
                                     51 	.globl _RS0
                                     52 	.globl _RS1
                                     53 	.globl _F0
                                     54 	.globl _AC
                                     55 	.globl _CY
                                     56 	.globl _DMAIF
                                     57 	.globl _T1IF
                                     58 	.globl _T2IF
                                     59 	.globl _T3IF
                                     60 	.globl _T4IF
                                     61 	.globl _P0IF
                                     62 	.globl _STIF
                                     63 	.globl _DMAIE
                                     64 	.globl _T1IE
                                     65 	.globl _T2IE
                                     66 	.globl _T3IE
                                     67 	.globl _T4IE
                                     68 	.globl _P0IE
                                     69 	.globl _RFERRIE
                                     70 	.globl _ADCIE
                                     71 	.globl _URX0IE
                                     72 	.globl _URX1IE
                                     73 	.globl _ENCIE
                                     74 	.globl _STIE
                                     75 	.globl _EA
                                     76 	.globl _P2_0
                                     77 	.globl _P2_1
                                     78 	.globl _P2_2
                                     79 	.globl _P2_3
                                     80 	.globl _P2_4
                                     81 	.globl _P2_5
                                     82 	.globl _P2_6
                                     83 	.globl _P2_7
                                     84 	.globl _ENCIF_0
                                     85 	.globl _ENCIF_1
                                     86 	.globl _P1_0
                                     87 	.globl _P1_1
                                     88 	.globl _P1_2
                                     89 	.globl _P1_3
                                     90 	.globl _P1_4
                                     91 	.globl _P1_5
                                     92 	.globl _P1_6
                                     93 	.globl _P1_7
                                     94 	.globl _IT0
                                     95 	.globl _RFERRIF
                                     96 	.globl _IT1
                                     97 	.globl _URX0IF
                                     98 	.globl _ADCIF
                                     99 	.globl _URX1IF
                                    100 	.globl _P0_0
                                    101 	.globl _P0_1
                                    102 	.globl _P0_2
                                    103 	.globl _P0_3
                                    104 	.globl _P0_4
                                    105 	.globl _P0_5
                                    106 	.globl _P0_6
                                    107 	.globl _P0_7
                                    108 	.globl _WDCTL
                                    109 	.globl _U1GCR
                                    110 	.globl _U1UCR
                                    111 	.globl _U1BAUD
                                    112 	.globl _U1DBUF
                                    113 	.globl _U1CSR
                                    114 	.globl _U0GCR
                                    115 	.globl _U0UCR
                                    116 	.globl _U0BAUD
                                    117 	.globl _U0DBUF
                                    118 	.globl _U0CSR
                                    119 	.globl _TIMIF
                                    120 	.globl _T4CC1
                                    121 	.globl _T4CCTL1
                                    122 	.globl _T4CC0
                                    123 	.globl _T4CCTL0
                                    124 	.globl _T4CTL
                                    125 	.globl _T4CNT
                                    126 	.globl _T3CC1
                                    127 	.globl _T3CCTL1
                                    128 	.globl _T3CC0
                                    129 	.globl _T3CCTL0
                                    130 	.globl _T3CTL
                                    131 	.globl _T3CNT
                                    132 	.globl _T2MSEL
                                    133 	.globl _T2IRQM
                                    134 	.globl _T2MOVF2
                                    135 	.globl _T2MOVF1
                                    136 	.globl _T2MOVF0
                                    137 	.globl _T2M1
                                    138 	.globl _T2M0
                                    139 	.globl _T2IRQF
                                    140 	.globl _T2EVTCFG
                                    141 	.globl _T2CTRL
                                    142 	.globl _T1STAT
                                    143 	.globl _T1CCTL2
                                    144 	.globl _T1CCTL1
                                    145 	.globl _T1CCTL0
                                    146 	.globl _T1CTL
                                    147 	.globl _T1CNTH
                                    148 	.globl _T1CNTL
                                    149 	.globl _T1CC2H
                                    150 	.globl _T1CC2L
                                    151 	.globl _T1CC1H
                                    152 	.globl _T1CC1L
                                    153 	.globl _T1CC0H
                                    154 	.globl _T1CC0L
                                    155 	.globl _CLKCONSTA
                                    156 	.globl _CLKCONCMD
                                    157 	.globl _SLEEPSTA
                                    158 	.globl _SLEEPCMD
                                    159 	.globl _STLOAD
                                    160 	.globl _ST2
                                    161 	.globl _ST1
                                    162 	.globl _ST0
                                    163 	.globl _RFERRF
                                    164 	.globl _RFIRQF0
                                    165 	.globl _RFST
                                    166 	.globl _RFD
                                    167 	.globl _RFIRQF1
                                    168 	.globl _PSBANK
                                    169 	.globl _FMAP
                                    170 	.globl _MEMCTR
                                    171 	.globl __XPAGE
                                    172 	.globl _MPAGE
                                    173 	.globl _PMUX
                                    174 	.globl _P2DIR
                                    175 	.globl _P1DIR
                                    176 	.globl _P0DIR
                                    177 	.globl _P2INP
                                    178 	.globl _P1INP
                                    179 	.globl _P2SEL
                                    180 	.globl _P1SEL
                                    181 	.globl _P0SEL
                                    182 	.globl _APCFG
                                    183 	.globl _PERCFG
                                    184 	.globl _P0INP
                                    185 	.globl _P2IEN
                                    186 	.globl _P1IEN
                                    187 	.globl _P0IEN
                                    188 	.globl _PICTL
                                    189 	.globl _P2IFG
                                    190 	.globl _P1IFG
                                    191 	.globl _P0IFG
                                    192 	.globl _DMAREQ
                                    193 	.globl _DMAARM
                                    194 	.globl _DMA0CFGH
                                    195 	.globl _DMA0CFGL
                                    196 	.globl _DMA1CFGH
                                    197 	.globl _DMA1CFGL
                                    198 	.globl _DMAIRQ
                                    199 	.globl _ENCCS
                                    200 	.globl _ENCDO
                                    201 	.globl _ENCDI
                                    202 	.globl _RNDH
                                    203 	.globl _RNDL
                                    204 	.globl _ADCH
                                    205 	.globl _ADCL
                                    206 	.globl _ADCCON3
                                    207 	.globl _ADCCON2
                                    208 	.globl _ADCCON1
                                    209 	.globl _B
                                    210 	.globl _IRCON2
                                    211 	.globl _ACC
                                    212 	.globl _PSW
                                    213 	.globl _IRCON
                                    214 	.globl _IP1
                                    215 	.globl _IEN1
                                    216 	.globl _IP0
                                    217 	.globl _IEN0
                                    218 	.globl _P2
                                    219 	.globl _S1CON
                                    220 	.globl _IEN2
                                    221 	.globl _S0CON
                                    222 	.globl _DPS
                                    223 	.globl _P1
                                    224 	.globl _TCON
                                    225 	.globl _PCON
                                    226 	.globl _DPH1
                                    227 	.globl _DPL1
                                    228 	.globl _DPH0
                                    229 	.globl _DPL0
                                    230 	.globl _SP
                                    231 	.globl _P0
                                    232 	.globl _rpl_of_etx
                                    233 	.globl _X_IEEE_ADDR
                                    234 	.globl _X_INFOPAGE
                                    235 	.globl _X_P2DIR
                                    236 	.globl _X_P1DIR
                                    237 	.globl _X_P0DIR
                                    238 	.globl _X_U1GCR
                                    239 	.globl _X_U1UCR
                                    240 	.globl _X_U1BAUD
                                    241 	.globl _X_U1DBUF
                                    242 	.globl _X_U1CSR
                                    243 	.globl _X_P2INP
                                    244 	.globl _X_P1INP
                                    245 	.globl _X_P2SEL
                                    246 	.globl _X_P1SEL
                                    247 	.globl _X_P0SEL
                                    248 	.globl _X_APCFG
                                    249 	.globl _X_PERCFG
                                    250 	.globl _X_T4CC1
                                    251 	.globl _X_T4CCTL1
                                    252 	.globl _X_T4CC0
                                    253 	.globl _X_T4CCTL0
                                    254 	.globl _X_T4CTL
                                    255 	.globl _X_T4CNT
                                    256 	.globl _X_RFIRQF0
                                    257 	.globl _X_T1CCTL2
                                    258 	.globl _X_T1CCTL1
                                    259 	.globl _X_T1CCTL0
                                    260 	.globl _X_T1CTL
                                    261 	.globl _X_T1CNTH
                                    262 	.globl _X_T1CNTL
                                    263 	.globl _X_RFST
                                    264 	.globl _X_T1CC2H
                                    265 	.globl _X_T1CC2L
                                    266 	.globl _X_T1CC1H
                                    267 	.globl _X_T1CC1L
                                    268 	.globl _X_T1CC0H
                                    269 	.globl _X_T1CC0L
                                    270 	.globl _X_RFD
                                    271 	.globl _X_TIMIF
                                    272 	.globl _X_DMAREQ
                                    273 	.globl _X_DMAARM
                                    274 	.globl _X_DMA0CFGH
                                    275 	.globl _X_DMA0CFGL
                                    276 	.globl _X_DMA1CFGH
                                    277 	.globl _X_DMA1CFGL
                                    278 	.globl _X_DMAIRQ
                                    279 	.globl _X_T3CC1
                                    280 	.globl _X_T3CCTL1
                                    281 	.globl _X_T3CC0
                                    282 	.globl _X_T3CCTL0
                                    283 	.globl _X_T3CTL
                                    284 	.globl _X_T3CNT
                                    285 	.globl _X_WDCTL
                                    286 	.globl _X_MEMCTR
                                    287 	.globl _X_CLKCONCMD
                                    288 	.globl _X_U0GCR
                                    289 	.globl _X_U0UCR
                                    290 	.globl _X_T2MSEL
                                    291 	.globl _X_U0BAUD
                                    292 	.globl _X_U0DBUF
                                    293 	.globl _X_RFERRF
                                    294 	.globl _X_SLEEPCMD
                                    295 	.globl _X_RNDH
                                    296 	.globl _X_RNDL
                                    297 	.globl _X_ADCH
                                    298 	.globl _X_ADCL
                                    299 	.globl _X_ADCCON3
                                    300 	.globl _X_ADCCON2
                                    301 	.globl _X_ADCCON1
                                    302 	.globl _X_ENCCS
                                    303 	.globl _X_ENCDO
                                    304 	.globl _X_ENCDI
                                    305 	.globl _X_T1STAT
                                    306 	.globl _X_PMUX
                                    307 	.globl _X_STLOAD
                                    308 	.globl _X_P2IEN
                                    309 	.globl _X_P0IEN
                                    310 	.globl _X_T2IRQM
                                    311 	.globl _X_T2MOVF2
                                    312 	.globl _X_T2MOVF1
                                    313 	.globl _X_T2MOVF0
                                    314 	.globl _X_T2M1
                                    315 	.globl _X_T2M0
                                    316 	.globl _X_T2IRQF
                                    317 	.globl _X_P2
                                    318 	.globl _X_PSBANK
                                    319 	.globl _X_FMAP
                                    320 	.globl _X_CLKCONSTA
                                    321 	.globl _X_SLEEPSTA
                                    322 	.globl _X_T2EVTCFG
                                    323 	.globl _X_ST2
                                    324 	.globl _X_ST1
                                    325 	.globl _X_ST0
                                    326 	.globl _X_T2CTRL
                                    327 	.globl _X__XPAGE
                                    328 	.globl _X_MPAGE
                                    329 	.globl _X_RFIRQF1
                                    330 	.globl _X_P1
                                    331 	.globl _X_P0INP
                                    332 	.globl _X_P1IEN
                                    333 	.globl _X_PICTL
                                    334 	.globl _X_P2IFG
                                    335 	.globl _X_P1IFG
                                    336 	.globl _X_P0IFG
                                    337 	.globl _X_U0CSR
                                    338 	.globl _X_P0
                                    339 	.globl _USBF5
                                    340 	.globl _USBF4
                                    341 	.globl _USBF3
                                    342 	.globl _USBF2
                                    343 	.globl _USBF1
                                    344 	.globl _USBF0
                                    345 	.globl _USBCNTH
                                    346 	.globl _USBCNTL
                                    347 	.globl _USBCNT0
                                    348 	.globl _USBCSOH
                                    349 	.globl _USBCSOL
                                    350 	.globl _USBMAXO
                                    351 	.globl _USBCSIH
                                    352 	.globl _USBCSIL
                                    353 	.globl _USBCS0
                                    354 	.globl _USBMAXI
                                    355 	.globl _USBCTRL
                                    356 	.globl _USBINDEX
                                    357 	.globl _USBFRMH
                                    358 	.globl _USBFRML
                                    359 	.globl _USBCIE
                                    360 	.globl _USBOIE
                                    361 	.globl _USBIIE
                                    362 	.globl _USBCIF
                                    363 	.globl _USBOIF
                                    364 	.globl _USBIIF
                                    365 	.globl _USBPOW
                                    366 	.globl _USBADDR
                                    367 	.globl _CSPT
                                    368 	.globl _CSPZ
                                    369 	.globl _CSPY
                                    370 	.globl _CSPX
                                    371 	.globl _CSPSTAT
                                    372 	.globl _CSPCTRL
                                    373 	.globl _CSPPROG23
                                    374 	.globl _CSPPROG22
                                    375 	.globl _CSPPROG21
                                    376 	.globl _CSPPROG20
                                    377 	.globl _CSPPROG19
                                    378 	.globl _CSPPROG18
                                    379 	.globl _CSPPROG17
                                    380 	.globl _CSPPROG16
                                    381 	.globl _CSPPROG15
                                    382 	.globl _CSPPROG14
                                    383 	.globl _CSPPROG13
                                    384 	.globl _CSPPROG12
                                    385 	.globl _CSPPROG11
                                    386 	.globl _CSPPROG10
                                    387 	.globl _CSPPROG9
                                    388 	.globl _CSPPROG8
                                    389 	.globl _CSPPROG7
                                    390 	.globl _CSPPROG6
                                    391 	.globl _CSPPROG5
                                    392 	.globl _CSPPROG4
                                    393 	.globl _CSPPROG3
                                    394 	.globl _CSPPROG2
                                    395 	.globl _CSPPROG1
                                    396 	.globl _CSPPROG0
                                    397 	.globl _RFC_OBS_CTRL2
                                    398 	.globl _RFC_OBS_CTRL1
                                    399 	.globl _RFC_OBS_CTRL0
                                    400 	.globl _TXFILTCFG
                                    401 	.globl _PTEST1
                                    402 	.globl _PTEST0
                                    403 	.globl _ATEST
                                    404 	.globl _DACTEST2
                                    405 	.globl _DACTEST1
                                    406 	.globl _DACTEST0
                                    407 	.globl _MDMTEST1
                                    408 	.globl _MDMTEST0
                                    409 	.globl _ADCTEST2
                                    410 	.globl _ADCTEST1
                                    411 	.globl _ADCTEST0
                                    412 	.globl _AGCCTRL3
                                    413 	.globl _AGCCTRL2
                                    414 	.globl _AGCCTRL1
                                    415 	.globl _AGCCTRL0
                                    416 	.globl _FSCAL3
                                    417 	.globl _FSCAL2
                                    418 	.globl _FSCAL1
                                    419 	.globl _FSCAL0
                                    420 	.globl _FSCTRL
                                    421 	.globl _RXCTRL
                                    422 	.globl _FREQEST
                                    423 	.globl _MDMCTRL1
                                    424 	.globl _MDMCTRL0
                                    425 	.globl _RFRND
                                    426 	.globl _RFERRM
                                    427 	.globl _RFIRQM1
                                    428 	.globl _RFIRQM0
                                    429 	.globl _TXLAST_PTR
                                    430 	.globl _TXFIRST_PTR
                                    431 	.globl _RXP1_PTR
                                    432 	.globl _RXLAST_PTR
                                    433 	.globl _RXFIRST_PTR
                                    434 	.globl _TXFIFOCNT
                                    435 	.globl _RXFIFOCNT
                                    436 	.globl _RXFIRST
                                    437 	.globl _RSSISTAT
                                    438 	.globl _RSSI
                                    439 	.globl _CCACTRL1
                                    440 	.globl _CCACTRL0
                                    441 	.globl _FSMCTRL
                                    442 	.globl _FIFOPCTRL
                                    443 	.globl _FSMSTAT1
                                    444 	.globl _FSMSTAT0
                                    445 	.globl _TXCTRL
                                    446 	.globl _TXPOWER
                                    447 	.globl _FREQCTRL
                                    448 	.globl _FREQTUNE
                                    449 	.globl _RXMASKCLR
                                    450 	.globl _RXMASKSET
                                    451 	.globl _RXENABLE
                                    452 	.globl _FRMCTRL1
                                    453 	.globl _FRMCTRL0
                                    454 	.globl _SRCEXTEN2
                                    455 	.globl _SRCEXTEN1
                                    456 	.globl _SRCEXTEN0
                                    457 	.globl _SRCSHORTEN2
                                    458 	.globl _SRCSHORTEN1
                                    459 	.globl _SRCSHORTEN0
                                    460 	.globl _SRCMATCH
                                    461 	.globl _FRMFILT1
                                    462 	.globl _FRMFILT0
                                    463 	.globl _SHORT_ADDR1
                                    464 	.globl _SHORT_ADDR0
                                    465 	.globl _PAN_ID1
                                    466 	.globl _PAN_ID0
                                    467 	.globl _EXT_ADDR7
                                    468 	.globl _EXT_ADDR6
                                    469 	.globl _EXT_ADDR5
                                    470 	.globl _EXT_ADDR4
                                    471 	.globl _EXT_ADDR3
                                    472 	.globl _EXT_ADDR2
                                    473 	.globl _EXT_ADDR1
                                    474 	.globl _EXT_ADDR0
                                    475 	.globl _SRCSHORTPENDEN2
                                    476 	.globl _SRCSHORTPENDEN1
                                    477 	.globl _SRCSHORTPENDEN0
                                    478 	.globl _SRCEXTPENDEN2
                                    479 	.globl _SRCEXTPENDEN1
                                    480 	.globl _SRCEXTPENDEN0
                                    481 	.globl _SRCRESINDEX
                                    482 	.globl _SRCRESMASK2
                                    483 	.globl _SRCRESMASK1
                                    484 	.globl _SRCRESMASK0
                                    485 	.globl _SRC_ADDR_TABLE
                                    486 	.globl _TXFIFO
                                    487 	.globl _RXFIFO
                                    488 	.globl _RFCORE_RAM
                                    489 	.globl _CMPCTL
                                    490 	.globl _OPAMPS
                                    491 	.globl _OPAMPC
                                    492 	.globl _STCV2
                                    493 	.globl _STCV1
                                    494 	.globl _STCV0
                                    495 	.globl _STCS
                                    496 	.globl _STCC
                                    497 	.globl _T1CC4H
                                    498 	.globl _T1CC4L
                                    499 	.globl _T1CC3H
                                    500 	.globl _T1CC3L
                                    501 	.globl _XX_T1CC2H
                                    502 	.globl _XX_T1CC2L
                                    503 	.globl _XX_T1CC1H
                                    504 	.globl _XX_T1CC1L
                                    505 	.globl _XX_T1CC0H
                                    506 	.globl _XX_T1CC0L
                                    507 	.globl _T1CCTL4
                                    508 	.globl _T1CCTL3
                                    509 	.globl _XX_T1CCTL2
                                    510 	.globl _XX_T1CCTL1
                                    511 	.globl _XX_T1CCTL0
                                    512 	.globl _CLD
                                    513 	.globl _IRCTL
                                    514 	.globl _CHIPINFO1
                                    515 	.globl _CHIPINFO0
                                    516 	.globl _FWDATA
                                    517 	.globl _FADDRH
                                    518 	.globl _FADDRL
                                    519 	.globl _FCTL
                                    520 	.globl _IVCTRL
                                    521 	.globl _BATTMON
                                    522 	.globl _SRCRC
                                    523 	.globl _DBGDATA
                                    524 	.globl _TESTREG0
                                    525 	.globl _CHIPID
                                    526 	.globl _CHVER
                                    527 	.globl _OBSSEL5
                                    528 	.globl _OBSSEL4
                                    529 	.globl _OBSSEL3
                                    530 	.globl _OBSSEL2
                                    531 	.globl _OBSSEL1
                                    532 	.globl _OBSSEL0
                                    533 	.globl _I2CIO
                                    534 	.globl _I2CWC
                                    535 	.globl _I2CADDR
                                    536 	.globl _I2CDATA
                                    537 	.globl _I2CSTAT
                                    538 	.globl _I2CCFG
                                    539 	.globl _OPAMPMC
                                    540 	.globl _MONMUX
                                    541 ;--------------------------------------------------------
                                    542 ; special function registers
                                    543 ;--------------------------------------------------------
                                    544 	.area RSEG    (ABS,DATA)
      000000                        545 	.org 0x0000
                           000080   546 _P0	=	0x0080
                           000081   547 _SP	=	0x0081
                           000082   548 _DPL0	=	0x0082
                           000083   549 _DPH0	=	0x0083
                           000084   550 _DPL1	=	0x0084
                           000085   551 _DPH1	=	0x0085
                           000087   552 _PCON	=	0x0087
                           000088   553 _TCON	=	0x0088
                           000090   554 _P1	=	0x0090
                           000092   555 _DPS	=	0x0092
                           000098   556 _S0CON	=	0x0098
                           00009A   557 _IEN2	=	0x009a
                           00009B   558 _S1CON	=	0x009b
                           0000A0   559 _P2	=	0x00a0
                           0000A8   560 _IEN0	=	0x00a8
                           0000A9   561 _IP0	=	0x00a9
                           0000B8   562 _IEN1	=	0x00b8
                           0000B9   563 _IP1	=	0x00b9
                           0000C0   564 _IRCON	=	0x00c0
                           0000D0   565 _PSW	=	0x00d0
                           0000E0   566 _ACC	=	0x00e0
                           0000E8   567 _IRCON2	=	0x00e8
                           0000F0   568 _B	=	0x00f0
                           0000B4   569 _ADCCON1	=	0x00b4
                           0000B5   570 _ADCCON2	=	0x00b5
                           0000B6   571 _ADCCON3	=	0x00b6
                           0000BA   572 _ADCL	=	0x00ba
                           0000BB   573 _ADCH	=	0x00bb
                           0000BC   574 _RNDL	=	0x00bc
                           0000BD   575 _RNDH	=	0x00bd
                           0000B1   576 _ENCDI	=	0x00b1
                           0000B2   577 _ENCDO	=	0x00b2
                           0000B3   578 _ENCCS	=	0x00b3
                           0000D1   579 _DMAIRQ	=	0x00d1
                           0000D2   580 _DMA1CFGL	=	0x00d2
                           0000D3   581 _DMA1CFGH	=	0x00d3
                           0000D4   582 _DMA0CFGL	=	0x00d4
                           0000D5   583 _DMA0CFGH	=	0x00d5
                           0000D6   584 _DMAARM	=	0x00d6
                           0000D7   585 _DMAREQ	=	0x00d7
                           000089   586 _P0IFG	=	0x0089
                           00008A   587 _P1IFG	=	0x008a
                           00008B   588 _P2IFG	=	0x008b
                           00008C   589 _PICTL	=	0x008c
                           0000AB   590 _P0IEN	=	0x00ab
                           00008D   591 _P1IEN	=	0x008d
                           0000AC   592 _P2IEN	=	0x00ac
                           00008F   593 _P0INP	=	0x008f
                           0000F1   594 _PERCFG	=	0x00f1
                           0000F2   595 _APCFG	=	0x00f2
                           0000F3   596 _P0SEL	=	0x00f3
                           0000F4   597 _P1SEL	=	0x00f4
                           0000F5   598 _P2SEL	=	0x00f5
                           0000F6   599 _P1INP	=	0x00f6
                           0000F7   600 _P2INP	=	0x00f7
                           0000FD   601 _P0DIR	=	0x00fd
                           0000FE   602 _P1DIR	=	0x00fe
                           0000FF   603 _P2DIR	=	0x00ff
                           0000AE   604 _PMUX	=	0x00ae
                           000093   605 _MPAGE	=	0x0093
                           000093   606 __XPAGE	=	0x0093
                           0000C7   607 _MEMCTR	=	0x00c7
                           00009F   608 _FMAP	=	0x009f
                           00009F   609 _PSBANK	=	0x009f
                           000091   610 _RFIRQF1	=	0x0091
                           0000D9   611 _RFD	=	0x00d9
                           0000E1   612 _RFST	=	0x00e1
                           0000E9   613 _RFIRQF0	=	0x00e9
                           0000BF   614 _RFERRF	=	0x00bf
                           000095   615 _ST0	=	0x0095
                           000096   616 _ST1	=	0x0096
                           000097   617 _ST2	=	0x0097
                           0000AD   618 _STLOAD	=	0x00ad
                           0000BE   619 _SLEEPCMD	=	0x00be
                           00009D   620 _SLEEPSTA	=	0x009d
                           0000C6   621 _CLKCONCMD	=	0x00c6
                           00009E   622 _CLKCONSTA	=	0x009e
                           0000DA   623 _T1CC0L	=	0x00da
                           0000DB   624 _T1CC0H	=	0x00db
                           0000DC   625 _T1CC1L	=	0x00dc
                           0000DD   626 _T1CC1H	=	0x00dd
                           0000DE   627 _T1CC2L	=	0x00de
                           0000DF   628 _T1CC2H	=	0x00df
                           0000E2   629 _T1CNTL	=	0x00e2
                           0000E3   630 _T1CNTH	=	0x00e3
                           0000E4   631 _T1CTL	=	0x00e4
                           0000E5   632 _T1CCTL0	=	0x00e5
                           0000E6   633 _T1CCTL1	=	0x00e6
                           0000E7   634 _T1CCTL2	=	0x00e7
                           0000AF   635 _T1STAT	=	0x00af
                           000094   636 _T2CTRL	=	0x0094
                           00009C   637 _T2EVTCFG	=	0x009c
                           0000A1   638 _T2IRQF	=	0x00a1
                           0000A2   639 _T2M0	=	0x00a2
                           0000A3   640 _T2M1	=	0x00a3
                           0000A4   641 _T2MOVF0	=	0x00a4
                           0000A5   642 _T2MOVF1	=	0x00a5
                           0000A6   643 _T2MOVF2	=	0x00a6
                           0000A7   644 _T2IRQM	=	0x00a7
                           0000C3   645 _T2MSEL	=	0x00c3
                           0000CA   646 _T3CNT	=	0x00ca
                           0000CB   647 _T3CTL	=	0x00cb
                           0000CC   648 _T3CCTL0	=	0x00cc
                           0000CD   649 _T3CC0	=	0x00cd
                           0000CE   650 _T3CCTL1	=	0x00ce
                           0000CF   651 _T3CC1	=	0x00cf
                           0000EA   652 _T4CNT	=	0x00ea
                           0000EB   653 _T4CTL	=	0x00eb
                           0000EC   654 _T4CCTL0	=	0x00ec
                           0000ED   655 _T4CC0	=	0x00ed
                           0000EE   656 _T4CCTL1	=	0x00ee
                           0000EF   657 _T4CC1	=	0x00ef
                           0000D8   658 _TIMIF	=	0x00d8
                           000086   659 _U0CSR	=	0x0086
                           0000C1   660 _U0DBUF	=	0x00c1
                           0000C2   661 _U0BAUD	=	0x00c2
                           0000C4   662 _U0UCR	=	0x00c4
                           0000C5   663 _U0GCR	=	0x00c5
                           0000F8   664 _U1CSR	=	0x00f8
                           0000F9   665 _U1DBUF	=	0x00f9
                           0000FA   666 _U1BAUD	=	0x00fa
                           0000FB   667 _U1UCR	=	0x00fb
                           0000FC   668 _U1GCR	=	0x00fc
                           0000C9   669 _WDCTL	=	0x00c9
                                    670 ;--------------------------------------------------------
                                    671 ; special function bits
                                    672 ;--------------------------------------------------------
                                    673 	.area RSEG    (ABS,DATA)
      000000                        674 	.org 0x0000
                           000087   675 _P0_7	=	0x0087
                           000086   676 _P0_6	=	0x0086
                           000085   677 _P0_5	=	0x0085
                           000084   678 _P0_4	=	0x0084
                           000083   679 _P0_3	=	0x0083
                           000082   680 _P0_2	=	0x0082
                           000081   681 _P0_1	=	0x0081
                           000080   682 _P0_0	=	0x0080
                           00008F   683 _URX1IF	=	0x008f
                           00008D   684 _ADCIF	=	0x008d
                           00008B   685 _URX0IF	=	0x008b
                           00008A   686 _IT1	=	0x008a
                           000089   687 _RFERRIF	=	0x0089
                           000088   688 _IT0	=	0x0088
                           000097   689 _P1_7	=	0x0097
                           000096   690 _P1_6	=	0x0096
                           000095   691 _P1_5	=	0x0095
                           000094   692 _P1_4	=	0x0094
                           000093   693 _P1_3	=	0x0093
                           000092   694 _P1_2	=	0x0092
                           000091   695 _P1_1	=	0x0091
                           000090   696 _P1_0	=	0x0090
                           000099   697 _ENCIF_1	=	0x0099
                           000098   698 _ENCIF_0	=	0x0098
                           0000A7   699 _P2_7	=	0x00a7
                           0000A6   700 _P2_6	=	0x00a6
                           0000A5   701 _P2_5	=	0x00a5
                           0000A4   702 _P2_4	=	0x00a4
                           0000A3   703 _P2_3	=	0x00a3
                           0000A2   704 _P2_2	=	0x00a2
                           0000A1   705 _P2_1	=	0x00a1
                           0000A0   706 _P2_0	=	0x00a0
                           0000AF   707 _EA	=	0x00af
                           0000AD   708 _STIE	=	0x00ad
                           0000AC   709 _ENCIE	=	0x00ac
                           0000AB   710 _URX1IE	=	0x00ab
                           0000AA   711 _URX0IE	=	0x00aa
                           0000A9   712 _ADCIE	=	0x00a9
                           0000A8   713 _RFERRIE	=	0x00a8
                           0000BD   714 _P0IE	=	0x00bd
                           0000BC   715 _T4IE	=	0x00bc
                           0000BB   716 _T3IE	=	0x00bb
                           0000BA   717 _T2IE	=	0x00ba
                           0000B9   718 _T1IE	=	0x00b9
                           0000B8   719 _DMAIE	=	0x00b8
                           0000C7   720 _STIF	=	0x00c7
                           0000C5   721 _P0IF	=	0x00c5
                           0000C4   722 _T4IF	=	0x00c4
                           0000C3   723 _T3IF	=	0x00c3
                           0000C2   724 _T2IF	=	0x00c2
                           0000C1   725 _T1IF	=	0x00c1
                           0000C0   726 _DMAIF	=	0x00c0
                           0000D7   727 _CY	=	0x00d7
                           0000D6   728 _AC	=	0x00d6
                           0000D5   729 _F0	=	0x00d5
                           0000D4   730 _RS1	=	0x00d4
                           0000D3   731 _RS0	=	0x00d3
                           0000D2   732 _OV	=	0x00d2
                           0000D1   733 _F1	=	0x00d1
                           0000D0   734 _P	=	0x00d0
                           0000E7   735 _ACC_7	=	0x00e7
                           0000E6   736 _ACC_6	=	0x00e6
                           0000E5   737 _ACC_5	=	0x00e5
                           0000E4   738 _ACC_4	=	0x00e4
                           0000E3   739 _ACC_3	=	0x00e3
                           0000E2   740 _ACC_2	=	0x00e2
                           0000E1   741 _ACC_1	=	0x00e1
                           0000E0   742 _ACC_0	=	0x00e0
                           0000EC   743 _WDTIF	=	0x00ec
                           0000EB   744 _P1IF	=	0x00eb
                           0000EA   745 _UTX1IF	=	0x00ea
                           0000E9   746 _UTX0IF	=	0x00e9
                           0000E8   747 _P2IF	=	0x00e8
                           0000F7   748 _B_7	=	0x00f7
                           0000F6   749 _B_6	=	0x00f6
                           0000F5   750 _B_5	=	0x00f5
                           0000F4   751 _B_4	=	0x00f4
                           0000F3   752 _B_3	=	0x00f3
                           0000F2   753 _B_2	=	0x00f2
                           0000F1   754 _B_1	=	0x00f1
                           0000F0   755 _B_0	=	0x00f0
                           0000DE   756 _OVFIM	=	0x00de
                           0000DD   757 _T4CH1IF	=	0x00dd
                           0000DC   758 _T4CH0IF	=	0x00dc
                           0000DB   759 _T4OVFIF	=	0x00db
                           0000DA   760 _T3CH1IF	=	0x00da
                           0000D9   761 _T3CH0IF	=	0x00d9
                           0000D8   762 _T3OVFIF	=	0x00d8
                           0000FF   763 _MODE	=	0x00ff
                           0000FE   764 _RE	=	0x00fe
                           0000FD   765 _SLAVE	=	0x00fd
                           0000FC   766 _FE	=	0x00fc
                           0000FB   767 _ERR	=	0x00fb
                           0000FA   768 _RX_BYTE	=	0x00fa
                           0000F9   769 _TX_BYTE	=	0x00f9
                           0000F8   770 _ACTIVE	=	0x00f8
                                    771 ;--------------------------------------------------------
                                    772 ; overlayable register banks
                                    773 ;--------------------------------------------------------
                                    774 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        775 	.ds 8
                                    776 ;--------------------------------------------------------
                                    777 ; internal ram data
                                    778 ;--------------------------------------------------------
                                    779 	.area DSEG    (DATA)
                                    780 ;--------------------------------------------------------
                                    781 ; overlayable items in internal ram 
                                    782 ;--------------------------------------------------------
                                    783 ;--------------------------------------------------------
                                    784 ; indirectly addressable internal ram data
                                    785 ;--------------------------------------------------------
                                    786 	.area ISEG    (DATA)
                                    787 ;--------------------------------------------------------
                                    788 ; absolute internal ram data
                                    789 ;--------------------------------------------------------
                                    790 	.area IABS    (ABS,DATA)
                                    791 	.area IABS    (ABS,DATA)
                                    792 ;--------------------------------------------------------
                                    793 ; bit data
                                    794 ;--------------------------------------------------------
                                    795 	.area BSEG    (BIT)
                                    796 ;--------------------------------------------------------
                                    797 ; paged external ram data
                                    798 ;--------------------------------------------------------
                                    799 	.area PSEG    (PAG,XDATA)
                                    800 ;--------------------------------------------------------
                                    801 ; external ram data
                                    802 ;--------------------------------------------------------
                                    803 	.area XSEG    (XDATA)
                           0061A6   804 _MONMUX	=	0x61a6
                           0061A6   805 _OPAMPMC	=	0x61a6
                           006230   806 _I2CCFG	=	0x6230
                           006231   807 _I2CSTAT	=	0x6231
                           006232   808 _I2CDATA	=	0x6232
                           006233   809 _I2CADDR	=	0x6233
                           006234   810 _I2CWC	=	0x6234
                           006235   811 _I2CIO	=	0x6235
                           006243   812 _OBSSEL0	=	0x6243
                           006244   813 _OBSSEL1	=	0x6244
                           006245   814 _OBSSEL2	=	0x6245
                           006246   815 _OBSSEL3	=	0x6246
                           006247   816 _OBSSEL4	=	0x6247
                           006248   817 _OBSSEL5	=	0x6248
                           006249   818 _CHVER	=	0x6249
                           00624A   819 _CHIPID	=	0x624a
                           00624B   820 _TESTREG0	=	0x624b
                           006260   821 _DBGDATA	=	0x6260
                           006262   822 _SRCRC	=	0x6262
                           006264   823 _BATTMON	=	0x6264
                           006265   824 _IVCTRL	=	0x6265
                           006270   825 _FCTL	=	0x6270
                           006271   826 _FADDRL	=	0x6271
                           006272   827 _FADDRH	=	0x6272
                           006273   828 _FWDATA	=	0x6273
                           006276   829 _CHIPINFO0	=	0x6276
                           006277   830 _CHIPINFO1	=	0x6277
                           006281   831 _IRCTL	=	0x6281
                           006290   832 _CLD	=	0x6290
                           0062A0   833 _XX_T1CCTL0	=	0x62a0
                           0062A1   834 _XX_T1CCTL1	=	0x62a1
                           0062A2   835 _XX_T1CCTL2	=	0x62a2
                           0062A3   836 _T1CCTL3	=	0x62a3
                           0062A4   837 _T1CCTL4	=	0x62a4
                           0062A6   838 _XX_T1CC0L	=	0x62a6
                           0062A7   839 _XX_T1CC0H	=	0x62a7
                           0062A8   840 _XX_T1CC1L	=	0x62a8
                           0062A9   841 _XX_T1CC1H	=	0x62a9
                           0062AA   842 _XX_T1CC2L	=	0x62aa
                           0062AB   843 _XX_T1CC2H	=	0x62ab
                           0062AC   844 _T1CC3L	=	0x62ac
                           0062AD   845 _T1CC3H	=	0x62ad
                           0062AE   846 _T1CC4L	=	0x62ae
                           0062AF   847 _T1CC4H	=	0x62af
                           0062B0   848 _STCC	=	0x62b0
                           0062B1   849 _STCS	=	0x62b1
                           0062B2   850 _STCV0	=	0x62b2
                           0062B3   851 _STCV1	=	0x62b3
                           0062B4   852 _STCV2	=	0x62b4
                           0062C0   853 _OPAMPC	=	0x62c0
                           0062C1   854 _OPAMPS	=	0x62c1
                           0062D0   855 _CMPCTL	=	0x62d0
                           006000   856 _RFCORE_RAM	=	0x6000
                           006000   857 _RXFIFO	=	0x6000
                           006080   858 _TXFIFO	=	0x6080
                           006100   859 _SRC_ADDR_TABLE	=	0x6100
                           006160   860 _SRCRESMASK0	=	0x6160
                           006161   861 _SRCRESMASK1	=	0x6161
                           006162   862 _SRCRESMASK2	=	0x6162
                           006163   863 _SRCRESINDEX	=	0x6163
                           006164   864 _SRCEXTPENDEN0	=	0x6164
                           006165   865 _SRCEXTPENDEN1	=	0x6165
                           006166   866 _SRCEXTPENDEN2	=	0x6166
                           006167   867 _SRCSHORTPENDEN0	=	0x6167
                           006168   868 _SRCSHORTPENDEN1	=	0x6168
                           006169   869 _SRCSHORTPENDEN2	=	0x6169
                           00616A   870 _EXT_ADDR0	=	0x616a
                           00616B   871 _EXT_ADDR1	=	0x616b
                           00616C   872 _EXT_ADDR2	=	0x616c
                           00616D   873 _EXT_ADDR3	=	0x616d
                           00616E   874 _EXT_ADDR4	=	0x616e
                           00616F   875 _EXT_ADDR5	=	0x616f
                           006170   876 _EXT_ADDR6	=	0x6170
                           006171   877 _EXT_ADDR7	=	0x6171
                           006172   878 _PAN_ID0	=	0x6172
                           006173   879 _PAN_ID1	=	0x6173
                           006174   880 _SHORT_ADDR0	=	0x6174
                           006175   881 _SHORT_ADDR1	=	0x6175
                           006180   882 _FRMFILT0	=	0x6180
                           006181   883 _FRMFILT1	=	0x6181
                           006182   884 _SRCMATCH	=	0x6182
                           006183   885 _SRCSHORTEN0	=	0x6183
                           006184   886 _SRCSHORTEN1	=	0x6184
                           006185   887 _SRCSHORTEN2	=	0x6185
                           006186   888 _SRCEXTEN0	=	0x6186
                           006187   889 _SRCEXTEN1	=	0x6187
                           006188   890 _SRCEXTEN2	=	0x6188
                           006189   891 _FRMCTRL0	=	0x6189
                           00618A   892 _FRMCTRL1	=	0x618a
                           00618B   893 _RXENABLE	=	0x618b
                           00618C   894 _RXMASKSET	=	0x618c
                           00618D   895 _RXMASKCLR	=	0x618d
                           00618E   896 _FREQTUNE	=	0x618e
                           00618F   897 _FREQCTRL	=	0x618f
                           006190   898 _TXPOWER	=	0x6190
                           006191   899 _TXCTRL	=	0x6191
                           006192   900 _FSMSTAT0	=	0x6192
                           006193   901 _FSMSTAT1	=	0x6193
                           006194   902 _FIFOPCTRL	=	0x6194
                           006195   903 _FSMCTRL	=	0x6195
                           006196   904 _CCACTRL0	=	0x6196
                           006197   905 _CCACTRL1	=	0x6197
                           006198   906 _RSSI	=	0x6198
                           006199   907 _RSSISTAT	=	0x6199
                           00619A   908 _RXFIRST	=	0x619a
                           00619B   909 _RXFIFOCNT	=	0x619b
                           00619C   910 _TXFIFOCNT	=	0x619c
                           00619D   911 _RXFIRST_PTR	=	0x619d
                           00619E   912 _RXLAST_PTR	=	0x619e
                           00619F   913 _RXP1_PTR	=	0x619f
                           0061A1   914 _TXFIRST_PTR	=	0x61a1
                           0061A2   915 _TXLAST_PTR	=	0x61a2
                           0061A3   916 _RFIRQM0	=	0x61a3
                           0061A4   917 _RFIRQM1	=	0x61a4
                           0061A5   918 _RFERRM	=	0x61a5
                           0061A7   919 _RFRND	=	0x61a7
                           0061A8   920 _MDMCTRL0	=	0x61a8
                           0061A9   921 _MDMCTRL1	=	0x61a9
                           0061AA   922 _FREQEST	=	0x61aa
                           0061AB   923 _RXCTRL	=	0x61ab
                           0061AC   924 _FSCTRL	=	0x61ac
                           0061AD   925 _FSCAL0	=	0x61ad
                           0061AE   926 _FSCAL1	=	0x61ae
                           0061AF   927 _FSCAL2	=	0x61af
                           0061B0   928 _FSCAL3	=	0x61b0
                           0061B1   929 _AGCCTRL0	=	0x61b1
                           0061B2   930 _AGCCTRL1	=	0x61b2
                           0061B3   931 _AGCCTRL2	=	0x61b3
                           0061B4   932 _AGCCTRL3	=	0x61b4
                           0061B5   933 _ADCTEST0	=	0x61b5
                           0061B6   934 _ADCTEST1	=	0x61b6
                           0061B7   935 _ADCTEST2	=	0x61b7
                           0061B8   936 _MDMTEST0	=	0x61b8
                           0061B9   937 _MDMTEST1	=	0x61b9
                           0061BA   938 _DACTEST0	=	0x61ba
                           0061BB   939 _DACTEST1	=	0x61bb
                           0061BC   940 _DACTEST2	=	0x61bc
                           0061BD   941 _ATEST	=	0x61bd
                           0061BE   942 _PTEST0	=	0x61be
                           0061BF   943 _PTEST1	=	0x61bf
                           0061FA   944 _TXFILTCFG	=	0x61fa
                           0061EB   945 _RFC_OBS_CTRL0	=	0x61eb
                           0061EC   946 _RFC_OBS_CTRL1	=	0x61ec
                           0061ED   947 _RFC_OBS_CTRL2	=	0x61ed
                           0061C0   948 _CSPPROG0	=	0x61c0
                           0061C1   949 _CSPPROG1	=	0x61c1
                           0061C2   950 _CSPPROG2	=	0x61c2
                           0061C3   951 _CSPPROG3	=	0x61c3
                           0061C4   952 _CSPPROG4	=	0x61c4
                           0061C5   953 _CSPPROG5	=	0x61c5
                           0061C6   954 _CSPPROG6	=	0x61c6
                           0061C7   955 _CSPPROG7	=	0x61c7
                           0061C8   956 _CSPPROG8	=	0x61c8
                           0061C9   957 _CSPPROG9	=	0x61c9
                           0061CA   958 _CSPPROG10	=	0x61ca
                           0061CB   959 _CSPPROG11	=	0x61cb
                           0061CC   960 _CSPPROG12	=	0x61cc
                           0061CD   961 _CSPPROG13	=	0x61cd
                           0061CE   962 _CSPPROG14	=	0x61ce
                           0061CF   963 _CSPPROG15	=	0x61cf
                           0061D0   964 _CSPPROG16	=	0x61d0
                           0061D1   965 _CSPPROG17	=	0x61d1
                           0061D2   966 _CSPPROG18	=	0x61d2
                           0061D3   967 _CSPPROG19	=	0x61d3
                           0061D4   968 _CSPPROG20	=	0x61d4
                           0061D5   969 _CSPPROG21	=	0x61d5
                           0061D6   970 _CSPPROG22	=	0x61d6
                           0061D7   971 _CSPPROG23	=	0x61d7
                           0061E0   972 _CSPCTRL	=	0x61e0
                           0061E1   973 _CSPSTAT	=	0x61e1
                           0061E2   974 _CSPX	=	0x61e2
                           0061E3   975 _CSPY	=	0x61e3
                           0061E4   976 _CSPZ	=	0x61e4
                           0061E5   977 _CSPT	=	0x61e5
                           006200   978 _USBADDR	=	0x6200
                           006201   979 _USBPOW	=	0x6201
                           006202   980 _USBIIF	=	0x6202
                           006204   981 _USBOIF	=	0x6204
                           006206   982 _USBCIF	=	0x6206
                           006207   983 _USBIIE	=	0x6207
                           006209   984 _USBOIE	=	0x6209
                           00620B   985 _USBCIE	=	0x620b
                           00620C   986 _USBFRML	=	0x620c
                           00620D   987 _USBFRMH	=	0x620d
                           00620E   988 _USBINDEX	=	0x620e
                           00620F   989 _USBCTRL	=	0x620f
                           006210   990 _USBMAXI	=	0x6210
                           006211   991 _USBCS0	=	0x6211
                           006211   992 _USBCSIL	=	0x6211
                           006212   993 _USBCSIH	=	0x6212
                           006213   994 _USBMAXO	=	0x6213
                           006214   995 _USBCSOL	=	0x6214
                           006215   996 _USBCSOH	=	0x6215
                           006216   997 _USBCNT0	=	0x6216
                           006216   998 _USBCNTL	=	0x6216
                           006217   999 _USBCNTH	=	0x6217
                           006220  1000 _USBF0	=	0x6220
                           006222  1001 _USBF1	=	0x6222
                           006224  1002 _USBF2	=	0x6224
                           006226  1003 _USBF3	=	0x6226
                           006228  1004 _USBF4	=	0x6228
                           00622A  1005 _USBF5	=	0x622a
                           007080  1006 _X_P0	=	0x7080
                           007086  1007 _X_U0CSR	=	0x7086
                           007089  1008 _X_P0IFG	=	0x7089
                           00708A  1009 _X_P1IFG	=	0x708a
                           00708B  1010 _X_P2IFG	=	0x708b
                           00708C  1011 _X_PICTL	=	0x708c
                           00708D  1012 _X_P1IEN	=	0x708d
                           00708F  1013 _X_P0INP	=	0x708f
                           007090  1014 _X_P1	=	0x7090
                           007091  1015 _X_RFIRQF1	=	0x7091
                           007093  1016 _X_MPAGE	=	0x7093
                           007093  1017 _X__XPAGE	=	0x7093
                           007094  1018 _X_T2CTRL	=	0x7094
                           007095  1019 _X_ST0	=	0x7095
                           007096  1020 _X_ST1	=	0x7096
                           007097  1021 _X_ST2	=	0x7097
                           00709C  1022 _X_T2EVTCFG	=	0x709c
                           00709D  1023 _X_SLEEPSTA	=	0x709d
                           00709E  1024 _X_CLKCONSTA	=	0x709e
                           00709F  1025 _X_FMAP	=	0x709f
                           00709F  1026 _X_PSBANK	=	0x709f
                           0070A0  1027 _X_P2	=	0x70a0
                           0070A1  1028 _X_T2IRQF	=	0x70a1
                           0070A2  1029 _X_T2M0	=	0x70a2
                           0070A3  1030 _X_T2M1	=	0x70a3
                           0070A4  1031 _X_T2MOVF0	=	0x70a4
                           0070A5  1032 _X_T2MOVF1	=	0x70a5
                           0070A6  1033 _X_T2MOVF2	=	0x70a6
                           0070A7  1034 _X_T2IRQM	=	0x70a7
                           0070AB  1035 _X_P0IEN	=	0x70ab
                           0070AC  1036 _X_P2IEN	=	0x70ac
                           0070AD  1037 _X_STLOAD	=	0x70ad
                           0070AE  1038 _X_PMUX	=	0x70ae
                           0070AF  1039 _X_T1STAT	=	0x70af
                           0070B1  1040 _X_ENCDI	=	0x70b1
                           0070B2  1041 _X_ENCDO	=	0x70b2
                           0070B3  1042 _X_ENCCS	=	0x70b3
                           0070B4  1043 _X_ADCCON1	=	0x70b4
                           0070B5  1044 _X_ADCCON2	=	0x70b5
                           0070B6  1045 _X_ADCCON3	=	0x70b6
                           0070BA  1046 _X_ADCL	=	0x70ba
                           0070BB  1047 _X_ADCH	=	0x70bb
                           0070BC  1048 _X_RNDL	=	0x70bc
                           0070BD  1049 _X_RNDH	=	0x70bd
                           0070BE  1050 _X_SLEEPCMD	=	0x70be
                           0070BF  1051 _X_RFERRF	=	0x70bf
                           0070C1  1052 _X_U0DBUF	=	0x70c1
                           0070C2  1053 _X_U0BAUD	=	0x70c2
                           0070C3  1054 _X_T2MSEL	=	0x70c3
                           0070C4  1055 _X_U0UCR	=	0x70c4
                           0070C5  1056 _X_U0GCR	=	0x70c5
                           0070C6  1057 _X_CLKCONCMD	=	0x70c6
                           0070C7  1058 _X_MEMCTR	=	0x70c7
                           0070C9  1059 _X_WDCTL	=	0x70c9
                           0070CA  1060 _X_T3CNT	=	0x70ca
                           0070CB  1061 _X_T3CTL	=	0x70cb
                           0070CC  1062 _X_T3CCTL0	=	0x70cc
                           0070CD  1063 _X_T3CC0	=	0x70cd
                           0070CE  1064 _X_T3CCTL1	=	0x70ce
                           0070CF  1065 _X_T3CC1	=	0x70cf
                           0070D1  1066 _X_DMAIRQ	=	0x70d1
                           0070D2  1067 _X_DMA1CFGL	=	0x70d2
                           0070D3  1068 _X_DMA1CFGH	=	0x70d3
                           0070D4  1069 _X_DMA0CFGL	=	0x70d4
                           0070D5  1070 _X_DMA0CFGH	=	0x70d5
                           0070D6  1071 _X_DMAARM	=	0x70d6
                           0070D7  1072 _X_DMAREQ	=	0x70d7
                           0070D8  1073 _X_TIMIF	=	0x70d8
                           0070D9  1074 _X_RFD	=	0x70d9
                           0070DA  1075 _X_T1CC0L	=	0x70da
                           0070DB  1076 _X_T1CC0H	=	0x70db
                           0070DC  1077 _X_T1CC1L	=	0x70dc
                           0070DD  1078 _X_T1CC1H	=	0x70dd
                           0070DE  1079 _X_T1CC2L	=	0x70de
                           0070DF  1080 _X_T1CC2H	=	0x70df
                           0070E1  1081 _X_RFST	=	0x70e1
                           0070E2  1082 _X_T1CNTL	=	0x70e2
                           0070E3  1083 _X_T1CNTH	=	0x70e3
                           0070E4  1084 _X_T1CTL	=	0x70e4
                           0070E5  1085 _X_T1CCTL0	=	0x70e5
                           0070E6  1086 _X_T1CCTL1	=	0x70e6
                           0070E7  1087 _X_T1CCTL2	=	0x70e7
                           0070E9  1088 _X_RFIRQF0	=	0x70e9
                           0070EA  1089 _X_T4CNT	=	0x70ea
                           0070EB  1090 _X_T4CTL	=	0x70eb
                           0070EC  1091 _X_T4CCTL0	=	0x70ec
                           0070ED  1092 _X_T4CC0	=	0x70ed
                           0070EE  1093 _X_T4CCTL1	=	0x70ee
                           0070EF  1094 _X_T4CC1	=	0x70ef
                           0070F1  1095 _X_PERCFG	=	0x70f1
                           0070F2  1096 _X_APCFG	=	0x70f2
                           0070F3  1097 _X_P0SEL	=	0x70f3
                           0070F4  1098 _X_P1SEL	=	0x70f4
                           0070F5  1099 _X_P2SEL	=	0x70f5
                           0070F6  1100 _X_P1INP	=	0x70f6
                           0070F7  1101 _X_P2INP	=	0x70f7
                           0070F8  1102 _X_U1CSR	=	0x70f8
                           0070F9  1103 _X_U1DBUF	=	0x70f9
                           0070FA  1104 _X_U1BAUD	=	0x70fa
                           0070FB  1105 _X_U1UCR	=	0x70fb
                           0070FC  1106 _X_U1GCR	=	0x70fc
                           0070FD  1107 _X_P0DIR	=	0x70fd
                           0070FE  1108 _X_P1DIR	=	0x70fe
                           0070FF  1109 _X_P2DIR	=	0x70ff
                           007800  1110 _X_INFOPAGE	=	0x7800
                           00780C  1111 _X_IEEE_ADDR	=	0x780c
                                   1112 ;--------------------------------------------------------
                                   1113 ; absolute external ram data
                                   1114 ;--------------------------------------------------------
                                   1115 	.area XABS    (ABS,XDATA)
                                   1116 ;--------------------------------------------------------
                                   1117 ; external initialized ram data
                                   1118 ;--------------------------------------------------------
                                   1119 	.area XISEG   (XDATA)
      000000                       1120 _rpl_of_etx::
      000000                       1121 	.ds 20
                                   1122 	.area HOME    (CODE)
                                   1123 	.area GSINIT0 (CODE)
                                   1124 	.area GSINIT1 (CODE)
                                   1125 	.area GSINIT2 (CODE)
                                   1126 	.area GSINIT3 (CODE)
                                   1127 	.area GSINIT4 (CODE)
                                   1128 	.area GSINIT5 (CODE)
                                   1129 	.area GSINIT  (CODE)
                                   1130 	.area GSFINAL (CODE)
                                   1131 	.area CSEG    (CODE)
                                   1132 ;--------------------------------------------------------
                                   1133 ; global & static initialisations
                                   1134 ;--------------------------------------------------------
                                   1135 	.area HOME    (CODE)
                                   1136 	.area GSINIT  (CODE)
                                   1137 	.area GSFINAL (CODE)
                                   1138 	.area GSINIT  (CODE)
                                   1139 ;--------------------------------------------------------
                                   1140 ; Home
                                   1141 ;--------------------------------------------------------
                                   1142 	.area HOME    (CODE)
                                   1143 	.area HOME    (CODE)
                                   1144 ;--------------------------------------------------------
                                   1145 ; code
                                   1146 ;--------------------------------------------------------
                                   1147 	.area BANK1   (CODE)
                                   1148 ;------------------------------------------------------------
                                   1149 ;Allocation info for local variables in function 'calculate_path_metric'
                                   1150 ;------------------------------------------------------------
                                   1151 ;p                         Allocated to stack - sp -9
                                   1152 ;etx                       Allocated to stack - sp -3
                                   1153 ;sloc0                     Allocated to stack - sp -6
                                   1154 ;------------------------------------------------------------
                                   1155 ;	../../../../core/net/rpl/rpl-of-etx.c:84: calculate_path_metric(rpl_parent_t *p)
                                   1156 ;	-----------------------------------------
                                   1157 ;	 function calculate_path_metric
                                   1158 ;	-----------------------------------------
      000000                       1159 _calculate_path_metric:
                           000007  1160 	ar7 = 0x07
                           000006  1161 	ar6 = 0x06
                           000005  1162 	ar5 = 0x05
                           000004  1163 	ar4 = 0x04
                           000003  1164 	ar3 = 0x03
                           000002  1165 	ar2 = 0x02
                           000001  1166 	ar1 = 0x01
                           000000  1167 	ar0 = 0x00
      000000 C0 82            [24] 1168 	push	dpl
      000002 C0 83            [24] 1169 	push	dph
      000004 C0 F0            [24] 1170 	push	b
      000006 E5 81            [12] 1171 	mov	a,sp
      000008 24 07            [12] 1172 	add	a,#0x07
                                   1173 ;	../../../../core/net/rpl/rpl-of-etx.c:86: if(p == NULL || (p->mc.obj.etx == 0 && p->rank > ROOT_RANK(p->dag->instance))) {
      00000A F5 81            [12] 1174 	mov	sp,a
      00000C 24 F7            [12] 1175 	add	a,#0xf7
      00000E F8               [12] 1176 	mov	r0,a
      00000F E6               [12] 1177 	mov	a,@r0
      000010 08               [12] 1178 	inc	r0
      000011 46               [12] 1179 	orl	a,@r0
      000012 70 03            [24] 1180 	jnz	00114$
      000014 02r00rCE         [24] 1181 	ljmp	00101$
      000017                       1182 00114$:
      000017 E5 81            [12] 1183 	mov	a,sp
      000019 24 F7            [12] 1184 	add	a,#0xf7
      00001B F8               [12] 1185 	mov	r0,a
      00001C 74 06            [12] 1186 	mov	a,#0x06
      00001E 26               [12] 1187 	add	a,@r0
      00001F FA               [12] 1188 	mov	r2,a
      000020 E4               [12] 1189 	clr	a
      000021 08               [12] 1190 	inc	r0
      000022 36               [12] 1191 	addc	a,@r0
      000023 FB               [12] 1192 	mov	r3,a
      000024 08               [12] 1193 	inc	r0
      000025 86 04            [24] 1194 	mov	ar4,@r0
      000027 E5 81            [12] 1195 	mov	a,sp
      000029 24 FA            [12] 1196 	add	a,#0xfa
      00002B F8               [12] 1197 	mov	r0,a
      00002C 74 05            [12] 1198 	mov	a,#0x05
      00002E 2A               [12] 1199 	add	a,r2
      00002F F6               [12] 1200 	mov	@r0,a
      000030 E4               [12] 1201 	clr	a
      000031 3B               [12] 1202 	addc	a,r3
      000032 08               [12] 1203 	inc	r0
      000033 F6               [12] 1204 	mov	@r0,a
      000034 08               [12] 1205 	inc	r0
      000035 A6 04            [24] 1206 	mov	@r0,ar4
      000037 E5 81            [12] 1207 	mov	a,sp
      000039 24 FA            [12] 1208 	add	a,#0xfa
      00003B F8               [12] 1209 	mov	r0,a
      00003C 86 82            [24] 1210 	mov	dpl,@r0
      00003E 08               [12] 1211 	inc	r0
      00003F 86 83            [24] 1212 	mov	dph,@r0
      000041 08               [12] 1213 	inc	r0
      000042 86 F0            [24] 1214 	mov	b,@r0
      000044 12r00r00         [24] 1215 	lcall	__gptrget
      000047 FE               [12] 1216 	mov	r6,a
      000048 A3               [24] 1217 	inc	dptr
      000049 12r00r00         [24] 1218 	lcall	__gptrget
      00004C FF               [12] 1219 	mov	r7,a
      00004D 4E               [12] 1220 	orl	a,r6
      00004E 60 03            [24] 1221 	jz	00115$
      000050 02r00rD4         [24] 1222 	ljmp	00102$
      000053                       1223 00115$:
      000053 E5 81            [12] 1224 	mov	a,sp
      000055 24 F7            [12] 1225 	add	a,#0xf7
      000057 F8               [12] 1226 	mov	r0,a
      000058 74 1D            [12] 1227 	mov	a,#0x1D
      00005A 26               [12] 1228 	add	a,@r0
      00005B FD               [12] 1229 	mov	r5,a
      00005C E4               [12] 1230 	clr	a
      00005D 08               [12] 1231 	inc	r0
      00005E 36               [12] 1232 	addc	a,@r0
      00005F FE               [12] 1233 	mov	r6,a
      000060 08               [12] 1234 	inc	r0
      000061 86 07            [24] 1235 	mov	ar7,@r0
      000063 8D 82            [24] 1236 	mov	dpl,r5
      000065 8E 83            [24] 1237 	mov	dph,r6
      000067 8F F0            [24] 1238 	mov	b,r7
      000069 12r00r00         [24] 1239 	lcall	__gptrget
      00006C FD               [12] 1240 	mov	r5,a
      00006D A3               [24] 1241 	inc	dptr
      00006E 12r00r00         [24] 1242 	lcall	__gptrget
      000071 FE               [12] 1243 	mov	r6,a
      000072 E5 81            [12] 1244 	mov	a,sp
      000074 24 F7            [12] 1245 	add	a,#0xf7
      000076 F8               [12] 1246 	mov	r0,a
      000077 74 03            [12] 1247 	mov	a,#0x03
      000079 26               [12] 1248 	add	a,@r0
      00007A FB               [12] 1249 	mov	r3,a
      00007B E4               [12] 1250 	clr	a
      00007C 08               [12] 1251 	inc	r0
      00007D 36               [12] 1252 	addc	a,@r0
      00007E FC               [12] 1253 	mov	r4,a
      00007F 08               [12] 1254 	inc	r0
      000080 86 07            [24] 1255 	mov	ar7,@r0
      000082 8B 82            [24] 1256 	mov	dpl,r3
      000084 8C 83            [24] 1257 	mov	dph,r4
      000086 8F F0            [24] 1258 	mov	b,r7
      000088 12r00r00         [24] 1259 	lcall	__gptrget
      00008B FB               [12] 1260 	mov	r3,a
      00008C A3               [24] 1261 	inc	dptr
      00008D 12r00r00         [24] 1262 	lcall	__gptrget
      000090 FC               [12] 1263 	mov	r4,a
      000091 A3               [24] 1264 	inc	dptr
      000092 12r00r00         [24] 1265 	lcall	__gptrget
      000095 FF               [12] 1266 	mov	r7,a
      000096 74 1C            [12] 1267 	mov	a,#0x1C
      000098 2B               [12] 1268 	add	a,r3
      000099 FB               [12] 1269 	mov	r3,a
      00009A E4               [12] 1270 	clr	a
      00009B 3C               [12] 1271 	addc	a,r4
      00009C FC               [12] 1272 	mov	r4,a
      00009D 8B 82            [24] 1273 	mov	dpl,r3
      00009F 8C 83            [24] 1274 	mov	dph,r4
      0000A1 8F F0            [24] 1275 	mov	b,r7
      0000A3 12r00r00         [24] 1276 	lcall	__gptrget
      0000A6 FB               [12] 1277 	mov	r3,a
      0000A7 A3               [24] 1278 	inc	dptr
      0000A8 12r00r00         [24] 1279 	lcall	__gptrget
      0000AB FC               [12] 1280 	mov	r4,a
      0000AC A3               [24] 1281 	inc	dptr
      0000AD 12r00r00         [24] 1282 	lcall	__gptrget
      0000B0 FF               [12] 1283 	mov	r7,a
      0000B1 74 93            [12] 1284 	mov	a,#0x93
      0000B3 2B               [12] 1285 	add	a,r3
      0000B4 FB               [12] 1286 	mov	r3,a
      0000B5 E4               [12] 1287 	clr	a
      0000B6 3C               [12] 1288 	addc	a,r4
      0000B7 FC               [12] 1289 	mov	r4,a
      0000B8 8B 82            [24] 1290 	mov	dpl,r3
      0000BA 8C 83            [24] 1291 	mov	dph,r4
      0000BC 8F F0            [24] 1292 	mov	b,r7
      0000BE 12r00r00         [24] 1293 	lcall	__gptrget
      0000C1 FB               [12] 1294 	mov	r3,a
      0000C2 A3               [24] 1295 	inc	dptr
      0000C3 12r00r00         [24] 1296 	lcall	__gptrget
      0000C6 FC               [12] 1297 	mov	r4,a
      0000C7 C3               [12] 1298 	clr	c
      0000C8 EB               [12] 1299 	mov	a,r3
      0000C9 9D               [12] 1300 	subb	a,r5
      0000CA EC               [12] 1301 	mov	a,r4
      0000CB 9E               [12] 1302 	subb	a,r6
      0000CC 50 06            [24] 1303 	jnc	00102$
      0000CE                       1304 00101$:
                                   1305 ;	../../../../core/net/rpl/rpl-of-etx.c:87: return MAX_PATH_COST * RPL_DAG_MC_ETX_DIVISOR;
      0000CE 90 32 00         [24] 1306 	mov	dptr,#0x3200
      0000D1 02r01r83         [24] 1307 	ljmp	00106$
      0000D4                       1308 00102$:
                                   1309 ;	../../../../core/net/rpl/rpl-of-etx.c:89: long etx = p->link_metric;
      0000D4 E5 81            [12] 1310 	mov	a,sp
      0000D6 24 F7            [12] 1311 	add	a,#0xf7
      0000D8 F8               [12] 1312 	mov	r0,a
      0000D9 74 1F            [12] 1313 	mov	a,#0x1F
      0000DB 26               [12] 1314 	add	a,@r0
      0000DC FD               [12] 1315 	mov	r5,a
      0000DD E4               [12] 1316 	clr	a
      0000DE 08               [12] 1317 	inc	r0
      0000DF 36               [12] 1318 	addc	a,@r0
      0000E0 FE               [12] 1319 	mov	r6,a
      0000E1 08               [12] 1320 	inc	r0
      0000E2 86 07            [24] 1321 	mov	ar7,@r0
      0000E4 8D 82            [24] 1322 	mov	dpl,r5
      0000E6 8E 83            [24] 1323 	mov	dph,r6
      0000E8 8F F0            [24] 1324 	mov	b,r7
      0000EA 12r00r00         [24] 1325 	lcall	__gptrget
      0000ED FD               [12] 1326 	mov	r5,a
      0000EE E5 81            [12] 1327 	mov	a,sp
      0000F0 24 FD            [12] 1328 	add	a,#0xfd
      0000F2 F8               [12] 1329 	mov	r0,a
      0000F3 A6 05            [24] 1330 	mov	@r0,ar5
      0000F5 08               [12] 1331 	inc	r0
      0000F6 76 00            [12] 1332 	mov	@r0,#0x00
      0000F8 08               [12] 1333 	inc	r0
      0000F9 76 00            [12] 1334 	mov	@r0,#0x00
      0000FB 08               [12] 1335 	inc	r0
      0000FC 76 00            [12] 1336 	mov	@r0,#0x00
                                   1337 ;	../../../../core/net/rpl/rpl-of-etx.c:90: etx = (etx * RPL_DAG_MC_ETX_DIVISOR) / NEIGHBOR_INFO_ETX_DIVISOR;
      0000FE E5 81            [12] 1338 	mov	a,sp
      000100 24 FD            [12] 1339 	add	a,#0xfd
      000102 F8               [12] 1340 	mov	r0,a
      000103 08               [12] 1341 	inc	r0
      000104 08               [12] 1342 	inc	r0
      000105 86 06            [24] 1343 	mov	ar6,@r0
      000107 08               [12] 1344 	inc	r0
      000108 E6               [12] 1345 	mov	a,@r0
      000109 54 01            [12] 1346 	anl	a,#0x01
      00010B A2 E0            [12] 1347 	mov	c,acc.0
      00010D CE               [12] 1348 	xch	a,r6
      00010E 13               [12] 1349 	rrc	a
      00010F CE               [12] 1350 	xch	a,r6
      000110 13               [12] 1351 	rrc	a
      000111 CE               [12] 1352 	xch	a,r6
      000112 FF               [12] 1353 	mov	r7,a
      000113 18               [12] 1354 	dec	r0
      000114 18               [12] 1355 	dec	r0
      000115 E6               [12] 1356 	mov	a,@r0
      000116 C3               [12] 1357 	clr	c
      000117 13               [12] 1358 	rrc	a
      000118 4E               [12] 1359 	orl	a,r6
      000119 FE               [12] 1360 	mov	r6,a
      00011A 18               [12] 1361 	dec	r0
      00011B 86 02            [24] 1362 	mov	ar2,@r0
      00011D 08               [12] 1363 	inc	r0
      00011E E6               [12] 1364 	mov	a,@r0
      00011F 54 01            [12] 1365 	anl	a,#0x01
      000121 A2 E0            [12] 1366 	mov	c,acc.0
      000123 CA               [12] 1367 	xch	a,r2
      000124 13               [12] 1368 	rrc	a
      000125 CA               [12] 1369 	xch	a,r2
      000126 13               [12] 1370 	rrc	a
      000127 CA               [12] 1371 	xch	a,r2
      000128 FB               [12] 1372 	mov	r3,a
      000129 74 10            [12] 1373 	mov	a,#0x10
      00012B C0 E0            [24] 1374 	push	acc
      00012D E4               [12] 1375 	clr	a
      00012E C0 E0            [24] 1376 	push	acc
      000130 C0 E0            [24] 1377 	push	acc
      000132 C0 E0            [24] 1378 	push	acc
      000134 8A 82            [24] 1379 	mov	dpl,r2
      000136 8B 83            [24] 1380 	mov	dph,r3
      000138 8E F0            [24] 1381 	mov	b,r6
      00013A EF               [12] 1382 	mov	a,r7
      00013B 12r00r00         [24] 1383 	lcall	__divslong
      00013E AC 82            [24] 1384 	mov	r4,dpl
      000140 AD 83            [24] 1385 	mov	r5,dph
      000142 AE F0            [24] 1386 	mov	r6,b
      000144 FF               [12] 1387 	mov	r7,a
      000145 E5 81            [12] 1388 	mov	a,sp
      000147 24 FC            [12] 1389 	add	a,#0xfc
      000149 F5 81            [12] 1390 	mov	sp,a
      00014B 24 FD            [12] 1391 	add	a,#0xfd
      00014D F8               [12] 1392 	mov	r0,a
      00014E A6 04            [24] 1393 	mov	@r0,ar4
      000150 08               [12] 1394 	inc	r0
      000151 A6 05            [24] 1395 	mov	@r0,ar5
      000153 08               [12] 1396 	inc	r0
      000154 A6 06            [24] 1397 	mov	@r0,ar6
      000156 08               [12] 1398 	inc	r0
      000157 A6 07            [24] 1399 	mov	@r0,ar7
                                   1400 ;	../../../../core/net/rpl/rpl-of-etx.c:91: return p->mc.obj.etx + (uint16_t) etx;
      000159 E5 81            [12] 1401 	mov	a,sp
      00015B 24 FA            [12] 1402 	add	a,#0xfa
      00015D F8               [12] 1403 	mov	r0,a
      00015E 86 82            [24] 1404 	mov	dpl,@r0
      000160 08               [12] 1405 	inc	r0
      000161 86 83            [24] 1406 	mov	dph,@r0
      000163 08               [12] 1407 	inc	r0
      000164 86 F0            [24] 1408 	mov	b,@r0
      000166 12r00r00         [24] 1409 	lcall	__gptrget
      000169 FE               [12] 1410 	mov	r6,a
      00016A A3               [24] 1411 	inc	dptr
      00016B 12r00r00         [24] 1412 	lcall	__gptrget
      00016E FF               [12] 1413 	mov	r7,a
      00016F E5 81            [12] 1414 	mov	a,sp
      000171 24 FD            [12] 1415 	add	a,#0xfd
      000173 F8               [12] 1416 	mov	r0,a
      000174 86 04            [24] 1417 	mov	ar4,@r0
      000176 08               [12] 1418 	inc	r0
      000177 86 05            [24] 1419 	mov	ar5,@r0
      000179 EC               [12] 1420 	mov	a,r4
      00017A 2E               [12] 1421 	add	a,r6
      00017B FE               [12] 1422 	mov	r6,a
      00017C ED               [12] 1423 	mov	a,r5
      00017D 3F               [12] 1424 	addc	a,r7
      00017E FF               [12] 1425 	mov	r7,a
      00017F 8E 82            [24] 1426 	mov	dpl,r6
      000181 8F 83            [24] 1427 	mov	dph,r7
      000183                       1428 00106$:
      000183 E5 81            [12] 1429 	mov	a,sp
      000185 24 F6            [12] 1430 	add	a,#0xF6
      000187 F5 81            [12] 1431 	mov	sp,a
      000189 02r00r00         [24] 1432 	ljmp	__sdcc_banked_ret
                                   1433 ;------------------------------------------------------------
                                   1434 ;Allocation info for local variables in function 'reset'
                                   1435 ;------------------------------------------------------------
                                   1436 ;sag                       Allocated to registers 
                                   1437 ;------------------------------------------------------------
                                   1438 ;	../../../../core/net/rpl/rpl-of-etx.c:96: reset(rpl_dag_t *sag)
                                   1439 ;	-----------------------------------------
                                   1440 ;	 function reset
                                   1441 ;	-----------------------------------------
      00018C                       1442 _reset:
                                   1443 ;	../../../../core/net/rpl/rpl-of-etx.c:98: }
      00018C 02r00r00         [24] 1444 	ljmp	__sdcc_banked_ret
                                   1445 ;------------------------------------------------------------
                                   1446 ;Allocation info for local variables in function 'parent_state_callback'
                                   1447 ;------------------------------------------------------------
                                   1448 ;known                     Allocated to stack - sp -4
                                   1449 ;etx                       Allocated to stack - sp -6
                                   1450 ;parent                    Allocated to registers 
                                   1451 ;------------------------------------------------------------
                                   1452 ;	../../../../core/net/rpl/rpl-of-etx.c:101: parent_state_callback(rpl_parent_t *parent, int known, int etx)
                                   1453 ;	-----------------------------------------
                                   1454 ;	 function parent_state_callback
                                   1455 ;	-----------------------------------------
      00018F                       1456 _parent_state_callback:
                                   1457 ;	../../../../core/net/rpl/rpl-of-etx.c:103: }
      00018F 02r00r00         [24] 1458 	ljmp	__sdcc_banked_ret
                                   1459 ;------------------------------------------------------------
                                   1460 ;Allocation info for local variables in function 'calculate_rank'
                                   1461 ;------------------------------------------------------------
                                   1462 ;base_rank                 Allocated to stack - sp -7
                                   1463 ;p                         Allocated to stack - sp -2
                                   1464 ;new_rank                  Allocated to registers r6 r7 
                                   1465 ;rank_increase             Allocated to registers r3 r4 
                                   1466 ;------------------------------------------------------------
                                   1467 ;	../../../../core/net/rpl/rpl-of-etx.c:106: calculate_rank(rpl_parent_t *p, rpl_rank_t base_rank)
                                   1468 ;	-----------------------------------------
                                   1469 ;	 function calculate_rank
                                   1470 ;	-----------------------------------------
      000192                       1471 _calculate_rank:
      000192 C0 82            [24] 1472 	push	dpl
      000194 C0 83            [24] 1473 	push	dph
      000196 C0 F0            [24] 1474 	push	b
                                   1475 ;	../../../../core/net/rpl/rpl-of-etx.c:111: if(p == NULL) {
      000198 A8 81            [24] 1476 	mov	r0,sp
      00019A 18               [12] 1477 	dec	r0
      00019B 18               [12] 1478 	dec	r0
      00019C E6               [12] 1479 	mov	a,@r0
      00019D 08               [12] 1480 	inc	r0
      00019E 46               [12] 1481 	orl	a,@r0
      00019F 70 17            [24] 1482 	jnz	00106$
                                   1483 ;	../../../../core/net/rpl/rpl-of-etx.c:112: if(base_rank == 0) {
      0001A1 E5 81            [12] 1484 	mov	a,sp
      0001A3 24 F9            [12] 1485 	add	a,#0xf9
      0001A5 F8               [12] 1486 	mov	r0,a
      0001A6 E6               [12] 1487 	mov	a,@r0
      0001A7 08               [12] 1488 	inc	r0
      0001A8 46               [12] 1489 	orl	a,@r0
      0001A9 70 06            [24] 1490 	jnz	00102$
                                   1491 ;	../../../../core/net/rpl/rpl-of-etx.c:113: return INFINITE_RANK;
      0001AB 90 FF FF         [24] 1492 	mov	dptr,#0xFFFF
      0001AE 02r02rA8         [24] 1493 	ljmp	00111$
      0001B1                       1494 00102$:
                                   1495 ;	../../../../core/net/rpl/rpl-of-etx.c:115: rank_increase = NEIGHBOR_INFO_FIX2ETX(INITIAL_LINK_METRIC) * RPL_MIN_HOPRANKINC;
      0001B1 7B 00            [12] 1496 	mov	r3,#0x00
      0001B3 7C 05            [12] 1497 	mov	r4,#0x05
      0001B5 02r02r78         [24] 1498 	ljmp	00107$
      0001B8                       1499 00106$:
                                   1500 ;	../../../../core/net/rpl/rpl-of-etx.c:118: rank_increase = NEIGHBOR_INFO_FIX2ETX(p->link_metric * p->dag->instance->min_hoprankinc);
      0001B8 A8 81            [24] 1501 	mov	r0,sp
      0001BA 18               [12] 1502 	dec	r0
      0001BB 18               [12] 1503 	dec	r0
      0001BC 74 1F            [12] 1504 	mov	a,#0x1F
      0001BE 26               [12] 1505 	add	a,@r0
      0001BF FA               [12] 1506 	mov	r2,a
      0001C0 E4               [12] 1507 	clr	a
      0001C1 08               [12] 1508 	inc	r0
      0001C2 36               [12] 1509 	addc	a,@r0
      0001C3 FE               [12] 1510 	mov	r6,a
      0001C4 08               [12] 1511 	inc	r0
      0001C5 86 07            [24] 1512 	mov	ar7,@r0
      0001C7 8A 82            [24] 1513 	mov	dpl,r2
      0001C9 8E 83            [24] 1514 	mov	dph,r6
      0001CB 8F F0            [24] 1515 	mov	b,r7
      0001CD 12r00r00         [24] 1516 	lcall	__gptrget
      0001D0 FA               [12] 1517 	mov	r2,a
      0001D1 A8 81            [24] 1518 	mov	r0,sp
      0001D3 18               [12] 1519 	dec	r0
      0001D4 18               [12] 1520 	dec	r0
      0001D5 74 03            [12] 1521 	mov	a,#0x03
      0001D7 26               [12] 1522 	add	a,@r0
      0001D8 FD               [12] 1523 	mov	r5,a
      0001D9 E4               [12] 1524 	clr	a
      0001DA 08               [12] 1525 	inc	r0
      0001DB 36               [12] 1526 	addc	a,@r0
      0001DC FE               [12] 1527 	mov	r6,a
      0001DD 08               [12] 1528 	inc	r0
      0001DE 86 07            [24] 1529 	mov	ar7,@r0
      0001E0 8D 82            [24] 1530 	mov	dpl,r5
      0001E2 8E 83            [24] 1531 	mov	dph,r6
      0001E4 8F F0            [24] 1532 	mov	b,r7
      0001E6 12r00r00         [24] 1533 	lcall	__gptrget
      0001E9 FD               [12] 1534 	mov	r5,a
      0001EA A3               [24] 1535 	inc	dptr
      0001EB 12r00r00         [24] 1536 	lcall	__gptrget
      0001EE FE               [12] 1537 	mov	r6,a
      0001EF A3               [24] 1538 	inc	dptr
      0001F0 12r00r00         [24] 1539 	lcall	__gptrget
      0001F3 FF               [12] 1540 	mov	r7,a
      0001F4 74 1C            [12] 1541 	mov	a,#0x1C
      0001F6 2D               [12] 1542 	add	a,r5
      0001F7 FD               [12] 1543 	mov	r5,a
      0001F8 E4               [12] 1544 	clr	a
      0001F9 3E               [12] 1545 	addc	a,r6
      0001FA FE               [12] 1546 	mov	r6,a
      0001FB 8D 82            [24] 1547 	mov	dpl,r5
      0001FD 8E 83            [24] 1548 	mov	dph,r6
      0001FF 8F F0            [24] 1549 	mov	b,r7
      000201 12r00r00         [24] 1550 	lcall	__gptrget
      000204 FD               [12] 1551 	mov	r5,a
      000205 A3               [24] 1552 	inc	dptr
      000206 12r00r00         [24] 1553 	lcall	__gptrget
      000209 FE               [12] 1554 	mov	r6,a
      00020A A3               [24] 1555 	inc	dptr
      00020B 12r00r00         [24] 1556 	lcall	__gptrget
      00020E FF               [12] 1557 	mov	r7,a
      00020F 74 93            [12] 1558 	mov	a,#0x93
      000211 2D               [12] 1559 	add	a,r5
      000212 FD               [12] 1560 	mov	r5,a
      000213 E4               [12] 1561 	clr	a
      000214 3E               [12] 1562 	addc	a,r6
      000215 FE               [12] 1563 	mov	r6,a
      000216 8D 82            [24] 1564 	mov	dpl,r5
      000218 8E 83            [24] 1565 	mov	dph,r6
      00021A 8F F0            [24] 1566 	mov	b,r7
      00021C 12r00r00         [24] 1567 	lcall	__gptrget
      00021F FD               [12] 1568 	mov	r5,a
      000220 A3               [24] 1569 	inc	dptr
      000221 12r00r00         [24] 1570 	lcall	__gptrget
      000224 FE               [12] 1571 	mov	r6,a
      000225 7F 00            [12] 1572 	mov	r7,#0x00
      000227 C0 05            [24] 1573 	push	ar5
      000229 C0 06            [24] 1574 	push	ar6
      00022B 8A 82            [24] 1575 	mov	dpl,r2
      00022D 8F 83            [24] 1576 	mov	dph,r7
      00022F 12r00r00         [24] 1577 	lcall	__mulint
      000232 AE 82            [24] 1578 	mov	r6,dpl
      000234 AF 83            [24] 1579 	mov	r7,dph
      000236 15 81            [12] 1580 	dec	sp
      000238 15 81            [12] 1581 	dec	sp
      00023A 8E 03            [24] 1582 	mov	ar3,r6
      00023C EF               [12] 1583 	mov	a,r7
      00023D C4               [12] 1584 	swap	a
      00023E CB               [12] 1585 	xch	a,r3
      00023F C4               [12] 1586 	swap	a
      000240 54 0F            [12] 1587 	anl	a,#0x0F
      000242 6B               [12] 1588 	xrl	a,r3
      000243 CB               [12] 1589 	xch	a,r3
      000244 54 0F            [12] 1590 	anl	a,#0x0F
      000246 CB               [12] 1591 	xch	a,r3
      000247 6B               [12] 1592 	xrl	a,r3
      000248 CB               [12] 1593 	xch	a,r3
      000249 FC               [12] 1594 	mov	r4,a
                                   1595 ;	../../../../core/net/rpl/rpl-of-etx.c:119: if(base_rank == 0) {
      00024A E5 81            [12] 1596 	mov	a,sp
      00024C 24 F9            [12] 1597 	add	a,#0xf9
      00024E F8               [12] 1598 	mov	r0,a
      00024F E6               [12] 1599 	mov	a,@r0
      000250 08               [12] 1600 	inc	r0
      000251 46               [12] 1601 	orl	a,@r0
      000252 70 24            [24] 1602 	jnz	00107$
                                   1603 ;	../../../../core/net/rpl/rpl-of-etx.c:120: base_rank = p->rank;
      000254 A8 81            [24] 1604 	mov	r0,sp
      000256 18               [12] 1605 	dec	r0
      000257 18               [12] 1606 	dec	r0
      000258 74 1D            [12] 1607 	mov	a,#0x1D
      00025A 26               [12] 1608 	add	a,@r0
      00025B FD               [12] 1609 	mov	r5,a
      00025C E4               [12] 1610 	clr	a
      00025D 08               [12] 1611 	inc	r0
      00025E 36               [12] 1612 	addc	a,@r0
      00025F FE               [12] 1613 	mov	r6,a
      000260 08               [12] 1614 	inc	r0
      000261 86 07            [24] 1615 	mov	ar7,@r0
      000263 8D 82            [24] 1616 	mov	dpl,r5
      000265 8E 83            [24] 1617 	mov	dph,r6
      000267 8F F0            [24] 1618 	mov	b,r7
      000269 E5 81            [12] 1619 	mov	a,sp
      00026B 24 F9            [12] 1620 	add	a,#0xf9
      00026D F8               [12] 1621 	mov	r0,a
      00026E 12r00r00         [24] 1622 	lcall	__gptrget
      000271 F6               [12] 1623 	mov	@r0,a
      000272 A3               [24] 1624 	inc	dptr
      000273 12r00r00         [24] 1625 	lcall	__gptrget
      000276 08               [12] 1626 	inc	r0
      000277 F6               [12] 1627 	mov	@r0,a
      000278                       1628 00107$:
                                   1629 ;	../../../../core/net/rpl/rpl-of-etx.c:124: if(INFINITE_RANK - base_rank < rank_increase) {
      000278 E5 81            [12] 1630 	mov	a,sp
      00027A 24 F9            [12] 1631 	add	a,#0xf9
      00027C F8               [12] 1632 	mov	r0,a
      00027D 74 FF            [12] 1633 	mov	a,#0xFF
      00027F C3               [12] 1634 	clr	c
      000280 96               [12] 1635 	subb	a,@r0
      000281 FE               [12] 1636 	mov	r6,a
      000282 74 FF            [12] 1637 	mov	a,#0xFF
      000284 08               [12] 1638 	inc	r0
      000285 96               [12] 1639 	subb	a,@r0
      000286 FF               [12] 1640 	mov	r7,a
      000287 C3               [12] 1641 	clr	c
      000288 EE               [12] 1642 	mov	a,r6
      000289 9B               [12] 1643 	subb	a,r3
      00028A EF               [12] 1644 	mov	a,r7
      00028B 9C               [12] 1645 	subb	a,r4
      00028C 50 06            [24] 1646 	jnc	00109$
                                   1647 ;	../../../../core/net/rpl/rpl-of-etx.c:126: new_rank = INFINITE_RANK;
      00028E 7E FF            [12] 1648 	mov	r6,#0xFF
      000290 7F FF            [12] 1649 	mov	r7,#0xFF
      000292 80 10            [24] 1650 	sjmp	00110$
      000294                       1651 00109$:
                                   1652 ;	../../../../core/net/rpl/rpl-of-etx.c:130: new_rank = base_rank + rank_increase;
      000294 E5 81            [12] 1653 	mov	a,sp
      000296 24 F9            [12] 1654 	add	a,#0xf9
      000298 F8               [12] 1655 	mov	r0,a
      000299 EB               [12] 1656 	mov	a,r3
      00029A 26               [12] 1657 	add	a,@r0
      00029B FB               [12] 1658 	mov	r3,a
      00029C EC               [12] 1659 	mov	a,r4
      00029D 08               [12] 1660 	inc	r0
      00029E 36               [12] 1661 	addc	a,@r0
      00029F FC               [12] 1662 	mov	r4,a
      0002A0 8B 06            [24] 1663 	mov	ar6,r3
      0002A2 8C 07            [24] 1664 	mov	ar7,r4
      0002A4                       1665 00110$:
                                   1666 ;	../../../../core/net/rpl/rpl-of-etx.c:133: return new_rank;
      0002A4 8E 82            [24] 1667 	mov	dpl,r6
      0002A6 8F 83            [24] 1668 	mov	dph,r7
      0002A8                       1669 00111$:
      0002A8 15 81            [12] 1670 	dec	sp
      0002AA 15 81            [12] 1671 	dec	sp
      0002AC 15 81            [12] 1672 	dec	sp
      0002AE 02r00r00         [24] 1673 	ljmp	__sdcc_banked_ret
                                   1674 ;------------------------------------------------------------
                                   1675 ;Allocation info for local variables in function 'best_dag'
                                   1676 ;------------------------------------------------------------
                                   1677 ;d2                        Allocated to stack - sp -11
                                   1678 ;d1                        Allocated to stack - sp -5
                                   1679 ;sloc0                     Allocated to stack - sp -2
                                   1680 ;------------------------------------------------------------
                                   1681 ;	../../../../core/net/rpl/rpl-of-etx.c:137: best_dag(rpl_dag_t *d1, rpl_dag_t *d2)
                                   1682 ;	-----------------------------------------
                                   1683 ;	 function best_dag
                                   1684 ;	-----------------------------------------
      0002B1                       1685 _best_dag:
      0002B1 C0 82            [24] 1686 	push	dpl
      0002B3 C0 83            [24] 1687 	push	dph
      0002B5 C0 F0            [24] 1688 	push	b
      0002B7 05 81            [12] 1689 	inc	sp
      0002B9 05 81            [12] 1690 	inc	sp
      0002BB 05 81            [12] 1691 	inc	sp
                                   1692 ;	../../../../core/net/rpl/rpl-of-etx.c:139: if(d1->grounded != d2->grounded) {
      0002BD E5 81            [12] 1693 	mov	a,sp
      0002BF 24 FB            [12] 1694 	add	a,#0xfb
      0002C1 F8               [12] 1695 	mov	r0,a
      0002C2 74 13            [12] 1696 	mov	a,#0x13
      0002C4 26               [12] 1697 	add	a,@r0
      0002C5 FA               [12] 1698 	mov	r2,a
      0002C6 E4               [12] 1699 	clr	a
      0002C7 08               [12] 1700 	inc	r0
      0002C8 36               [12] 1701 	addc	a,@r0
      0002C9 FB               [12] 1702 	mov	r3,a
      0002CA 08               [12] 1703 	inc	r0
      0002CB 86 04            [24] 1704 	mov	ar4,@r0
      0002CD 8A 82            [24] 1705 	mov	dpl,r2
      0002CF 8B 83            [24] 1706 	mov	dph,r3
      0002D1 8C F0            [24] 1707 	mov	b,r4
      0002D3 12r00r00         [24] 1708 	lcall	__gptrget
      0002D6 FC               [12] 1709 	mov	r4,a
      0002D7 E5 81            [12] 1710 	mov	a,sp
      0002D9 24 F5            [12] 1711 	add	a,#0xf5
      0002DB F8               [12] 1712 	mov	r0,a
      0002DC A9 81            [24] 1713 	mov	r1,sp
      0002DE 19               [12] 1714 	dec	r1
      0002DF 19               [12] 1715 	dec	r1
      0002E0 E6               [12] 1716 	mov	a,@r0
      0002E1 F7               [12] 1717 	mov	@r1,a
      0002E2 08               [12] 1718 	inc	r0
      0002E3 09               [12] 1719 	inc	r1
      0002E4 E6               [12] 1720 	mov	a,@r0
      0002E5 F7               [12] 1721 	mov	@r1,a
      0002E6 08               [12] 1722 	inc	r0
      0002E7 09               [12] 1723 	inc	r1
      0002E8 E6               [12] 1724 	mov	a,@r0
      0002E9 F7               [12] 1725 	mov	@r1,a
      0002EA A8 81            [24] 1726 	mov	r0,sp
      0002EC 18               [12] 1727 	dec	r0
      0002ED 18               [12] 1728 	dec	r0
      0002EE 74 13            [12] 1729 	mov	a,#0x13
      0002F0 26               [12] 1730 	add	a,@r0
      0002F1 FA               [12] 1731 	mov	r2,a
      0002F2 E4               [12] 1732 	clr	a
      0002F3 08               [12] 1733 	inc	r0
      0002F4 36               [12] 1734 	addc	a,@r0
      0002F5 FB               [12] 1735 	mov	r3,a
      0002F6 08               [12] 1736 	inc	r0
      0002F7 86 07            [24] 1737 	mov	ar7,@r0
      0002F9 8A 82            [24] 1738 	mov	dpl,r2
      0002FB 8B 83            [24] 1739 	mov	dph,r3
      0002FD 8F F0            [24] 1740 	mov	b,r7
      0002FF 12r00r00         [24] 1741 	lcall	__gptrget
      000302 FA               [12] 1742 	mov	r2,a
      000303 EC               [12] 1743 	mov	a,r4
      000304 B5 02 02         [24] 1744 	cjne	a,ar2,00128$
      000307 80 27            [24] 1745 	sjmp	00102$
      000309                       1746 00128$:
                                   1747 ;	../../../../core/net/rpl/rpl-of-etx.c:140: return d1->grounded ? d1 : d2;
      000309 EC               [12] 1748 	mov	a,r4
      00030A 60 0F            [24] 1749 	jz	00107$
      00030C E5 81            [12] 1750 	mov	a,sp
      00030E 24 FB            [12] 1751 	add	a,#0xfb
      000310 F8               [12] 1752 	mov	r0,a
      000311 86 05            [24] 1753 	mov	ar5,@r0
      000313 08               [12] 1754 	inc	r0
      000314 86 06            [24] 1755 	mov	ar6,@r0
      000316 08               [12] 1756 	inc	r0
      000317 86 07            [24] 1757 	mov	ar7,@r0
      000319 80 0C            [24] 1758 	sjmp	00108$
      00031B                       1759 00107$:
      00031B A8 81            [24] 1760 	mov	r0,sp
      00031D 18               [12] 1761 	dec	r0
      00031E 18               [12] 1762 	dec	r0
      00031F 86 05            [24] 1763 	mov	ar5,@r0
      000321 08               [12] 1764 	inc	r0
      000322 86 06            [24] 1765 	mov	ar6,@r0
      000324 08               [12] 1766 	inc	r0
      000325 86 07            [24] 1767 	mov	ar7,@r0
      000327                       1768 00108$:
      000327 8D 82            [24] 1769 	mov	dpl,r5
      000329 8E 83            [24] 1770 	mov	dph,r6
      00032B 8F F0            [24] 1771 	mov	b,r7
      00032D 02r03rF6         [24] 1772 	ljmp	00105$
      000330                       1773 00102$:
                                   1774 ;	../../../../core/net/rpl/rpl-of-etx.c:143: if(d1->preference != d2->preference) {
      000330 E5 81            [12] 1775 	mov	a,sp
      000332 24 FB            [12] 1776 	add	a,#0xfb
      000334 F8               [12] 1777 	mov	r0,a
      000335 74 14            [12] 1778 	mov	a,#0x14
      000337 26               [12] 1779 	add	a,@r0
      000338 FD               [12] 1780 	mov	r5,a
      000339 E4               [12] 1781 	clr	a
      00033A 08               [12] 1782 	inc	r0
      00033B 36               [12] 1783 	addc	a,@r0
      00033C FE               [12] 1784 	mov	r6,a
      00033D 08               [12] 1785 	inc	r0
      00033E 86 07            [24] 1786 	mov	ar7,@r0
      000340 8D 82            [24] 1787 	mov	dpl,r5
      000342 8E 83            [24] 1788 	mov	dph,r6
      000344 8F F0            [24] 1789 	mov	b,r7
      000346 12r00r00         [24] 1790 	lcall	__gptrget
      000349 FF               [12] 1791 	mov	r7,a
      00034A A8 81            [24] 1792 	mov	r0,sp
      00034C 18               [12] 1793 	dec	r0
      00034D 18               [12] 1794 	dec	r0
      00034E 74 14            [12] 1795 	mov	a,#0x14
      000350 26               [12] 1796 	add	a,@r0
      000351 FC               [12] 1797 	mov	r4,a
      000352 E4               [12] 1798 	clr	a
      000353 08               [12] 1799 	inc	r0
      000354 36               [12] 1800 	addc	a,@r0
      000355 FD               [12] 1801 	mov	r5,a
      000356 08               [12] 1802 	inc	r0
      000357 86 06            [24] 1803 	mov	ar6,@r0
      000359 8C 82            [24] 1804 	mov	dpl,r4
      00035B 8D 83            [24] 1805 	mov	dph,r5
      00035D 8E F0            [24] 1806 	mov	b,r6
      00035F 12r00r00         [24] 1807 	lcall	__gptrget
      000362 FE               [12] 1808 	mov	r6,a
      000363 EF               [12] 1809 	mov	a,r7
      000364 B5 06 02         [24] 1810 	cjne	a,ar6,00130$
      000367 80 28            [24] 1811 	sjmp	00104$
      000369                       1812 00130$:
                                   1813 ;	../../../../core/net/rpl/rpl-of-etx.c:144: return d1->preference > d2->preference ? d1 : d2;
      000369 C3               [12] 1814 	clr	c
      00036A EE               [12] 1815 	mov	a,r6
      00036B 9F               [12] 1816 	subb	a,r7
      00036C 50 0F            [24] 1817 	jnc	00109$
      00036E E5 81            [12] 1818 	mov	a,sp
      000370 24 FB            [12] 1819 	add	a,#0xfb
      000372 F8               [12] 1820 	mov	r0,a
      000373 86 05            [24] 1821 	mov	ar5,@r0
      000375 08               [12] 1822 	inc	r0
      000376 86 06            [24] 1823 	mov	ar6,@r0
      000378 08               [12] 1824 	inc	r0
      000379 86 07            [24] 1825 	mov	ar7,@r0
      00037B 80 0C            [24] 1826 	sjmp	00110$
      00037D                       1827 00109$:
      00037D A8 81            [24] 1828 	mov	r0,sp
      00037F 18               [12] 1829 	dec	r0
      000380 18               [12] 1830 	dec	r0
      000381 86 05            [24] 1831 	mov	ar5,@r0
      000383 08               [12] 1832 	inc	r0
      000384 86 06            [24] 1833 	mov	ar6,@r0
      000386 08               [12] 1834 	inc	r0
      000387 86 07            [24] 1835 	mov	ar7,@r0
      000389                       1836 00110$:
      000389 8D 82            [24] 1837 	mov	dpl,r5
      00038B 8E 83            [24] 1838 	mov	dph,r6
      00038D 8F F0            [24] 1839 	mov	b,r7
      00038F 80 65            [24] 1840 	sjmp	00105$
      000391                       1841 00104$:
                                   1842 ;	../../../../core/net/rpl/rpl-of-etx.c:147: return d1->rank < d2->rank ? d1 : d2;
      000391 E5 81            [12] 1843 	mov	a,sp
      000393 24 FB            [12] 1844 	add	a,#0xfb
      000395 F8               [12] 1845 	mov	r0,a
      000396 74 1A            [12] 1846 	mov	a,#0x1A
      000398 26               [12] 1847 	add	a,@r0
      000399 FD               [12] 1848 	mov	r5,a
      00039A E4               [12] 1849 	clr	a
      00039B 08               [12] 1850 	inc	r0
      00039C 36               [12] 1851 	addc	a,@r0
      00039D FE               [12] 1852 	mov	r6,a
      00039E 08               [12] 1853 	inc	r0
      00039F 86 07            [24] 1854 	mov	ar7,@r0
      0003A1 8D 82            [24] 1855 	mov	dpl,r5
      0003A3 8E 83            [24] 1856 	mov	dph,r6
      0003A5 8F F0            [24] 1857 	mov	b,r7
      0003A7 12r00r00         [24] 1858 	lcall	__gptrget
      0003AA FD               [12] 1859 	mov	r5,a
      0003AB A3               [24] 1860 	inc	dptr
      0003AC 12r00r00         [24] 1861 	lcall	__gptrget
      0003AF FE               [12] 1862 	mov	r6,a
      0003B0 A8 81            [24] 1863 	mov	r0,sp
      0003B2 18               [12] 1864 	dec	r0
      0003B3 18               [12] 1865 	dec	r0
      0003B4 74 1A            [12] 1866 	mov	a,#0x1A
      0003B6 26               [12] 1867 	add	a,@r0
      0003B7 FB               [12] 1868 	mov	r3,a
      0003B8 E4               [12] 1869 	clr	a
      0003B9 08               [12] 1870 	inc	r0
      0003BA 36               [12] 1871 	addc	a,@r0
      0003BB FC               [12] 1872 	mov	r4,a
      0003BC 08               [12] 1873 	inc	r0
      0003BD 86 07            [24] 1874 	mov	ar7,@r0
      0003BF 8B 82            [24] 1875 	mov	dpl,r3
      0003C1 8C 83            [24] 1876 	mov	dph,r4
      0003C3 8F F0            [24] 1877 	mov	b,r7
      0003C5 12r00r00         [24] 1878 	lcall	__gptrget
      0003C8 FB               [12] 1879 	mov	r3,a
      0003C9 A3               [24] 1880 	inc	dptr
      0003CA 12r00r00         [24] 1881 	lcall	__gptrget
      0003CD FC               [12] 1882 	mov	r4,a
      0003CE C3               [12] 1883 	clr	c
      0003CF ED               [12] 1884 	mov	a,r5
      0003D0 9B               [12] 1885 	subb	a,r3
      0003D1 EE               [12] 1886 	mov	a,r6
      0003D2 9C               [12] 1887 	subb	a,r4
      0003D3 50 0F            [24] 1888 	jnc	00111$
      0003D5 E5 81            [12] 1889 	mov	a,sp
      0003D7 24 FB            [12] 1890 	add	a,#0xfb
      0003D9 F8               [12] 1891 	mov	r0,a
      0003DA 86 05            [24] 1892 	mov	ar5,@r0
      0003DC 08               [12] 1893 	inc	r0
      0003DD 86 06            [24] 1894 	mov	ar6,@r0
      0003DF 08               [12] 1895 	inc	r0
      0003E0 86 07            [24] 1896 	mov	ar7,@r0
      0003E2 80 0C            [24] 1897 	sjmp	00112$
      0003E4                       1898 00111$:
      0003E4 A8 81            [24] 1899 	mov	r0,sp
      0003E6 18               [12] 1900 	dec	r0
      0003E7 18               [12] 1901 	dec	r0
      0003E8 86 05            [24] 1902 	mov	ar5,@r0
      0003EA 08               [12] 1903 	inc	r0
      0003EB 86 06            [24] 1904 	mov	ar6,@r0
      0003ED 08               [12] 1905 	inc	r0
      0003EE 86 07            [24] 1906 	mov	ar7,@r0
      0003F0                       1907 00112$:
      0003F0 8D 82            [24] 1908 	mov	dpl,r5
      0003F2 8E 83            [24] 1909 	mov	dph,r6
      0003F4 8F F0            [24] 1910 	mov	b,r7
      0003F6                       1911 00105$:
      0003F6 C8               [12] 1912 	xch	a,r0
      0003F7 E5 81            [12] 1913 	mov	a,sp
      0003F9 24 FA            [12] 1914 	add	a,#0xFA
      0003FB F5 81            [12] 1915 	mov	sp,a
      0003FD C8               [12] 1916 	xch	a,r0
      0003FE 02r00r00         [24] 1917 	ljmp	__sdcc_banked_ret
                                   1918 ;------------------------------------------------------------
                                   1919 ;Allocation info for local variables in function 'best_parent'
                                   1920 ;------------------------------------------------------------
                                   1921 ;p2                        Allocated to stack - sp -12
                                   1922 ;p1                        Allocated to registers r5 r6 r7 
                                   1923 ;dag                       Allocated to stack - sp -6
                                   1924 ;min_diff                  Allocated to registers 
                                   1925 ;p1_metric                 Allocated to stack - sp -3
                                   1926 ;p2_metric                 Allocated to stack - sp -1
                                   1927 ;------------------------------------------------------------
                                   1928 ;	../../../../core/net/rpl/rpl-of-etx.c:151: best_parent(rpl_parent_t *p1, rpl_parent_t *p2)
                                   1929 ;	-----------------------------------------
                                   1930 ;	 function best_parent
                                   1931 ;	-----------------------------------------
      000401                       1932 _best_parent:
      000401 E5 81            [12] 1933 	mov	a,sp
      000403 24 07            [12] 1934 	add	a,#0x07
      000405 F5 81            [12] 1935 	mov	sp,a
      000407 AD 82            [24] 1936 	mov	r5,dpl
      000409 AE 83            [24] 1937 	mov	r6,dph
      00040B AF F0            [24] 1938 	mov	r7,b
                                   1939 ;	../../../../core/net/rpl/rpl-of-etx.c:158: dag = p1->dag; /* Both parents must be in the same DAG. */
      00040D 74 03            [12] 1940 	mov	a,#0x03
      00040F 2D               [12] 1941 	add	a,r5
      000410 FA               [12] 1942 	mov	r2,a
      000411 E4               [12] 1943 	clr	a
      000412 3E               [12] 1944 	addc	a,r6
      000413 FB               [12] 1945 	mov	r3,a
      000414 8F 04            [24] 1946 	mov	ar4,r7
      000416 8A 82            [24] 1947 	mov	dpl,r2
      000418 8B 83            [24] 1948 	mov	dph,r3
      00041A 8C F0            [24] 1949 	mov	b,r4
      00041C E5 81            [12] 1950 	mov	a,sp
      00041E 24 FA            [12] 1951 	add	a,#0xfa
      000420 F8               [12] 1952 	mov	r0,a
      000421 12r00r00         [24] 1953 	lcall	__gptrget
      000424 F6               [12] 1954 	mov	@r0,a
      000425 A3               [24] 1955 	inc	dptr
      000426 12r00r00         [24] 1956 	lcall	__gptrget
      000429 08               [12] 1957 	inc	r0
      00042A F6               [12] 1958 	mov	@r0,a
      00042B A3               [24] 1959 	inc	dptr
      00042C 12r00r00         [24] 1960 	lcall	__gptrget
      00042F 08               [12] 1961 	inc	r0
      000430 F6               [12] 1962 	mov	@r0,a
                                   1963 ;	../../../../core/net/rpl/rpl-of-etx.c:163: p1_metric = calculate_path_metric(p1);
      000431 8D 82            [24] 1964 	mov	dpl,r5
      000433 8E 83            [24] 1965 	mov	dph,r6
      000435 8F F0            [24] 1966 	mov	b,r7
      000437 C0 07            [24] 1967 	push	ar7
      000439 C0 06            [24] 1968 	push	ar6
      00043B C0 05            [24] 1969 	push	ar5
      00043D 78r00            [12] 1970 	mov	r0,#_calculate_path_metric
      00043F 79s00            [12] 1971 	mov	r1,#(_calculate_path_metric >> 8)
      000441 7As00            [12] 1972 	mov	r2,#(_calculate_path_metric >> 16)
      000443 12r00r00         [24] 1973 	lcall	__sdcc_banked_call
      000446 AB 82            [24] 1974 	mov	r3,dpl
      000448 AC 83            [24] 1975 	mov	r4,dph
      00044A D0 05            [24] 1976 	pop	ar5
      00044C D0 06            [24] 1977 	pop	ar6
      00044E D0 07            [24] 1978 	pop	ar7
      000450 E5 81            [12] 1979 	mov	a,sp
      000452 24 FD            [12] 1980 	add	a,#0xfd
      000454 F8               [12] 1981 	mov	r0,a
      000455 A6 03            [24] 1982 	mov	@r0,ar3
      000457 08               [12] 1983 	inc	r0
      000458 A6 04            [24] 1984 	mov	@r0,ar4
                                   1985 ;	../../../../core/net/rpl/rpl-of-etx.c:164: p2_metric = calculate_path_metric(p2);
      00045A E5 81            [12] 1986 	mov	a,sp
      00045C 24 F4            [12] 1987 	add	a,#0xf4
      00045E F8               [12] 1988 	mov	r0,a
      00045F 86 82            [24] 1989 	mov	dpl,@r0
      000461 08               [12] 1990 	inc	r0
      000462 86 83            [24] 1991 	mov	dph,@r0
      000464 08               [12] 1992 	inc	r0
      000465 86 F0            [24] 1993 	mov	b,@r0
      000467 C0 07            [24] 1994 	push	ar7
      000469 C0 06            [24] 1995 	push	ar6
      00046B C0 05            [24] 1996 	push	ar5
      00046D 78r00            [12] 1997 	mov	r0,#_calculate_path_metric
      00046F 79s00            [12] 1998 	mov	r1,#(_calculate_path_metric >> 8)
      000471 7As00            [12] 1999 	mov	r2,#(_calculate_path_metric >> 16)
      000473 12r00r00         [24] 2000 	lcall	__sdcc_banked_call
      000476 AC 82            [24] 2001 	mov	r4,dpl
      000478 AB 83            [24] 2002 	mov	r3,dph
      00047A D0 05            [24] 2003 	pop	ar5
      00047C D0 06            [24] 2004 	pop	ar6
      00047E D0 07            [24] 2005 	pop	ar7
      000480 A8 81            [24] 2006 	mov	r0,sp
      000482 18               [12] 2007 	dec	r0
      000483 A6 04            [24] 2008 	mov	@r0,ar4
      000485 08               [12] 2009 	inc	r0
      000486 A6 03            [24] 2010 	mov	@r0,ar3
                                   2011 ;	../../../../core/net/rpl/rpl-of-etx.c:167: if(p1 == dag->preferred_parent || p2 == dag->preferred_parent) {
      000488 E5 81            [12] 2012 	mov	a,sp
      00048A 24 FA            [12] 2013 	add	a,#0xfa
      00048C F8               [12] 2014 	mov	r0,a
      00048D 74 17            [12] 2015 	mov	a,#0x17
      00048F 26               [12] 2016 	add	a,@r0
      000490 FA               [12] 2017 	mov	r2,a
      000491 E4               [12] 2018 	clr	a
      000492 08               [12] 2019 	inc	r0
      000493 36               [12] 2020 	addc	a,@r0
      000494 FB               [12] 2021 	mov	r3,a
      000495 08               [12] 2022 	inc	r0
      000496 86 04            [24] 2023 	mov	ar4,@r0
      000498 8A 82            [24] 2024 	mov	dpl,r2
      00049A 8B 83            [24] 2025 	mov	dph,r3
      00049C 8C F0            [24] 2026 	mov	b,r4
      00049E 12r00r00         [24] 2027 	lcall	__gptrget
      0004A1 FA               [12] 2028 	mov	r2,a
      0004A2 A3               [24] 2029 	inc	dptr
      0004A3 12r00r00         [24] 2030 	lcall	__gptrget
      0004A6 FB               [12] 2031 	mov	r3,a
      0004A7 A3               [24] 2032 	inc	dptr
      0004A8 12r00r00         [24] 2033 	lcall	__gptrget
      0004AB FC               [12] 2034 	mov	r4,a
      0004AC C0 02            [24] 2035 	push	ar2
      0004AE C0 03            [24] 2036 	push	ar3
      0004B0 C0 04            [24] 2037 	push	ar4
      0004B2 8D 82            [24] 2038 	mov	dpl,r5
      0004B4 8E 83            [24] 2039 	mov	dph,r6
      0004B6 8F F0            [24] 2040 	mov	b,r7
      0004B8 12r00r00         [24] 2041 	lcall	___gptr_cmp
      0004BB 15 81            [12] 2042 	dec	sp
      0004BD 15 81            [12] 2043 	dec	sp
      0004BF 15 81            [12] 2044 	dec	sp
      0004C1 60 20            [24] 2045 	jz	00104$
      0004C3 E5 81            [12] 2046 	mov	a,sp
      0004C5 24 F4            [12] 2047 	add	a,#0xf4
      0004C7 F8               [12] 2048 	mov	r0,a
      0004C8 C0 02            [24] 2049 	push	ar2
      0004CA C0 03            [24] 2050 	push	ar3
      0004CC C0 04            [24] 2051 	push	ar4
      0004CE 86 82            [24] 2052 	mov	dpl,@r0
      0004D0 08               [12] 2053 	inc	r0
      0004D1 86 83            [24] 2054 	mov	dph,@r0
      0004D3 08               [12] 2055 	inc	r0
      0004D4 86 F0            [24] 2056 	mov	b,@r0
      0004D6 12r00r00         [24] 2057 	lcall	___gptr_cmp
      0004D9 15 81            [12] 2058 	dec	sp
      0004DB 15 81            [12] 2059 	dec	sp
      0004DD 15 81            [12] 2060 	dec	sp
      0004DF 60 02            [24] 2061 	jz	00125$
      0004E1 80 55            [24] 2062 	sjmp	00105$
      0004E3                       2063 00125$:
      0004E3                       2064 00104$:
                                   2065 ;	../../../../core/net/rpl/rpl-of-etx.c:168: if(p1_metric < p2_metric + min_diff &&
      0004E3 C0 02            [24] 2066 	push	ar2
      0004E5 C0 03            [24] 2067 	push	ar3
      0004E7 C0 04            [24] 2068 	push	ar4
      0004E9 E5 81            [12] 2069 	mov	a,sp
      0004EB 24 FC            [12] 2070 	add	a,#0xfc
      0004ED F8               [12] 2071 	mov	r0,a
      0004EE 74 40            [12] 2072 	mov	a,#0x40
      0004F0 26               [12] 2073 	add	a,@r0
      0004F1 FB               [12] 2074 	mov	r3,a
      0004F2 E4               [12] 2075 	clr	a
      0004F3 08               [12] 2076 	inc	r0
      0004F4 36               [12] 2077 	addc	a,@r0
      0004F5 FC               [12] 2078 	mov	r4,a
      0004F6 E5 81            [12] 2079 	mov	a,sp
      0004F8 24 FA            [12] 2080 	add	a,#0xfa
      0004FA F8               [12] 2081 	mov	r0,a
      0004FB C3               [12] 2082 	clr	c
      0004FC E6               [12] 2083 	mov	a,@r0
      0004FD 9B               [12] 2084 	subb	a,r3
      0004FE 08               [12] 2085 	inc	r0
      0004FF E6               [12] 2086 	mov	a,@r0
      000500 9C               [12] 2087 	subb	a,r4
      000501 D0 04            [24] 2088 	pop	ar4
      000503 D0 03            [24] 2089 	pop	ar3
      000505 D0 02            [24] 2090 	pop	ar2
      000507 50 2F            [24] 2091 	jnc	00105$
                                   2092 ;	../../../../core/net/rpl/rpl-of-etx.c:169: p1_metric > p2_metric - min_diff) {
      000509 C0 02            [24] 2093 	push	ar2
      00050B C0 03            [24] 2094 	push	ar3
      00050D C0 04            [24] 2095 	push	ar4
      00050F E5 81            [12] 2096 	mov	a,sp
      000511 24 FC            [12] 2097 	add	a,#0xfc
      000513 F8               [12] 2098 	mov	r0,a
      000514 E6               [12] 2099 	mov	a,@r0
      000515 24 C0            [12] 2100 	add	a,#0xC0
      000517 FB               [12] 2101 	mov	r3,a
      000518 08               [12] 2102 	inc	r0
      000519 E6               [12] 2103 	mov	a,@r0
      00051A 34 FF            [12] 2104 	addc	a,#0xFF
      00051C FC               [12] 2105 	mov	r4,a
      00051D E5 81            [12] 2106 	mov	a,sp
      00051F 24 FA            [12] 2107 	add	a,#0xfa
      000521 F8               [12] 2108 	mov	r0,a
      000522 C3               [12] 2109 	clr	c
      000523 EB               [12] 2110 	mov	a,r3
      000524 96               [12] 2111 	subb	a,@r0
      000525 EC               [12] 2112 	mov	a,r4
      000526 08               [12] 2113 	inc	r0
      000527 96               [12] 2114 	subb	a,@r0
      000528 D0 04            [24] 2115 	pop	ar4
      00052A D0 03            [24] 2116 	pop	ar3
      00052C D0 02            [24] 2117 	pop	ar2
      00052E 50 08            [24] 2118 	jnc	00105$
                                   2119 ;	../../../../core/net/rpl/rpl-of-etx.c:174: return dag->preferred_parent;
      000530 8A 82            [24] 2120 	mov	dpl,r2
      000532 8B 83            [24] 2121 	mov	dph,r3
      000534 8C F0            [24] 2122 	mov	b,r4
      000536 80 26            [24] 2123 	sjmp	00107$
      000538                       2124 00105$:
                                   2125 ;	../../../../core/net/rpl/rpl-of-etx.c:178: return p1_metric < p2_metric ? p1 : p2;
      000538 E5 81            [12] 2126 	mov	a,sp
      00053A 24 FD            [12] 2127 	add	a,#0xfd
      00053C F8               [12] 2128 	mov	r0,a
      00053D A9 81            [24] 2129 	mov	r1,sp
      00053F 19               [12] 2130 	dec	r1
      000540 C3               [12] 2131 	clr	c
      000541 E6               [12] 2132 	mov	a,@r0
      000542 97               [12] 2133 	subb	a,@r1
      000543 08               [12] 2134 	inc	r0
      000544 E6               [12] 2135 	mov	a,@r0
      000545 09               [12] 2136 	inc	r1
      000546 97               [12] 2137 	subb	a,@r1
      000547 50 02            [24] 2138 	jnc	00109$
      000549 80 0D            [24] 2139 	sjmp	00110$
      00054B                       2140 00109$:
      00054B E5 81            [12] 2141 	mov	a,sp
      00054D 24 F4            [12] 2142 	add	a,#0xf4
      00054F F8               [12] 2143 	mov	r0,a
      000550 86 05            [24] 2144 	mov	ar5,@r0
      000552 08               [12] 2145 	inc	r0
      000553 86 06            [24] 2146 	mov	ar6,@r0
      000555 08               [12] 2147 	inc	r0
      000556 86 07            [24] 2148 	mov	ar7,@r0
      000558                       2149 00110$:
      000558 8D 82            [24] 2150 	mov	dpl,r5
      00055A 8E 83            [24] 2151 	mov	dph,r6
      00055C 8F F0            [24] 2152 	mov	b,r7
      00055E                       2153 00107$:
      00055E C8               [12] 2154 	xch	a,r0
      00055F E5 81            [12] 2155 	mov	a,sp
      000561 24 F9            [12] 2156 	add	a,#0xF9
      000563 F5 81            [12] 2157 	mov	sp,a
      000565 C8               [12] 2158 	xch	a,r0
      000566 02r00r00         [24] 2159 	ljmp	__sdcc_banked_ret
                                   2160 ;------------------------------------------------------------
                                   2161 ;Allocation info for local variables in function 'update_metric_container'
                                   2162 ;------------------------------------------------------------
                                   2163 ;instance                  Allocated to stack - sp -5
                                   2164 ;path_metric               Allocated to registers r6 r7 
                                   2165 ;dag                       Allocated to stack - sp -2
                                   2166 ;------------------------------------------------------------
                                   2167 ;	../../../../core/net/rpl/rpl-of-etx.c:182: update_metric_container(rpl_instance_t *instance)
                                   2168 ;	-----------------------------------------
                                   2169 ;	 function update_metric_container
                                   2170 ;	-----------------------------------------
      000569                       2171 _update_metric_container:
      000569 C0 82            [24] 2172 	push	dpl
      00056B C0 83            [24] 2173 	push	dph
      00056D C0 F0            [24] 2174 	push	b
      00056F 05 81            [12] 2175 	inc	sp
      000571 05 81            [12] 2176 	inc	sp
      000573 05 81            [12] 2177 	inc	sp
                                   2178 ;	../../../../core/net/rpl/rpl-of-etx.c:190: instance->mc.flags = RPL_DAG_MC_FLAG_P;
      000575 E5 81            [12] 2179 	mov	a,sp
      000577 24 FB            [12] 2180 	add	a,#0xfb
      000579 F8               [12] 2181 	mov	r0,a
      00057A 74 01            [12] 2182 	mov	a,#0x01
      00057C 26               [12] 2183 	add	a,@r0
      00057D FA               [12] 2184 	mov	r2,a
      00057E E4               [12] 2185 	clr	a
      00057F 08               [12] 2186 	inc	r0
      000580 36               [12] 2187 	addc	a,@r0
      000581 FB               [12] 2188 	mov	r3,a
      000582 08               [12] 2189 	inc	r0
      000583 86 04            [24] 2190 	mov	ar4,@r0
      000585 8A 82            [24] 2191 	mov	dpl,r2
      000587 8B 83            [24] 2192 	mov	dph,r3
      000589 8C F0            [24] 2193 	mov	b,r4
      00058B 74 08            [12] 2194 	mov	a,#0x08
      00058D 12r00r00         [24] 2195 	lcall	__gptrput
                                   2196 ;	../../../../core/net/rpl/rpl-of-etx.c:191: instance->mc.aggr = RPL_DAG_MC_AGGR_ADDITIVE;
      000590 E5 81            [12] 2197 	mov	a,sp
      000592 24 FB            [12] 2198 	add	a,#0xfb
      000594 F8               [12] 2199 	mov	r0,a
      000595 74 02            [12] 2200 	mov	a,#0x02
      000597 26               [12] 2201 	add	a,@r0
      000598 FA               [12] 2202 	mov	r2,a
      000599 E4               [12] 2203 	clr	a
      00059A 08               [12] 2204 	inc	r0
      00059B 36               [12] 2205 	addc	a,@r0
      00059C FB               [12] 2206 	mov	r3,a
      00059D 08               [12] 2207 	inc	r0
      00059E 86 04            [24] 2208 	mov	ar4,@r0
      0005A0 8A 82            [24] 2209 	mov	dpl,r2
      0005A2 8B 83            [24] 2210 	mov	dph,r3
      0005A4 8C F0            [24] 2211 	mov	b,r4
      0005A6 E4               [12] 2212 	clr	a
      0005A7 12r00r00         [24] 2213 	lcall	__gptrput
                                   2214 ;	../../../../core/net/rpl/rpl-of-etx.c:192: instance->mc.prec = 0;
      0005AA E5 81            [12] 2215 	mov	a,sp
      0005AC 24 FB            [12] 2216 	add	a,#0xfb
      0005AE F8               [12] 2217 	mov	r0,a
      0005AF 74 03            [12] 2218 	mov	a,#0x03
      0005B1 26               [12] 2219 	add	a,@r0
      0005B2 FA               [12] 2220 	mov	r2,a
      0005B3 E4               [12] 2221 	clr	a
      0005B4 08               [12] 2222 	inc	r0
      0005B5 36               [12] 2223 	addc	a,@r0
      0005B6 FB               [12] 2224 	mov	r3,a
      0005B7 08               [12] 2225 	inc	r0
      0005B8 86 04            [24] 2226 	mov	ar4,@r0
      0005BA 8A 82            [24] 2227 	mov	dpl,r2
      0005BC 8B 83            [24] 2228 	mov	dph,r3
      0005BE 8C F0            [24] 2229 	mov	b,r4
      0005C0 E4               [12] 2230 	clr	a
      0005C1 12r00r00         [24] 2231 	lcall	__gptrput
                                   2232 ;	../../../../core/net/rpl/rpl-of-etx.c:194: dag = instance->current_dag;
      0005C4 E5 81            [12] 2233 	mov	a,sp
      0005C6 24 FB            [12] 2234 	add	a,#0xfb
      0005C8 F8               [12] 2235 	mov	r0,a
      0005C9 74 0A            [12] 2236 	mov	a,#0x0A
      0005CB 26               [12] 2237 	add	a,@r0
      0005CC FA               [12] 2238 	mov	r2,a
      0005CD E4               [12] 2239 	clr	a
      0005CE 08               [12] 2240 	inc	r0
      0005CF 36               [12] 2241 	addc	a,@r0
      0005D0 FB               [12] 2242 	mov	r3,a
      0005D1 08               [12] 2243 	inc	r0
      0005D2 86 04            [24] 2244 	mov	ar4,@r0
      0005D4 8A 82            [24] 2245 	mov	dpl,r2
      0005D6 8B 83            [24] 2246 	mov	dph,r3
      0005D8 8C F0            [24] 2247 	mov	b,r4
      0005DA A8 81            [24] 2248 	mov	r0,sp
      0005DC 18               [12] 2249 	dec	r0
      0005DD 18               [12] 2250 	dec	r0
      0005DE 12r00r00         [24] 2251 	lcall	__gptrget
      0005E1 F6               [12] 2252 	mov	@r0,a
      0005E2 A3               [24] 2253 	inc	dptr
      0005E3 12r00r00         [24] 2254 	lcall	__gptrget
      0005E6 08               [12] 2255 	inc	r0
      0005E7 F6               [12] 2256 	mov	@r0,a
      0005E8 A3               [24] 2257 	inc	dptr
      0005E9 12r00r00         [24] 2258 	lcall	__gptrget
      0005EC 08               [12] 2259 	inc	r0
      0005ED F6               [12] 2260 	mov	@r0,a
                                   2261 ;	../../../../core/net/rpl/rpl-of-etx.c:196: if (!dag->joined) {
      0005EE A8 81            [24] 2262 	mov	r0,sp
      0005F0 18               [12] 2263 	dec	r0
      0005F1 18               [12] 2264 	dec	r0
      0005F2 74 16            [12] 2265 	mov	a,#0x16
      0005F4 26               [12] 2266 	add	a,@r0
      0005F5 FA               [12] 2267 	mov	r2,a
      0005F6 E4               [12] 2268 	clr	a
      0005F7 08               [12] 2269 	inc	r0
      0005F8 36               [12] 2270 	addc	a,@r0
      0005F9 FB               [12] 2271 	mov	r3,a
      0005FA 08               [12] 2272 	inc	r0
      0005FB 86 04            [24] 2273 	mov	ar4,@r0
      0005FD 8A 82            [24] 2274 	mov	dpl,r2
      0005FF 8B 83            [24] 2275 	mov	dph,r3
      000601 8C F0            [24] 2276 	mov	b,r4
      000603 12r00r00         [24] 2277 	lcall	__gptrget
      000606 70 03            [24] 2278 	jnz	00102$
                                   2279 ;	../../../../core/net/rpl/rpl-of-etx.c:198: return;
      000608 02r06rDC         [24] 2280 	ljmp	00106$
      00060B                       2281 00102$:
                                   2282 ;	../../../../core/net/rpl/rpl-of-etx.c:201: if(dag->rank == ROOT_RANK(instance)) {
      00060B A8 81            [24] 2283 	mov	r0,sp
      00060D 18               [12] 2284 	dec	r0
      00060E 18               [12] 2285 	dec	r0
      00060F 74 1A            [12] 2286 	mov	a,#0x1A
      000611 26               [12] 2287 	add	a,@r0
      000612 FA               [12] 2288 	mov	r2,a
      000613 E4               [12] 2289 	clr	a
      000614 08               [12] 2290 	inc	r0
      000615 36               [12] 2291 	addc	a,@r0
      000616 FB               [12] 2292 	mov	r3,a
      000617 08               [12] 2293 	inc	r0
      000618 86 04            [24] 2294 	mov	ar4,@r0
      00061A 8A 82            [24] 2295 	mov	dpl,r2
      00061C 8B 83            [24] 2296 	mov	dph,r3
      00061E 8C F0            [24] 2297 	mov	b,r4
      000620 12r00r00         [24] 2298 	lcall	__gptrget
      000623 FA               [12] 2299 	mov	r2,a
      000624 A3               [24] 2300 	inc	dptr
      000625 12r00r00         [24] 2301 	lcall	__gptrget
      000628 FB               [12] 2302 	mov	r3,a
      000629 E5 81            [12] 2303 	mov	a,sp
      00062B 24 FB            [12] 2304 	add	a,#0xfb
      00062D F8               [12] 2305 	mov	r0,a
      00062E 74 93            [12] 2306 	mov	a,#0x93
      000630 26               [12] 2307 	add	a,@r0
      000631 FC               [12] 2308 	mov	r4,a
      000632 E4               [12] 2309 	clr	a
      000633 08               [12] 2310 	inc	r0
      000634 36               [12] 2311 	addc	a,@r0
      000635 FE               [12] 2312 	mov	r6,a
      000636 08               [12] 2313 	inc	r0
      000637 86 07            [24] 2314 	mov	ar7,@r0
      000639 8C 82            [24] 2315 	mov	dpl,r4
      00063B 8E 83            [24] 2316 	mov	dph,r6
      00063D 8F F0            [24] 2317 	mov	b,r7
      00063F 12r00r00         [24] 2318 	lcall	__gptrget
      000642 FC               [12] 2319 	mov	r4,a
      000643 A3               [24] 2320 	inc	dptr
      000644 12r00r00         [24] 2321 	lcall	__gptrget
      000647 FE               [12] 2322 	mov	r6,a
      000648 EA               [12] 2323 	mov	a,r2
      000649 B5 04 0A         [24] 2324 	cjne	a,ar4,00104$
      00064C EB               [12] 2325 	mov	a,r3
      00064D B5 06 06         [24] 2326 	cjne	a,ar6,00104$
                                   2327 ;	../../../../core/net/rpl/rpl-of-etx.c:202: path_metric = 0;
      000650 7E 00            [12] 2328 	mov	r6,#0x00
      000652 7F 00            [12] 2329 	mov	r7,#0x00
      000654 80 3A            [24] 2330 	sjmp	00105$
      000656                       2331 00104$:
                                   2332 ;	../../../../core/net/rpl/rpl-of-etx.c:204: path_metric = calculate_path_metric(dag->preferred_parent);
      000656 A8 81            [24] 2333 	mov	r0,sp
      000658 18               [12] 2334 	dec	r0
      000659 18               [12] 2335 	dec	r0
      00065A 74 17            [12] 2336 	mov	a,#0x17
      00065C 26               [12] 2337 	add	a,@r0
      00065D FB               [12] 2338 	mov	r3,a
      00065E E4               [12] 2339 	clr	a
      00065F 08               [12] 2340 	inc	r0
      000660 36               [12] 2341 	addc	a,@r0
      000661 FC               [12] 2342 	mov	r4,a
      000662 08               [12] 2343 	inc	r0
      000663 86 05            [24] 2344 	mov	ar5,@r0
      000665 8B 82            [24] 2345 	mov	dpl,r3
      000667 8C 83            [24] 2346 	mov	dph,r4
      000669 8D F0            [24] 2347 	mov	b,r5
      00066B 12r00r00         [24] 2348 	lcall	__gptrget
      00066E FB               [12] 2349 	mov	r3,a
      00066F A3               [24] 2350 	inc	dptr
      000670 12r00r00         [24] 2351 	lcall	__gptrget
      000673 FC               [12] 2352 	mov	r4,a
      000674 A3               [24] 2353 	inc	dptr
      000675 12r00r00         [24] 2354 	lcall	__gptrget
      000678 FD               [12] 2355 	mov	r5,a
      000679 8B 82            [24] 2356 	mov	dpl,r3
      00067B 8C 83            [24] 2357 	mov	dph,r4
      00067D 8D F0            [24] 2358 	mov	b,r5
      00067F 78r00            [12] 2359 	mov	r0,#_calculate_path_metric
      000681 79s00            [12] 2360 	mov	r1,#(_calculate_path_metric >> 8)
      000683 7As00            [12] 2361 	mov	r2,#(_calculate_path_metric >> 16)
      000685 12r00r00         [24] 2362 	lcall	__sdcc_banked_call
      000688 AC 82            [24] 2363 	mov	r4,dpl
      00068A AD 83            [24] 2364 	mov	r5,dph
      00068C 8C 06            [24] 2365 	mov	ar6,r4
      00068E 8D 07            [24] 2366 	mov	ar7,r5
      000690                       2367 00105$:
                                   2368 ;	../../../../core/net/rpl/rpl-of-etx.c:209: instance->mc.type = RPL_DAG_MC_ETX;
      000690 E5 81            [12] 2369 	mov	a,sp
      000692 24 FB            [12] 2370 	add	a,#0xfb
      000694 F8               [12] 2371 	mov	r0,a
      000695 86 82            [24] 2372 	mov	dpl,@r0
      000697 08               [12] 2373 	inc	r0
      000698 86 83            [24] 2374 	mov	dph,@r0
      00069A 08               [12] 2375 	inc	r0
      00069B 86 F0            [24] 2376 	mov	b,@r0
      00069D 74 07            [12] 2377 	mov	a,#0x07
      00069F 12r00r00         [24] 2378 	lcall	__gptrput
                                   2379 ;	../../../../core/net/rpl/rpl-of-etx.c:210: instance->mc.length = sizeof(instance->mc.obj.etx);
      0006A2 E5 81            [12] 2380 	mov	a,sp
      0006A4 24 FB            [12] 2381 	add	a,#0xfb
      0006A6 F8               [12] 2382 	mov	r0,a
      0006A7 74 04            [12] 2383 	mov	a,#0x04
      0006A9 26               [12] 2384 	add	a,@r0
      0006AA FB               [12] 2385 	mov	r3,a
      0006AB E4               [12] 2386 	clr	a
      0006AC 08               [12] 2387 	inc	r0
      0006AD 36               [12] 2388 	addc	a,@r0
      0006AE FC               [12] 2389 	mov	r4,a
      0006AF 08               [12] 2390 	inc	r0
      0006B0 86 05            [24] 2391 	mov	ar5,@r0
      0006B2 8B 82            [24] 2392 	mov	dpl,r3
      0006B4 8C 83            [24] 2393 	mov	dph,r4
      0006B6 8D F0            [24] 2394 	mov	b,r5
      0006B8 74 02            [12] 2395 	mov	a,#0x02
      0006BA 12r00r00         [24] 2396 	lcall	__gptrput
                                   2397 ;	../../../../core/net/rpl/rpl-of-etx.c:211: instance->mc.obj.etx = path_metric;
      0006BD E5 81            [12] 2398 	mov	a,sp
      0006BF 24 FB            [12] 2399 	add	a,#0xfb
      0006C1 F8               [12] 2400 	mov	r0,a
      0006C2 74 05            [12] 2401 	mov	a,#0x05
      0006C4 26               [12] 2402 	add	a,@r0
      0006C5 FB               [12] 2403 	mov	r3,a
      0006C6 E4               [12] 2404 	clr	a
      0006C7 08               [12] 2405 	inc	r0
      0006C8 36               [12] 2406 	addc	a,@r0
      0006C9 FC               [12] 2407 	mov	r4,a
      0006CA 08               [12] 2408 	inc	r0
      0006CB 86 05            [24] 2409 	mov	ar5,@r0
      0006CD 8B 82            [24] 2410 	mov	dpl,r3
      0006CF 8C 83            [24] 2411 	mov	dph,r4
      0006D1 8D F0            [24] 2412 	mov	b,r5
      0006D3 EE               [12] 2413 	mov	a,r6
      0006D4 12r00r00         [24] 2414 	lcall	__gptrput
      0006D7 A3               [24] 2415 	inc	dptr
      0006D8 EF               [12] 2416 	mov	a,r7
      0006D9 12r00r00         [24] 2417 	lcall	__gptrput
      0006DC                       2418 00106$:
      0006DC E5 81            [12] 2419 	mov	a,sp
      0006DE 24 FA            [12] 2420 	add	a,#0xFA
      0006E0 F5 81            [12] 2421 	mov	sp,a
      0006E2 02r00r00         [24] 2422 	ljmp	__sdcc_banked_ret
                                   2423 	.area CSEG    (CODE)
                                   2424 	.area CONST   (CODE)
                                   2425 	.area XINIT   (CODE)
      000000                       2426 __xinit__rpl_of_etx:
      000000r8Cs01s00              2427 	.byte _reset,(_reset >> 8),(_reset >> 16)
      000003r8Fs01s00              2428 	.byte _parent_state_callback,(_parent_state_callback >> 8),(_parent_state_callback >> 16)
      000006r01s04s00              2429 	.byte _best_parent,(_best_parent >> 8),(_best_parent >> 16)
      000009rB1s02s00              2430 	.byte _best_dag,(_best_dag >> 8),(_best_dag >> 16)
      00000Cr92s01s00              2431 	.byte _calculate_rank,(_calculate_rank >> 8),(_calculate_rank >> 16)
      00000Fr69s05s00              2432 	.byte _update_metric_container,(_update_metric_container >> 8),(_update_metric_container >> 16)
      000012 01 00                 2433 	.byte #0x01,#0x00	; 1
                                   2434 	.area CABS    (ABS,CODE)
