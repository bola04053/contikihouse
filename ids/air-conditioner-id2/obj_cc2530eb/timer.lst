                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8804 (Aug  6 2013) (Linux)
                                      4 ; This file was generated Mon Aug 25 04:16:29 2014
                                      5 ;--------------------------------------------------------
                                      6 	.module timer
                                      7 	.optsdcc -mmcs51 --model-huge
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _clock_time
                                     13 	.globl _timer_set
                                     14 	.globl _timer_reset
                                     15 	.globl _timer_restart
                                     16 	.globl _timer_expired
                                     17 	.globl _timer_remaining
                                     18 ;--------------------------------------------------------
                                     19 ; special function registers
                                     20 ;--------------------------------------------------------
                                     21 	.area RSEG    (ABS,DATA)
      000000                         22 	.org 0x0000
                                     23 ;--------------------------------------------------------
                                     24 ; special function bits
                                     25 ;--------------------------------------------------------
                                     26 	.area RSEG    (ABS,DATA)
      000000                         27 	.org 0x0000
                                     28 ;--------------------------------------------------------
                                     29 ; overlayable register banks
                                     30 ;--------------------------------------------------------
                                     31 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         32 	.ds 8
                                     33 ;--------------------------------------------------------
                                     34 ; internal ram data
                                     35 ;--------------------------------------------------------
                                     36 	.area DSEG    (DATA)
                                     37 ;--------------------------------------------------------
                                     38 ; overlayable items in internal ram 
                                     39 ;--------------------------------------------------------
                                     40 ;--------------------------------------------------------
                                     41 ; indirectly addressable internal ram data
                                     42 ;--------------------------------------------------------
                                     43 	.area ISEG    (DATA)
                                     44 ;--------------------------------------------------------
                                     45 ; absolute internal ram data
                                     46 ;--------------------------------------------------------
                                     47 	.area IABS    (ABS,DATA)
                                     48 	.area IABS    (ABS,DATA)
                                     49 ;--------------------------------------------------------
                                     50 ; bit data
                                     51 ;--------------------------------------------------------
                                     52 	.area BSEG    (BIT)
                                     53 ;--------------------------------------------------------
                                     54 ; paged external ram data
                                     55 ;--------------------------------------------------------
                                     56 	.area PSEG    (PAG,XDATA)
                                     57 ;--------------------------------------------------------
                                     58 ; external ram data
                                     59 ;--------------------------------------------------------
                                     60 	.area XSEG    (XDATA)
                                     61 ;--------------------------------------------------------
                                     62 ; absolute external ram data
                                     63 ;--------------------------------------------------------
                                     64 	.area XABS    (ABS,XDATA)
                                     65 ;--------------------------------------------------------
                                     66 ; external initialized ram data
                                     67 ;--------------------------------------------------------
                                     68 	.area XISEG   (XDATA)
                                     69 	.area HOME    (CODE)
                                     70 	.area GSINIT0 (CODE)
                                     71 	.area GSINIT1 (CODE)
                                     72 	.area GSINIT2 (CODE)
                                     73 	.area GSINIT3 (CODE)
                                     74 	.area GSINIT4 (CODE)
                                     75 	.area GSINIT5 (CODE)
                                     76 	.area GSINIT  (CODE)
                                     77 	.area GSFINAL (CODE)
                                     78 	.area CSEG    (CODE)
                                     79 ;--------------------------------------------------------
                                     80 ; global & static initialisations
                                     81 ;--------------------------------------------------------
                                     82 	.area HOME    (CODE)
                                     83 	.area GSINIT  (CODE)
                                     84 	.area GSFINAL (CODE)
                                     85 	.area GSINIT  (CODE)
                                     86 ;--------------------------------------------------------
                                     87 ; Home
                                     88 ;--------------------------------------------------------
                                     89 	.area HOME    (CODE)
                                     90 	.area HOME    (CODE)
                                     91 ;--------------------------------------------------------
                                     92 ; code
                                     93 ;--------------------------------------------------------
                                     94 	.area BANK1   (CODE)
                                     95 ;------------------------------------------------------------
                                     96 ;Allocation info for local variables in function 'timer_set'
                                     97 ;------------------------------------------------------------
                                     98 ;interval                  Allocated to stack - sp -4
                                     99 ;t                         Allocated to registers r5 r6 r7 
                                    100 ;------------------------------------------------------------
                                    101 ;	../../../../core/sys/timer.c:64: timer_set(struct timer *t, clock_time_t interval)
                                    102 ;	-----------------------------------------
                                    103 ;	 function timer_set
                                    104 ;	-----------------------------------------
      000000                        105 _timer_set:
                           000007   106 	ar7 = 0x07
                           000006   107 	ar6 = 0x06
                           000005   108 	ar5 = 0x05
                           000004   109 	ar4 = 0x04
                           000003   110 	ar3 = 0x03
                           000002   111 	ar2 = 0x02
                           000001   112 	ar1 = 0x01
                           000000   113 	ar0 = 0x00
      000000 AD 82            [24]  114 	mov	r5,dpl
      000002 AE 83            [24]  115 	mov	r6,dph
      000004 AF F0            [24]  116 	mov	r7,b
                                    117 ;	../../../../core/sys/timer.c:66: t->interval = interval;
      000006 74 02            [12]  118 	mov	a,#0x02
      000008 2D               [12]  119 	add	a,r5
      000009 FA               [12]  120 	mov	r2,a
      00000A E4               [12]  121 	clr	a
      00000B 3E               [12]  122 	addc	a,r6
      00000C FB               [12]  123 	mov	r3,a
      00000D 8F 04            [24]  124 	mov	ar4,r7
      00000F 8A 82            [24]  125 	mov	dpl,r2
      000011 8B 83            [24]  126 	mov	dph,r3
      000013 8C F0            [24]  127 	mov	b,r4
      000015 E5 81            [12]  128 	mov	a,sp
      000017 24 FC            [12]  129 	add	a,#0xfc
      000019 F8               [12]  130 	mov	r0,a
      00001A E6               [12]  131 	mov	a,@r0
      00001B 12r00r00         [24]  132 	lcall	__gptrput
      00001E A3               [24]  133 	inc	dptr
      00001F 08               [12]  134 	inc	r0
      000020 E6               [12]  135 	mov	a,@r0
      000021 12r00r00         [24]  136 	lcall	__gptrput
                                    137 ;	../../../../core/sys/timer.c:67: t->start = clock_time();
      000024 C0 07            [24]  138 	push	ar7
      000026 C0 06            [24]  139 	push	ar6
      000028 C0 05            [24]  140 	push	ar5
      00002A 78r00            [12]  141 	mov	r0,#_clock_time
      00002C 79s00            [12]  142 	mov	r1,#(_clock_time >> 8)
      00002E 7As00            [12]  143 	mov	r2,#(_clock_time >> 16)
      000030 12r00r00         [24]  144 	lcall	__sdcc_banked_call
      000033 AB 82            [24]  145 	mov	r3,dpl
      000035 AC 83            [24]  146 	mov	r4,dph
      000037 D0 05            [24]  147 	pop	ar5
      000039 D0 06            [24]  148 	pop	ar6
      00003B D0 07            [24]  149 	pop	ar7
      00003D 8D 82            [24]  150 	mov	dpl,r5
      00003F 8E 83            [24]  151 	mov	dph,r6
      000041 8F F0            [24]  152 	mov	b,r7
      000043 EB               [12]  153 	mov	a,r3
      000044 12r00r00         [24]  154 	lcall	__gptrput
      000047 A3               [24]  155 	inc	dptr
      000048 EC               [12]  156 	mov	a,r4
      000049 12r00r00         [24]  157 	lcall	__gptrput
      00004C 02r00r00         [24]  158 	ljmp	__sdcc_banked_ret
                                    159 ;------------------------------------------------------------
                                    160 ;Allocation info for local variables in function 'timer_reset'
                                    161 ;------------------------------------------------------------
                                    162 ;t                         Allocated to registers r5 r6 r7 
                                    163 ;------------------------------------------------------------
                                    164 ;	../../../../core/sys/timer.c:84: timer_reset(struct timer *t)
                                    165 ;	-----------------------------------------
                                    166 ;	 function timer_reset
                                    167 ;	-----------------------------------------
      00004F                        168 _timer_reset:
                                    169 ;	../../../../core/sys/timer.c:86: t->start += t->interval;
      00004F AD 82            [24]  170 	mov	r5,dpl
      000051 AE 83            [24]  171 	mov	r6,dph
      000053 AF F0            [24]  172 	mov	r7,b
      000055 12r00r00         [24]  173 	lcall	__gptrget
      000058 FB               [12]  174 	mov	r3,a
      000059 A3               [24]  175 	inc	dptr
      00005A 12r00r00         [24]  176 	lcall	__gptrget
      00005D FC               [12]  177 	mov	r4,a
      00005E 74 02            [12]  178 	mov	a,#0x02
      000060 2D               [12]  179 	add	a,r5
      000061 F8               [12]  180 	mov	r0,a
      000062 E4               [12]  181 	clr	a
      000063 3E               [12]  182 	addc	a,r6
      000064 F9               [12]  183 	mov	r1,a
      000065 8F 02            [24]  184 	mov	ar2,r7
      000067 88 82            [24]  185 	mov	dpl,r0
      000069 89 83            [24]  186 	mov	dph,r1
      00006B 8A F0            [24]  187 	mov	b,r2
      00006D 12r00r00         [24]  188 	lcall	__gptrget
      000070 F8               [12]  189 	mov	r0,a
      000071 A3               [24]  190 	inc	dptr
      000072 12r00r00         [24]  191 	lcall	__gptrget
      000075 F9               [12]  192 	mov	r1,a
      000076 E8               [12]  193 	mov	a,r0
      000077 2B               [12]  194 	add	a,r3
      000078 FB               [12]  195 	mov	r3,a
      000079 E9               [12]  196 	mov	a,r1
      00007A 3C               [12]  197 	addc	a,r4
      00007B FC               [12]  198 	mov	r4,a
      00007C 8D 82            [24]  199 	mov	dpl,r5
      00007E 8E 83            [24]  200 	mov	dph,r6
      000080 8F F0            [24]  201 	mov	b,r7
      000082 EB               [12]  202 	mov	a,r3
      000083 12r00r00         [24]  203 	lcall	__gptrput
      000086 A3               [24]  204 	inc	dptr
      000087 EC               [12]  205 	mov	a,r4
      000088 12r00r00         [24]  206 	lcall	__gptrput
      00008B 02r00r00         [24]  207 	ljmp	__sdcc_banked_ret
                                    208 ;------------------------------------------------------------
                                    209 ;Allocation info for local variables in function 'timer_restart'
                                    210 ;------------------------------------------------------------
                                    211 ;t                         Allocated to registers r5 r6 r7 
                                    212 ;------------------------------------------------------------
                                    213 ;	../../../../core/sys/timer.c:104: timer_restart(struct timer *t)
                                    214 ;	-----------------------------------------
                                    215 ;	 function timer_restart
                                    216 ;	-----------------------------------------
      00008E                        217 _timer_restart:
      00008E AD 82            [24]  218 	mov	r5,dpl
      000090 AE 83            [24]  219 	mov	r6,dph
      000092 AF F0            [24]  220 	mov	r7,b
                                    221 ;	../../../../core/sys/timer.c:106: t->start = clock_time();
      000094 C0 07            [24]  222 	push	ar7
      000096 C0 06            [24]  223 	push	ar6
      000098 C0 05            [24]  224 	push	ar5
      00009A 78r00            [12]  225 	mov	r0,#_clock_time
      00009C 79s00            [12]  226 	mov	r1,#(_clock_time >> 8)
      00009E 7As00            [12]  227 	mov	r2,#(_clock_time >> 16)
      0000A0 12r00r00         [24]  228 	lcall	__sdcc_banked_call
      0000A3 AB 82            [24]  229 	mov	r3,dpl
      0000A5 AC 83            [24]  230 	mov	r4,dph
      0000A7 D0 05            [24]  231 	pop	ar5
      0000A9 D0 06            [24]  232 	pop	ar6
      0000AB D0 07            [24]  233 	pop	ar7
      0000AD 8D 82            [24]  234 	mov	dpl,r5
      0000AF 8E 83            [24]  235 	mov	dph,r6
      0000B1 8F F0            [24]  236 	mov	b,r7
      0000B3 EB               [12]  237 	mov	a,r3
      0000B4 12r00r00         [24]  238 	lcall	__gptrput
      0000B7 A3               [24]  239 	inc	dptr
      0000B8 EC               [12]  240 	mov	a,r4
      0000B9 12r00r00         [24]  241 	lcall	__gptrput
      0000BC 02r00r00         [24]  242 	ljmp	__sdcc_banked_ret
                                    243 ;------------------------------------------------------------
                                    244 ;Allocation info for local variables in function 'timer_expired'
                                    245 ;------------------------------------------------------------
                                    246 ;t                         Allocated to stack - sp -2
                                    247 ;diff                      Allocated to registers r3 r4 
                                    248 ;------------------------------------------------------------
                                    249 ;	../../../../core/sys/timer.c:121: timer_expired(struct timer *t)
                                    250 ;	-----------------------------------------
                                    251 ;	 function timer_expired
                                    252 ;	-----------------------------------------
      0000BF                        253 _timer_expired:
      0000BF C0 82            [24]  254 	push	dpl
      0000C1 C0 83            [24]  255 	push	dph
      0000C3 C0 F0            [24]  256 	push	b
                                    257 ;	../../../../core/sys/timer.c:125: clock_time_t diff = (clock_time() - t->start) + 1;
      0000C5 78r00            [12]  258 	mov	r0,#_clock_time
      0000C7 79s00            [12]  259 	mov	r1,#(_clock_time >> 8)
      0000C9 7As00            [12]  260 	mov	r2,#(_clock_time >> 16)
      0000CB 12r00r00         [24]  261 	lcall	__sdcc_banked_call
      0000CE AB 82            [24]  262 	mov	r3,dpl
      0000D0 AC 83            [24]  263 	mov	r4,dph
      0000D2 A8 81            [24]  264 	mov	r0,sp
      0000D4 18               [12]  265 	dec	r0
      0000D5 18               [12]  266 	dec	r0
      0000D6 86 82            [24]  267 	mov	dpl,@r0
      0000D8 08               [12]  268 	inc	r0
      0000D9 86 83            [24]  269 	mov	dph,@r0
      0000DB 08               [12]  270 	inc	r0
      0000DC 86 F0            [24]  271 	mov	b,@r0
      0000DE 12r00r00         [24]  272 	lcall	__gptrget
      0000E1 FA               [12]  273 	mov	r2,a
      0000E2 A3               [24]  274 	inc	dptr
      0000E3 12r00r00         [24]  275 	lcall	__gptrget
      0000E6 FF               [12]  276 	mov	r7,a
      0000E7 EB               [12]  277 	mov	a,r3
      0000E8 C3               [12]  278 	clr	c
      0000E9 9A               [12]  279 	subb	a,r2
      0000EA FB               [12]  280 	mov	r3,a
      0000EB EC               [12]  281 	mov	a,r4
      0000EC 9F               [12]  282 	subb	a,r7
      0000ED FC               [12]  283 	mov	r4,a
      0000EE 0B               [12]  284 	inc	r3
      0000EF BB 00 01         [24]  285 	cjne	r3,#0x00,00103$
      0000F2 0C               [12]  286 	inc	r4
      0000F3                        287 00103$:
                                    288 ;	../../../../core/sys/timer.c:126: return t->interval < diff;
      0000F3 A8 81            [24]  289 	mov	r0,sp
      0000F5 18               [12]  290 	dec	r0
      0000F6 18               [12]  291 	dec	r0
      0000F7 74 02            [12]  292 	mov	a,#0x02
      0000F9 26               [12]  293 	add	a,@r0
      0000FA FD               [12]  294 	mov	r5,a
      0000FB E4               [12]  295 	clr	a
      0000FC 08               [12]  296 	inc	r0
      0000FD 36               [12]  297 	addc	a,@r0
      0000FE FE               [12]  298 	mov	r6,a
      0000FF 08               [12]  299 	inc	r0
      000100 86 07            [24]  300 	mov	ar7,@r0
      000102 8D 82            [24]  301 	mov	dpl,r5
      000104 8E 83            [24]  302 	mov	dph,r6
      000106 8F F0            [24]  303 	mov	b,r7
      000108 12r00r00         [24]  304 	lcall	__gptrget
      00010B FD               [12]  305 	mov	r5,a
      00010C A3               [24]  306 	inc	dptr
      00010D 12r00r00         [24]  307 	lcall	__gptrget
      000110 FE               [12]  308 	mov	r6,a
      000111 C3               [12]  309 	clr	c
      000112 ED               [12]  310 	mov	a,r5
      000113 9B               [12]  311 	subb	a,r3
      000114 EE               [12]  312 	mov	a,r6
      000115 9C               [12]  313 	subb	a,r4
      000116 E4               [12]  314 	clr	a
      000117 33               [12]  315 	rlc	a
      000118 FB               [12]  316 	mov	r3,a
      000119 33               [12]  317 	rlc	a
      00011A 95 E0            [12]  318 	subb	a,acc
      00011C FF               [12]  319 	mov	r7,a
      00011D 8B 82            [24]  320 	mov	dpl,r3
      00011F 8F 83            [24]  321 	mov	dph,r7
      000121 15 81            [12]  322 	dec	sp
      000123 15 81            [12]  323 	dec	sp
      000125 15 81            [12]  324 	dec	sp
      000127 02r00r00         [24]  325 	ljmp	__sdcc_banked_ret
                                    326 ;------------------------------------------------------------
                                    327 ;Allocation info for local variables in function 'timer_remaining'
                                    328 ;------------------------------------------------------------
                                    329 ;t                         Allocated to registers r5 r6 r7 
                                    330 ;------------------------------------------------------------
                                    331 ;	../../../../core/sys/timer.c:141: timer_remaining(struct timer *t)
                                    332 ;	-----------------------------------------
                                    333 ;	 function timer_remaining
                                    334 ;	-----------------------------------------
      00012A                        335 _timer_remaining:
                                    336 ;	../../../../core/sys/timer.c:143: return t->start + t->interval - clock_time();
      00012A AD 82            [24]  337 	mov	r5,dpl
      00012C AE 83            [24]  338 	mov	r6,dph
      00012E AF F0            [24]  339 	mov	r7,b
      000130 12r00r00         [24]  340 	lcall	__gptrget
      000133 FB               [12]  341 	mov	r3,a
      000134 A3               [24]  342 	inc	dptr
      000135 12r00r00         [24]  343 	lcall	__gptrget
      000138 FC               [12]  344 	mov	r4,a
      000139 74 02            [12]  345 	mov	a,#0x02
      00013B 2D               [12]  346 	add	a,r5
      00013C FD               [12]  347 	mov	r5,a
      00013D E4               [12]  348 	clr	a
      00013E 3E               [12]  349 	addc	a,r6
      00013F FE               [12]  350 	mov	r6,a
      000140 8D 82            [24]  351 	mov	dpl,r5
      000142 8E 83            [24]  352 	mov	dph,r6
      000144 8F F0            [24]  353 	mov	b,r7
      000146 12r00r00         [24]  354 	lcall	__gptrget
      000149 FD               [12]  355 	mov	r5,a
      00014A A3               [24]  356 	inc	dptr
      00014B 12r00r00         [24]  357 	lcall	__gptrget
      00014E FE               [12]  358 	mov	r6,a
      00014F ED               [12]  359 	mov	a,r5
      000150 2B               [12]  360 	add	a,r3
      000151 FB               [12]  361 	mov	r3,a
      000152 EE               [12]  362 	mov	a,r6
      000153 3C               [12]  363 	addc	a,r4
      000154 FC               [12]  364 	mov	r4,a
      000155 C0 04            [24]  365 	push	ar4
      000157 C0 03            [24]  366 	push	ar3
      000159 78r00            [12]  367 	mov	r0,#_clock_time
      00015B 79s00            [12]  368 	mov	r1,#(_clock_time >> 8)
      00015D 7As00            [12]  369 	mov	r2,#(_clock_time >> 16)
      00015F 12r00r00         [24]  370 	lcall	__sdcc_banked_call
      000162 AE 82            [24]  371 	mov	r6,dpl
      000164 AF 83            [24]  372 	mov	r7,dph
      000166 D0 03            [24]  373 	pop	ar3
      000168 D0 04            [24]  374 	pop	ar4
      00016A EB               [12]  375 	mov	a,r3
      00016B C3               [12]  376 	clr	c
      00016C 9E               [12]  377 	subb	a,r6
      00016D FB               [12]  378 	mov	r3,a
      00016E EC               [12]  379 	mov	a,r4
      00016F 9F               [12]  380 	subb	a,r7
      000170 FC               [12]  381 	mov	r4,a
      000171 8B 82            [24]  382 	mov	dpl,r3
      000173 8C 83            [24]  383 	mov	dph,r4
      000175 02r00r00         [24]  384 	ljmp	__sdcc_banked_ret
                                    385 	.area CSEG    (CODE)
                                    386 	.area CONST   (CODE)
                                    387 	.area XINIT   (CODE)
                                    388 	.area CABS    (ABS,CODE)
